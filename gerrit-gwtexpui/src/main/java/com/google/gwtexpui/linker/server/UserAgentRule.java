begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2009 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gwtexpui.linker.server
package|package
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|linker
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Matcher
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
operator|.
name|compile
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_comment
comment|/**  * Selects the value for the {@code user.agent} property.  *<p>  * Examines the {@code User-Agent} HTTP request header, and tries to match it to  * known {@code user.agent} values.  *<p>  * Ported from JavaScript in {@code com.google.gwt.user.UserAgent.gwt.xml}.  */
end_comment

begin_class
DECL|class|UserAgentRule
specifier|public
class|class
name|UserAgentRule
implements|implements
name|Rule
block|{
DECL|field|msie
specifier|private
specifier|static
specifier|final
name|Pattern
name|msie
init|=
name|compile
argument_list|(
literal|".*msie ([0-9]+)\\.([0-9]+).*"
argument_list|)
decl_stmt|;
DECL|field|gecko
specifier|private
specifier|static
specifier|final
name|Pattern
name|gecko
init|=
name|compile
argument_list|(
literal|".*rv:([0-9]+)\\.([0-9]+).*"
argument_list|)
decl_stmt|;
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"user.agent"
return|;
block|}
annotation|@
name|Override
DECL|method|select (HttpServletRequest req)
specifier|public
name|String
name|select
parameter_list|(
name|HttpServletRequest
name|req
parameter_list|)
block|{
name|String
name|ua
init|=
name|req
operator|.
name|getHeader
argument_list|(
literal|"User-Agent"
argument_list|)
decl_stmt|;
if|if
condition|(
name|ua
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
name|ua
operator|=
name|ua
operator|.
name|toLowerCase
argument_list|()
expr_stmt|;
if|if
condition|(
name|ua
operator|.
name|contains
argument_list|(
literal|"opera"
argument_list|)
condition|)
block|{
return|return
literal|"opera"
return|;
block|}
elseif|else
if|if
condition|(
name|ua
operator|.
name|contains
argument_list|(
literal|"webkit"
argument_list|)
condition|)
block|{
return|return
literal|"safari"
return|;
block|}
elseif|else
if|if
condition|(
name|ua
operator|.
name|contains
argument_list|(
literal|"msie"
argument_list|)
condition|)
block|{
comment|// GWT 2.0 uses document.documentMode here, which we can't do
comment|// on the server side.
name|Matcher
name|m
init|=
name|msie
operator|.
name|matcher
argument_list|(
name|ua
argument_list|)
decl_stmt|;
if|if
condition|(
name|m
operator|.
name|matches
argument_list|()
operator|&&
name|m
operator|.
name|groupCount
argument_list|()
operator|==
literal|2
condition|)
block|{
name|int
name|v
init|=
name|makeVersion
argument_list|(
name|m
argument_list|)
decl_stmt|;
if|if
condition|(
name|v
operator|>=
literal|10000
condition|)
block|{
return|return
literal|"ie10"
return|;
block|}
if|if
condition|(
name|v
operator|>=
literal|9000
condition|)
block|{
return|return
literal|"ie9"
return|;
block|}
if|if
condition|(
name|v
operator|>=
literal|8000
condition|)
block|{
return|return
literal|"ie8"
return|;
block|}
if|if
condition|(
name|v
operator|>=
literal|6000
condition|)
block|{
return|return
literal|"ie6"
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
elseif|else
if|if
condition|(
name|ua
operator|.
name|contains
argument_list|(
literal|"gecko"
argument_list|)
condition|)
block|{
name|Matcher
name|m
init|=
name|gecko
operator|.
name|matcher
argument_list|(
name|ua
argument_list|)
decl_stmt|;
if|if
condition|(
name|m
operator|.
name|matches
argument_list|()
operator|&&
name|m
operator|.
name|groupCount
argument_list|()
operator|==
literal|2
condition|)
block|{
if|if
condition|(
name|makeVersion
argument_list|(
name|m
argument_list|)
operator|>=
literal|1008
condition|)
block|{
return|return
literal|"gecko1_8"
return|;
block|}
block|}
return|return
literal|"gecko"
return|;
block|}
return|return
literal|null
return|;
block|}
DECL|method|makeVersion (Matcher result)
specifier|private
name|int
name|makeVersion
parameter_list|(
name|Matcher
name|result
parameter_list|)
block|{
return|return
operator|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|result
operator|.
name|group
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|*
literal|1000
operator|)
operator|+
name|Integer
operator|.
name|parseInt
argument_list|(
name|result
operator|.
name|group
argument_list|(
literal|2
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

