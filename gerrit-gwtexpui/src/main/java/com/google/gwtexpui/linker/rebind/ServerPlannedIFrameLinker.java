begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2009 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gwtexpui.linker.rebind
package|package
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|linker
operator|.
name|rebind
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|ext
operator|.
name|LinkerContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|ext
operator|.
name|TreeLogger
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|ext
operator|.
name|UnableToCompleteException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|ext
operator|.
name|linker
operator|.
name|AbstractLinker
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|ext
operator|.
name|linker
operator|.
name|ArtifactSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|ext
operator|.
name|linker
operator|.
name|CompilationResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|ext
operator|.
name|linker
operator|.
name|LinkerOrder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|ext
operator|.
name|linker
operator|.
name|SelectionProperty
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|ext
operator|.
name|linker
operator|.
name|StylesheetReference
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|SortedMap
import|;
end_import

begin_comment
comment|/** Saves data normally used by the {@code nocache.js} file. */
end_comment

begin_class
annotation|@
name|LinkerOrder
argument_list|(
name|LinkerOrder
operator|.
name|Order
operator|.
name|POST
argument_list|)
DECL|class|ServerPlannedIFrameLinker
specifier|public
class|class
name|ServerPlannedIFrameLinker
extends|extends
name|AbstractLinker
block|{
annotation|@
name|Override
DECL|method|getDescription ()
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
literal|"ServerPlannedIFrameLinker"
return|;
block|}
annotation|@
name|Override
DECL|method|link (final TreeLogger logger, final LinkerContext context, final ArtifactSet artifacts)
specifier|public
name|ArtifactSet
name|link
parameter_list|(
specifier|final
name|TreeLogger
name|logger
parameter_list|,
specifier|final
name|LinkerContext
name|context
parameter_list|,
specifier|final
name|ArtifactSet
name|artifacts
parameter_list|)
throws|throws
name|UnableToCompleteException
block|{
name|ArtifactSet
name|toReturn
init|=
operator|new
name|ArtifactSet
argument_list|(
name|artifacts
argument_list|)
decl_stmt|;
name|StringBuilder
name|table
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|StylesheetReference
name|r
range|:
name|artifacts
operator|.
name|find
argument_list|(
name|StylesheetReference
operator|.
name|class
argument_list|)
control|)
block|{
name|table
operator|.
name|append
argument_list|(
literal|"css "
argument_list|)
expr_stmt|;
name|table
operator|.
name|append
argument_list|(
name|r
operator|.
name|getSrc
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|append
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|CompilationResult
name|r
range|:
name|artifacts
operator|.
name|find
argument_list|(
name|CompilationResult
operator|.
name|class
argument_list|)
control|)
block|{
name|table
operator|.
name|append
argument_list|(
name|r
operator|.
name|getStrongName
argument_list|()
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
for|for
control|(
name|SortedMap
argument_list|<
name|SelectionProperty
argument_list|,
name|String
argument_list|>
name|p
range|:
name|r
operator|.
name|getPropertyMap
argument_list|()
control|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|SelectionProperty
argument_list|,
name|String
argument_list|>
name|e
range|:
name|p
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|table
operator|.
name|append
argument_list|(
literal|"  "
argument_list|)
expr_stmt|;
name|table
operator|.
name|append
argument_list|(
name|e
operator|.
name|getKey
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|append
argument_list|(
literal|"="
argument_list|)
expr_stmt|;
name|table
operator|.
name|append
argument_list|(
name|e
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|append
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
block|}
block|}
name|table
operator|.
name|append
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
block|}
name|toReturn
operator|.
name|add
argument_list|(
name|emitString
argument_list|(
name|logger
argument_list|,
name|table
operator|.
name|toString
argument_list|()
argument_list|,
literal|"permutations"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|toReturn
return|;
block|}
block|}
end_class

end_unit

