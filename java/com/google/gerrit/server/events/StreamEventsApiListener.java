begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2016 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.events
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|events
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Supplier
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Suppliers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Sets
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|flogger
operator|.
name|FluentLogger
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|LabelType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|LabelTypes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|exceptions
operator|.
name|StorageException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|AccountInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ApprovalInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ChangeInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|RevisionInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|AssigneeChangedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|ChangeAbandonedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|ChangeDeletedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|ChangeMergedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|ChangeRestoredListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|CommentAddedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|GitReferenceUpdatedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|HashtagsEditedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|NewProjectCreatedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|PrivateStateChangedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|ReviewerAddedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|ReviewerDeletedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|RevisionCreatedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|TopicEditedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|VoteDeletedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|WorkInProgressStateChangedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|registration
operator|.
name|DynamicSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|BranchNameKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|PatchSetUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|data
operator|.
name|AccountAttribute
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|data
operator|.
name|ApprovalAttribute
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|data
operator|.
name|ChangeAttribute
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|data
operator|.
name|PatchSetAttribute
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|GitRepositoryManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ChangeNotes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|plugincontext
operator|.
name|PluginItemContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|NoSuchChangeException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ProjectCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|AbstractModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevWalk
import|;
end_import

begin_class
annotation|@
name|Singleton
DECL|class|StreamEventsApiListener
specifier|public
class|class
name|StreamEventsApiListener
implements|implements
name|AssigneeChangedListener
implements|,
name|ChangeAbandonedListener
implements|,
name|ChangeDeletedListener
implements|,
name|ChangeMergedListener
implements|,
name|ChangeRestoredListener
implements|,
name|WorkInProgressStateChangedListener
implements|,
name|PrivateStateChangedListener
implements|,
name|CommentAddedListener
implements|,
name|GitReferenceUpdatedListener
implements|,
name|HashtagsEditedListener
implements|,
name|NewProjectCreatedListener
implements|,
name|ReviewerAddedListener
implements|,
name|ReviewerDeletedListener
implements|,
name|RevisionCreatedListener
implements|,
name|TopicEditedListener
implements|,
name|VoteDeletedListener
block|{
DECL|field|logger
specifier|private
specifier|static
specifier|final
name|FluentLogger
name|logger
init|=
name|FluentLogger
operator|.
name|forEnclosingClass
argument_list|()
decl_stmt|;
DECL|class|Module
specifier|public
specifier|static
class|class
name|Module
extends|extends
name|AbstractModule
block|{
annotation|@
name|Override
DECL|method|configure ()
specifier|protected
name|void
name|configure
parameter_list|()
block|{
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|AssigneeChangedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|StreamEventsApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|ChangeAbandonedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|StreamEventsApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|ChangeDeletedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|StreamEventsApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|ChangeMergedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|StreamEventsApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|ChangeRestoredListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|StreamEventsApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|CommentAddedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|StreamEventsApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|GitReferenceUpdatedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|StreamEventsApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|HashtagsEditedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|StreamEventsApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|NewProjectCreatedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|StreamEventsApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|PrivateStateChangedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|StreamEventsApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|ReviewerAddedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|StreamEventsApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|ReviewerDeletedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|StreamEventsApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|RevisionCreatedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|StreamEventsApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|TopicEditedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|StreamEventsApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|VoteDeletedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|StreamEventsApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|WorkInProgressStateChangedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|StreamEventsApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
DECL|field|dispatcher
specifier|private
specifier|final
name|PluginItemContext
argument_list|<
name|EventDispatcher
argument_list|>
name|dispatcher
decl_stmt|;
DECL|field|eventFactory
specifier|private
specifier|final
name|EventFactory
name|eventFactory
decl_stmt|;
DECL|field|projectCache
specifier|private
specifier|final
name|ProjectCache
name|projectCache
decl_stmt|;
DECL|field|repoManager
specifier|private
specifier|final
name|GitRepositoryManager
name|repoManager
decl_stmt|;
DECL|field|psUtil
specifier|private
specifier|final
name|PatchSetUtil
name|psUtil
decl_stmt|;
DECL|field|changeNotesFactory
specifier|private
specifier|final
name|ChangeNotes
operator|.
name|Factory
name|changeNotesFactory
decl_stmt|;
annotation|@
name|Inject
DECL|method|StreamEventsApiListener ( PluginItemContext<EventDispatcher> dispatcher, EventFactory eventFactory, ProjectCache projectCache, GitRepositoryManager repoManager, PatchSetUtil psUtil, ChangeNotes.Factory changeNotesFactory)
name|StreamEventsApiListener
parameter_list|(
name|PluginItemContext
argument_list|<
name|EventDispatcher
argument_list|>
name|dispatcher
parameter_list|,
name|EventFactory
name|eventFactory
parameter_list|,
name|ProjectCache
name|projectCache
parameter_list|,
name|GitRepositoryManager
name|repoManager
parameter_list|,
name|PatchSetUtil
name|psUtil
parameter_list|,
name|ChangeNotes
operator|.
name|Factory
name|changeNotesFactory
parameter_list|)
block|{
name|this
operator|.
name|dispatcher
operator|=
name|dispatcher
expr_stmt|;
name|this
operator|.
name|eventFactory
operator|=
name|eventFactory
expr_stmt|;
name|this
operator|.
name|projectCache
operator|=
name|projectCache
expr_stmt|;
name|this
operator|.
name|repoManager
operator|=
name|repoManager
expr_stmt|;
name|this
operator|.
name|psUtil
operator|=
name|psUtil
expr_stmt|;
name|this
operator|.
name|changeNotesFactory
operator|=
name|changeNotesFactory
expr_stmt|;
block|}
DECL|method|getNotes (ChangeInfo info)
specifier|private
name|ChangeNotes
name|getNotes
parameter_list|(
name|ChangeInfo
name|info
parameter_list|)
block|{
try|try
block|{
return|return
name|changeNotesFactory
operator|.
name|createChecked
argument_list|(
name|Change
operator|.
name|id
argument_list|(
name|info
operator|.
name|_number
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|NoSuchChangeException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|StorageException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|getPatchSet (ChangeNotes notes, RevisionInfo info)
specifier|private
name|PatchSet
name|getPatchSet
parameter_list|(
name|ChangeNotes
name|notes
parameter_list|,
name|RevisionInfo
name|info
parameter_list|)
block|{
return|return
name|psUtil
operator|.
name|get
argument_list|(
name|notes
argument_list|,
name|PatchSet
operator|.
name|Id
operator|.
name|fromRef
argument_list|(
name|info
operator|.
name|ref
argument_list|)
argument_list|)
return|;
block|}
DECL|method|changeAttributeSupplier (Change change, ChangeNotes notes)
specifier|private
name|Supplier
argument_list|<
name|ChangeAttribute
argument_list|>
name|changeAttributeSupplier
parameter_list|(
name|Change
name|change
parameter_list|,
name|ChangeNotes
name|notes
parameter_list|)
block|{
return|return
name|Suppliers
operator|.
name|memoize
argument_list|(
parameter_list|()
lambda|->
block|{
try|try
block|{
return|return
name|eventFactory
operator|.
name|asChangeAttribute
argument_list|(
name|change
argument_list|,
name|notes
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|accountAttributeSupplier (AccountInfo account)
specifier|private
name|Supplier
argument_list|<
name|AccountAttribute
argument_list|>
name|accountAttributeSupplier
parameter_list|(
name|AccountInfo
name|account
parameter_list|)
block|{
return|return
name|Suppliers
operator|.
name|memoize
argument_list|(
operator|(
operator|)
operator|->
name|account
operator|!=
literal|null
condition|?
name|eventFactory
operator|.
name|asAccountAttribute
argument_list|(
name|Account
operator|.
name|id
argument_list|(
name|account
operator|.
name|_accountId
argument_list|)
argument_list|)
else|:
literal|null
argument_list|)
return|;
block|}
DECL|method|patchSetAttributeSupplier ( final Change change, PatchSet patchSet)
specifier|private
name|Supplier
argument_list|<
name|PatchSetAttribute
argument_list|>
name|patchSetAttributeSupplier
parameter_list|(
specifier|final
name|Change
name|change
parameter_list|,
name|PatchSet
name|patchSet
parameter_list|)
block|{
return|return
name|Suppliers
operator|.
name|memoize
argument_list|(
parameter_list|()
lambda|->
block|{
try|try
init|(
name|Repository
name|repo
init|=
name|repoManager
operator|.
name|openRepository
argument_list|(
name|change
operator|.
name|getProject
argument_list|()
argument_list|)
init|;
name|RevWalk
name|revWalk
operator|=
operator|new
name|RevWalk
argument_list|(
name|repo
argument_list|)
init|)
block|{
return|return
name|eventFactory
operator|.
name|asPatchSetAttribute
argument_list|(
name|revWalk
argument_list|,
name|change
argument_list|,
name|patchSet
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
argument_list|)
return|;
block|}
DECL|method|convertApprovalsMap (Map<String, ApprovalInfo> approvals)
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|Short
argument_list|>
name|convertApprovalsMap
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|ApprovalInfo
argument_list|>
name|approvals
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Short
argument_list|>
name|result
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|ApprovalInfo
argument_list|>
name|e
range|:
name|approvals
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|Short
name|value
init|=
name|e
operator|.
name|getValue
argument_list|()
operator|.
name|value
operator|==
literal|null
condition|?
literal|null
else|:
name|e
operator|.
name|getValue
argument_list|()
operator|.
name|value
operator|.
name|shortValue
argument_list|()
decl_stmt|;
name|result
operator|.
name|put
argument_list|(
name|e
operator|.
name|getKey
argument_list|()
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
DECL|method|getApprovalAttribute ( LabelTypes labelTypes, Map.Entry<String, Short> approval, Map<String, Short> oldApprovals)
specifier|private
name|ApprovalAttribute
name|getApprovalAttribute
parameter_list|(
name|LabelTypes
name|labelTypes
parameter_list|,
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Short
argument_list|>
name|approval
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Short
argument_list|>
name|oldApprovals
parameter_list|)
block|{
name|ApprovalAttribute
name|a
init|=
operator|new
name|ApprovalAttribute
argument_list|()
decl_stmt|;
name|a
operator|.
name|type
operator|=
name|approval
operator|.
name|getKey
argument_list|()
expr_stmt|;
if|if
condition|(
name|oldApprovals
operator|!=
literal|null
operator|&&
operator|!
name|oldApprovals
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|oldApprovals
operator|.
name|get
argument_list|(
name|approval
operator|.
name|getKey
argument_list|()
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|a
operator|.
name|oldValue
operator|=
name|Short
operator|.
name|toString
argument_list|(
name|oldApprovals
operator|.
name|get
argument_list|(
name|approval
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|LabelType
name|lt
init|=
name|labelTypes
operator|.
name|byLabel
argument_list|(
name|approval
operator|.
name|getKey
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|lt
operator|!=
literal|null
condition|)
block|{
name|a
operator|.
name|description
operator|=
name|lt
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|approval
operator|.
name|getValue
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|a
operator|.
name|value
operator|=
name|Short
operator|.
name|toString
argument_list|(
name|approval
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|a
return|;
block|}
DECL|method|approvalsAttributeSupplier ( final Change change, Map<String, ApprovalInfo> newApprovals, final Map<String, ApprovalInfo> oldApprovals)
specifier|private
name|Supplier
argument_list|<
name|ApprovalAttribute
index|[]
argument_list|>
name|approvalsAttributeSupplier
parameter_list|(
specifier|final
name|Change
name|change
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|ApprovalInfo
argument_list|>
name|newApprovals
parameter_list|,
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|ApprovalInfo
argument_list|>
name|oldApprovals
parameter_list|)
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Short
argument_list|>
name|approvals
init|=
name|convertApprovalsMap
argument_list|(
name|newApprovals
argument_list|)
decl_stmt|;
return|return
name|Suppliers
operator|.
name|memoize
argument_list|(
parameter_list|()
lambda|->
block|{
name|LabelTypes
name|labelTypes
init|=
name|projectCache
operator|.
name|get
argument_list|(
name|change
operator|.
name|getProject
argument_list|()
argument_list|)
operator|.
name|getLabelTypes
argument_list|()
decl_stmt|;
if|if
condition|(
name|approvals
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|ApprovalAttribute
index|[]
name|r
init|=
operator|new
name|ApprovalAttribute
index|[
name|approvals
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Short
argument_list|>
name|approval
range|:
name|approvals
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|r
index|[
name|i
operator|++
index|]
operator|=
name|getApprovalAttribute
argument_list|(
name|labelTypes
argument_list|,
name|approval
argument_list|,
name|convertApprovalsMap
argument_list|(
name|oldApprovals
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|r
return|;
block|}
return|return
literal|null
return|;
block|}
argument_list|)
return|;
block|}
DECL|method|hashtagArray (Collection<String> hashtags)
name|String
index|[]
name|hashtagArray
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|hashtags
parameter_list|)
block|{
if|if
condition|(
name|hashtags
operator|!=
literal|null
operator|&&
name|hashtags
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
return|return
name|Sets
operator|.
name|newHashSet
argument_list|(
name|hashtags
argument_list|)
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|hashtags
operator|.
name|size
argument_list|()
index|]
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|onAssigneeChanged (AssigneeChangedListener.Event ev)
specifier|public
name|void
name|onAssigneeChanged
parameter_list|(
name|AssigneeChangedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|Change
name|change
init|=
name|notes
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|AssigneeChangedEvent
name|event
init|=
operator|new
name|AssigneeChangedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|changeAttributeSupplier
argument_list|(
name|change
argument_list|,
name|notes
argument_list|)
expr_stmt|;
name|event
operator|.
name|changer
operator|=
name|accountAttributeSupplier
argument_list|(
name|ev
operator|.
name|getWho
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|oldAssignee
operator|=
name|accountAttributeSupplier
argument_list|(
name|ev
operator|.
name|getOldAssignee
argument_list|()
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|run
argument_list|(
name|d
lambda|->
name|d
operator|.
name|postEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|atSevere
argument_list|()
operator|.
name|withCause
argument_list|(
name|e
argument_list|)
operator|.
name|log
argument_list|(
literal|"Failed to dispatch event"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onTopicEdited (TopicEditedListener.Event ev)
specifier|public
name|void
name|onTopicEdited
parameter_list|(
name|TopicEditedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|Change
name|change
init|=
name|notes
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|TopicChangedEvent
name|event
init|=
operator|new
name|TopicChangedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|changeAttributeSupplier
argument_list|(
name|change
argument_list|,
name|notes
argument_list|)
expr_stmt|;
name|event
operator|.
name|changer
operator|=
name|accountAttributeSupplier
argument_list|(
name|ev
operator|.
name|getWho
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|oldTopic
operator|=
name|ev
operator|.
name|getOldTopic
argument_list|()
expr_stmt|;
name|dispatcher
operator|.
name|run
argument_list|(
name|d
lambda|->
name|d
operator|.
name|postEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|atSevere
argument_list|()
operator|.
name|withCause
argument_list|(
name|e
argument_list|)
operator|.
name|log
argument_list|(
literal|"Failed to dispatch event"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onRevisionCreated (RevisionCreatedListener.Event ev)
specifier|public
name|void
name|onRevisionCreated
parameter_list|(
name|RevisionCreatedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|Change
name|change
init|=
name|notes
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|PatchSet
name|patchSet
init|=
name|getPatchSet
argument_list|(
name|notes
argument_list|,
name|ev
operator|.
name|getRevision
argument_list|()
argument_list|)
decl_stmt|;
name|PatchSetCreatedEvent
name|event
init|=
operator|new
name|PatchSetCreatedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|changeAttributeSupplier
argument_list|(
name|change
argument_list|,
name|notes
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|patchSetAttributeSupplier
argument_list|(
name|change
argument_list|,
name|patchSet
argument_list|)
expr_stmt|;
name|event
operator|.
name|uploader
operator|=
name|accountAttributeSupplier
argument_list|(
name|ev
operator|.
name|getWho
argument_list|()
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|run
argument_list|(
name|d
lambda|->
name|d
operator|.
name|postEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|atSevere
argument_list|()
operator|.
name|withCause
argument_list|(
name|e
argument_list|)
operator|.
name|log
argument_list|(
literal|"Failed to dispatch event"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onReviewerDeleted (ReviewerDeletedListener.Event ev)
specifier|public
name|void
name|onReviewerDeleted
parameter_list|(
name|ReviewerDeletedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|Change
name|change
init|=
name|notes
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|ReviewerDeletedEvent
name|event
init|=
operator|new
name|ReviewerDeletedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|changeAttributeSupplier
argument_list|(
name|change
argument_list|,
name|notes
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|patchSetAttributeSupplier
argument_list|(
name|change
argument_list|,
name|psUtil
operator|.
name|current
argument_list|(
name|notes
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|reviewer
operator|=
name|accountAttributeSupplier
argument_list|(
name|ev
operator|.
name|getReviewer
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|remover
operator|=
name|accountAttributeSupplier
argument_list|(
name|ev
operator|.
name|getWho
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|comment
operator|=
name|ev
operator|.
name|getComment
argument_list|()
expr_stmt|;
name|event
operator|.
name|approvals
operator|=
name|approvalsAttributeSupplier
argument_list|(
name|change
argument_list|,
name|ev
operator|.
name|getNewApprovals
argument_list|()
argument_list|,
name|ev
operator|.
name|getOldApprovals
argument_list|()
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|run
argument_list|(
name|d
lambda|->
name|d
operator|.
name|postEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|atSevere
argument_list|()
operator|.
name|withCause
argument_list|(
name|e
argument_list|)
operator|.
name|log
argument_list|(
literal|"Failed to dispatch event"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onReviewersAdded (ReviewerAddedListener.Event ev)
specifier|public
name|void
name|onReviewersAdded
parameter_list|(
name|ReviewerAddedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|Change
name|change
init|=
name|notes
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|ReviewerAddedEvent
name|event
init|=
operator|new
name|ReviewerAddedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|changeAttributeSupplier
argument_list|(
name|change
argument_list|,
name|notes
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|patchSetAttributeSupplier
argument_list|(
name|change
argument_list|,
name|psUtil
operator|.
name|current
argument_list|(
name|notes
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|AccountInfo
name|reviewer
range|:
name|ev
operator|.
name|getReviewers
argument_list|()
control|)
block|{
name|event
operator|.
name|reviewer
operator|=
name|accountAttributeSupplier
argument_list|(
name|reviewer
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|run
argument_list|(
name|d
lambda|->
name|d
operator|.
name|postEvent
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|StorageException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|atSevere
argument_list|()
operator|.
name|withCause
argument_list|(
name|e
argument_list|)
operator|.
name|log
argument_list|(
literal|"Failed to dispatch event"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onNewProjectCreated (NewProjectCreatedListener.Event ev)
specifier|public
name|void
name|onNewProjectCreated
parameter_list|(
name|NewProjectCreatedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
name|ProjectCreatedEvent
name|event
init|=
operator|new
name|ProjectCreatedEvent
argument_list|()
decl_stmt|;
name|event
operator|.
name|projectName
operator|=
name|ev
operator|.
name|getProjectName
argument_list|()
expr_stmt|;
name|event
operator|.
name|headName
operator|=
name|ev
operator|.
name|getHeadName
argument_list|()
expr_stmt|;
name|dispatcher
operator|.
name|run
argument_list|(
name|d
lambda|->
name|d
operator|.
name|postEvent
argument_list|(
name|event
operator|.
name|getProjectNameKey
argument_list|()
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onHashtagsEdited (HashtagsEditedListener.Event ev)
specifier|public
name|void
name|onHashtagsEdited
parameter_list|(
name|HashtagsEditedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|Change
name|change
init|=
name|notes
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|HashtagsChangedEvent
name|event
init|=
operator|new
name|HashtagsChangedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|changeAttributeSupplier
argument_list|(
name|change
argument_list|,
name|notes
argument_list|)
expr_stmt|;
name|event
operator|.
name|editor
operator|=
name|accountAttributeSupplier
argument_list|(
name|ev
operator|.
name|getWho
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|hashtags
operator|=
name|hashtagArray
argument_list|(
name|ev
operator|.
name|getHashtags
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|added
operator|=
name|hashtagArray
argument_list|(
name|ev
operator|.
name|getAddedHashtags
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|removed
operator|=
name|hashtagArray
argument_list|(
name|ev
operator|.
name|getRemovedHashtags
argument_list|()
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|run
argument_list|(
name|d
lambda|->
name|d
operator|.
name|postEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|atSevere
argument_list|()
operator|.
name|withCause
argument_list|(
name|e
argument_list|)
operator|.
name|log
argument_list|(
literal|"Failed to dispatch event"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onGitReferenceUpdated (GitReferenceUpdatedListener.Event ev)
specifier|public
name|void
name|onGitReferenceUpdated
parameter_list|(
name|GitReferenceUpdatedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
name|RefUpdatedEvent
name|event
init|=
operator|new
name|RefUpdatedEvent
argument_list|()
decl_stmt|;
if|if
condition|(
name|ev
operator|.
name|getUpdater
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|event
operator|.
name|submitter
operator|=
name|accountAttributeSupplier
argument_list|(
name|ev
operator|.
name|getUpdater
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|final
name|BranchNameKey
name|refName
init|=
name|BranchNameKey
operator|.
name|create
argument_list|(
name|ev
operator|.
name|getProjectName
argument_list|()
argument_list|,
name|ev
operator|.
name|getRefName
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|refUpdate
operator|=
name|Suppliers
operator|.
name|memoize
argument_list|(
parameter_list|()
lambda|->
name|eventFactory
operator|.
name|asRefUpdateAttribute
argument_list|(
name|ObjectId
operator|.
name|fromString
argument_list|(
name|ev
operator|.
name|getOldObjectId
argument_list|()
argument_list|)
argument_list|,
name|ObjectId
operator|.
name|fromString
argument_list|(
name|ev
operator|.
name|getNewObjectId
argument_list|()
argument_list|)
argument_list|,
name|refName
argument_list|)
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|run
argument_list|(
name|d
lambda|->
name|d
operator|.
name|postEvent
argument_list|(
name|refName
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onCommentAdded (CommentAddedListener.Event ev)
specifier|public
name|void
name|onCommentAdded
parameter_list|(
name|CommentAddedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|Change
name|change
init|=
name|notes
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|PatchSet
name|ps
init|=
name|getPatchSet
argument_list|(
name|notes
argument_list|,
name|ev
operator|.
name|getRevision
argument_list|()
argument_list|)
decl_stmt|;
name|CommentAddedEvent
name|event
init|=
operator|new
name|CommentAddedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|changeAttributeSupplier
argument_list|(
name|change
argument_list|,
name|notes
argument_list|)
expr_stmt|;
name|event
operator|.
name|author
operator|=
name|accountAttributeSupplier
argument_list|(
name|ev
operator|.
name|getWho
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|patchSetAttributeSupplier
argument_list|(
name|change
argument_list|,
name|ps
argument_list|)
expr_stmt|;
name|event
operator|.
name|comment
operator|=
name|ev
operator|.
name|getComment
argument_list|()
expr_stmt|;
name|event
operator|.
name|approvals
operator|=
name|approvalsAttributeSupplier
argument_list|(
name|change
argument_list|,
name|ev
operator|.
name|getApprovals
argument_list|()
argument_list|,
name|ev
operator|.
name|getOldApprovals
argument_list|()
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|run
argument_list|(
name|d
lambda|->
name|d
operator|.
name|postEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|atSevere
argument_list|()
operator|.
name|withCause
argument_list|(
name|e
argument_list|)
operator|.
name|log
argument_list|(
literal|"Failed to dispatch event"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onChangeRestored (ChangeRestoredListener.Event ev)
specifier|public
name|void
name|onChangeRestored
parameter_list|(
name|ChangeRestoredListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|Change
name|change
init|=
name|notes
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|ChangeRestoredEvent
name|event
init|=
operator|new
name|ChangeRestoredEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|changeAttributeSupplier
argument_list|(
name|change
argument_list|,
name|notes
argument_list|)
expr_stmt|;
name|event
operator|.
name|restorer
operator|=
name|accountAttributeSupplier
argument_list|(
name|ev
operator|.
name|getWho
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|patchSetAttributeSupplier
argument_list|(
name|change
argument_list|,
name|psUtil
operator|.
name|current
argument_list|(
name|notes
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|reason
operator|=
name|ev
operator|.
name|getReason
argument_list|()
expr_stmt|;
name|dispatcher
operator|.
name|run
argument_list|(
name|d
lambda|->
name|d
operator|.
name|postEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|atSevere
argument_list|()
operator|.
name|withCause
argument_list|(
name|e
argument_list|)
operator|.
name|log
argument_list|(
literal|"Failed to dispatch event"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onChangeMerged (ChangeMergedListener.Event ev)
specifier|public
name|void
name|onChangeMerged
parameter_list|(
name|ChangeMergedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|Change
name|change
init|=
name|notes
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|ChangeMergedEvent
name|event
init|=
operator|new
name|ChangeMergedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|changeAttributeSupplier
argument_list|(
name|change
argument_list|,
name|notes
argument_list|)
expr_stmt|;
name|event
operator|.
name|submitter
operator|=
name|accountAttributeSupplier
argument_list|(
name|ev
operator|.
name|getWho
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|patchSetAttributeSupplier
argument_list|(
name|change
argument_list|,
name|psUtil
operator|.
name|current
argument_list|(
name|notes
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|newRev
operator|=
name|ev
operator|.
name|getNewRevisionId
argument_list|()
expr_stmt|;
name|dispatcher
operator|.
name|run
argument_list|(
name|d
lambda|->
name|d
operator|.
name|postEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|atSevere
argument_list|()
operator|.
name|withCause
argument_list|(
name|e
argument_list|)
operator|.
name|log
argument_list|(
literal|"Failed to dispatch event"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onChangeAbandoned (ChangeAbandonedListener.Event ev)
specifier|public
name|void
name|onChangeAbandoned
parameter_list|(
name|ChangeAbandonedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|Change
name|change
init|=
name|notes
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|ChangeAbandonedEvent
name|event
init|=
operator|new
name|ChangeAbandonedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|changeAttributeSupplier
argument_list|(
name|change
argument_list|,
name|notes
argument_list|)
expr_stmt|;
name|event
operator|.
name|abandoner
operator|=
name|accountAttributeSupplier
argument_list|(
name|ev
operator|.
name|getWho
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|patchSetAttributeSupplier
argument_list|(
name|change
argument_list|,
name|psUtil
operator|.
name|current
argument_list|(
name|notes
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|reason
operator|=
name|ev
operator|.
name|getReason
argument_list|()
expr_stmt|;
name|dispatcher
operator|.
name|run
argument_list|(
name|d
lambda|->
name|d
operator|.
name|postEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|atSevere
argument_list|()
operator|.
name|withCause
argument_list|(
name|e
argument_list|)
operator|.
name|log
argument_list|(
literal|"Failed to dispatch event"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onWorkInProgressStateChanged (WorkInProgressStateChangedListener.Event ev)
specifier|public
name|void
name|onWorkInProgressStateChanged
parameter_list|(
name|WorkInProgressStateChangedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|Change
name|change
init|=
name|notes
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|PatchSet
name|patchSet
init|=
name|getPatchSet
argument_list|(
name|notes
argument_list|,
name|ev
operator|.
name|getRevision
argument_list|()
argument_list|)
decl_stmt|;
name|WorkInProgressStateChangedEvent
name|event
init|=
operator|new
name|WorkInProgressStateChangedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|changeAttributeSupplier
argument_list|(
name|change
argument_list|,
name|notes
argument_list|)
expr_stmt|;
name|event
operator|.
name|changer
operator|=
name|accountAttributeSupplier
argument_list|(
name|ev
operator|.
name|getWho
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|patchSetAttributeSupplier
argument_list|(
name|change
argument_list|,
name|patchSet
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|run
argument_list|(
name|d
lambda|->
name|d
operator|.
name|postEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|atSevere
argument_list|()
operator|.
name|withCause
argument_list|(
name|e
argument_list|)
operator|.
name|log
argument_list|(
literal|"Failed to dispatch event"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onPrivateStateChanged (PrivateStateChangedListener.Event ev)
specifier|public
name|void
name|onPrivateStateChanged
parameter_list|(
name|PrivateStateChangedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|Change
name|change
init|=
name|notes
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|PatchSet
name|patchSet
init|=
name|getPatchSet
argument_list|(
name|notes
argument_list|,
name|ev
operator|.
name|getRevision
argument_list|()
argument_list|)
decl_stmt|;
name|PrivateStateChangedEvent
name|event
init|=
operator|new
name|PrivateStateChangedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|changeAttributeSupplier
argument_list|(
name|change
argument_list|,
name|notes
argument_list|)
expr_stmt|;
name|event
operator|.
name|changer
operator|=
name|accountAttributeSupplier
argument_list|(
name|ev
operator|.
name|getWho
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|patchSetAttributeSupplier
argument_list|(
name|change
argument_list|,
name|patchSet
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|run
argument_list|(
name|d
lambda|->
name|d
operator|.
name|postEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|atSevere
argument_list|()
operator|.
name|withCause
argument_list|(
name|e
argument_list|)
operator|.
name|log
argument_list|(
literal|"Failed to dispatch event"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onVoteDeleted (VoteDeletedListener.Event ev)
specifier|public
name|void
name|onVoteDeleted
parameter_list|(
name|VoteDeletedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|Change
name|change
init|=
name|notes
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|VoteDeletedEvent
name|event
init|=
operator|new
name|VoteDeletedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|changeAttributeSupplier
argument_list|(
name|change
argument_list|,
name|notes
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|patchSetAttributeSupplier
argument_list|(
name|change
argument_list|,
name|psUtil
operator|.
name|current
argument_list|(
name|notes
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|comment
operator|=
name|ev
operator|.
name|getMessage
argument_list|()
expr_stmt|;
name|event
operator|.
name|reviewer
operator|=
name|accountAttributeSupplier
argument_list|(
name|ev
operator|.
name|getReviewer
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|remover
operator|=
name|accountAttributeSupplier
argument_list|(
name|ev
operator|.
name|getWho
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|approvals
operator|=
name|approvalsAttributeSupplier
argument_list|(
name|change
argument_list|,
name|ev
operator|.
name|getApprovals
argument_list|()
argument_list|,
name|ev
operator|.
name|getOldApprovals
argument_list|()
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|run
argument_list|(
name|d
lambda|->
name|d
operator|.
name|postEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|atSevere
argument_list|()
operator|.
name|withCause
argument_list|(
name|e
argument_list|)
operator|.
name|log
argument_list|(
literal|"Failed to dispatch event"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onChangeDeleted (ChangeDeletedListener.Event ev)
specifier|public
name|void
name|onChangeDeleted
parameter_list|(
name|ChangeDeletedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|Change
name|change
init|=
name|notes
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|ChangeDeletedEvent
name|event
init|=
operator|new
name|ChangeDeletedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|changeAttributeSupplier
argument_list|(
name|change
argument_list|,
name|notes
argument_list|)
expr_stmt|;
name|event
operator|.
name|deleter
operator|=
name|accountAttributeSupplier
argument_list|(
name|ev
operator|.
name|getWho
argument_list|()
argument_list|)
expr_stmt|;
name|dispatcher
operator|.
name|run
argument_list|(
name|d
lambda|->
name|d
operator|.
name|postEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|StorageException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|atSevere
argument_list|()
operator|.
name|withCause
argument_list|(
name|e
argument_list|)
operator|.
name|log
argument_list|(
literal|"Failed to dispatch event"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

