begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.restapi.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|change
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|BadRequestException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|BinaryResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|ResourceNotFoundException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestReadView
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Patch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|PatchSetUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|change
operator|.
name|FileContentUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|change
operator|.
name|FileResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|GitRepositoryManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ChangeNotes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|patch
operator|.
name|ComparisonType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|patch
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|NoSuchChangeException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ProjectCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|errors
operator|.
name|RepositoryNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevCommit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevWalk
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kohsuke
operator|.
name|args4j
operator|.
name|Option
import|;
end_import

begin_class
DECL|class|GetContent
specifier|public
class|class
name|GetContent
implements|implements
name|RestReadView
argument_list|<
name|FileResource
argument_list|>
block|{
DECL|field|gitManager
specifier|private
specifier|final
name|GitRepositoryManager
name|gitManager
decl_stmt|;
DECL|field|psUtil
specifier|private
specifier|final
name|PatchSetUtil
name|psUtil
decl_stmt|;
DECL|field|fileContentUtil
specifier|private
specifier|final
name|FileContentUtil
name|fileContentUtil
decl_stmt|;
DECL|field|projectCache
specifier|private
specifier|final
name|ProjectCache
name|projectCache
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--parent"
argument_list|)
DECL|field|parent
specifier|private
name|Integer
name|parent
decl_stmt|;
annotation|@
name|Inject
DECL|method|GetContent ( GitRepositoryManager gitManager, PatchSetUtil psUtil, FileContentUtil fileContentUtil, ProjectCache projectCache)
name|GetContent
parameter_list|(
name|GitRepositoryManager
name|gitManager
parameter_list|,
name|PatchSetUtil
name|psUtil
parameter_list|,
name|FileContentUtil
name|fileContentUtil
parameter_list|,
name|ProjectCache
name|projectCache
parameter_list|)
block|{
name|this
operator|.
name|gitManager
operator|=
name|gitManager
expr_stmt|;
name|this
operator|.
name|psUtil
operator|=
name|psUtil
expr_stmt|;
name|this
operator|.
name|fileContentUtil
operator|=
name|fileContentUtil
expr_stmt|;
name|this
operator|.
name|projectCache
operator|=
name|projectCache
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|apply (FileResource rsrc)
specifier|public
name|BinaryResult
name|apply
parameter_list|(
name|FileResource
name|rsrc
parameter_list|)
throws|throws
name|ResourceNotFoundException
throws|,
name|IOException
throws|,
name|BadRequestException
block|{
name|String
name|path
init|=
name|rsrc
operator|.
name|getPatchKey
argument_list|()
operator|.
name|fileName
argument_list|()
decl_stmt|;
if|if
condition|(
name|Patch
operator|.
name|COMMIT_MSG
operator|.
name|equals
argument_list|(
name|path
argument_list|)
condition|)
block|{
name|String
name|msg
init|=
name|getMessage
argument_list|(
name|rsrc
operator|.
name|getRevision
argument_list|()
operator|.
name|getChangeResource
argument_list|()
operator|.
name|getNotes
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|BinaryResult
operator|.
name|create
argument_list|(
name|msg
argument_list|)
operator|.
name|setContentType
argument_list|(
name|FileContentUtil
operator|.
name|TEXT_X_GERRIT_COMMIT_MESSAGE
argument_list|)
operator|.
name|base64
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|Patch
operator|.
name|MERGE_LIST
operator|.
name|equals
argument_list|(
name|path
argument_list|)
condition|)
block|{
name|byte
index|[]
name|mergeList
init|=
name|getMergeList
argument_list|(
name|rsrc
operator|.
name|getRevision
argument_list|()
operator|.
name|getChangeResource
argument_list|()
operator|.
name|getNotes
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|BinaryResult
operator|.
name|create
argument_list|(
name|mergeList
argument_list|)
operator|.
name|setContentType
argument_list|(
name|FileContentUtil
operator|.
name|TEXT_X_GERRIT_MERGE_LIST
argument_list|)
operator|.
name|base64
argument_list|()
return|;
block|}
return|return
name|fileContentUtil
operator|.
name|getContent
argument_list|(
name|projectCache
operator|.
name|checkedGet
argument_list|(
name|rsrc
operator|.
name|getRevision
argument_list|()
operator|.
name|getProject
argument_list|()
argument_list|)
argument_list|,
name|rsrc
operator|.
name|getRevision
argument_list|()
operator|.
name|getPatchSet
argument_list|()
operator|.
name|getCommitId
argument_list|()
argument_list|,
name|path
argument_list|,
name|parent
argument_list|)
return|;
block|}
DECL|method|getMessage (ChangeNotes notes)
specifier|private
name|String
name|getMessage
parameter_list|(
name|ChangeNotes
name|notes
parameter_list|)
throws|throws
name|IOException
block|{
name|Change
operator|.
name|Id
name|changeId
init|=
name|notes
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|PatchSet
name|ps
init|=
name|psUtil
operator|.
name|current
argument_list|(
name|notes
argument_list|)
decl_stmt|;
if|if
condition|(
name|ps
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NoSuchChangeException
argument_list|(
name|changeId
argument_list|)
throw|;
block|}
try|try
init|(
name|Repository
name|git
init|=
name|gitManager
operator|.
name|openRepository
argument_list|(
name|notes
operator|.
name|getProjectName
argument_list|()
argument_list|)
init|;
name|RevWalk
name|revWalk
operator|=
operator|new
name|RevWalk
argument_list|(
name|git
argument_list|)
init|)
block|{
name|RevCommit
name|commit
init|=
name|revWalk
operator|.
name|parseCommit
argument_list|(
name|ps
operator|.
name|getCommitId
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|commit
operator|.
name|getFullMessage
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryNotFoundException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|NoSuchChangeException
argument_list|(
name|changeId
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|getMergeList (ChangeNotes notes)
specifier|private
name|byte
index|[]
name|getMergeList
parameter_list|(
name|ChangeNotes
name|notes
parameter_list|)
throws|throws
name|IOException
block|{
name|Change
operator|.
name|Id
name|changeId
init|=
name|notes
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|PatchSet
name|ps
init|=
name|psUtil
operator|.
name|current
argument_list|(
name|notes
argument_list|)
decl_stmt|;
if|if
condition|(
name|ps
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NoSuchChangeException
argument_list|(
name|changeId
argument_list|)
throw|;
block|}
try|try
init|(
name|Repository
name|git
init|=
name|gitManager
operator|.
name|openRepository
argument_list|(
name|notes
operator|.
name|getProjectName
argument_list|()
argument_list|)
init|;
name|RevWalk
name|revWalk
operator|=
operator|new
name|RevWalk
argument_list|(
name|git
argument_list|)
init|)
block|{
return|return
name|Text
operator|.
name|forMergeList
argument_list|(
name|ComparisonType
operator|.
name|againstAutoMerge
argument_list|()
argument_list|,
name|revWalk
operator|.
name|getObjectReader
argument_list|()
argument_list|,
name|ps
operator|.
name|getCommitId
argument_list|()
argument_list|)
operator|.
name|getContent
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|RepositoryNotFoundException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|NoSuchChangeException
argument_list|(
name|changeId
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

