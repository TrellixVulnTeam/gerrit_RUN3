begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.restapi.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|change
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|util
operator|.
name|cli
operator|.
name|Localizable
operator|.
name|localizable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|MoreObjects
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|flogger
operator|.
name|FluentLogger
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|PatchScript
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|entities
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|entities
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|DiffPreferencesInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|DiffPreferencesInfo
operator|.
name|Whitespace
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|DiffInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|DiffWebLinkInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|WebLinkInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|AuthException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|CacheControl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|IdString
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|ResourceConflictException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|ResourceNotFoundException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestReadView
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|WebLinks
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|change
operator|.
name|FileResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|change
operator|.
name|RevisionResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|diff
operator|.
name|DiffInfoCreator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|diff
operator|.
name|DiffSide
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|diff
operator|.
name|DiffWebLinksProvider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|LargeObjectException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ChangeNotes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|patch
operator|.
name|PatchScriptFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|permissions
operator|.
name|PermissionBackendException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|InvalidChangeOperationException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|NoSuchChangeException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ProjectCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ProjectState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kohsuke
operator|.
name|args4j
operator|.
name|CmdLineException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kohsuke
operator|.
name|args4j
operator|.
name|CmdLineParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kohsuke
operator|.
name|args4j
operator|.
name|NamedOptionDef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kohsuke
operator|.
name|args4j
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kohsuke
operator|.
name|args4j
operator|.
name|OptionDef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kohsuke
operator|.
name|args4j
operator|.
name|spi
operator|.
name|OptionHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kohsuke
operator|.
name|args4j
operator|.
name|spi
operator|.
name|Parameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kohsuke
operator|.
name|args4j
operator|.
name|spi
operator|.
name|Setter
import|;
end_import

begin_class
DECL|class|GetDiff
specifier|public
class|class
name|GetDiff
implements|implements
name|RestReadView
argument_list|<
name|FileResource
argument_list|>
block|{
DECL|field|logger
specifier|private
specifier|static
specifier|final
name|FluentLogger
name|logger
init|=
name|FluentLogger
operator|.
name|forEnclosingClass
argument_list|()
decl_stmt|;
DECL|field|projectCache
specifier|private
specifier|final
name|ProjectCache
name|projectCache
decl_stmt|;
DECL|field|patchScriptFactoryFactory
specifier|private
specifier|final
name|PatchScriptFactory
operator|.
name|Factory
name|patchScriptFactoryFactory
decl_stmt|;
DECL|field|revisions
specifier|private
specifier|final
name|Revisions
name|revisions
decl_stmt|;
DECL|field|webLinks
specifier|private
specifier|final
name|WebLinks
name|webLinks
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--base"
argument_list|,
name|metaVar
operator|=
literal|"REVISION"
argument_list|)
DECL|field|base
name|String
name|base
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--parent"
argument_list|,
name|metaVar
operator|=
literal|"parent-number"
argument_list|)
DECL|field|parentNum
name|int
name|parentNum
decl_stmt|;
annotation|@
name|Deprecated
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--ignore-whitespace"
argument_list|)
DECL|field|ignoreWhitespace
name|IgnoreWhitespace
name|ignoreWhitespace
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--whitespace"
argument_list|)
DECL|field|whitespace
name|Whitespace
name|whitespace
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--context"
argument_list|,
name|handler
operator|=
name|ContextOptionHandler
operator|.
name|class
argument_list|)
DECL|field|context
name|int
name|context
init|=
name|DiffPreferencesInfo
operator|.
name|DEFAULT_CONTEXT
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--intraline"
argument_list|)
DECL|field|intraline
name|boolean
name|intraline
decl_stmt|;
annotation|@
name|Inject
DECL|method|GetDiff ( ProjectCache projectCache, PatchScriptFactory.Factory patchScriptFactoryFactory, Revisions revisions, WebLinks webLinks)
name|GetDiff
parameter_list|(
name|ProjectCache
name|projectCache
parameter_list|,
name|PatchScriptFactory
operator|.
name|Factory
name|patchScriptFactoryFactory
parameter_list|,
name|Revisions
name|revisions
parameter_list|,
name|WebLinks
name|webLinks
parameter_list|)
block|{
name|this
operator|.
name|projectCache
operator|=
name|projectCache
expr_stmt|;
name|this
operator|.
name|patchScriptFactoryFactory
operator|=
name|patchScriptFactoryFactory
expr_stmt|;
name|this
operator|.
name|revisions
operator|=
name|revisions
expr_stmt|;
name|this
operator|.
name|webLinks
operator|=
name|webLinks
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|apply (FileResource resource)
specifier|public
name|Response
argument_list|<
name|DiffInfo
argument_list|>
name|apply
parameter_list|(
name|FileResource
name|resource
parameter_list|)
throws|throws
name|ResourceConflictException
throws|,
name|ResourceNotFoundException
throws|,
name|AuthException
throws|,
name|InvalidChangeOperationException
throws|,
name|IOException
throws|,
name|PermissionBackendException
block|{
name|DiffPreferencesInfo
name|prefs
init|=
operator|new
name|DiffPreferencesInfo
argument_list|()
decl_stmt|;
if|if
condition|(
name|whitespace
operator|!=
literal|null
condition|)
block|{
name|prefs
operator|.
name|ignoreWhitespace
operator|=
name|whitespace
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|ignoreWhitespace
operator|!=
literal|null
condition|)
block|{
name|prefs
operator|.
name|ignoreWhitespace
operator|=
name|ignoreWhitespace
operator|.
name|whitespace
expr_stmt|;
block|}
else|else
block|{
name|prefs
operator|.
name|ignoreWhitespace
operator|=
name|Whitespace
operator|.
name|IGNORE_LEADING_AND_TRAILING
expr_stmt|;
block|}
name|prefs
operator|.
name|context
operator|=
name|context
expr_stmt|;
name|prefs
operator|.
name|intralineDifference
operator|=
name|intraline
expr_stmt|;
name|logger
operator|.
name|atFine
argument_list|()
operator|.
name|log
argument_list|(
literal|"diff preferences: ignoreWhitespace = %s, context = %s, intralineDifference = %s"
argument_list|,
name|prefs
operator|.
name|ignoreWhitespace
argument_list|,
name|prefs
operator|.
name|context
argument_list|,
name|prefs
operator|.
name|intralineDifference
argument_list|)
expr_stmt|;
name|PatchScriptFactory
name|psf
decl_stmt|;
name|PatchSet
name|basePatchSet
init|=
literal|null
decl_stmt|;
name|PatchSet
operator|.
name|Id
name|pId
init|=
name|resource
operator|.
name|getPatchKey
argument_list|()
operator|.
name|patchSetId
argument_list|()
decl_stmt|;
name|String
name|fileName
init|=
name|resource
operator|.
name|getPatchKey
argument_list|()
operator|.
name|fileName
argument_list|()
decl_stmt|;
name|logger
operator|.
name|atFine
argument_list|()
operator|.
name|log
argument_list|(
literal|"patchSetId = %d, fileName = %s, base = %s, parentNum = %d"
argument_list|,
name|pId
operator|.
name|get
argument_list|()
argument_list|,
name|fileName
argument_list|,
name|base
argument_list|,
name|parentNum
argument_list|)
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|resource
operator|.
name|getRevision
argument_list|()
operator|.
name|getNotes
argument_list|()
decl_stmt|;
if|if
condition|(
name|base
operator|!=
literal|null
condition|)
block|{
name|RevisionResource
name|baseResource
init|=
name|revisions
operator|.
name|parse
argument_list|(
name|resource
operator|.
name|getRevision
argument_list|()
operator|.
name|getChangeResource
argument_list|()
argument_list|,
name|IdString
operator|.
name|fromDecoded
argument_list|(
name|base
argument_list|)
argument_list|)
decl_stmt|;
name|basePatchSet
operator|=
name|baseResource
operator|.
name|getPatchSet
argument_list|()
expr_stmt|;
name|psf
operator|=
name|patchScriptFactoryFactory
operator|.
name|create
argument_list|(
name|notes
argument_list|,
name|fileName
argument_list|,
name|basePatchSet
operator|.
name|id
argument_list|()
argument_list|,
name|pId
argument_list|,
name|prefs
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|parentNum
operator|>
literal|0
condition|)
block|{
name|psf
operator|=
name|patchScriptFactoryFactory
operator|.
name|create
argument_list|(
name|notes
argument_list|,
name|fileName
argument_list|,
name|parentNum
operator|-
literal|1
argument_list|,
name|pId
argument_list|,
name|prefs
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|psf
operator|=
name|patchScriptFactoryFactory
operator|.
name|create
argument_list|(
name|notes
argument_list|,
name|fileName
argument_list|,
literal|null
argument_list|,
name|pId
argument_list|,
name|prefs
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|psf
operator|.
name|setLoadHistory
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|psf
operator|.
name|setLoadComments
argument_list|(
name|context
operator|!=
name|DiffPreferencesInfo
operator|.
name|WHOLE_FILE_CONTEXT
argument_list|)
expr_stmt|;
name|PatchScript
name|ps
init|=
name|psf
operator|.
name|call
argument_list|()
decl_stmt|;
name|Project
operator|.
name|NameKey
name|projectName
init|=
name|resource
operator|.
name|getRevision
argument_list|()
operator|.
name|getChange
argument_list|()
operator|.
name|getProject
argument_list|()
decl_stmt|;
name|ProjectState
name|state
init|=
name|projectCache
operator|.
name|get
argument_list|(
name|projectName
argument_list|)
decl_stmt|;
name|DiffSide
name|sideA
init|=
name|DiffSide
operator|.
name|create
argument_list|(
name|ps
operator|.
name|getFileInfoA
argument_list|()
argument_list|,
name|MoreObjects
operator|.
name|firstNonNull
argument_list|(
name|ps
operator|.
name|getOldName
argument_list|()
argument_list|,
name|ps
operator|.
name|getNewName
argument_list|()
argument_list|)
argument_list|,
name|DiffSide
operator|.
name|Type
operator|.
name|SIDE_A
argument_list|)
decl_stmt|;
name|DiffSide
name|sideB
init|=
name|DiffSide
operator|.
name|create
argument_list|(
name|ps
operator|.
name|getFileInfoB
argument_list|()
argument_list|,
name|ps
operator|.
name|getNewName
argument_list|()
argument_list|,
name|DiffSide
operator|.
name|Type
operator|.
name|SIDE_B
argument_list|)
decl_stmt|;
name|DiffWebLinksProvider
name|webLinksProvider
init|=
operator|new
name|DiffWebLinksProviderImpl
argument_list|(
name|sideA
argument_list|,
name|sideB
argument_list|,
name|projectName
argument_list|,
name|basePatchSet
argument_list|,
name|webLinks
argument_list|,
name|resource
argument_list|)
decl_stmt|;
name|DiffInfoCreator
name|diffInfoCreator
init|=
operator|new
name|DiffInfoCreator
argument_list|(
name|state
argument_list|,
name|webLinksProvider
argument_list|,
name|intraline
argument_list|)
decl_stmt|;
name|DiffInfo
name|result
init|=
name|diffInfoCreator
operator|.
name|create
argument_list|(
name|ps
argument_list|,
name|sideA
argument_list|,
name|sideB
argument_list|)
decl_stmt|;
name|Response
argument_list|<
name|DiffInfo
argument_list|>
name|r
init|=
name|Response
operator|.
name|ok
argument_list|(
name|result
argument_list|)
decl_stmt|;
if|if
condition|(
name|resource
operator|.
name|isCacheable
argument_list|()
condition|)
block|{
name|r
operator|.
name|caching
argument_list|(
name|CacheControl
operator|.
name|PRIVATE
argument_list|(
literal|7
argument_list|,
name|TimeUnit
operator|.
name|DAYS
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|r
return|;
block|}
catch|catch
parameter_list|(
name|NoSuchChangeException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ResourceNotFoundException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|LargeObjectException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ResourceConflictException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
DECL|class|DiffWebLinksProviderImpl
specifier|private
specifier|static
class|class
name|DiffWebLinksProviderImpl
implements|implements
name|DiffWebLinksProvider
block|{
DECL|field|webLinks
specifier|private
specifier|final
name|WebLinks
name|webLinks
decl_stmt|;
DECL|field|projectName
specifier|private
specifier|final
name|Project
operator|.
name|NameKey
name|projectName
decl_stmt|;
DECL|field|sideA
specifier|private
specifier|final
name|DiffSide
name|sideA
decl_stmt|;
DECL|field|sideB
specifier|private
specifier|final
name|DiffSide
name|sideB
decl_stmt|;
DECL|field|revA
specifier|private
specifier|final
name|String
name|revA
decl_stmt|;
DECL|field|revB
specifier|private
specifier|final
name|String
name|revB
decl_stmt|;
DECL|field|resource
specifier|private
specifier|final
name|FileResource
name|resource
decl_stmt|;
DECL|field|basePatchSet
annotation|@
name|Nullable
specifier|private
specifier|final
name|PatchSet
name|basePatchSet
decl_stmt|;
DECL|method|DiffWebLinksProviderImpl ( DiffSide sideA, DiffSide sideB, Project.NameKey projectName, @Nullable PatchSet basePatchSet, WebLinks webLinks, FileResource resource)
name|DiffWebLinksProviderImpl
parameter_list|(
name|DiffSide
name|sideA
parameter_list|,
name|DiffSide
name|sideB
parameter_list|,
name|Project
operator|.
name|NameKey
name|projectName
parameter_list|,
annotation|@
name|Nullable
name|PatchSet
name|basePatchSet
parameter_list|,
name|WebLinks
name|webLinks
parameter_list|,
name|FileResource
name|resource
parameter_list|)
block|{
name|this
operator|.
name|projectName
operator|=
name|projectName
expr_stmt|;
name|this
operator|.
name|webLinks
operator|=
name|webLinks
expr_stmt|;
name|this
operator|.
name|basePatchSet
operator|=
name|basePatchSet
expr_stmt|;
name|this
operator|.
name|resource
operator|=
name|resource
expr_stmt|;
name|this
operator|.
name|sideA
operator|=
name|sideA
expr_stmt|;
name|this
operator|.
name|sideB
operator|=
name|sideB
expr_stmt|;
name|revA
operator|=
name|basePatchSet
operator|!=
literal|null
condition|?
name|basePatchSet
operator|.
name|refName
argument_list|()
else|:
name|sideA
operator|.
name|fileInfo
argument_list|()
operator|.
name|commitId
expr_stmt|;
name|RevisionResource
name|revision
init|=
name|resource
operator|.
name|getRevision
argument_list|()
decl_stmt|;
name|revB
operator|=
name|revision
operator|.
name|getEdit
argument_list|()
operator|.
name|map
argument_list|(
name|edit
lambda|->
name|edit
operator|.
name|getRefName
argument_list|()
argument_list|)
operator|.
name|orElseGet
argument_list|(
parameter_list|()
lambda|->
name|revision
operator|.
name|getPatchSet
argument_list|()
operator|.
name|refName
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|atFine
argument_list|()
operator|.
name|log
argument_list|(
literal|"revA = %s, revB = %s"
argument_list|,
name|revA
argument_list|,
name|revB
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getDiffLinks ()
specifier|public
name|ImmutableList
argument_list|<
name|DiffWebLinkInfo
argument_list|>
name|getDiffLinks
parameter_list|()
block|{
return|return
name|webLinks
operator|.
name|getDiffLinks
argument_list|(
name|projectName
operator|.
name|get
argument_list|()
argument_list|,
name|resource
operator|.
name|getPatchKey
argument_list|()
operator|.
name|patchSetId
argument_list|()
operator|.
name|changeId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|basePatchSet
operator|!=
literal|null
condition|?
name|basePatchSet
operator|.
name|id
argument_list|()
operator|.
name|get
argument_list|()
else|:
literal|null
argument_list|,
name|revA
argument_list|,
name|sideA
operator|.
name|fileName
argument_list|()
argument_list|,
name|resource
operator|.
name|getPatchKey
argument_list|()
operator|.
name|patchSetId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|revB
argument_list|,
name|sideB
operator|.
name|fileName
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getFileWebLinks (DiffSide.Type type)
specifier|public
name|ImmutableList
argument_list|<
name|WebLinkInfo
argument_list|>
name|getFileWebLinks
parameter_list|(
name|DiffSide
operator|.
name|Type
name|type
parameter_list|)
block|{
name|String
name|rev
decl_stmt|;
name|DiffSide
name|side
decl_stmt|;
if|if
condition|(
name|type
operator|==
name|DiffSide
operator|.
name|Type
operator|.
name|SIDE_A
condition|)
block|{
name|rev
operator|=
name|revA
expr_stmt|;
name|side
operator|=
name|sideA
expr_stmt|;
block|}
else|else
block|{
name|rev
operator|=
name|revB
expr_stmt|;
name|side
operator|=
name|sideB
expr_stmt|;
block|}
return|return
name|webLinks
operator|.
name|getFileLinks
argument_list|(
name|projectName
operator|.
name|get
argument_list|()
argument_list|,
name|rev
argument_list|,
name|side
operator|.
name|fileName
argument_list|()
argument_list|)
return|;
block|}
block|}
DECL|method|setBase (String base)
specifier|public
name|GetDiff
name|setBase
parameter_list|(
name|String
name|base
parameter_list|)
block|{
name|this
operator|.
name|base
operator|=
name|base
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setParent (int parentNum)
specifier|public
name|GetDiff
name|setParent
parameter_list|(
name|int
name|parentNum
parameter_list|)
block|{
name|this
operator|.
name|parentNum
operator|=
name|parentNum
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setContext (int context)
specifier|public
name|GetDiff
name|setContext
parameter_list|(
name|int
name|context
parameter_list|)
block|{
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setIntraline (boolean intraline)
specifier|public
name|GetDiff
name|setIntraline
parameter_list|(
name|boolean
name|intraline
parameter_list|)
block|{
name|this
operator|.
name|intraline
operator|=
name|intraline
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|setWhitespace (Whitespace whitespace)
specifier|public
name|GetDiff
name|setWhitespace
parameter_list|(
name|Whitespace
name|whitespace
parameter_list|)
block|{
name|this
operator|.
name|whitespace
operator|=
name|whitespace
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Deprecated
DECL|enum|IgnoreWhitespace
enum|enum
name|IgnoreWhitespace
block|{
DECL|enumConstant|NONE
name|NONE
parameter_list|(
name|DiffPreferencesInfo
operator|.
name|Whitespace
operator|.
name|IGNORE_NONE
parameter_list|)
operator|,
DECL|enumConstant|TRAILING
constructor|TRAILING(DiffPreferencesInfo.Whitespace.IGNORE_TRAILING
block|)
enum|,
DECL|enumConstant|CHANGED
name|CHANGED
parameter_list|(
name|DiffPreferencesInfo
operator|.
name|Whitespace
operator|.
name|IGNORE_LEADING_AND_TRAILING
parameter_list|)
operator|,
DECL|enumConstant|ALL
constructor|ALL(DiffPreferencesInfo.Whitespace.IGNORE_ALL
block|)
class|;
end_class

begin_decl_stmt
DECL|field|whitespace
specifier|private
specifier|final
name|DiffPreferencesInfo
operator|.
name|Whitespace
name|whitespace
decl_stmt|;
end_decl_stmt

begin_expr_stmt
DECL|method|IgnoreWhitespace (DiffPreferencesInfo.Whitespace whitespace)
name|IgnoreWhitespace
argument_list|(
name|DiffPreferencesInfo
operator|.
name|Whitespace
name|whitespace
argument_list|)
block|{
name|this
operator|.
name|whitespace
operator|=
name|whitespace
block|;     }
end_expr_stmt

begin_class
unit|}    public
DECL|class|ContextOptionHandler
specifier|static
class|class
name|ContextOptionHandler
extends|extends
name|OptionHandler
argument_list|<
name|Short
argument_list|>
block|{
DECL|method|ContextOptionHandler (CmdLineParser parser, OptionDef option, Setter<Short> setter)
specifier|public
name|ContextOptionHandler
parameter_list|(
name|CmdLineParser
name|parser
parameter_list|,
name|OptionDef
name|option
parameter_list|,
name|Setter
argument_list|<
name|Short
argument_list|>
name|setter
parameter_list|)
block|{
name|super
argument_list|(
name|parser
argument_list|,
name|option
argument_list|,
name|setter
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|parseArguments (Parameters params)
specifier|public
specifier|final
name|int
name|parseArguments
parameter_list|(
name|Parameters
name|params
parameter_list|)
throws|throws
name|CmdLineException
block|{
specifier|final
name|String
name|value
init|=
name|params
operator|.
name|getParameter
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|short
name|context
decl_stmt|;
if|if
condition|(
literal|"all"
operator|.
name|equalsIgnoreCase
argument_list|(
name|value
argument_list|)
condition|)
block|{
name|context
operator|=
name|DiffPreferencesInfo
operator|.
name|WHOLE_FILE_CONTEXT
expr_stmt|;
block|}
else|else
block|{
try|try
block|{
name|context
operator|=
name|Short
operator|.
name|parseShort
argument_list|(
name|value
argument_list|,
literal|10
argument_list|)
expr_stmt|;
if|if
condition|(
name|context
operator|<
literal|0
condition|)
block|{
throw|throw
operator|new
name|NumberFormatException
argument_list|()
throw|;
block|}
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|CmdLineException
argument_list|(
name|owner
argument_list|,
name|localizable
argument_list|(
literal|"\"%s\" is not a valid value for \"%s\""
argument_list|)
argument_list|,
name|value
argument_list|,
operator|(
operator|(
name|NamedOptionDef
operator|)
name|option
operator|)
operator|.
name|name
argument_list|()
argument_list|)
throw|;
block|}
block|}
name|setter
operator|.
name|addValue
argument_list|(
name|context
argument_list|)
expr_stmt|;
return|return
literal|1
return|;
block|}
annotation|@
name|Override
DECL|method|getDefaultMetaVariable ()
specifier|public
specifier|final
name|String
name|getDefaultMetaVariable
parameter_list|()
block|{
return|return
literal|"ALL|# LINES"
return|;
block|}
block|}
end_class

unit|}
end_unit

