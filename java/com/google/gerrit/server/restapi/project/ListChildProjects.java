begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.restapi.project
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
package|;
end_package

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
operator|.
name|toList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ProjectInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|BadRequestException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|ResourceConflictException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestApiException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestReadView
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|permissions
operator|.
name|PermissionBackend
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|permissions
operator|.
name|PermissionBackendException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|permissions
operator|.
name|ProjectPermission
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ChildProjects
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ProjectResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kohsuke
operator|.
name|args4j
operator|.
name|Option
import|;
end_import

begin_class
DECL|class|ListChildProjects
specifier|public
class|class
name|ListChildProjects
implements|implements
name|RestReadView
argument_list|<
name|ProjectResource
argument_list|>
block|{
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--recursive"
argument_list|,
name|usage
operator|=
literal|"to list child projects recursively"
argument_list|)
DECL|field|recursive
specifier|private
name|boolean
name|recursive
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--limit"
argument_list|,
name|usage
operator|=
literal|"maximum number of parents projects to list"
argument_list|)
DECL|field|limit
specifier|private
name|int
name|limit
decl_stmt|;
DECL|field|permissionBackend
specifier|private
specifier|final
name|PermissionBackend
name|permissionBackend
decl_stmt|;
DECL|field|childProjects
specifier|private
specifier|final
name|ChildProjects
name|childProjects
decl_stmt|;
DECL|field|queryProvider
specifier|private
specifier|final
name|Provider
argument_list|<
name|QueryProjects
argument_list|>
name|queryProvider
decl_stmt|;
annotation|@
name|Inject
DECL|method|ListChildProjects ( PermissionBackend permissionBackend, ChildProjects childProjects, Provider<QueryProjects> queryProvider)
name|ListChildProjects
parameter_list|(
name|PermissionBackend
name|permissionBackend
parameter_list|,
name|ChildProjects
name|childProjects
parameter_list|,
name|Provider
argument_list|<
name|QueryProjects
argument_list|>
name|queryProvider
parameter_list|)
block|{
name|this
operator|.
name|permissionBackend
operator|=
name|permissionBackend
expr_stmt|;
name|this
operator|.
name|childProjects
operator|=
name|childProjects
expr_stmt|;
name|this
operator|.
name|queryProvider
operator|=
name|queryProvider
expr_stmt|;
block|}
DECL|method|withRecursive (boolean recursive)
specifier|public
name|ListChildProjects
name|withRecursive
parameter_list|(
name|boolean
name|recursive
parameter_list|)
block|{
name|this
operator|.
name|recursive
operator|=
name|recursive
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|withLimit (int limit)
specifier|public
name|ListChildProjects
name|withLimit
parameter_list|(
name|int
name|limit
parameter_list|)
block|{
name|this
operator|.
name|limit
operator|=
name|limit
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|apply (ProjectResource rsrc)
specifier|public
name|List
argument_list|<
name|ProjectInfo
argument_list|>
name|apply
parameter_list|(
name|ProjectResource
name|rsrc
parameter_list|)
throws|throws
name|PermissionBackendException
throws|,
name|RestApiException
block|{
if|if
condition|(
name|limit
operator|<
literal|0
condition|)
block|{
throw|throw
operator|new
name|BadRequestException
argument_list|(
literal|"limit must be a positive number"
argument_list|)
throw|;
block|}
if|if
condition|(
name|recursive
operator|&&
name|limit
operator|!=
literal|0
condition|)
block|{
throw|throw
operator|new
name|ResourceConflictException
argument_list|(
literal|"recursive and limit options are mutually exclusive"
argument_list|)
throw|;
block|}
name|rsrc
operator|.
name|getProjectState
argument_list|()
operator|.
name|checkStatePermitsRead
argument_list|()
expr_stmt|;
if|if
condition|(
name|recursive
condition|)
block|{
return|return
name|childProjects
operator|.
name|list
argument_list|(
name|rsrc
operator|.
name|getNameKey
argument_list|()
argument_list|)
return|;
block|}
return|return
name|directChildProjects
argument_list|(
name|rsrc
operator|.
name|getNameKey
argument_list|()
argument_list|)
return|;
block|}
DECL|method|directChildProjects (Project.NameKey parent)
specifier|private
name|List
argument_list|<
name|ProjectInfo
argument_list|>
name|directChildProjects
parameter_list|(
name|Project
operator|.
name|NameKey
name|parent
parameter_list|)
throws|throws
name|RestApiException
block|{
name|PermissionBackend
operator|.
name|WithUser
name|currentUser
init|=
name|permissionBackend
operator|.
name|currentUser
argument_list|()
decl_stmt|;
return|return
name|queryProvider
operator|.
name|get
argument_list|()
operator|.
name|withQuery
argument_list|(
literal|"parent:"
operator|+
name|parent
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|withLimit
argument_list|(
name|limit
argument_list|)
operator|.
name|apply
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|p
lambda|->
name|currentUser
operator|.
name|project
argument_list|(
operator|new
name|Project
operator|.
name|NameKey
argument_list|(
name|p
operator|.
name|name
argument_list|)
argument_list|)
operator|.
name|testOrFalse
argument_list|(
name|ProjectPermission
operator|.
name|ACCESS
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

