begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2014 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.restapi.project
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|DiffPreferencesInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|FileInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|registration
operator|.
name|DynamicMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|ChildCollection
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|IdString
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|ResourceNotFoundException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestReadView
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestView
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Patch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|change
operator|.
name|FileInfoJson
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|GitRepositoryManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|patch
operator|.
name|PatchListKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|patch
operator|.
name|PatchListNotAvailableException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|CommitResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|FileResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevCommit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kohsuke
operator|.
name|args4j
operator|.
name|Option
import|;
end_import

begin_class
annotation|@
name|Singleton
DECL|class|FilesInCommitCollection
specifier|public
class|class
name|FilesInCommitCollection
implements|implements
name|ChildCollection
argument_list|<
name|CommitResource
argument_list|,
name|FileResource
argument_list|>
block|{
DECL|field|views
specifier|private
specifier|final
name|DynamicMap
argument_list|<
name|RestView
argument_list|<
name|FileResource
argument_list|>
argument_list|>
name|views
decl_stmt|;
DECL|field|list
specifier|private
specifier|final
name|Provider
argument_list|<
name|ListFiles
argument_list|>
name|list
decl_stmt|;
DECL|field|repoManager
specifier|private
specifier|final
name|GitRepositoryManager
name|repoManager
decl_stmt|;
annotation|@
name|Inject
DECL|method|FilesInCommitCollection ( DynamicMap<RestView<FileResource>> views, Provider<ListFiles> list, GitRepositoryManager repoManager)
name|FilesInCommitCollection
parameter_list|(
name|DynamicMap
argument_list|<
name|RestView
argument_list|<
name|FileResource
argument_list|>
argument_list|>
name|views
parameter_list|,
name|Provider
argument_list|<
name|ListFiles
argument_list|>
name|list
parameter_list|,
name|GitRepositoryManager
name|repoManager
parameter_list|)
block|{
name|this
operator|.
name|views
operator|=
name|views
expr_stmt|;
name|this
operator|.
name|list
operator|=
name|list
expr_stmt|;
name|this
operator|.
name|repoManager
operator|=
name|repoManager
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|list ()
specifier|public
name|RestView
argument_list|<
name|CommitResource
argument_list|>
name|list
parameter_list|()
throws|throws
name|ResourceNotFoundException
block|{
return|return
name|list
operator|.
name|get
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|parse (CommitResource parent, IdString id)
specifier|public
name|FileResource
name|parse
parameter_list|(
name|CommitResource
name|parent
parameter_list|,
name|IdString
name|id
parameter_list|)
throws|throws
name|ResourceNotFoundException
throws|,
name|IOException
block|{
if|if
condition|(
name|Patch
operator|.
name|isMagic
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
condition|)
block|{
return|return
operator|new
name|FileResource
argument_list|(
name|parent
operator|.
name|getProjectState
argument_list|()
argument_list|,
name|parent
operator|.
name|getCommit
argument_list|()
argument_list|,
name|id
operator|.
name|get
argument_list|()
argument_list|)
return|;
block|}
return|return
name|FileResource
operator|.
name|create
argument_list|(
name|repoManager
argument_list|,
name|parent
operator|.
name|getProjectState
argument_list|()
argument_list|,
name|parent
operator|.
name|getCommit
argument_list|()
argument_list|,
name|id
operator|.
name|get
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|views ()
specifier|public
name|DynamicMap
argument_list|<
name|RestView
argument_list|<
name|FileResource
argument_list|>
argument_list|>
name|views
parameter_list|()
block|{
return|return
name|views
return|;
block|}
DECL|class|ListFiles
specifier|public
specifier|static
specifier|final
class|class
name|ListFiles
implements|implements
name|RestReadView
argument_list|<
name|CommitResource
argument_list|>
block|{
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--parent"
argument_list|,
name|metaVar
operator|=
literal|"parent-number"
argument_list|)
DECL|field|parentNum
name|int
name|parentNum
decl_stmt|;
DECL|field|fileInfoJson
specifier|private
specifier|final
name|FileInfoJson
name|fileInfoJson
decl_stmt|;
annotation|@
name|Inject
DECL|method|ListFiles (FileInfoJson fileInfoJson)
specifier|public
name|ListFiles
parameter_list|(
name|FileInfoJson
name|fileInfoJson
parameter_list|)
block|{
name|this
operator|.
name|fileInfoJson
operator|=
name|fileInfoJson
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|apply (CommitResource resource)
specifier|public
name|Response
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|FileInfo
argument_list|>
argument_list|>
name|apply
parameter_list|(
name|CommitResource
name|resource
parameter_list|)
throws|throws
name|PatchListNotAvailableException
block|{
name|RevCommit
name|commit
init|=
name|resource
operator|.
name|getCommit
argument_list|()
decl_stmt|;
name|PatchListKey
name|key
decl_stmt|;
if|if
condition|(
name|parentNum
operator|>
literal|0
condition|)
block|{
name|key
operator|=
name|PatchListKey
operator|.
name|againstParentNum
argument_list|(
name|parentNum
argument_list|,
name|commit
argument_list|,
name|DiffPreferencesInfo
operator|.
name|Whitespace
operator|.
name|IGNORE_NONE
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|key
operator|=
name|PatchListKey
operator|.
name|againstCommit
argument_list|(
literal|null
argument_list|,
name|commit
argument_list|,
name|DiffPreferencesInfo
operator|.
name|Whitespace
operator|.
name|IGNORE_NONE
argument_list|)
expr_stmt|;
block|}
return|return
name|Response
operator|.
name|ok
argument_list|(
name|fileInfoJson
operator|.
name|toFileInfoMap
argument_list|(
name|resource
operator|.
name|getProjectState
argument_list|()
operator|.
name|getNameKey
argument_list|()
argument_list|,
name|key
argument_list|)
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

