begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2019 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.account.externalids.testing
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|externalids
operator|.
name|testing
package|;
end_package

begin_import
import|import static
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
operator|.
name|UTF_8
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Constants
operator|.
name|OBJ_BLOB
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Constants
operator|.
name|OBJ_TREE
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|RefNames
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|externalids
operator|.
name|ExternalId
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|externalids
operator|.
name|ExternalIdReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|CommitBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectInserter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|PersonIdent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|RefUpdate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|notes
operator|.
name|NoteMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevCommit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevWalk
import|;
end_import

begin_comment
comment|/** Common methods for dealing with external IDs in tests. */
end_comment

begin_class
DECL|class|ExternalIdTestUtil
specifier|public
class|class
name|ExternalIdTestUtil
block|{
DECL|method|insertExternalIdWithoutAccountId ( Repository repo, RevWalk rw, PersonIdent ident, Account.Id accountId, String externalId)
specifier|public
specifier|static
name|String
name|insertExternalIdWithoutAccountId
parameter_list|(
name|Repository
name|repo
parameter_list|,
name|RevWalk
name|rw
parameter_list|,
name|PersonIdent
name|ident
parameter_list|,
name|Account
operator|.
name|Id
name|accountId
parameter_list|,
name|String
name|externalId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|insertExternalId
argument_list|(
name|repo
argument_list|,
name|rw
argument_list|,
name|ident
argument_list|,
parameter_list|(
name|ins
parameter_list|,
name|noteMap
parameter_list|)
lambda|->
block|{
name|ExternalId
name|extId
init|=
name|ExternalId
operator|.
name|create
argument_list|(
name|ExternalId
operator|.
name|Key
operator|.
name|parse
argument_list|(
name|externalId
argument_list|)
argument_list|,
name|accountId
argument_list|)
decl_stmt|;
name|ObjectId
name|noteId
init|=
name|extId
operator|.
name|key
argument_list|()
operator|.
name|sha1
argument_list|()
decl_stmt|;
name|Config
name|c
init|=
operator|new
name|Config
argument_list|()
decl_stmt|;
name|extId
operator|.
name|writeToConfig
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|c
operator|.
name|unset
argument_list|(
literal|"externalId"
argument_list|,
name|extId
operator|.
name|key
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
literal|"accountId"
argument_list|)
expr_stmt|;
name|byte
index|[]
name|raw
init|=
name|c
operator|.
name|toText
argument_list|()
operator|.
name|getBytes
argument_list|(
name|UTF_8
argument_list|)
decl_stmt|;
name|ObjectId
name|dataBlob
init|=
name|ins
operator|.
name|insert
argument_list|(
name|OBJ_BLOB
argument_list|,
name|raw
argument_list|)
decl_stmt|;
name|noteMap
operator|.
name|set
argument_list|(
name|noteId
argument_list|,
name|dataBlob
argument_list|)
expr_stmt|;
return|return
name|noteId
return|;
block|}
argument_list|)
return|;
block|}
DECL|method|insertExternalIdWithKeyThatDoesntMatchNoteId ( Repository repo, RevWalk rw, PersonIdent ident, Account.Id accountId, String externalId)
specifier|public
specifier|static
name|String
name|insertExternalIdWithKeyThatDoesntMatchNoteId
parameter_list|(
name|Repository
name|repo
parameter_list|,
name|RevWalk
name|rw
parameter_list|,
name|PersonIdent
name|ident
parameter_list|,
name|Account
operator|.
name|Id
name|accountId
parameter_list|,
name|String
name|externalId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|insertExternalId
argument_list|(
name|repo
argument_list|,
name|rw
argument_list|,
name|ident
argument_list|,
parameter_list|(
name|ins
parameter_list|,
name|noteMap
parameter_list|)
lambda|->
block|{
name|ExternalId
name|extId
init|=
name|ExternalId
operator|.
name|create
argument_list|(
name|ExternalId
operator|.
name|Key
operator|.
name|parse
argument_list|(
name|externalId
argument_list|)
argument_list|,
name|accountId
argument_list|)
decl_stmt|;
name|ObjectId
name|noteId
init|=
name|ExternalId
operator|.
name|Key
operator|.
name|parse
argument_list|(
name|externalId
operator|+
literal|"x"
argument_list|)
operator|.
name|sha1
argument_list|()
decl_stmt|;
name|Config
name|c
init|=
operator|new
name|Config
argument_list|()
decl_stmt|;
name|extId
operator|.
name|writeToConfig
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|byte
index|[]
name|raw
init|=
name|c
operator|.
name|toText
argument_list|()
operator|.
name|getBytes
argument_list|(
name|UTF_8
argument_list|)
decl_stmt|;
name|ObjectId
name|dataBlob
init|=
name|ins
operator|.
name|insert
argument_list|(
name|OBJ_BLOB
argument_list|,
name|raw
argument_list|)
decl_stmt|;
name|noteMap
operator|.
name|set
argument_list|(
name|noteId
argument_list|,
name|dataBlob
argument_list|)
expr_stmt|;
return|return
name|noteId
return|;
block|}
argument_list|)
return|;
block|}
DECL|method|insertExternalIdWithInvalidConfig ( Repository repo, RevWalk rw, PersonIdent ident, String externalId)
specifier|public
specifier|static
name|String
name|insertExternalIdWithInvalidConfig
parameter_list|(
name|Repository
name|repo
parameter_list|,
name|RevWalk
name|rw
parameter_list|,
name|PersonIdent
name|ident
parameter_list|,
name|String
name|externalId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|insertExternalId
argument_list|(
name|repo
argument_list|,
name|rw
argument_list|,
name|ident
argument_list|,
parameter_list|(
name|ins
parameter_list|,
name|noteMap
parameter_list|)
lambda|->
block|{
name|ObjectId
name|noteId
init|=
name|ExternalId
operator|.
name|Key
operator|.
name|parse
argument_list|(
name|externalId
argument_list|)
operator|.
name|sha1
argument_list|()
decl_stmt|;
name|byte
index|[]
name|raw
init|=
literal|"bad-config"
operator|.
name|getBytes
argument_list|(
name|UTF_8
argument_list|)
decl_stmt|;
name|ObjectId
name|dataBlob
init|=
name|ins
operator|.
name|insert
argument_list|(
name|OBJ_BLOB
argument_list|,
name|raw
argument_list|)
decl_stmt|;
name|noteMap
operator|.
name|set
argument_list|(
name|noteId
argument_list|,
name|dataBlob
argument_list|)
expr_stmt|;
return|return
name|noteId
return|;
block|}
argument_list|)
return|;
block|}
DECL|method|insertExternalIdWithEmptyNote ( Repository repo, RevWalk rw, PersonIdent ident, String externalId)
specifier|public
specifier|static
name|String
name|insertExternalIdWithEmptyNote
parameter_list|(
name|Repository
name|repo
parameter_list|,
name|RevWalk
name|rw
parameter_list|,
name|PersonIdent
name|ident
parameter_list|,
name|String
name|externalId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|insertExternalId
argument_list|(
name|repo
argument_list|,
name|rw
argument_list|,
name|ident
argument_list|,
parameter_list|(
name|ins
parameter_list|,
name|noteMap
parameter_list|)
lambda|->
block|{
name|ObjectId
name|noteId
init|=
name|ExternalId
operator|.
name|Key
operator|.
name|parse
argument_list|(
name|externalId
argument_list|)
operator|.
name|sha1
argument_list|()
decl_stmt|;
name|byte
index|[]
name|raw
init|=
literal|""
operator|.
name|getBytes
argument_list|(
name|UTF_8
argument_list|)
decl_stmt|;
name|ObjectId
name|dataBlob
init|=
name|ins
operator|.
name|insert
argument_list|(
name|OBJ_BLOB
argument_list|,
name|raw
argument_list|)
decl_stmt|;
name|noteMap
operator|.
name|set
argument_list|(
name|noteId
argument_list|,
name|dataBlob
argument_list|)
expr_stmt|;
return|return
name|noteId
return|;
block|}
argument_list|)
return|;
block|}
DECL|method|insertExternalId ( Repository repo, RevWalk rw, PersonIdent ident, ExternalIdInserter extIdInserter)
specifier|private
specifier|static
name|String
name|insertExternalId
parameter_list|(
name|Repository
name|repo
parameter_list|,
name|RevWalk
name|rw
parameter_list|,
name|PersonIdent
name|ident
parameter_list|,
name|ExternalIdInserter
name|extIdInserter
parameter_list|)
throws|throws
name|IOException
block|{
name|ObjectId
name|rev
init|=
name|ExternalIdReader
operator|.
name|readRevision
argument_list|(
name|repo
argument_list|)
decl_stmt|;
name|NoteMap
name|noteMap
init|=
name|ExternalIdReader
operator|.
name|readNoteMap
argument_list|(
name|rw
argument_list|,
name|rev
argument_list|)
decl_stmt|;
try|try
init|(
name|ObjectInserter
name|ins
init|=
name|repo
operator|.
name|newObjectInserter
argument_list|()
init|)
block|{
name|ObjectId
name|noteId
init|=
name|extIdInserter
operator|.
name|addNote
argument_list|(
name|ins
argument_list|,
name|noteMap
argument_list|)
decl_stmt|;
name|CommitBuilder
name|cb
init|=
operator|new
name|CommitBuilder
argument_list|()
decl_stmt|;
name|cb
operator|.
name|setMessage
argument_list|(
literal|"Update external IDs"
argument_list|)
expr_stmt|;
name|cb
operator|.
name|setTreeId
argument_list|(
name|noteMap
operator|.
name|writeTree
argument_list|(
name|ins
argument_list|)
argument_list|)
expr_stmt|;
name|cb
operator|.
name|setAuthor
argument_list|(
name|ident
argument_list|)
expr_stmt|;
name|cb
operator|.
name|setCommitter
argument_list|(
name|ident
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|rev
operator|.
name|equals
argument_list|(
name|ObjectId
operator|.
name|zeroId
argument_list|()
argument_list|)
condition|)
block|{
name|cb
operator|.
name|setParentId
argument_list|(
name|rev
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cb
operator|.
name|setParentIds
argument_list|()
expr_stmt|;
comment|// Ref is currently nonexistent, commit has no parents.
block|}
if|if
condition|(
name|cb
operator|.
name|getTreeId
argument_list|()
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|rev
operator|.
name|equals
argument_list|(
name|ObjectId
operator|.
name|zeroId
argument_list|()
argument_list|)
condition|)
block|{
name|cb
operator|.
name|setTreeId
argument_list|(
name|ins
operator|.
name|insert
argument_list|(
name|OBJ_TREE
argument_list|,
operator|new
name|byte
index|[]
block|{}
argument_list|)
argument_list|)
expr_stmt|;
comment|// No parent, assume empty tree.
block|}
else|else
block|{
name|RevCommit
name|p
init|=
name|rw
operator|.
name|parseCommit
argument_list|(
name|rev
argument_list|)
decl_stmt|;
name|cb
operator|.
name|setTreeId
argument_list|(
name|p
operator|.
name|getTree
argument_list|()
argument_list|)
expr_stmt|;
comment|// Copy tree from parent.
block|}
block|}
name|ObjectId
name|commitId
init|=
name|ins
operator|.
name|insert
argument_list|(
name|cb
argument_list|)
decl_stmt|;
name|ins
operator|.
name|flush
argument_list|()
expr_stmt|;
name|RefUpdate
name|u
init|=
name|repo
operator|.
name|updateRef
argument_list|(
name|RefNames
operator|.
name|REFS_EXTERNAL_IDS
argument_list|)
decl_stmt|;
name|u
operator|.
name|setExpectedOldObjectId
argument_list|(
name|rev
argument_list|)
expr_stmt|;
name|u
operator|.
name|setNewObjectId
argument_list|(
name|commitId
argument_list|)
expr_stmt|;
name|RefUpdate
operator|.
name|Result
name|res
init|=
name|u
operator|.
name|update
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|res
condition|)
block|{
case|case
name|NEW
case|:
case|case
name|FAST_FORWARD
case|:
case|case
name|NO_CHANGE
case|:
case|case
name|RENAMED
case|:
case|case
name|FORCED
case|:
break|break;
case|case
name|LOCK_FAILURE
case|:
case|case
name|IO_FAILURE
case|:
case|case
name|NOT_ATTEMPTED
case|:
case|case
name|REJECTED
case|:
case|case
name|REJECTED_CURRENT_BRANCH
case|:
case|case
name|REJECTED_MISSING_OBJECT
case|:
case|case
name|REJECTED_OTHER_REASON
case|:
default|default:
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Updating external IDs failed with "
operator|+
name|res
argument_list|)
throw|;
block|}
return|return
name|noteId
operator|.
name|getName
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

