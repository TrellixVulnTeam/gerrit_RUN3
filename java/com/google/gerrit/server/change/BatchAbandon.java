begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2012 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|change
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableListMultimap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ListMultimap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|TimeUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|NotifyHandling
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|RecipientType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|ResourceConflictException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestApiException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|server
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|CurrentUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|query
operator|.
name|change
operator|.
name|ChangeData
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|update
operator|.
name|BatchUpdate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|update
operator|.
name|UpdateException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_class
annotation|@
name|Singleton
DECL|class|BatchAbandon
specifier|public
class|class
name|BatchAbandon
block|{
DECL|field|dbProvider
specifier|private
specifier|final
name|Provider
argument_list|<
name|ReviewDb
argument_list|>
name|dbProvider
decl_stmt|;
DECL|field|abandonOpFactory
specifier|private
specifier|final
name|AbandonOp
operator|.
name|Factory
name|abandonOpFactory
decl_stmt|;
annotation|@
name|Inject
DECL|method|BatchAbandon (Provider<ReviewDb> dbProvider, AbandonOp.Factory abandonOpFactory)
name|BatchAbandon
parameter_list|(
name|Provider
argument_list|<
name|ReviewDb
argument_list|>
name|dbProvider
parameter_list|,
name|AbandonOp
operator|.
name|Factory
name|abandonOpFactory
parameter_list|)
block|{
name|this
operator|.
name|dbProvider
operator|=
name|dbProvider
expr_stmt|;
name|this
operator|.
name|abandonOpFactory
operator|=
name|abandonOpFactory
expr_stmt|;
block|}
comment|/**    * If an extension has more than one changes to abandon that belong to the same project, they    * should use the batch instead of abandoning one by one.    *    *<p>It's the caller's responsibility to ensure that all jobs inside the same batch have the    * matching project from its ChangeData. Violations will result in a ResourceConflictException.    */
DECL|method|batchAbandon ( BatchUpdate.Factory updateFactory, Project.NameKey project, CurrentUser user, Collection<ChangeData> changes, String msgTxt, NotifyHandling notifyHandling, ListMultimap<RecipientType, Account.Id> accountsToNotify)
specifier|public
name|void
name|batchAbandon
parameter_list|(
name|BatchUpdate
operator|.
name|Factory
name|updateFactory
parameter_list|,
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|CurrentUser
name|user
parameter_list|,
name|Collection
argument_list|<
name|ChangeData
argument_list|>
name|changes
parameter_list|,
name|String
name|msgTxt
parameter_list|,
name|NotifyHandling
name|notifyHandling
parameter_list|,
name|ListMultimap
argument_list|<
name|RecipientType
argument_list|,
name|Account
operator|.
name|Id
argument_list|>
name|accountsToNotify
parameter_list|)
throws|throws
name|RestApiException
throws|,
name|UpdateException
block|{
if|if
condition|(
name|changes
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return;
block|}
name|AccountState
name|accountState
init|=
name|user
operator|.
name|isIdentifiedUser
argument_list|()
condition|?
name|user
operator|.
name|asIdentifiedUser
argument_list|()
operator|.
name|state
argument_list|()
else|:
literal|null
decl_stmt|;
try|try
init|(
name|BatchUpdate
name|u
init|=
name|updateFactory
operator|.
name|create
argument_list|(
name|dbProvider
operator|.
name|get
argument_list|()
argument_list|,
name|project
argument_list|,
name|user
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|)
init|)
block|{
for|for
control|(
name|ChangeData
name|change
range|:
name|changes
control|)
block|{
if|if
condition|(
operator|!
name|project
operator|.
name|equals
argument_list|(
name|change
operator|.
name|project
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|ResourceConflictException
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"Project name \"%s\" doesn't match \"%s\""
argument_list|,
name|change
operator|.
name|project
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|project
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
throw|;
block|}
name|u
operator|.
name|addOp
argument_list|(
name|change
operator|.
name|getId
argument_list|()
argument_list|,
name|abandonOpFactory
operator|.
name|create
argument_list|(
name|accountState
argument_list|,
name|msgTxt
argument_list|,
name|notifyHandling
argument_list|,
name|accountsToNotify
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|u
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|batchAbandon ( BatchUpdate.Factory updateFactory, Project.NameKey project, CurrentUser user, Collection<ChangeData> changes, String msgTxt)
specifier|public
name|void
name|batchAbandon
parameter_list|(
name|BatchUpdate
operator|.
name|Factory
name|updateFactory
parameter_list|,
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|CurrentUser
name|user
parameter_list|,
name|Collection
argument_list|<
name|ChangeData
argument_list|>
name|changes
parameter_list|,
name|String
name|msgTxt
parameter_list|)
throws|throws
name|RestApiException
throws|,
name|UpdateException
block|{
name|batchAbandon
argument_list|(
name|updateFactory
argument_list|,
name|project
argument_list|,
name|user
argument_list|,
name|changes
argument_list|,
name|msgTxt
argument_list|,
name|NotifyHandling
operator|.
name|ALL
argument_list|,
name|ImmutableListMultimap
operator|.
name|of
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|batchAbandon ( BatchUpdate.Factory updateFactory, Project.NameKey project, CurrentUser user, Collection<ChangeData> changes)
specifier|public
name|void
name|batchAbandon
parameter_list|(
name|BatchUpdate
operator|.
name|Factory
name|updateFactory
parameter_list|,
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|CurrentUser
name|user
parameter_list|,
name|Collection
argument_list|<
name|ChangeData
argument_list|>
name|changes
parameter_list|)
throws|throws
name|RestApiException
throws|,
name|UpdateException
block|{
name|batchAbandon
argument_list|(
name|updateFactory
argument_list|,
name|project
argument_list|,
name|user
argument_list|,
name|changes
argument_list|,
literal|""
argument_list|,
name|NotifyHandling
operator|.
name|ALL
argument_list|,
name|ImmutableListMultimap
operator|.
name|of
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

