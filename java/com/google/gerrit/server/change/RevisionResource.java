begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2012 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|change
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|hash
operator|.
name|Hasher
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|hash
operator|.
name|Hashing
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestResource
operator|.
name|HasETag
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestView
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|CurrentUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|edit
operator|.
name|ChangeEdit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|logging
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|logging
operator|.
name|TraceContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|logging
operator|.
name|TraceContext
operator|.
name|TraceTimer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ChangeNotes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|permissions
operator|.
name|PermissionBackend
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|TypeLiteral
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_class
DECL|class|RevisionResource
specifier|public
class|class
name|RevisionResource
implements|implements
name|RestResource
implements|,
name|HasETag
block|{
DECL|field|REVISION_KIND
specifier|public
specifier|static
specifier|final
name|TypeLiteral
argument_list|<
name|RestView
argument_list|<
name|RevisionResource
argument_list|>
argument_list|>
name|REVISION_KIND
init|=
operator|new
name|TypeLiteral
argument_list|<
name|RestView
argument_list|<
name|RevisionResource
argument_list|>
argument_list|>
argument_list|()
block|{}
decl_stmt|;
DECL|method|createNonCacheable (ChangeResource change, PatchSet ps)
specifier|public
specifier|static
name|RevisionResource
name|createNonCacheable
parameter_list|(
name|ChangeResource
name|change
parameter_list|,
name|PatchSet
name|ps
parameter_list|)
block|{
return|return
operator|new
name|RevisionResource
argument_list|(
name|change
argument_list|,
name|ps
argument_list|,
name|Optional
operator|.
name|empty
argument_list|()
argument_list|,
literal|false
argument_list|)
return|;
block|}
DECL|field|change
specifier|private
specifier|final
name|ChangeResource
name|change
decl_stmt|;
DECL|field|ps
specifier|private
specifier|final
name|PatchSet
name|ps
decl_stmt|;
DECL|field|edit
specifier|private
specifier|final
name|Optional
argument_list|<
name|ChangeEdit
argument_list|>
name|edit
decl_stmt|;
DECL|field|cacheable
specifier|private
specifier|final
name|boolean
name|cacheable
decl_stmt|;
DECL|method|RevisionResource (ChangeResource change, PatchSet ps)
specifier|public
name|RevisionResource
parameter_list|(
name|ChangeResource
name|change
parameter_list|,
name|PatchSet
name|ps
parameter_list|)
block|{
name|this
argument_list|(
name|change
argument_list|,
name|ps
argument_list|,
name|Optional
operator|.
name|empty
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|RevisionResource (ChangeResource change, PatchSet ps, Optional<ChangeEdit> edit)
specifier|public
name|RevisionResource
parameter_list|(
name|ChangeResource
name|change
parameter_list|,
name|PatchSet
name|ps
parameter_list|,
name|Optional
argument_list|<
name|ChangeEdit
argument_list|>
name|edit
parameter_list|)
block|{
name|this
argument_list|(
name|change
argument_list|,
name|ps
argument_list|,
name|edit
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|RevisionResource ( ChangeResource change, PatchSet ps, Optional<ChangeEdit> edit, boolean cacheable)
specifier|private
name|RevisionResource
parameter_list|(
name|ChangeResource
name|change
parameter_list|,
name|PatchSet
name|ps
parameter_list|,
name|Optional
argument_list|<
name|ChangeEdit
argument_list|>
name|edit
parameter_list|,
name|boolean
name|cacheable
parameter_list|)
block|{
name|this
operator|.
name|change
operator|=
name|change
expr_stmt|;
name|this
operator|.
name|ps
operator|=
name|ps
expr_stmt|;
name|this
operator|.
name|edit
operator|=
name|edit
expr_stmt|;
name|this
operator|.
name|cacheable
operator|=
name|cacheable
expr_stmt|;
block|}
DECL|method|isCacheable ()
specifier|public
name|boolean
name|isCacheable
parameter_list|()
block|{
return|return
name|cacheable
return|;
block|}
DECL|method|permissions ()
specifier|public
name|PermissionBackend
operator|.
name|ForChange
name|permissions
parameter_list|()
block|{
return|return
name|change
operator|.
name|permissions
argument_list|()
return|;
block|}
DECL|method|getChangeResource ()
specifier|public
name|ChangeResource
name|getChangeResource
parameter_list|()
block|{
return|return
name|change
return|;
block|}
DECL|method|getChange ()
specifier|public
name|Change
name|getChange
parameter_list|()
block|{
return|return
name|getChangeResource
argument_list|()
operator|.
name|getChange
argument_list|()
return|;
block|}
DECL|method|getProject ()
specifier|public
name|Project
operator|.
name|NameKey
name|getProject
parameter_list|()
block|{
return|return
name|getChange
argument_list|()
operator|.
name|getProject
argument_list|()
return|;
block|}
DECL|method|getNotes ()
specifier|public
name|ChangeNotes
name|getNotes
parameter_list|()
block|{
return|return
name|getChangeResource
argument_list|()
operator|.
name|getNotes
argument_list|()
return|;
block|}
DECL|method|getPatchSet ()
specifier|public
name|PatchSet
name|getPatchSet
parameter_list|()
block|{
return|return
name|ps
return|;
block|}
annotation|@
name|Override
DECL|method|getETag ()
specifier|public
name|String
name|getETag
parameter_list|()
block|{
try|try
init|(
name|TraceTimer
name|ignored
init|=
name|TraceContext
operator|.
name|newTimer
argument_list|(
literal|"Compute revision ETag"
argument_list|,
name|Metadata
operator|.
name|builder
argument_list|()
operator|.
name|changeId
argument_list|(
name|change
operator|.
name|getId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|patchSetId
argument_list|(
name|ps
operator|.
name|number
argument_list|()
argument_list|)
operator|.
name|projectName
argument_list|(
name|change
operator|.
name|getProject
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
init|)
block|{
name|Hasher
name|h
init|=
name|Hashing
operator|.
name|murmur3_128
argument_list|()
operator|.
name|newHasher
argument_list|()
decl_stmt|;
name|prepareETag
argument_list|(
name|h
argument_list|,
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|h
operator|.
name|hash
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
DECL|method|prepareETag (Hasher h, CurrentUser user)
specifier|public
name|void
name|prepareETag
parameter_list|(
name|Hasher
name|h
parameter_list|,
name|CurrentUser
name|user
parameter_list|)
block|{
comment|// Conservative estimate: refresh the revision if its parent change has changed, so we don't
comment|// have to check whether a given modification affected this revision specifically.
name|change
operator|.
name|prepareETag
argument_list|(
name|h
argument_list|,
name|user
argument_list|)
expr_stmt|;
block|}
DECL|method|getAccountId ()
specifier|public
name|Account
operator|.
name|Id
name|getAccountId
parameter_list|()
block|{
return|return
name|getUser
argument_list|()
operator|.
name|getAccountId
argument_list|()
return|;
block|}
DECL|method|getUser ()
specifier|public
name|CurrentUser
name|getUser
parameter_list|()
block|{
return|return
name|getChangeResource
argument_list|()
operator|.
name|getUser
argument_list|()
return|;
block|}
DECL|method|getEdit ()
specifier|public
name|Optional
argument_list|<
name|ChangeEdit
argument_list|>
name|getEdit
parameter_list|()
block|{
return|return
name|edit
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|String
name|s
init|=
name|ps
operator|.
name|id
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
if|if
condition|(
name|edit
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|s
operator|=
literal|"edit:"
operator|+
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
DECL|method|isCurrent ()
specifier|public
name|boolean
name|isCurrent
parameter_list|()
block|{
return|return
name|ps
operator|.
name|id
argument_list|()
operator|.
name|equals
argument_list|(
name|getChange
argument_list|()
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

