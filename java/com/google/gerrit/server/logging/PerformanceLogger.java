begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2019 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.logging
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|logging
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|annotations
operator|.
name|ExtensionPoint
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_comment
comment|/**  * Extension point for logging performance records.  *  *<p>This extension point is invoked for all operations for which the execution time is measured.  * The invocation of the extension point does not happen immediately, but only at the end of a  * request (REST call, SSH call, git push). Implementors can write the execution times into a  * performance log for further analysis.  *  *<p>For optimal performance implementors should overwrite the default<code>log</code> methods to  * avoid unneeded instantiation of Map objects.  */
end_comment

begin_interface
annotation|@
name|ExtensionPoint
DECL|interface|PerformanceLogger
specifier|public
interface|interface
name|PerformanceLogger
block|{
comment|/**    * Record the execution time of an operation in a performance log.    *    * @param operation operation that was performed    * @param durationMs time that the execution of the operation took (in milliseconds)    */
DECL|method|log (String operation, long durationMs)
specifier|default
name|void
name|log
parameter_list|(
name|String
name|operation
parameter_list|,
name|long
name|durationMs
parameter_list|)
block|{
name|log
argument_list|(
name|operation
argument_list|,
name|durationMs
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Record the execution time of an operation in a performance log.    *    * @param operation operation that was performed    * @param durationMs time that the execution of the operation took (in milliseconds)    * @param key meta data key    * @param value meta data value    */
DECL|method|log (String operation, long durationMs, String key, @Nullable Object value)
specifier|default
name|void
name|log
parameter_list|(
name|String
name|operation
parameter_list|,
name|long
name|durationMs
parameter_list|,
name|String
name|key
parameter_list|,
annotation|@
name|Nullable
name|Object
name|value
parameter_list|)
block|{
name|log
argument_list|(
name|operation
argument_list|,
name|durationMs
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|key
argument_list|,
name|Optional
operator|.
name|ofNullable
argument_list|(
name|value
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Record the execution time of an operation in a performance log.    *    * @param operation operation that was performed    * @param durationMs time that the execution of the operation took (in milliseconds)    * @param key1 first meta data key    * @param value1 first meta data value    * @param key2 second meta data key    * @param value2 second meta data value    */
DECL|method|log ( String operation, long durationMs, String key1, @Nullable Object value1, String key2, @Nullable Object value2)
specifier|default
name|void
name|log
parameter_list|(
name|String
name|operation
parameter_list|,
name|long
name|durationMs
parameter_list|,
name|String
name|key1
parameter_list|,
annotation|@
name|Nullable
name|Object
name|value1
parameter_list|,
name|String
name|key2
parameter_list|,
annotation|@
name|Nullable
name|Object
name|value2
parameter_list|)
block|{
name|log
argument_list|(
name|operation
argument_list|,
name|durationMs
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|key1
argument_list|,
name|Optional
operator|.
name|ofNullable
argument_list|(
name|value1
argument_list|)
argument_list|,
name|key2
argument_list|,
name|Optional
operator|.
name|ofNullable
argument_list|(
name|value2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Record the execution time of an operation in a performance log.    *    * @param operation operation that was performed    * @param durationMs time that the execution of the operation took (in milliseconds)    * @param key1 first meta data key    * @param value1 first meta data value    * @param key2 second meta data key    * @param value2 second meta data value    * @param key3 third meta data key    * @param value3 third meta data value    */
DECL|method|log ( String operation, long durationMs, String key1, @Nullable Object value1, String key2, @Nullable Object value2, String key3, @Nullable Object value3)
specifier|default
name|void
name|log
parameter_list|(
name|String
name|operation
parameter_list|,
name|long
name|durationMs
parameter_list|,
name|String
name|key1
parameter_list|,
annotation|@
name|Nullable
name|Object
name|value1
parameter_list|,
name|String
name|key2
parameter_list|,
annotation|@
name|Nullable
name|Object
name|value2
parameter_list|,
name|String
name|key3
parameter_list|,
annotation|@
name|Nullable
name|Object
name|value3
parameter_list|)
block|{
name|log
argument_list|(
name|operation
argument_list|,
name|durationMs
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|key1
argument_list|,
name|Optional
operator|.
name|ofNullable
argument_list|(
name|value1
argument_list|)
argument_list|,
name|key2
argument_list|,
name|Optional
operator|.
name|ofNullable
argument_list|(
name|value2
argument_list|)
argument_list|,
name|key3
argument_list|,
name|Optional
operator|.
name|ofNullable
argument_list|(
name|value3
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Record the execution time of an operation in a performance log.    *    * @param operation operation that was performed    * @param durationMs time that the execution of the operation took (in milliseconds)    * @param key1 first meta data key    * @param value1 first meta data value    * @param key2 second meta data key    * @param value2 second meta data value    * @param key3 third meta data key    * @param value3 third meta data value    * @param key4 fourth meta data key    * @param value4 fourth meta data value    */
DECL|method|log ( String operation, long durationMs, String key1, @Nullable Object value1, String key2, @Nullable Object value2, String key3, @Nullable Object value3, String key4, @Nullable Object value4)
specifier|default
name|void
name|log
parameter_list|(
name|String
name|operation
parameter_list|,
name|long
name|durationMs
parameter_list|,
name|String
name|key1
parameter_list|,
annotation|@
name|Nullable
name|Object
name|value1
parameter_list|,
name|String
name|key2
parameter_list|,
annotation|@
name|Nullable
name|Object
name|value2
parameter_list|,
name|String
name|key3
parameter_list|,
annotation|@
name|Nullable
name|Object
name|value3
parameter_list|,
name|String
name|key4
parameter_list|,
annotation|@
name|Nullable
name|Object
name|value4
parameter_list|)
block|{
name|log
argument_list|(
name|operation
argument_list|,
name|durationMs
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
name|key1
argument_list|,
name|Optional
operator|.
name|ofNullable
argument_list|(
name|value1
argument_list|)
argument_list|,
name|key2
argument_list|,
name|Optional
operator|.
name|ofNullable
argument_list|(
name|value2
argument_list|)
argument_list|,
name|key3
argument_list|,
name|Optional
operator|.
name|ofNullable
argument_list|(
name|value3
argument_list|)
argument_list|,
name|key4
argument_list|,
name|Optional
operator|.
name|ofNullable
argument_list|(
name|value4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Record the execution time of an operation in a performance log.    *    *<p>For small numbers of meta data entries the instantiation of a map should avoided by using    * one of the<code>log</code> methods that allows to pass in meta data entries directly.    *    * @param operation operation that was performed    * @param durationMs time that the execution of the operation took (in milliseconds)    * @param metaData key-value map with meta data    */
DECL|method|log (String operation, long durationMs, Map<String, Optional<Object>> metaData)
name|void
name|log
parameter_list|(
name|String
name|operation
parameter_list|,
name|long
name|durationMs
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Optional
argument_list|<
name|Object
argument_list|>
argument_list|>
name|metaData
parameter_list|)
function_decl|;
block|}
end_interface

end_unit

