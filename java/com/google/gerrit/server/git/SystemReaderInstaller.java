begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.git
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|flogger
operator|.
name|FluentLogger
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|LifecycleListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|SitePaths
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|storage
operator|.
name|file
operator|.
name|FileBasedConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|util
operator|.
name|FS
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|util
operator|.
name|SystemReader
import|;
end_import

begin_class
annotation|@
name|Singleton
DECL|class|SystemReaderInstaller
specifier|public
class|class
name|SystemReaderInstaller
implements|implements
name|LifecycleListener
block|{
DECL|field|logger
specifier|private
specifier|static
specifier|final
name|FluentLogger
name|logger
init|=
name|FluentLogger
operator|.
name|forEnclosingClass
argument_list|()
decl_stmt|;
DECL|field|site
specifier|private
specifier|final
name|SitePaths
name|site
decl_stmt|;
annotation|@
name|Inject
DECL|method|SystemReaderInstaller (SitePaths site)
name|SystemReaderInstaller
parameter_list|(
name|SitePaths
name|site
parameter_list|)
block|{
name|this
operator|.
name|site
operator|=
name|site
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|start ()
specifier|public
name|void
name|start
parameter_list|()
block|{
name|SystemReader
operator|.
name|setInstance
argument_list|(
name|customReader
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|atInfo
argument_list|()
operator|.
name|log
argument_list|(
literal|"Set JGit's SystemReader to read system config from %s"
argument_list|,
name|site
operator|.
name|jgit_config
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|stop ()
specifier|public
name|void
name|stop
parameter_list|()
block|{}
DECL|method|customReader ()
specifier|private
name|SystemReader
name|customReader
parameter_list|()
block|{
name|SystemReader
name|current
init|=
name|SystemReader
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|FileBasedConfig
name|jgitConfig
init|=
operator|new
name|FileBasedConfig
argument_list|(
name|site
operator|.
name|jgit_config
operator|.
name|toFile
argument_list|()
argument_list|,
name|FS
operator|.
name|DETECTED
argument_list|)
decl_stmt|;
return|return
operator|new
name|SystemReader
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|getHostname
parameter_list|()
block|{
return|return
name|current
operator|.
name|getHostname
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getenv
parameter_list|(
name|String
name|variable
parameter_list|)
block|{
return|return
name|current
operator|.
name|getenv
argument_list|(
name|variable
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getProperty
parameter_list|(
name|String
name|key
parameter_list|)
block|{
return|return
name|current
operator|.
name|getProperty
argument_list|(
name|key
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|FileBasedConfig
name|openUserConfig
parameter_list|(
name|Config
name|parent
parameter_list|,
name|FS
name|fs
parameter_list|)
block|{
return|return
name|current
operator|.
name|openSystemConfig
argument_list|(
name|parent
argument_list|,
name|fs
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|FileBasedConfig
name|openSystemConfig
parameter_list|(
name|Config
name|parent
parameter_list|,
name|FS
name|fs
parameter_list|)
block|{
return|return
name|jgitConfig
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getCurrentTime
parameter_list|()
block|{
return|return
name|current
operator|.
name|getCurrentTime
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getTimezone
parameter_list|(
name|long
name|when
parameter_list|)
block|{
return|return
name|current
operator|.
name|getTimezone
argument_list|(
name|when
argument_list|)
return|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

