begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.git
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|registration
operator|.
name|DynamicItem
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|UrlFormatter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_comment
comment|/** Print a change description for use in git command-line progress. */
end_comment

begin_class
DECL|class|DefaultChangeReportFormatter
specifier|public
class|class
name|DefaultChangeReportFormatter
implements|implements
name|ChangeReportFormatter
block|{
DECL|field|SUBJECT_MAX_LENGTH
specifier|private
specifier|static
specifier|final
name|int
name|SUBJECT_MAX_LENGTH
init|=
literal|80
decl_stmt|;
DECL|field|SUBJECT_CROP_APPENDIX
specifier|private
specifier|static
specifier|final
name|String
name|SUBJECT_CROP_APPENDIX
init|=
literal|"..."
decl_stmt|;
DECL|field|SUBJECT_CROP_RANGE
specifier|private
specifier|static
specifier|final
name|int
name|SUBJECT_CROP_RANGE
init|=
literal|10
decl_stmt|;
DECL|field|urlFormatter
specifier|protected
specifier|final
name|DynamicItem
argument_list|<
name|UrlFormatter
argument_list|>
name|urlFormatter
decl_stmt|;
annotation|@
name|Inject
DECL|method|DefaultChangeReportFormatter (DynamicItem<UrlFormatter> urlFormatter)
specifier|public
name|DefaultChangeReportFormatter
parameter_list|(
name|DynamicItem
argument_list|<
name|UrlFormatter
argument_list|>
name|urlFormatter
parameter_list|)
block|{
name|this
operator|.
name|urlFormatter
operator|=
name|urlFormatter
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|newChange (ChangeReportFormatter.Input input)
specifier|public
name|String
name|newChange
parameter_list|(
name|ChangeReportFormatter
operator|.
name|Input
name|input
parameter_list|)
block|{
return|return
name|formatChangeUrl
argument_list|(
name|input
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|changeUpdated (ChangeReportFormatter.Input input)
specifier|public
name|String
name|changeUpdated
parameter_list|(
name|ChangeReportFormatter
operator|.
name|Input
name|input
parameter_list|)
block|{
return|return
name|formatChangeUrl
argument_list|(
name|input
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|changeClosed (ChangeReportFormatter.Input input)
specifier|public
name|String
name|changeClosed
parameter_list|(
name|ChangeReportFormatter
operator|.
name|Input
name|input
parameter_list|)
block|{
name|Change
name|c
init|=
name|input
operator|.
name|change
argument_list|()
decl_stmt|;
return|return
name|String
operator|.
name|format
argument_list|(
literal|"change %s closed"
argument_list|,
name|urlFormatter
operator|.
name|get
argument_list|()
operator|.
name|getChangeViewUrl
argument_list|(
name|c
operator|.
name|getProject
argument_list|()
argument_list|,
name|c
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|orElse
argument_list|(
name|c
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
DECL|method|cropSubject (String subject)
specifier|protected
name|String
name|cropSubject
parameter_list|(
name|String
name|subject
parameter_list|)
block|{
if|if
condition|(
name|subject
operator|.
name|length
argument_list|()
operator|>
name|SUBJECT_MAX_LENGTH
condition|)
block|{
name|int
name|maxLength
init|=
name|SUBJECT_MAX_LENGTH
operator|-
name|SUBJECT_CROP_APPENDIX
operator|.
name|length
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|cropPosition
init|=
name|maxLength
init|;
name|cropPosition
operator|>
name|maxLength
operator|-
name|SUBJECT_CROP_RANGE
condition|;
name|cropPosition
operator|--
control|)
block|{
if|if
condition|(
name|Character
operator|.
name|isWhitespace
argument_list|(
name|subject
operator|.
name|charAt
argument_list|(
name|cropPosition
operator|-
literal|1
argument_list|)
argument_list|)
condition|)
block|{
return|return
name|subject
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|cropPosition
argument_list|)
operator|+
name|SUBJECT_CROP_APPENDIX
return|;
block|}
block|}
return|return
name|subject
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|maxLength
argument_list|)
operator|+
name|SUBJECT_CROP_APPENDIX
return|;
block|}
return|return
name|subject
return|;
block|}
DECL|method|formatChangeUrl (Input input)
specifier|protected
name|String
name|formatChangeUrl
parameter_list|(
name|Input
name|input
parameter_list|)
block|{
name|Change
name|c
init|=
name|input
operator|.
name|change
argument_list|()
decl_stmt|;
name|Optional
argument_list|<
name|String
argument_list|>
name|changeUrl
init|=
name|urlFormatter
operator|.
name|get
argument_list|()
operator|.
name|getChangeViewUrl
argument_list|(
name|c
operator|.
name|getProject
argument_list|()
argument_list|,
name|c
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|checkState
argument_list|(
name|changeUrl
operator|.
name|isPresent
argument_list|()
argument_list|)
expr_stmt|;
name|StringBuilder
name|m
init|=
operator|new
name|StringBuilder
argument_list|()
operator|.
name|append
argument_list|(
literal|"  "
argument_list|)
operator|.
name|append
argument_list|(
name|changeUrl
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
operator|.
name|append
argument_list|(
name|cropSubject
argument_list|(
name|input
operator|.
name|subject
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|input
operator|.
name|isEdit
argument_list|()
condition|)
block|{
name|m
operator|.
name|append
argument_list|(
literal|" [EDIT]"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|isPrivate
argument_list|()
condition|)
block|{
name|m
operator|.
name|append
argument_list|(
literal|" [PRIVATE]"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|isWorkInProgress
argument_list|()
condition|)
block|{
name|m
operator|.
name|append
argument_list|(
literal|" [WIP]"
argument_list|)
expr_stmt|;
block|}
return|return
name|m
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

