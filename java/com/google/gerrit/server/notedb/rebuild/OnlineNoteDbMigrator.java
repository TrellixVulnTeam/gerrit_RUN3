begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.notedb.rebuild
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|rebuild
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Stopwatch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|LifecycleListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|lifecycle
operator|.
name|LifecycleModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|GerritServerConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|index
operator|.
name|OnlineUpgrader
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|index
operator|.
name|VersionManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|name
operator|.
name|Named
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|name
operator|.
name|Names
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
annotation|@
name|Singleton
DECL|class|OnlineNoteDbMigrator
specifier|public
class|class
name|OnlineNoteDbMigrator
implements|implements
name|LifecycleListener
block|{
DECL|field|log
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|OnlineNoteDbMigrator
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|TRIAL
specifier|private
specifier|static
specifier|final
name|String
name|TRIAL
init|=
literal|"OnlineNoteDbMigrator/trial"
decl_stmt|;
DECL|class|Module
specifier|public
specifier|static
class|class
name|Module
extends|extends
name|LifecycleModule
block|{
DECL|field|trial
specifier|private
specifier|final
name|boolean
name|trial
decl_stmt|;
DECL|method|Module (boolean trial)
specifier|public
name|Module
parameter_list|(
name|boolean
name|trial
parameter_list|)
block|{
name|this
operator|.
name|trial
operator|=
name|trial
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|configure ()
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|listener
argument_list|()
operator|.
name|to
argument_list|(
name|OnlineNoteDbMigrator
operator|.
name|class
argument_list|)
expr_stmt|;
name|bindConstant
argument_list|()
operator|.
name|annotatedWith
argument_list|(
name|Names
operator|.
name|named
argument_list|(
name|TRIAL
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
name|trial
argument_list|)
expr_stmt|;
block|}
block|}
DECL|field|migratorBuilderProvider
specifier|private
name|Provider
argument_list|<
name|NoteDbMigrator
operator|.
name|Builder
argument_list|>
name|migratorBuilderProvider
decl_stmt|;
DECL|field|indexUpgrader
specifier|private
specifier|final
name|OnlineUpgrader
name|indexUpgrader
decl_stmt|;
DECL|field|upgradeIndex
specifier|private
specifier|final
name|boolean
name|upgradeIndex
decl_stmt|;
DECL|field|trial
specifier|private
specifier|final
name|boolean
name|trial
decl_stmt|;
annotation|@
name|Inject
DECL|method|OnlineNoteDbMigrator ( @erritServerConfig Config cfg, Provider<NoteDbMigrator.Builder> migratorBuilderProvider, OnlineUpgrader indexUpgrader, @Named(TRIAL) boolean trial)
name|OnlineNoteDbMigrator
parameter_list|(
annotation|@
name|GerritServerConfig
name|Config
name|cfg
parameter_list|,
name|Provider
argument_list|<
name|NoteDbMigrator
operator|.
name|Builder
argument_list|>
name|migratorBuilderProvider
parameter_list|,
name|OnlineUpgrader
name|indexUpgrader
parameter_list|,
annotation|@
name|Named
argument_list|(
name|TRIAL
argument_list|)
name|boolean
name|trial
parameter_list|)
block|{
name|this
operator|.
name|migratorBuilderProvider
operator|=
name|migratorBuilderProvider
expr_stmt|;
name|this
operator|.
name|indexUpgrader
operator|=
name|indexUpgrader
expr_stmt|;
name|this
operator|.
name|upgradeIndex
operator|=
name|VersionManager
operator|.
name|getOnlineUpgrade
argument_list|(
name|cfg
argument_list|)
expr_stmt|;
name|this
operator|.
name|trial
operator|=
name|trial
operator|||
name|NoteDbMigrator
operator|.
name|getTrialMode
argument_list|(
name|cfg
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|start ()
specifier|public
name|void
name|start
parameter_list|()
block|{
name|Thread
name|t
init|=
operator|new
name|Thread
argument_list|(
name|this
operator|::
name|migrate
argument_list|)
decl_stmt|;
name|t
operator|.
name|setDaemon
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|t
operator|.
name|setName
argument_list|(
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
name|t
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
DECL|method|migrate ()
specifier|private
name|void
name|migrate
parameter_list|()
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Starting online NoteDb migration"
argument_list|)
expr_stmt|;
if|if
condition|(
name|upgradeIndex
condition|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Online index schema upgrades will be deferred until NoteDb migration is complete"
argument_list|)
expr_stmt|;
block|}
name|Stopwatch
name|sw
init|=
name|Stopwatch
operator|.
name|createStarted
argument_list|()
decl_stmt|;
comment|// TODO(dborowitz): Tune threads, maybe expose a progress monitor somewhere.
try|try
init|(
name|NoteDbMigrator
name|migrator
init|=
name|migratorBuilderProvider
operator|.
name|get
argument_list|()
operator|.
name|setAutoMigrate
argument_list|(
literal|true
argument_list|)
operator|.
name|setTrialMode
argument_list|(
name|trial
argument_list|)
operator|.
name|build
argument_list|()
init|)
block|{
name|migrator
operator|.
name|migrate
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Error in online NoteDb migration"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
name|log
operator|.
name|info
argument_list|(
literal|"Online NoteDb migration completed in {}s"
argument_list|,
name|sw
operator|.
name|elapsed
argument_list|(
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|upgradeIndex
condition|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Starting deferred index schema upgrades"
argument_list|)
expr_stmt|;
name|indexUpgrader
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|stop ()
specifier|public
name|void
name|stop
parameter_list|()
block|{
comment|// Do nothing; upgrade process uses daemon threads and knows how to recover from failures on
comment|// next attempt.
block|}
block|}
end_class

end_unit

