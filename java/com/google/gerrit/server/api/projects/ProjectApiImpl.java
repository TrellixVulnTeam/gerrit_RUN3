begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.api.projects
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|api
operator|.
name|projects
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|api
operator|.
name|ApiUtil
operator|.
name|asRestApiException
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|DashboardsCollection
operator|.
name|DEFAULT_DASHBOARD_NAME
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
operator|.
name|toList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|access
operator|.
name|ProjectAccessInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|access
operator|.
name|ProjectAccessInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|config
operator|.
name|AccessCheckInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|config
operator|.
name|AccessCheckInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|BranchApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|BranchInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|CheckProjectInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|CheckProjectResultInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|ChildProjectApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|CommitApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|ConfigInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|ConfigInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|DashboardApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|DashboardInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|DeleteBranchesInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|DeleteTagsInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|DescriptionInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|HeadInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|IndexProjectInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|ParentInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|ProjectApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|ProjectInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|TagApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|TagInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ChangeInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ProjectInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|BadRequestException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|IdString
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|NotImplementedException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|ResourceConflictException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|ResourceNotFoundException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestApiException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|TopLevelResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|permissions
operator|.
name|GlobalPermission
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|permissions
operator|.
name|PermissionBackend
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ProjectJson
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ProjectResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|Check
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|CheckAccess
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|ChildProjectsCollection
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|CommitsCollection
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|CreateAccessChange
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|CreateProject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|DeleteBranches
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|DeleteTags
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|GetAccess
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|GetConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|GetDescription
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|GetHead
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|GetParent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|ListBranches
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|ListDashboards
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|ListTags
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|ProjectsCollection
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|PutConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|PutDescription
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|SetAccess
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|SetHead
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|project
operator|.
name|SetParent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|assistedinject
operator|.
name|Assisted
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|assistedinject
operator|.
name|AssistedInject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
DECL|class|ProjectApiImpl
specifier|public
class|class
name|ProjectApiImpl
implements|implements
name|ProjectApi
block|{
DECL|interface|Factory
interface|interface
name|Factory
block|{
DECL|method|create (ProjectResource project)
name|ProjectApiImpl
name|create
parameter_list|(
name|ProjectResource
name|project
parameter_list|)
function_decl|;
DECL|method|create (String name)
name|ProjectApiImpl
name|create
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
block|}
DECL|field|permissionBackend
specifier|private
specifier|final
name|PermissionBackend
name|permissionBackend
decl_stmt|;
DECL|field|createProject
specifier|private
specifier|final
name|CreateProject
name|createProject
decl_stmt|;
DECL|field|projectApi
specifier|private
specifier|final
name|ProjectApiImpl
operator|.
name|Factory
name|projectApi
decl_stmt|;
DECL|field|projects
specifier|private
specifier|final
name|ProjectsCollection
name|projects
decl_stmt|;
DECL|field|getDescription
specifier|private
specifier|final
name|GetDescription
name|getDescription
decl_stmt|;
DECL|field|putDescription
specifier|private
specifier|final
name|PutDescription
name|putDescription
decl_stmt|;
DECL|field|childApi
specifier|private
specifier|final
name|ChildProjectApiImpl
operator|.
name|Factory
name|childApi
decl_stmt|;
DECL|field|children
specifier|private
specifier|final
name|ChildProjectsCollection
name|children
decl_stmt|;
DECL|field|project
specifier|private
specifier|final
name|ProjectResource
name|project
decl_stmt|;
DECL|field|projectJson
specifier|private
specifier|final
name|ProjectJson
name|projectJson
decl_stmt|;
DECL|field|name
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
DECL|field|branchApi
specifier|private
specifier|final
name|BranchApiImpl
operator|.
name|Factory
name|branchApi
decl_stmt|;
DECL|field|tagApi
specifier|private
specifier|final
name|TagApiImpl
operator|.
name|Factory
name|tagApi
decl_stmt|;
DECL|field|getAccess
specifier|private
specifier|final
name|GetAccess
name|getAccess
decl_stmt|;
DECL|field|setAccess
specifier|private
specifier|final
name|SetAccess
name|setAccess
decl_stmt|;
DECL|field|createAccessChange
specifier|private
specifier|final
name|CreateAccessChange
name|createAccessChange
decl_stmt|;
DECL|field|getConfig
specifier|private
specifier|final
name|GetConfig
name|getConfig
decl_stmt|;
DECL|field|putConfig
specifier|private
specifier|final
name|PutConfig
name|putConfig
decl_stmt|;
DECL|field|listBranches
specifier|private
specifier|final
name|Provider
argument_list|<
name|ListBranches
argument_list|>
name|listBranches
decl_stmt|;
DECL|field|listTags
specifier|private
specifier|final
name|Provider
argument_list|<
name|ListTags
argument_list|>
name|listTags
decl_stmt|;
DECL|field|deleteBranches
specifier|private
specifier|final
name|DeleteBranches
name|deleteBranches
decl_stmt|;
DECL|field|deleteTags
specifier|private
specifier|final
name|DeleteTags
name|deleteTags
decl_stmt|;
DECL|field|commitsCollection
specifier|private
specifier|final
name|CommitsCollection
name|commitsCollection
decl_stmt|;
DECL|field|commitApi
specifier|private
specifier|final
name|CommitApiImpl
operator|.
name|Factory
name|commitApi
decl_stmt|;
DECL|field|dashboardApi
specifier|private
specifier|final
name|DashboardApiImpl
operator|.
name|Factory
name|dashboardApi
decl_stmt|;
DECL|field|checkAccess
specifier|private
specifier|final
name|CheckAccess
name|checkAccess
decl_stmt|;
DECL|field|check
specifier|private
specifier|final
name|Check
name|check
decl_stmt|;
DECL|field|listDashboards
specifier|private
specifier|final
name|Provider
argument_list|<
name|ListDashboards
argument_list|>
name|listDashboards
decl_stmt|;
DECL|field|getHead
specifier|private
specifier|final
name|GetHead
name|getHead
decl_stmt|;
DECL|field|setHead
specifier|private
specifier|final
name|SetHead
name|setHead
decl_stmt|;
DECL|field|getParent
specifier|private
specifier|final
name|GetParent
name|getParent
decl_stmt|;
DECL|field|setParent
specifier|private
specifier|final
name|SetParent
name|setParent
decl_stmt|;
DECL|field|index
specifier|private
specifier|final
name|Index
name|index
decl_stmt|;
annotation|@
name|AssistedInject
DECL|method|ProjectApiImpl ( PermissionBackend permissionBackend, CreateProject createProject, ProjectApiImpl.Factory projectApi, ProjectsCollection projects, GetDescription getDescription, PutDescription putDescription, ChildProjectApiImpl.Factory childApi, ChildProjectsCollection children, ProjectJson projectJson, BranchApiImpl.Factory branchApiFactory, TagApiImpl.Factory tagApiFactory, GetAccess getAccess, SetAccess setAccess, CreateAccessChange createAccessChange, GetConfig getConfig, PutConfig putConfig, Provider<ListBranches> listBranches, Provider<ListTags> listTags, DeleteBranches deleteBranches, DeleteTags deleteTags, CommitsCollection commitsCollection, CommitApiImpl.Factory commitApi, DashboardApiImpl.Factory dashboardApi, CheckAccess checkAccess, Check check, Provider<ListDashboards> listDashboards, GetHead getHead, SetHead setHead, GetParent getParent, SetParent setParent, Index index, @Assisted ProjectResource project)
name|ProjectApiImpl
parameter_list|(
name|PermissionBackend
name|permissionBackend
parameter_list|,
name|CreateProject
name|createProject
parameter_list|,
name|ProjectApiImpl
operator|.
name|Factory
name|projectApi
parameter_list|,
name|ProjectsCollection
name|projects
parameter_list|,
name|GetDescription
name|getDescription
parameter_list|,
name|PutDescription
name|putDescription
parameter_list|,
name|ChildProjectApiImpl
operator|.
name|Factory
name|childApi
parameter_list|,
name|ChildProjectsCollection
name|children
parameter_list|,
name|ProjectJson
name|projectJson
parameter_list|,
name|BranchApiImpl
operator|.
name|Factory
name|branchApiFactory
parameter_list|,
name|TagApiImpl
operator|.
name|Factory
name|tagApiFactory
parameter_list|,
name|GetAccess
name|getAccess
parameter_list|,
name|SetAccess
name|setAccess
parameter_list|,
name|CreateAccessChange
name|createAccessChange
parameter_list|,
name|GetConfig
name|getConfig
parameter_list|,
name|PutConfig
name|putConfig
parameter_list|,
name|Provider
argument_list|<
name|ListBranches
argument_list|>
name|listBranches
parameter_list|,
name|Provider
argument_list|<
name|ListTags
argument_list|>
name|listTags
parameter_list|,
name|DeleteBranches
name|deleteBranches
parameter_list|,
name|DeleteTags
name|deleteTags
parameter_list|,
name|CommitsCollection
name|commitsCollection
parameter_list|,
name|CommitApiImpl
operator|.
name|Factory
name|commitApi
parameter_list|,
name|DashboardApiImpl
operator|.
name|Factory
name|dashboardApi
parameter_list|,
name|CheckAccess
name|checkAccess
parameter_list|,
name|Check
name|check
parameter_list|,
name|Provider
argument_list|<
name|ListDashboards
argument_list|>
name|listDashboards
parameter_list|,
name|GetHead
name|getHead
parameter_list|,
name|SetHead
name|setHead
parameter_list|,
name|GetParent
name|getParent
parameter_list|,
name|SetParent
name|setParent
parameter_list|,
name|Index
name|index
parameter_list|,
annotation|@
name|Assisted
name|ProjectResource
name|project
parameter_list|)
block|{
name|this
argument_list|(
name|permissionBackend
argument_list|,
name|createProject
argument_list|,
name|projectApi
argument_list|,
name|projects
argument_list|,
name|getDescription
argument_list|,
name|putDescription
argument_list|,
name|childApi
argument_list|,
name|children
argument_list|,
name|projectJson
argument_list|,
name|branchApiFactory
argument_list|,
name|tagApiFactory
argument_list|,
name|getAccess
argument_list|,
name|setAccess
argument_list|,
name|createAccessChange
argument_list|,
name|getConfig
argument_list|,
name|putConfig
argument_list|,
name|listBranches
argument_list|,
name|listTags
argument_list|,
name|deleteBranches
argument_list|,
name|deleteTags
argument_list|,
name|project
argument_list|,
name|commitsCollection
argument_list|,
name|commitApi
argument_list|,
name|dashboardApi
argument_list|,
name|checkAccess
argument_list|,
name|check
argument_list|,
name|listDashboards
argument_list|,
name|getHead
argument_list|,
name|setHead
argument_list|,
name|getParent
argument_list|,
name|setParent
argument_list|,
name|index
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AssistedInject
DECL|method|ProjectApiImpl ( PermissionBackend permissionBackend, CreateProject createProject, ProjectApiImpl.Factory projectApi, ProjectsCollection projects, GetDescription getDescription, PutDescription putDescription, ChildProjectApiImpl.Factory childApi, ChildProjectsCollection children, ProjectJson projectJson, BranchApiImpl.Factory branchApiFactory, TagApiImpl.Factory tagApiFactory, GetAccess getAccess, SetAccess setAccess, CreateAccessChange createAccessChange, GetConfig getConfig, PutConfig putConfig, Provider<ListBranches> listBranches, Provider<ListTags> listTags, DeleteBranches deleteBranches, DeleteTags deleteTags, CommitsCollection commitsCollection, CommitApiImpl.Factory commitApi, DashboardApiImpl.Factory dashboardApi, CheckAccess checkAccess, Check check, Provider<ListDashboards> listDashboards, GetHead getHead, SetHead setHead, GetParent getParent, SetParent setParent, Index index, @Assisted String name)
name|ProjectApiImpl
parameter_list|(
name|PermissionBackend
name|permissionBackend
parameter_list|,
name|CreateProject
name|createProject
parameter_list|,
name|ProjectApiImpl
operator|.
name|Factory
name|projectApi
parameter_list|,
name|ProjectsCollection
name|projects
parameter_list|,
name|GetDescription
name|getDescription
parameter_list|,
name|PutDescription
name|putDescription
parameter_list|,
name|ChildProjectApiImpl
operator|.
name|Factory
name|childApi
parameter_list|,
name|ChildProjectsCollection
name|children
parameter_list|,
name|ProjectJson
name|projectJson
parameter_list|,
name|BranchApiImpl
operator|.
name|Factory
name|branchApiFactory
parameter_list|,
name|TagApiImpl
operator|.
name|Factory
name|tagApiFactory
parameter_list|,
name|GetAccess
name|getAccess
parameter_list|,
name|SetAccess
name|setAccess
parameter_list|,
name|CreateAccessChange
name|createAccessChange
parameter_list|,
name|GetConfig
name|getConfig
parameter_list|,
name|PutConfig
name|putConfig
parameter_list|,
name|Provider
argument_list|<
name|ListBranches
argument_list|>
name|listBranches
parameter_list|,
name|Provider
argument_list|<
name|ListTags
argument_list|>
name|listTags
parameter_list|,
name|DeleteBranches
name|deleteBranches
parameter_list|,
name|DeleteTags
name|deleteTags
parameter_list|,
name|CommitsCollection
name|commitsCollection
parameter_list|,
name|CommitApiImpl
operator|.
name|Factory
name|commitApi
parameter_list|,
name|DashboardApiImpl
operator|.
name|Factory
name|dashboardApi
parameter_list|,
name|CheckAccess
name|checkAccess
parameter_list|,
name|Check
name|check
parameter_list|,
name|Provider
argument_list|<
name|ListDashboards
argument_list|>
name|listDashboards
parameter_list|,
name|GetHead
name|getHead
parameter_list|,
name|SetHead
name|setHead
parameter_list|,
name|GetParent
name|getParent
parameter_list|,
name|SetParent
name|setParent
parameter_list|,
name|Index
name|index
parameter_list|,
annotation|@
name|Assisted
name|String
name|name
parameter_list|)
block|{
name|this
argument_list|(
name|permissionBackend
argument_list|,
name|createProject
argument_list|,
name|projectApi
argument_list|,
name|projects
argument_list|,
name|getDescription
argument_list|,
name|putDescription
argument_list|,
name|childApi
argument_list|,
name|children
argument_list|,
name|projectJson
argument_list|,
name|branchApiFactory
argument_list|,
name|tagApiFactory
argument_list|,
name|getAccess
argument_list|,
name|setAccess
argument_list|,
name|createAccessChange
argument_list|,
name|getConfig
argument_list|,
name|putConfig
argument_list|,
name|listBranches
argument_list|,
name|listTags
argument_list|,
name|deleteBranches
argument_list|,
name|deleteTags
argument_list|,
literal|null
argument_list|,
name|commitsCollection
argument_list|,
name|commitApi
argument_list|,
name|dashboardApi
argument_list|,
name|checkAccess
argument_list|,
name|check
argument_list|,
name|listDashboards
argument_list|,
name|getHead
argument_list|,
name|setHead
argument_list|,
name|getParent
argument_list|,
name|setParent
argument_list|,
name|index
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
DECL|method|ProjectApiImpl ( PermissionBackend permissionBackend, CreateProject createProject, ProjectApiImpl.Factory projectApi, ProjectsCollection projects, GetDescription getDescription, PutDescription putDescription, ChildProjectApiImpl.Factory childApi, ChildProjectsCollection children, ProjectJson projectJson, BranchApiImpl.Factory branchApiFactory, TagApiImpl.Factory tagApiFactory, GetAccess getAccess, SetAccess setAccess, CreateAccessChange createAccessChange, GetConfig getConfig, PutConfig putConfig, Provider<ListBranches> listBranches, Provider<ListTags> listTags, DeleteBranches deleteBranches, DeleteTags deleteTags, ProjectResource project, CommitsCollection commitsCollection, CommitApiImpl.Factory commitApi, DashboardApiImpl.Factory dashboardApi, CheckAccess checkAccess, Check check, Provider<ListDashboards> listDashboards, GetHead getHead, SetHead setHead, GetParent getParent, SetParent setParent, Index index, String name)
specifier|private
name|ProjectApiImpl
parameter_list|(
name|PermissionBackend
name|permissionBackend
parameter_list|,
name|CreateProject
name|createProject
parameter_list|,
name|ProjectApiImpl
operator|.
name|Factory
name|projectApi
parameter_list|,
name|ProjectsCollection
name|projects
parameter_list|,
name|GetDescription
name|getDescription
parameter_list|,
name|PutDescription
name|putDescription
parameter_list|,
name|ChildProjectApiImpl
operator|.
name|Factory
name|childApi
parameter_list|,
name|ChildProjectsCollection
name|children
parameter_list|,
name|ProjectJson
name|projectJson
parameter_list|,
name|BranchApiImpl
operator|.
name|Factory
name|branchApiFactory
parameter_list|,
name|TagApiImpl
operator|.
name|Factory
name|tagApiFactory
parameter_list|,
name|GetAccess
name|getAccess
parameter_list|,
name|SetAccess
name|setAccess
parameter_list|,
name|CreateAccessChange
name|createAccessChange
parameter_list|,
name|GetConfig
name|getConfig
parameter_list|,
name|PutConfig
name|putConfig
parameter_list|,
name|Provider
argument_list|<
name|ListBranches
argument_list|>
name|listBranches
parameter_list|,
name|Provider
argument_list|<
name|ListTags
argument_list|>
name|listTags
parameter_list|,
name|DeleteBranches
name|deleteBranches
parameter_list|,
name|DeleteTags
name|deleteTags
parameter_list|,
name|ProjectResource
name|project
parameter_list|,
name|CommitsCollection
name|commitsCollection
parameter_list|,
name|CommitApiImpl
operator|.
name|Factory
name|commitApi
parameter_list|,
name|DashboardApiImpl
operator|.
name|Factory
name|dashboardApi
parameter_list|,
name|CheckAccess
name|checkAccess
parameter_list|,
name|Check
name|check
parameter_list|,
name|Provider
argument_list|<
name|ListDashboards
argument_list|>
name|listDashboards
parameter_list|,
name|GetHead
name|getHead
parameter_list|,
name|SetHead
name|setHead
parameter_list|,
name|GetParent
name|getParent
parameter_list|,
name|SetParent
name|setParent
parameter_list|,
name|Index
name|index
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|permissionBackend
operator|=
name|permissionBackend
expr_stmt|;
name|this
operator|.
name|createProject
operator|=
name|createProject
expr_stmt|;
name|this
operator|.
name|projectApi
operator|=
name|projectApi
expr_stmt|;
name|this
operator|.
name|projects
operator|=
name|projects
expr_stmt|;
name|this
operator|.
name|getDescription
operator|=
name|getDescription
expr_stmt|;
name|this
operator|.
name|putDescription
operator|=
name|putDescription
expr_stmt|;
name|this
operator|.
name|childApi
operator|=
name|childApi
expr_stmt|;
name|this
operator|.
name|children
operator|=
name|children
expr_stmt|;
name|this
operator|.
name|projectJson
operator|=
name|projectJson
expr_stmt|;
name|this
operator|.
name|project
operator|=
name|project
expr_stmt|;
name|this
operator|.
name|branchApi
operator|=
name|branchApiFactory
expr_stmt|;
name|this
operator|.
name|tagApi
operator|=
name|tagApiFactory
expr_stmt|;
name|this
operator|.
name|getAccess
operator|=
name|getAccess
expr_stmt|;
name|this
operator|.
name|setAccess
operator|=
name|setAccess
expr_stmt|;
name|this
operator|.
name|getConfig
operator|=
name|getConfig
expr_stmt|;
name|this
operator|.
name|putConfig
operator|=
name|putConfig
expr_stmt|;
name|this
operator|.
name|listBranches
operator|=
name|listBranches
expr_stmt|;
name|this
operator|.
name|listTags
operator|=
name|listTags
expr_stmt|;
name|this
operator|.
name|deleteBranches
operator|=
name|deleteBranches
expr_stmt|;
name|this
operator|.
name|deleteTags
operator|=
name|deleteTags
expr_stmt|;
name|this
operator|.
name|commitsCollection
operator|=
name|commitsCollection
expr_stmt|;
name|this
operator|.
name|commitApi
operator|=
name|commitApi
expr_stmt|;
name|this
operator|.
name|createAccessChange
operator|=
name|createAccessChange
expr_stmt|;
name|this
operator|.
name|dashboardApi
operator|=
name|dashboardApi
expr_stmt|;
name|this
operator|.
name|checkAccess
operator|=
name|checkAccess
expr_stmt|;
name|this
operator|.
name|check
operator|=
name|check
expr_stmt|;
name|this
operator|.
name|listDashboards
operator|=
name|listDashboards
expr_stmt|;
name|this
operator|.
name|getHead
operator|=
name|getHead
expr_stmt|;
name|this
operator|.
name|setHead
operator|=
name|setHead
expr_stmt|;
name|this
operator|.
name|getParent
operator|=
name|getParent
expr_stmt|;
name|this
operator|.
name|setParent
operator|=
name|setParent
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|index
operator|=
name|index
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|create ()
specifier|public
name|ProjectApi
name|create
parameter_list|()
throws|throws
name|RestApiException
block|{
return|return
name|create
argument_list|(
operator|new
name|ProjectInput
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|create (ProjectInput in)
specifier|public
name|ProjectApi
name|create
parameter_list|(
name|ProjectInput
name|in
parameter_list|)
throws|throws
name|RestApiException
block|{
try|try
block|{
if|if
condition|(
name|name
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|ResourceConflictException
argument_list|(
literal|"Project already exists"
argument_list|)
throw|;
block|}
if|if
condition|(
name|in
operator|.
name|name
operator|!=
literal|null
operator|&&
operator|!
name|name
operator|.
name|equals
argument_list|(
name|in
operator|.
name|name
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|BadRequestException
argument_list|(
literal|"name must match input.name"
argument_list|)
throw|;
block|}
name|permissionBackend
operator|.
name|currentUser
argument_list|()
operator|.
name|checkAny
argument_list|(
name|GlobalPermission
operator|.
name|fromAnnotation
argument_list|(
name|createProject
operator|.
name|getClass
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|createProject
operator|.
name|apply
argument_list|(
name|TopLevelResource
operator|.
name|INSTANCE
argument_list|,
name|IdString
operator|.
name|fromDecoded
argument_list|(
name|name
argument_list|)
argument_list|,
name|in
argument_list|)
expr_stmt|;
return|return
name|projectApi
operator|.
name|create
argument_list|(
name|projects
operator|.
name|parse
argument_list|(
name|name
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot create project: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|get ()
specifier|public
name|ProjectInfo
name|get
parameter_list|()
throws|throws
name|RestApiException
block|{
if|if
condition|(
name|project
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|ResourceNotFoundException
argument_list|(
name|name
argument_list|)
throw|;
block|}
return|return
name|projectJson
operator|.
name|format
argument_list|(
name|project
operator|.
name|getProjectState
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|description ()
specifier|public
name|String
name|description
parameter_list|()
throws|throws
name|RestApiException
block|{
return|return
name|getDescription
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|access ()
specifier|public
name|ProjectAccessInfo
name|access
parameter_list|()
throws|throws
name|RestApiException
block|{
try|try
block|{
return|return
name|getAccess
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot get access rights"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|access (ProjectAccessInput p)
specifier|public
name|ProjectAccessInfo
name|access
parameter_list|(
name|ProjectAccessInput
name|p
parameter_list|)
throws|throws
name|RestApiException
block|{
try|try
block|{
return|return
name|setAccess
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|,
name|p
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot put access rights"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|accessChange (ProjectAccessInput p)
specifier|public
name|ChangeInfo
name|accessChange
parameter_list|(
name|ProjectAccessInput
name|p
parameter_list|)
throws|throws
name|RestApiException
block|{
try|try
block|{
return|return
name|createAccessChange
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|,
name|p
argument_list|)
operator|.
name|value
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot put access right change"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|checkAccess (AccessCheckInput in)
specifier|public
name|AccessCheckInfo
name|checkAccess
parameter_list|(
name|AccessCheckInput
name|in
parameter_list|)
throws|throws
name|RestApiException
block|{
try|try
block|{
return|return
name|checkAccess
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|,
name|in
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot check access rights"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|check (CheckProjectInput in)
specifier|public
name|CheckProjectResultInfo
name|check
parameter_list|(
name|CheckProjectInput
name|in
parameter_list|)
throws|throws
name|RestApiException
block|{
try|try
block|{
return|return
name|check
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|,
name|in
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot check project"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|description (DescriptionInput in)
specifier|public
name|void
name|description
parameter_list|(
name|DescriptionInput
name|in
parameter_list|)
throws|throws
name|RestApiException
block|{
try|try
block|{
name|putDescription
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot put project description"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|config ()
specifier|public
name|ConfigInfo
name|config
parameter_list|()
throws|throws
name|RestApiException
block|{
return|return
name|getConfig
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|config (ConfigInput in)
specifier|public
name|ConfigInfo
name|config
parameter_list|(
name|ConfigInput
name|in
parameter_list|)
throws|throws
name|RestApiException
block|{
try|try
block|{
return|return
name|putConfig
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|,
name|in
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot list tags"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|branches ()
specifier|public
name|ListRefsRequest
argument_list|<
name|BranchInfo
argument_list|>
name|branches
parameter_list|()
block|{
return|return
operator|new
name|ListRefsRequest
argument_list|<
name|BranchInfo
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|BranchInfo
argument_list|>
name|get
parameter_list|()
throws|throws
name|RestApiException
block|{
try|try
block|{
return|return
name|listBranches
operator|.
name|get
argument_list|()
operator|.
name|request
argument_list|(
name|this
argument_list|)
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot list branches"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
return|;
block|}
annotation|@
name|Override
DECL|method|tags ()
specifier|public
name|ListRefsRequest
argument_list|<
name|TagInfo
argument_list|>
name|tags
parameter_list|()
block|{
return|return
operator|new
name|ListRefsRequest
argument_list|<
name|TagInfo
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|TagInfo
argument_list|>
name|get
parameter_list|()
throws|throws
name|RestApiException
block|{
try|try
block|{
return|return
name|listTags
operator|.
name|get
argument_list|()
operator|.
name|request
argument_list|(
name|this
argument_list|)
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot list tags"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
return|;
block|}
annotation|@
name|Override
DECL|method|children ()
specifier|public
name|List
argument_list|<
name|ProjectInfo
argument_list|>
name|children
parameter_list|()
throws|throws
name|RestApiException
block|{
return|return
name|children
argument_list|(
literal|false
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|children (boolean recursive)
specifier|public
name|List
argument_list|<
name|ProjectInfo
argument_list|>
name|children
parameter_list|(
name|boolean
name|recursive
parameter_list|)
throws|throws
name|RestApiException
block|{
try|try
block|{
return|return
name|children
operator|.
name|list
argument_list|()
operator|.
name|withRecursive
argument_list|(
name|recursive
argument_list|)
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot list children"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|children (int limit)
specifier|public
name|List
argument_list|<
name|ProjectInfo
argument_list|>
name|children
parameter_list|(
name|int
name|limit
parameter_list|)
throws|throws
name|RestApiException
block|{
try|try
block|{
return|return
name|children
operator|.
name|list
argument_list|()
operator|.
name|withLimit
argument_list|(
name|limit
argument_list|)
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot list children"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|child (String name)
specifier|public
name|ChildProjectApi
name|child
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|RestApiException
block|{
try|try
block|{
return|return
name|childApi
operator|.
name|create
argument_list|(
name|children
operator|.
name|parse
argument_list|(
name|checkExists
argument_list|()
argument_list|,
name|IdString
operator|.
name|fromDecoded
argument_list|(
name|name
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot parse child project"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|branch (String ref)
specifier|public
name|BranchApi
name|branch
parameter_list|(
name|String
name|ref
parameter_list|)
throws|throws
name|ResourceNotFoundException
block|{
return|return
name|branchApi
operator|.
name|create
argument_list|(
name|checkExists
argument_list|()
argument_list|,
name|ref
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|tag (String ref)
specifier|public
name|TagApi
name|tag
parameter_list|(
name|String
name|ref
parameter_list|)
throws|throws
name|ResourceNotFoundException
block|{
return|return
name|tagApi
operator|.
name|create
argument_list|(
name|checkExists
argument_list|()
argument_list|,
name|ref
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|deleteBranches (DeleteBranchesInput in)
specifier|public
name|void
name|deleteBranches
parameter_list|(
name|DeleteBranchesInput
name|in
parameter_list|)
throws|throws
name|RestApiException
block|{
try|try
block|{
name|deleteBranches
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot delete branches"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|deleteTags (DeleteTagsInput in)
specifier|public
name|void
name|deleteTags
parameter_list|(
name|DeleteTagsInput
name|in
parameter_list|)
throws|throws
name|RestApiException
block|{
try|try
block|{
name|deleteTags
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|,
name|in
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot delete tags"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|commit (String commit)
specifier|public
name|CommitApi
name|commit
parameter_list|(
name|String
name|commit
parameter_list|)
throws|throws
name|RestApiException
block|{
try|try
block|{
return|return
name|commitApi
operator|.
name|create
argument_list|(
name|commitsCollection
operator|.
name|parse
argument_list|(
name|checkExists
argument_list|()
argument_list|,
name|IdString
operator|.
name|fromDecoded
argument_list|(
name|commit
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot parse commit"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|dashboard (String name)
specifier|public
name|DashboardApi
name|dashboard
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|RestApiException
block|{
try|try
block|{
return|return
name|dashboardApi
operator|.
name|create
argument_list|(
name|checkExists
argument_list|()
argument_list|,
name|name
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot parse dashboard"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|defaultDashboard ()
specifier|public
name|DashboardApi
name|defaultDashboard
parameter_list|()
throws|throws
name|RestApiException
block|{
return|return
name|dashboard
argument_list|(
name|DEFAULT_DASHBOARD_NAME
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|defaultDashboard (String name)
specifier|public
name|void
name|defaultDashboard
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|RestApiException
block|{
try|try
block|{
name|dashboardApi
operator|.
name|create
argument_list|(
name|checkExists
argument_list|()
argument_list|,
name|name
argument_list|)
operator|.
name|setDefault
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot set default dashboard"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|removeDefaultDashboard ()
specifier|public
name|void
name|removeDefaultDashboard
parameter_list|()
throws|throws
name|RestApiException
block|{
try|try
block|{
name|dashboardApi
operator|.
name|create
argument_list|(
name|checkExists
argument_list|()
argument_list|,
literal|null
argument_list|)
operator|.
name|setDefault
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot remove default dashboard"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|dashboards ()
specifier|public
name|ListDashboardsRequest
name|dashboards
parameter_list|()
throws|throws
name|RestApiException
block|{
return|return
operator|new
name|ListDashboardsRequest
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|DashboardInfo
argument_list|>
name|get
parameter_list|()
throws|throws
name|RestApiException
block|{
try|try
block|{
name|List
argument_list|<
name|?
argument_list|>
name|r
init|=
name|listDashboards
operator|.
name|get
argument_list|()
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|r
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
if|if
condition|(
name|r
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|instanceof
name|DashboardInfo
condition|)
block|{
return|return
name|r
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|i
lambda|->
operator|(
name|DashboardInfo
operator|)
name|i
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
return|;
block|}
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"list with inheritance"
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot list dashboards"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
return|;
block|}
annotation|@
name|Override
DECL|method|head ()
specifier|public
name|String
name|head
parameter_list|()
throws|throws
name|RestApiException
block|{
try|try
block|{
return|return
name|getHead
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot get HEAD"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|head (String head)
specifier|public
name|void
name|head
parameter_list|(
name|String
name|head
parameter_list|)
throws|throws
name|RestApiException
block|{
name|HeadInput
name|input
init|=
operator|new
name|HeadInput
argument_list|()
decl_stmt|;
name|input
operator|.
name|ref
operator|=
name|head
expr_stmt|;
try|try
block|{
name|setHead
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|,
name|input
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot set HEAD"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|parent ()
specifier|public
name|String
name|parent
parameter_list|()
throws|throws
name|RestApiException
block|{
try|try
block|{
return|return
name|getParent
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot get parent"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|parent (String parent)
specifier|public
name|void
name|parent
parameter_list|(
name|String
name|parent
parameter_list|)
throws|throws
name|RestApiException
block|{
try|try
block|{
name|ParentInput
name|input
init|=
operator|new
name|ParentInput
argument_list|()
decl_stmt|;
name|input
operator|.
name|parent
operator|=
name|parent
expr_stmt|;
name|setParent
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|,
name|input
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot set parent"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|index (boolean indexChildren)
specifier|public
name|void
name|index
parameter_list|(
name|boolean
name|indexChildren
parameter_list|)
throws|throws
name|RestApiException
block|{
try|try
block|{
name|IndexProjectInput
name|input
init|=
operator|new
name|IndexProjectInput
argument_list|()
decl_stmt|;
name|input
operator|.
name|indexChildren
operator|=
name|indexChildren
expr_stmt|;
name|index
operator|.
name|apply
argument_list|(
name|checkExists
argument_list|()
argument_list|,
name|input
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|asRestApiException
argument_list|(
literal|"Cannot index project"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|checkExists ()
specifier|private
name|ProjectResource
name|checkExists
parameter_list|()
throws|throws
name|ResourceNotFoundException
block|{
if|if
condition|(
name|project
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|ResourceNotFoundException
argument_list|(
name|name
argument_list|)
throw|;
block|}
return|return
name|project
return|;
block|}
block|}
end_class

end_unit

