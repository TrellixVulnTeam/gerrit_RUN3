begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.elasticsearch
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|elasticsearch
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|MoreObjects
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|GerritServerConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Config
import|;
end_import

begin_class
annotation|@
name|Singleton
DECL|class|ElasticConfiguration
class|class
name|ElasticConfiguration
block|{
DECL|field|DEFAULT_HOST
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_HOST
init|=
literal|"localhost"
decl_stmt|;
DECL|field|DEFAULT_PORT
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_PORT
init|=
literal|"9200"
decl_stmt|;
DECL|field|DEFAULT_PROTOCOL
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_PROTOCOL
init|=
literal|"http"
decl_stmt|;
DECL|field|urls
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|urls
decl_stmt|;
DECL|field|username
specifier|final
name|String
name|username
decl_stmt|;
DECL|field|password
specifier|final
name|String
name|password
decl_stmt|;
DECL|field|requestCompression
specifier|final
name|boolean
name|requestCompression
decl_stmt|;
DECL|field|connectionTimeout
specifier|final
name|long
name|connectionTimeout
decl_stmt|;
DECL|field|maxConnectionIdleTime
specifier|final
name|long
name|maxConnectionIdleTime
decl_stmt|;
DECL|field|maxConnectionIdleUnit
specifier|final
name|TimeUnit
name|maxConnectionIdleUnit
init|=
name|TimeUnit
operator|.
name|MILLISECONDS
decl_stmt|;
DECL|field|maxTotalConnection
specifier|final
name|int
name|maxTotalConnection
decl_stmt|;
DECL|field|readTimeout
specifier|final
name|int
name|readTimeout
decl_stmt|;
annotation|@
name|Inject
DECL|method|ElasticConfiguration (@erritServerConfig Config cfg)
name|ElasticConfiguration
parameter_list|(
annotation|@
name|GerritServerConfig
name|Config
name|cfg
parameter_list|)
block|{
name|this
operator|.
name|username
operator|=
name|cfg
operator|.
name|getString
argument_list|(
literal|"elasticsearch"
argument_list|,
literal|null
argument_list|,
literal|"username"
argument_list|)
expr_stmt|;
name|this
operator|.
name|password
operator|=
name|cfg
operator|.
name|getString
argument_list|(
literal|"elasticsearch"
argument_list|,
literal|null
argument_list|,
literal|"password"
argument_list|)
expr_stmt|;
name|this
operator|.
name|requestCompression
operator|=
name|cfg
operator|.
name|getBoolean
argument_list|(
literal|"elasticsearch"
argument_list|,
literal|null
argument_list|,
literal|"requestCompression"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|this
operator|.
name|connectionTimeout
operator|=
name|cfg
operator|.
name|getTimeUnit
argument_list|(
literal|"elasticsearch"
argument_list|,
literal|null
argument_list|,
literal|"connectionTimeout"
argument_list|,
literal|3000
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|this
operator|.
name|maxConnectionIdleTime
operator|=
name|cfg
operator|.
name|getTimeUnit
argument_list|(
literal|"elasticsearch"
argument_list|,
literal|null
argument_list|,
literal|"maxConnectionIdleTime"
argument_list|,
literal|3000
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|this
operator|.
name|maxTotalConnection
operator|=
name|cfg
operator|.
name|getInt
argument_list|(
literal|"elasticsearch"
argument_list|,
literal|null
argument_list|,
literal|"maxTotalConnection"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|this
operator|.
name|readTimeout
operator|=
operator|(
name|int
operator|)
name|cfg
operator|.
name|getTimeUnit
argument_list|(
literal|"elasticsearch"
argument_list|,
literal|null
argument_list|,
literal|"readTimeout"
argument_list|,
literal|3000
argument_list|,
name|TimeUnit
operator|.
name|MICROSECONDS
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|subsections
init|=
name|cfg
operator|.
name|getSubsections
argument_list|(
literal|"elasticsearch"
argument_list|)
decl_stmt|;
if|if
condition|(
name|subsections
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|this
operator|.
name|urls
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
name|buildUrl
argument_list|(
name|DEFAULT_PROTOCOL
argument_list|,
name|DEFAULT_HOST
argument_list|,
name|DEFAULT_PORT
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|urls
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|subsections
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|subsection
range|:
name|subsections
control|)
block|{
name|String
name|port
init|=
name|getString
argument_list|(
name|cfg
argument_list|,
name|subsection
argument_list|,
literal|"port"
argument_list|,
name|DEFAULT_PORT
argument_list|)
decl_stmt|;
name|String
name|host
init|=
name|getString
argument_list|(
name|cfg
argument_list|,
name|subsection
argument_list|,
literal|"hostname"
argument_list|,
name|DEFAULT_HOST
argument_list|)
decl_stmt|;
name|String
name|protocol
init|=
name|getString
argument_list|(
name|cfg
argument_list|,
name|subsection
argument_list|,
literal|"protocol"
argument_list|,
name|DEFAULT_PROTOCOL
argument_list|)
decl_stmt|;
name|this
operator|.
name|urls
operator|.
name|add
argument_list|(
name|buildUrl
argument_list|(
name|protocol
argument_list|,
name|host
argument_list|,
name|port
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|getString (Config cfg, String subsection, String name, String defaultValue)
specifier|private
name|String
name|getString
parameter_list|(
name|Config
name|cfg
parameter_list|,
name|String
name|subsection
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|defaultValue
parameter_list|)
block|{
return|return
name|MoreObjects
operator|.
name|firstNonNull
argument_list|(
name|cfg
operator|.
name|getString
argument_list|(
literal|"elasticsearch"
argument_list|,
name|subsection
argument_list|,
name|name
argument_list|)
argument_list|,
name|defaultValue
argument_list|)
return|;
block|}
DECL|method|buildUrl (String protocol, String hostname, String port)
specifier|private
name|String
name|buildUrl
parameter_list|(
name|String
name|protocol
parameter_list|,
name|String
name|hostname
parameter_list|,
name|String
name|port
parameter_list|)
block|{
try|try
block|{
return|return
operator|new
name|URL
argument_list|(
name|protocol
argument_list|,
name|hostname
argument_list|,
name|Integer
operator|.
name|parseInt
argument_list|(
name|port
argument_list|)
argument_list|,
literal|""
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|MalformedURLException
decl||
name|NumberFormatException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Cannot build url to Elasticsearch from values: protocol="
operator|+
name|protocol
operator|+
literal|" hostname="
operator|+
name|hostname
operator|+
literal|" port="
operator|+
name|port
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

