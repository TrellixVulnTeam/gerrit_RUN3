begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2012 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.httpd.plugins
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|httpd
operator|.
name|plugins
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|flogger
operator|.
name|FluentLogger
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|plugins
operator|.
name|Plugin
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationHandler
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Proxy
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|RequestDispatcher
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|Servlet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_class
DECL|class|PluginServletContext
class|class
name|PluginServletContext
block|{
DECL|field|logger
specifier|private
specifier|static
specifier|final
name|FluentLogger
name|logger
init|=
name|FluentLogger
operator|.
name|forEnclosingClass
argument_list|()
decl_stmt|;
DECL|method|create (Plugin plugin, String contextPath)
specifier|static
name|ServletContext
name|create
parameter_list|(
name|Plugin
name|plugin
parameter_list|,
name|String
name|contextPath
parameter_list|)
block|{
return|return
operator|(
name|ServletContext
operator|)
name|Proxy
operator|.
name|newProxyInstance
argument_list|(
name|PluginServletContext
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
argument_list|,
operator|new
name|Class
argument_list|<
name|?
argument_list|>
index|[]
block|{
name|ServletContext
operator|.
name|class
operator|,
name|API
operator|.
name|class
block|}
operator|,
operator|new
name|Handler
argument_list|(
name|plugin
argument_list|,
name|contextPath
argument_list|)
block|)
function|;
block|}
end_class

begin_constructor
DECL|method|PluginServletContext ()
specifier|private
name|PluginServletContext
parameter_list|()
block|{}
end_constructor

begin_class
DECL|class|Handler
specifier|private
specifier|static
class|class
name|Handler
implements|implements
name|InvocationHandler
implements|,
name|API
block|{
DECL|field|plugin
specifier|private
specifier|final
name|Plugin
name|plugin
decl_stmt|;
DECL|field|contextPath
specifier|private
specifier|final
name|String
name|contextPath
decl_stmt|;
DECL|field|attributes
specifier|private
specifier|final
name|ConcurrentMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|attributes
decl_stmt|;
DECL|method|Handler (Plugin plugin, String contextPath)
name|Handler
parameter_list|(
name|Plugin
name|plugin
parameter_list|,
name|String
name|contextPath
parameter_list|)
block|{
name|this
operator|.
name|plugin
operator|=
name|plugin
expr_stmt|;
name|this
operator|.
name|contextPath
operator|=
name|contextPath
expr_stmt|;
name|this
operator|.
name|attributes
operator|=
name|Maps
operator|.
name|newConcurrentMap
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|invoke (Object proxy, Method method, Object[] args)
specifier|public
name|Object
name|invoke
parameter_list|(
name|Object
name|proxy
parameter_list|,
name|Method
name|method
parameter_list|,
name|Object
index|[]
name|args
parameter_list|)
throws|throws
name|Throwable
block|{
name|Method
name|handler
decl_stmt|;
try|try
block|{
name|handler
operator|=
name|API
operator|.
name|class
operator|.
name|getDeclaredMethod
argument_list|(
name|method
operator|.
name|getName
argument_list|()
argument_list|,
name|method
operator|.
name|getParameterTypes
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchMethodException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|NoSuchMethodError
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"%s does not implement %s"
argument_list|,
name|PluginServletContext
operator|.
name|class
argument_list|,
name|method
operator|.
name|toGenericString
argument_list|()
argument_list|)
argument_list|)
throw|;
block|}
return|return
name|handler
operator|.
name|invoke
argument_list|(
name|this
argument_list|,
name|args
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getContextPath ()
specifier|public
name|String
name|getContextPath
parameter_list|()
block|{
return|return
name|contextPath
return|;
block|}
annotation|@
name|Override
DECL|method|getInitParameter (String name)
specifier|public
name|String
name|getInitParameter
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|Override
DECL|method|getInitParameterNames ()
specifier|public
name|Enumeration
name|getInitParameterNames
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|enumeration
argument_list|(
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getContext (String name)
specifier|public
name|ServletContext
name|getContext
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getNamedDispatcher (String name)
specifier|public
name|RequestDispatcher
name|getNamedDispatcher
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getRequestDispatcher (String name)
specifier|public
name|RequestDispatcher
name|getRequestDispatcher
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getResource (String name)
specifier|public
name|URL
name|getResource
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getResourceAsStream (String name)
specifier|public
name|InputStream
name|getResourceAsStream
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|Override
DECL|method|getResourcePaths (String name)
specifier|public
name|Set
name|getResourcePaths
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getServlet (String name)
specifier|public
name|Servlet
name|getServlet
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getRealPath (String name)
specifier|public
name|String
name|getRealPath
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getServletContextName ()
specifier|public
name|String
name|getServletContextName
parameter_list|()
block|{
return|return
name|plugin
operator|.
name|getName
argument_list|()
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|Override
DECL|method|getServletNames ()
specifier|public
name|Enumeration
name|getServletNames
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|enumeration
argument_list|(
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|Override
DECL|method|getServlets ()
specifier|public
name|Enumeration
name|getServlets
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|enumeration
argument_list|(
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|log (Exception reason, String msg)
specifier|public
name|void
name|log
parameter_list|(
name|Exception
name|reason
parameter_list|,
name|String
name|msg
parameter_list|)
block|{
name|log
argument_list|(
name|msg
argument_list|,
name|reason
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|log (String msg)
specifier|public
name|void
name|log
parameter_list|(
name|String
name|msg
parameter_list|)
block|{
name|log
argument_list|(
name|msg
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|log (String msg, Throwable reason)
specifier|public
name|void
name|log
parameter_list|(
name|String
name|msg
parameter_list|,
name|Throwable
name|reason
parameter_list|)
block|{
name|logger
operator|.
name|atWarning
argument_list|()
operator|.
name|withCause
argument_list|(
name|reason
argument_list|)
operator|.
name|log
argument_list|(
literal|"[plugin %s] %s"
argument_list|,
name|plugin
operator|.
name|getName
argument_list|()
argument_list|,
name|msg
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getAttribute (String name)
specifier|public
name|Object
name|getAttribute
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|attributes
operator|.
name|get
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getAttributeNames ()
specifier|public
name|Enumeration
argument_list|<
name|String
argument_list|>
name|getAttributeNames
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|enumeration
argument_list|(
name|attributes
operator|.
name|keySet
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setAttribute (String name, Object value)
specifier|public
name|void
name|setAttribute
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|attributes
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|removeAttribute (String name)
specifier|public
name|void
name|removeAttribute
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|attributes
operator|.
name|remove
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getMimeType (String file)
specifier|public
name|String
name|getMimeType
parameter_list|(
name|String
name|file
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|getMajorVersion ()
specifier|public
name|int
name|getMajorVersion
parameter_list|()
block|{
return|return
literal|2
return|;
block|}
annotation|@
name|Override
DECL|method|getMinorVersion ()
specifier|public
name|int
name|getMinorVersion
parameter_list|()
block|{
return|return
literal|5
return|;
block|}
annotation|@
name|Override
DECL|method|getServerInfo ()
specifier|public
name|String
name|getServerInfo
parameter_list|()
block|{
name|String
name|v
init|=
name|Version
operator|.
name|getVersion
argument_list|()
decl_stmt|;
return|return
literal|"Gerrit Code Review/"
operator|+
operator|(
name|v
operator|!=
literal|null
condition|?
name|v
else|:
literal|"dev"
operator|)
return|;
block|}
block|}
end_class

begin_interface
DECL|interface|API
interface|interface
name|API
block|{
DECL|method|getContextPath ()
name|String
name|getContextPath
parameter_list|()
function_decl|;
DECL|method|getInitParameter (String name)
name|String
name|getInitParameter
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
DECL|method|getInitParameterNames ()
name|Enumeration
name|getInitParameterNames
parameter_list|()
function_decl|;
DECL|method|getContext (String name)
name|ServletContext
name|getContext
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
DECL|method|getNamedDispatcher (String name)
name|RequestDispatcher
name|getNamedDispatcher
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
DECL|method|getRequestDispatcher (String name)
name|RequestDispatcher
name|getRequestDispatcher
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
DECL|method|getResource (String name)
name|URL
name|getResource
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
DECL|method|getResourceAsStream (String name)
name|InputStream
name|getResourceAsStream
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
DECL|method|getResourcePaths (String name)
name|Set
name|getResourcePaths
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
DECL|method|getServlet (String name)
name|Servlet
name|getServlet
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
DECL|method|getRealPath (String name)
name|String
name|getRealPath
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
DECL|method|getServletContextName ()
name|String
name|getServletContextName
parameter_list|()
function_decl|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
DECL|method|getServletNames ()
name|Enumeration
name|getServletNames
parameter_list|()
function_decl|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
DECL|method|getServlets ()
name|Enumeration
name|getServlets
parameter_list|()
function_decl|;
DECL|method|log (Exception reason, String msg)
name|void
name|log
parameter_list|(
name|Exception
name|reason
parameter_list|,
name|String
name|msg
parameter_list|)
function_decl|;
DECL|method|log (String msg)
name|void
name|log
parameter_list|(
name|String
name|msg
parameter_list|)
function_decl|;
DECL|method|log (String msg, Throwable reason)
name|void
name|log
parameter_list|(
name|String
name|msg
parameter_list|,
name|Throwable
name|reason
parameter_list|)
function_decl|;
DECL|method|getAttribute (String name)
name|Object
name|getAttribute
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
DECL|method|getAttributeNames ()
name|Enumeration
argument_list|<
name|String
argument_list|>
name|getAttributeNames
parameter_list|()
function_decl|;
DECL|method|setAttribute (String name, Object value)
name|void
name|setAttribute
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
name|value
parameter_list|)
function_decl|;
DECL|method|removeAttribute (String name)
name|void
name|removeAttribute
parameter_list|(
name|String
name|name
parameter_list|)
function_decl|;
DECL|method|getMimeType (String file)
name|String
name|getMimeType
parameter_list|(
name|String
name|file
parameter_list|)
function_decl|;
DECL|method|getMajorVersion ()
name|int
name|getMajorVersion
parameter_list|()
function_decl|;
DECL|method|getMinorVersion ()
name|int
name|getMinorVersion
parameter_list|()
function_decl|;
DECL|method|getServerInfo ()
name|String
name|getServerInfo
parameter_list|()
function_decl|;
block|}
end_interface

unit|}
end_unit

