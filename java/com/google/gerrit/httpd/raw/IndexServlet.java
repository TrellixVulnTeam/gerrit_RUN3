begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.httpd.raw
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|httpd
operator|.
name|raw
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|template
operator|.
name|soy
operator|.
name|data
operator|.
name|ordainers
operator|.
name|GsonOrdainer
operator|.
name|serializeObject
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
operator|.
name|UTF_8
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
operator|.
name|SC_OK
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|flogger
operator|.
name|FluentLogger
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|Resources
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|GerritApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|accounts
operator|.
name|AccountApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|config
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|AuthException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestApiException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|json
operator|.
name|OutputFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|Gson
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|template
operator|.
name|soy
operator|.
name|SoyFileSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|template
operator|.
name|soy
operator|.
name|data
operator|.
name|SanitizedContent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|template
operator|.
name|soy
operator|.
name|data
operator|.
name|SoyMapData
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|template
operator|.
name|soy
operator|.
name|data
operator|.
name|UnsafeSanitizedContentOrdainer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|template
operator|.
name|soy
operator|.
name|tofu
operator|.
name|SoyTofu
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServlet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_class
DECL|class|IndexServlet
specifier|public
class|class
name|IndexServlet
extends|extends
name|HttpServlet
block|{
DECL|field|logger
specifier|private
specifier|static
specifier|final
name|FluentLogger
name|logger
init|=
name|FluentLogger
operator|.
name|forEnclosingClass
argument_list|()
decl_stmt|;
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
DECL|field|canonicalUrl
annotation|@
name|Nullable
specifier|private
specifier|final
name|String
name|canonicalUrl
decl_stmt|;
DECL|field|cdnPath
annotation|@
name|Nullable
specifier|private
specifier|final
name|String
name|cdnPath
decl_stmt|;
DECL|field|faviconPath
annotation|@
name|Nullable
specifier|private
specifier|final
name|String
name|faviconPath
decl_stmt|;
DECL|field|gerritApi
specifier|private
specifier|final
name|GerritApi
name|gerritApi
decl_stmt|;
DECL|field|soyTofu
specifier|private
specifier|final
name|SoyTofu
name|soyTofu
decl_stmt|;
DECL|method|IndexServlet ( @ullable String canonicalUrl, @Nullable String cdnPath, @Nullable String faviconPath, GerritApi gerritApi)
name|IndexServlet
parameter_list|(
annotation|@
name|Nullable
name|String
name|canonicalUrl
parameter_list|,
annotation|@
name|Nullable
name|String
name|cdnPath
parameter_list|,
annotation|@
name|Nullable
name|String
name|faviconPath
parameter_list|,
name|GerritApi
name|gerritApi
parameter_list|)
block|{
name|this
operator|.
name|canonicalUrl
operator|=
name|canonicalUrl
expr_stmt|;
name|this
operator|.
name|cdnPath
operator|=
name|cdnPath
expr_stmt|;
name|this
operator|.
name|faviconPath
operator|=
name|faviconPath
expr_stmt|;
name|this
operator|.
name|gerritApi
operator|=
name|gerritApi
expr_stmt|;
name|this
operator|.
name|soyTofu
operator|=
name|SoyFileSet
operator|.
name|builder
argument_list|()
operator|.
name|add
argument_list|(
name|Resources
operator|.
name|getResource
argument_list|(
literal|"com/google/gerrit/httpd/raw/PolyGerritIndexHtml.soy"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|compileToTofu
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doGet (HttpServletRequest req, HttpServletResponse rsp)
specifier|protected
name|void
name|doGet
parameter_list|(
name|HttpServletRequest
name|req
parameter_list|,
name|HttpServletResponse
name|rsp
parameter_list|)
throws|throws
name|IOException
block|{
name|SoyTofu
operator|.
name|Renderer
name|renderer
decl_stmt|;
try|try
block|{
name|SoyMapData
name|templateData
init|=
name|getStaticTemplateData
argument_list|(
name|canonicalUrl
argument_list|,
name|cdnPath
argument_list|,
name|faviconPath
argument_list|)
decl_stmt|;
name|templateData
operator|.
name|put
argument_list|(
literal|"gerritInitialData"
argument_list|,
name|getInitialData
argument_list|()
argument_list|)
expr_stmt|;
name|renderer
operator|=
name|soyTofu
operator|.
name|newRenderer
argument_list|(
literal|"com.google.gerrit.httpd.raw.Index"
argument_list|)
operator|.
name|setContentKind
argument_list|(
name|SanitizedContent
operator|.
name|ContentKind
operator|.
name|HTML
argument_list|)
operator|.
name|setData
argument_list|(
name|templateData
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
decl||
name|RestApiException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
name|rsp
operator|.
name|setCharacterEncoding
argument_list|(
name|UTF_8
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|rsp
operator|.
name|setContentType
argument_list|(
literal|"text/html"
argument_list|)
expr_stmt|;
name|rsp
operator|.
name|setStatus
argument_list|(
name|SC_OK
argument_list|)
expr_stmt|;
try|try
init|(
name|OutputStream
name|w
init|=
name|rsp
operator|.
name|getOutputStream
argument_list|()
init|)
block|{
name|w
operator|.
name|write
argument_list|(
name|renderer
operator|.
name|render
argument_list|()
operator|.
name|getBytes
argument_list|(
name|UTF_8
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|computeCanonicalPath (@ullable String canonicalURL)
specifier|static
name|String
name|computeCanonicalPath
parameter_list|(
annotation|@
name|Nullable
name|String
name|canonicalURL
parameter_list|)
throws|throws
name|URISyntaxException
block|{
if|if
condition|(
name|Strings
operator|.
name|isNullOrEmpty
argument_list|(
name|canonicalURL
argument_list|)
condition|)
block|{
return|return
literal|""
return|;
block|}
comment|// If we serving from a sub-directory rather than root, determine the path
comment|// from the cannonical web URL.
name|URI
name|uri
init|=
operator|new
name|URI
argument_list|(
name|canonicalURL
argument_list|)
decl_stmt|;
return|return
name|uri
operator|.
name|getPath
argument_list|()
operator|.
name|replaceAll
argument_list|(
literal|"/$"
argument_list|,
literal|""
argument_list|)
return|;
block|}
DECL|method|getStaticTemplateData (String canonicalURL, String cdnPath, String faviconPath)
specifier|static
name|SoyMapData
name|getStaticTemplateData
parameter_list|(
name|String
name|canonicalURL
parameter_list|,
name|String
name|cdnPath
parameter_list|,
name|String
name|faviconPath
parameter_list|)
throws|throws
name|URISyntaxException
block|{
name|String
name|canonicalPath
init|=
name|computeCanonicalPath
argument_list|(
name|canonicalURL
argument_list|)
decl_stmt|;
name|String
name|staticPath
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|cdnPath
operator|!=
literal|null
condition|)
block|{
name|staticPath
operator|=
name|cdnPath
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|canonicalPath
operator|!=
literal|null
condition|)
block|{
name|staticPath
operator|=
name|canonicalPath
expr_stmt|;
block|}
comment|// The resource path must be typed as safe for use in a script src.
comment|// TODO(wyatta): Upgrade this to use an appropriate safe URL type.
name|SanitizedContent
name|sanitizedStaticPath
init|=
name|UnsafeSanitizedContentOrdainer
operator|.
name|ordainAsSafe
argument_list|(
name|staticPath
argument_list|,
name|SanitizedContent
operator|.
name|ContentKind
operator|.
name|TRUSTED_RESOURCE_URI
argument_list|)
decl_stmt|;
return|return
operator|new
name|SoyMapData
argument_list|(
literal|"canonicalPath"
argument_list|,
name|canonicalPath
argument_list|,
literal|"staticResourcePath"
argument_list|,
name|sanitizedStaticPath
argument_list|,
literal|"faviconPath"
argument_list|,
name|faviconPath
argument_list|)
return|;
block|}
DECL|method|getInitialData ()
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|SanitizedContent
argument_list|>
name|getInitialData
parameter_list|()
throws|throws
name|RestApiException
block|{
name|Gson
name|gson
init|=
name|OutputFormat
operator|.
name|JSON_COMPACT
operator|.
name|newGson
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|SanitizedContent
argument_list|>
name|initialData
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Server
name|serverApi
init|=
name|gerritApi
operator|.
name|config
argument_list|()
operator|.
name|server
argument_list|()
decl_stmt|;
name|initialData
operator|.
name|put
argument_list|(
literal|"\"/config/server/info\""
argument_list|,
name|serializeObject
argument_list|(
name|gson
argument_list|,
name|serverApi
operator|.
name|getInfo
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|initialData
operator|.
name|put
argument_list|(
literal|"\"/config/server/version\""
argument_list|,
name|serializeObject
argument_list|(
name|gson
argument_list|,
name|serverApi
operator|.
name|getVersion
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|initialData
operator|.
name|put
argument_list|(
literal|"\"/config/server/top-menus\""
argument_list|,
name|serializeObject
argument_list|(
name|gson
argument_list|,
name|serverApi
operator|.
name|topMenus
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|AccountApi
name|accountApi
init|=
name|gerritApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
decl_stmt|;
name|initialData
operator|.
name|put
argument_list|(
literal|"\"/accounts/self/detail\""
argument_list|,
name|serializeObject
argument_list|(
name|gson
argument_list|,
name|accountApi
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|initialData
operator|.
name|put
argument_list|(
literal|"\"/accounts/self/preferences\""
argument_list|,
name|serializeObject
argument_list|(
name|gson
argument_list|,
name|accountApi
operator|.
name|getPreferences
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|initialData
operator|.
name|put
argument_list|(
literal|"\"/accounts/self/preferences.diff\""
argument_list|,
name|serializeObject
argument_list|(
name|gson
argument_list|,
name|accountApi
operator|.
name|getDiffPreferences
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|initialData
operator|.
name|put
argument_list|(
literal|"\"/accounts/self/preferences.edit\""
argument_list|,
name|serializeObject
argument_list|(
name|gson
argument_list|,
name|accountApi
operator|.
name|getEditPreferences
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AuthException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|atFine
argument_list|()
operator|.
name|withCause
argument_list|(
name|e
argument_list|)
operator|.
name|log
argument_list|(
literal|"Can't inline account-related data because user is unauthenticated"
argument_list|)
expr_stmt|;
comment|// Don't render data
comment|// TODO(hiesel): Tell the client that the user is not authenticated so that it doesn't have to
comment|// fetch anyway. This requires more client side modifications.
block|}
return|return
name|initialData
return|;
block|}
block|}
end_class

end_unit

