begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2016 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.sshd
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|sshd
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|IdentifiedUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|IdentifiedUser
operator|.
name|GenericFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|GerritServerConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sshd
operator|.
name|server
operator|.
name|auth
operator|.
name|gss
operator|.
name|GSSAuthenticator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sshd
operator|.
name|server
operator|.
name|session
operator|.
name|ServerSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Config
import|;
end_import

begin_comment
comment|/** Authenticates users with kerberos (gssapi-with-mic). */
end_comment

begin_class
annotation|@
name|Singleton
DECL|class|GerritGSSAuthenticator
class|class
name|GerritGSSAuthenticator
extends|extends
name|GSSAuthenticator
block|{
DECL|field|accounts
specifier|private
specifier|final
name|AccountCache
name|accounts
decl_stmt|;
DECL|field|sshScope
specifier|private
specifier|final
name|SshScope
name|sshScope
decl_stmt|;
DECL|field|sshLog
specifier|private
specifier|final
name|SshLog
name|sshLog
decl_stmt|;
DECL|field|userFactory
specifier|private
specifier|final
name|GenericFactory
name|userFactory
decl_stmt|;
DECL|field|config
specifier|private
specifier|final
name|Config
name|config
decl_stmt|;
annotation|@
name|Inject
DECL|method|GerritGSSAuthenticator ( AccountCache accounts, SshScope sshScope, SshLog sshLog, IdentifiedUser.GenericFactory userFactory, @GerritServerConfig Config config)
name|GerritGSSAuthenticator
parameter_list|(
name|AccountCache
name|accounts
parameter_list|,
name|SshScope
name|sshScope
parameter_list|,
name|SshLog
name|sshLog
parameter_list|,
name|IdentifiedUser
operator|.
name|GenericFactory
name|userFactory
parameter_list|,
annotation|@
name|GerritServerConfig
name|Config
name|config
parameter_list|)
block|{
name|this
operator|.
name|accounts
operator|=
name|accounts
expr_stmt|;
name|this
operator|.
name|sshScope
operator|=
name|sshScope
expr_stmt|;
name|this
operator|.
name|sshLog
operator|=
name|sshLog
expr_stmt|;
name|this
operator|.
name|userFactory
operator|=
name|userFactory
expr_stmt|;
name|this
operator|.
name|config
operator|=
name|config
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|validateIdentity (ServerSession session, String identity)
specifier|public
name|boolean
name|validateIdentity
parameter_list|(
name|ServerSession
name|session
parameter_list|,
name|String
name|identity
parameter_list|)
block|{
name|SshSession
name|sd
init|=
name|session
operator|.
name|getAttribute
argument_list|(
name|SshSession
operator|.
name|KEY
argument_list|)
decl_stmt|;
name|int
name|at
init|=
name|identity
operator|.
name|indexOf
argument_list|(
literal|'@'
argument_list|)
decl_stmt|;
name|String
name|username
decl_stmt|;
if|if
condition|(
name|at
operator|==
operator|-
literal|1
condition|)
block|{
name|username
operator|=
name|identity
expr_stmt|;
block|}
else|else
block|{
name|username
operator|=
name|identity
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|at
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|config
operator|.
name|getBoolean
argument_list|(
literal|"auth"
argument_list|,
literal|"userNameToLowerCase"
argument_list|,
literal|false
argument_list|)
condition|)
block|{
name|username
operator|=
name|username
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|US
argument_list|)
expr_stmt|;
block|}
name|Optional
argument_list|<
name|Account
argument_list|>
name|account
init|=
name|accounts
operator|.
name|getByUsername
argument_list|(
name|username
argument_list|)
operator|.
name|map
argument_list|(
name|AccountState
operator|::
name|getAccount
argument_list|)
operator|.
name|filter
argument_list|(
name|Account
operator|::
name|isActive
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|account
operator|.
name|isPresent
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
name|SshUtil
operator|.
name|success
argument_list|(
name|username
argument_list|,
name|session
argument_list|,
name|sshScope
argument_list|,
name|sshLog
argument_list|,
name|sd
argument_list|,
name|SshUtil
operator|.
name|createUser
argument_list|(
name|sd
argument_list|,
name|userFactory
argument_list|,
name|account
operator|.
name|get
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

