begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2015 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.plugin.client.ui
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|plugin
operator|.
name|client
operator|.
name|ui
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|NativeMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|HighlightSuggestion
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|plugin
operator|.
name|client
operator|.
name|rpc
operator|.
name|RestApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|JavaScriptObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestOracle
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/** A {@code SuggestOracle} for groups. */
end_comment

begin_class
DECL|class|GroupSuggestOracle
specifier|public
class|class
name|GroupSuggestOracle
extends|extends
name|SuggestOracle
block|{
DECL|field|chars
specifier|private
specifier|final
name|int
name|chars
decl_stmt|;
comment|/**    * @param chars minimum chars to start suggesting.    */
DECL|method|GroupSuggestOracle (int chars)
specifier|public
name|GroupSuggestOracle
parameter_list|(
name|int
name|chars
parameter_list|)
block|{
name|this
operator|.
name|chars
operator|=
name|chars
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|isDisplayStringHTML ()
specifier|public
name|boolean
name|isDisplayStringHTML
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|requestSuggestions (final Request req, final Callback done)
specifier|public
name|void
name|requestSuggestions
parameter_list|(
specifier|final
name|Request
name|req
parameter_list|,
specifier|final
name|Callback
name|done
parameter_list|)
block|{
if|if
condition|(
name|req
operator|.
name|getQuery
argument_list|()
operator|.
name|length
argument_list|()
operator|<
name|chars
condition|)
block|{
name|responseEmptySuggestion
argument_list|(
name|req
argument_list|,
name|done
argument_list|)
expr_stmt|;
return|return;
block|}
name|RestApi
name|rest
init|=
operator|new
name|RestApi
argument_list|(
literal|"/groups/"
argument_list|)
operator|.
name|addParameter
argument_list|(
literal|"suggest"
argument_list|,
name|req
operator|.
name|getQuery
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|req
operator|.
name|getLimit
argument_list|()
operator|>
literal|0
condition|)
block|{
name|rest
operator|.
name|addParameter
argument_list|(
literal|"n"
argument_list|,
name|req
operator|.
name|getLimit
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|rest
operator|.
name|get
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|NativeMap
argument_list|<
name|JavaScriptObject
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|NativeMap
argument_list|<
name|JavaScriptObject
argument_list|>
name|result
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|keys
init|=
name|result
operator|.
name|sortedKeys
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Suggestion
argument_list|>
name|suggestions
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|keys
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|g
range|:
name|keys
control|)
block|{
name|suggestions
operator|.
name|add
argument_list|(
operator|new
name|HighlightSuggestion
argument_list|(
name|req
operator|.
name|getQuery
argument_list|()
argument_list|,
name|g
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|done
operator|.
name|onSuggestionsReady
argument_list|(
name|req
argument_list|,
operator|new
name|Response
argument_list|(
name|suggestions
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|responseEmptySuggestion
argument_list|(
name|req
argument_list|,
name|done
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|responseEmptySuggestion (Request req, Callback done)
specifier|private
specifier|static
name|void
name|responseEmptySuggestion
parameter_list|(
name|Request
name|req
parameter_list|,
name|Callback
name|done
parameter_list|)
block|{
name|List
argument_list|<
name|Suggestion
argument_list|>
name|empty
init|=
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
name|done
operator|.
name|onSuggestionsReady
argument_list|(
name|req
argument_list|,
operator|new
name|Response
argument_list|(
name|empty
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

