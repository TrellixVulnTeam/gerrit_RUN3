begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2008 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.admin
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|admin
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|Dispatcher
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|Gerrit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|GitwebLink
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|projects
operator|.
name|ProjectInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|projects
operator|.
name|ProjectMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|ScreenLoadCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|InlineHyperlink
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|ProjectsTable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|Screen
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|PageLinks
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|DOM
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|History
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Anchor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlowPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_class
DECL|class|ProjectListScreen
specifier|public
class|class
name|ProjectListScreen
extends|extends
name|Screen
block|{
DECL|field|projects
specifier|private
name|ProjectsTable
name|projects
decl_stmt|;
annotation|@
name|Override
DECL|method|onLoad ()
specifier|protected
name|void
name|onLoad
parameter_list|()
block|{
name|super
operator|.
name|onLoad
argument_list|()
expr_stmt|;
name|ProjectMap
operator|.
name|all
argument_list|(
operator|new
name|ScreenLoadCallback
argument_list|<
name|ProjectMap
argument_list|>
argument_list|(
name|this
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|void
name|preDisplay
parameter_list|(
specifier|final
name|ProjectMap
name|result
parameter_list|)
block|{
name|projects
operator|.
name|display
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|projects
operator|.
name|finishDisplay
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onInitUI ()
specifier|protected
name|void
name|onInitUI
parameter_list|()
block|{
name|super
operator|.
name|onInitUI
argument_list|()
expr_stmt|;
name|setPageTitle
argument_list|(
name|Util
operator|.
name|C
operator|.
name|projectListTitle
argument_list|()
argument_list|)
expr_stmt|;
name|projects
operator|=
operator|new
name|ProjectsTable
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|void
name|initColumnHeaders
parameter_list|()
block|{
name|super
operator|.
name|initColumnHeaders
argument_list|()
expr_stmt|;
if|if
condition|(
name|Gerrit
operator|.
name|getGitwebLink
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|table
operator|.
name|setText
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
name|Util
operator|.
name|C
operator|.
name|projectRepoBrowser
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|getFlexCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|dataHeader
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|onOpenRow
parameter_list|(
specifier|final
name|int
name|row
parameter_list|)
block|{
name|History
operator|.
name|newItem
argument_list|(
name|link
argument_list|(
name|getRowItem
argument_list|(
name|row
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|link
parameter_list|(
specifier|final
name|ProjectInfo
name|item
parameter_list|)
block|{
return|return
name|Dispatcher
operator|.
name|toProjectAdmin
argument_list|(
name|item
operator|.
name|name_key
argument_list|()
argument_list|,
name|ProjectScreen
operator|.
name|INFO
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|insert
parameter_list|(
name|int
name|row
parameter_list|,
name|ProjectInfo
name|k
parameter_list|)
block|{
name|super
operator|.
name|insert
argument_list|(
name|row
argument_list|,
name|k
argument_list|)
expr_stmt|;
if|if
condition|(
name|Gerrit
operator|.
name|getGitwebLink
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|table
operator|.
name|getFlexCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|row
argument_list|,
literal|3
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|dataCell
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|populate
parameter_list|(
specifier|final
name|int
name|row
parameter_list|,
specifier|final
name|ProjectInfo
name|k
parameter_list|)
block|{
name|FlowPanel
name|fp
init|=
operator|new
name|FlowPanel
argument_list|()
decl_stmt|;
name|fp
operator|.
name|add
argument_list|(
name|createSearchLink
argument_list|(
name|k
argument_list|)
argument_list|)
expr_stmt|;
name|fp
operator|.
name|add
argument_list|(
operator|new
name|InlineHyperlink
argument_list|(
name|k
operator|.
name|name
argument_list|()
argument_list|,
name|link
argument_list|(
name|k
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|setWidget
argument_list|(
name|row
argument_list|,
literal|1
argument_list|,
name|fp
argument_list|)
expr_stmt|;
name|table
operator|.
name|setText
argument_list|(
name|row
argument_list|,
literal|2
argument_list|,
name|k
operator|.
name|description
argument_list|()
argument_list|)
expr_stmt|;
name|GitwebLink
name|l
init|=
name|Gerrit
operator|.
name|getGitwebLink
argument_list|()
decl_stmt|;
if|if
condition|(
name|l
operator|!=
literal|null
condition|)
block|{
name|table
operator|.
name|setWidget
argument_list|(
name|row
argument_list|,
literal|3
argument_list|,
operator|new
name|Anchor
argument_list|(
name|l
operator|.
name|getLinkName
argument_list|()
argument_list|,
literal|false
argument_list|,
name|l
operator|.
name|toProject
argument_list|(
name|k
operator|.
name|name_key
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|setRowItem
argument_list|(
name|row
argument_list|,
name|k
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Widget
name|createSearchLink
parameter_list|(
specifier|final
name|ProjectInfo
name|projectInfo
parameter_list|)
block|{
name|Image
name|image
init|=
operator|new
name|Image
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|queryProjectLink
argument_list|()
argument_list|)
decl_stmt|;
name|InlineHyperlink
name|h
decl_stmt|;
if|if
condition|(
name|projectInfo
operator|.
name|defaultDashboard
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|h
operator|=
operator|new
name|InlineHyperlink
argument_list|(
literal|" "
argument_list|,
name|PageLinks
operator|.
name|toProjectDashboard
argument_list|(
name|projectInfo
operator|.
name|name_key
argument_list|()
argument_list|,
name|projectInfo
operator|.
name|defaultDashboard
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|h
operator|=
operator|new
name|InlineHyperlink
argument_list|(
literal|" "
argument_list|,
name|PageLinks
operator|.
name|toChangeQuery
argument_list|(
name|PageLinks
operator|.
name|projectQuery
argument_list|(
name|projectInfo
operator|.
name|name_key
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|h
operator|.
name|setTitle
argument_list|(
name|Util
operator|.
name|C
operator|.
name|projectListQueryLink
argument_list|()
argument_list|)
expr_stmt|;
name|DOM
operator|.
name|insertBefore
argument_list|(
name|h
operator|.
name|getElement
argument_list|()
argument_list|,
name|image
operator|.
name|getElement
argument_list|()
argument_list|,
name|DOM
operator|.
name|getFirstChild
argument_list|(
name|h
operator|.
name|getElement
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|h
return|;
block|}
block|}
expr_stmt|;
name|projects
operator|.
name|setSavePointerId
argument_list|(
name|PageLinks
operator|.
name|ADMIN_PROJECTS
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|projects
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|registerKeys ()
specifier|public
name|void
name|registerKeys
parameter_list|()
block|{
name|super
operator|.
name|registerKeys
argument_list|()
expr_stmt|;
name|projects
operator|.
name|setRegisterKeys
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

