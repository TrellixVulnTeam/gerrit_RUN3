begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2010 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.download
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|download
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|Gerrit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|aria
operator|.
name|client
operator|.
name|Roles
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Anchor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|clippy
operator|.
name|client
operator|.
name|CopyableLabel
import|;
end_import

begin_class
DECL|class|DownloadCommandLink
specifier|public
specifier|abstract
class|class
name|DownloadCommandLink
extends|extends
name|Anchor
implements|implements
name|ClickHandler
block|{
DECL|class|CopyableCommandLinkFactory
specifier|public
specifier|static
class|class
name|CopyableCommandLinkFactory
block|{
DECL|field|copyLabel
specifier|protected
name|CopyableLabel
name|copyLabel
init|=
literal|null
decl_stmt|;
DECL|field|widget
specifier|protected
name|Widget
name|widget
decl_stmt|;
DECL|class|CloneCommandLink
specifier|public
class|class
name|CloneCommandLink
extends|extends
name|DownloadCommandLink
block|{
DECL|method|CloneCommandLink ()
specifier|public
name|CloneCommandLink
parameter_list|()
block|{
name|super
argument_list|(
literal|"clone"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setCurrentUrl (DownloadUrlLink link)
specifier|protected
name|void
name|setCurrentUrl
parameter_list|(
name|DownloadUrlLink
name|link
parameter_list|)
block|{
name|widget
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|copyLabel
operator|.
name|setText
argument_list|(
literal|"git clone "
operator|+
name|link
operator|.
name|getUrlData
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|CloneWithCommitMsgHookCommandLink
specifier|public
class|class
name|CloneWithCommitMsgHookCommandLink
extends|extends
name|DownloadCommandLink
block|{
DECL|field|project
specifier|private
specifier|final
name|Project
operator|.
name|NameKey
name|project
decl_stmt|;
DECL|method|CloneWithCommitMsgHookCommandLink (Project.NameKey project)
specifier|public
name|CloneWithCommitMsgHookCommandLink
parameter_list|(
name|Project
operator|.
name|NameKey
name|project
parameter_list|)
block|{
name|super
argument_list|(
literal|"clone with commit-msg hook"
argument_list|)
expr_stmt|;
name|this
operator|.
name|project
operator|=
name|project
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setCurrentUrl (DownloadUrlLink link)
specifier|protected
name|void
name|setCurrentUrl
parameter_list|(
name|DownloadUrlLink
name|link
parameter_list|)
block|{
name|widget
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|String
name|sshPort
init|=
literal|null
decl_stmt|;
name|String
name|sshAddr
init|=
name|Gerrit
operator|.
name|getConfig
argument_list|()
operator|.
name|getSshdAddress
argument_list|()
decl_stmt|;
name|int
name|p
init|=
name|sshAddr
operator|.
name|lastIndexOf
argument_list|(
literal|':'
argument_list|)
decl_stmt|;
if|if
condition|(
name|p
operator|!=
operator|-
literal|1
operator|&&
operator|!
name|sshAddr
operator|.
name|endsWith
argument_list|(
literal|":"
argument_list|)
condition|)
block|{
name|sshPort
operator|=
name|sshAddr
operator|.
name|substring
argument_list|(
name|p
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
name|StringBuilder
name|cmd
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|cmd
operator|.
name|append
argument_list|(
literal|"git clone "
argument_list|)
expr_stmt|;
name|cmd
operator|.
name|append
argument_list|(
name|link
operator|.
name|getUrlData
argument_list|()
argument_list|)
expr_stmt|;
name|cmd
operator|.
name|append
argument_list|(
literal|"&& scp -p "
argument_list|)
expr_stmt|;
if|if
condition|(
name|sshPort
operator|!=
literal|null
condition|)
block|{
name|cmd
operator|.
name|append
argument_list|(
literal|"-P "
argument_list|)
expr_stmt|;
name|cmd
operator|.
name|append
argument_list|(
name|sshPort
argument_list|)
expr_stmt|;
name|cmd
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
block|}
name|cmd
operator|.
name|append
argument_list|(
name|Gerrit
operator|.
name|getUserAccount
argument_list|()
operator|.
name|getUserName
argument_list|()
argument_list|)
expr_stmt|;
name|cmd
operator|.
name|append
argument_list|(
literal|"@"
argument_list|)
expr_stmt|;
if|if
condition|(
name|sshAddr
operator|.
name|startsWith
argument_list|(
literal|"*:"
argument_list|)
operator|||
name|p
operator|==
operator|-
literal|1
condition|)
block|{
name|cmd
operator|.
name|append
argument_list|(
name|Window
operator|.
name|Location
operator|.
name|getHostName
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cmd
operator|.
name|append
argument_list|(
name|sshAddr
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|p
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|cmd
operator|.
name|append
argument_list|(
literal|":hooks/commit-msg "
argument_list|)
expr_stmt|;
name|p
operator|=
name|project
operator|.
name|get
argument_list|()
operator|.
name|lastIndexOf
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
if|if
condition|(
name|p
operator|!=
operator|-
literal|1
condition|)
block|{
name|cmd
operator|.
name|append
argument_list|(
name|project
operator|.
name|get
argument_list|()
operator|.
name|substring
argument_list|(
name|p
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|cmd
operator|.
name|append
argument_list|(
name|project
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|cmd
operator|.
name|append
argument_list|(
literal|"/.git/hooks/"
argument_list|)
expr_stmt|;
name|copyLabel
operator|.
name|setText
argument_list|(
name|cmd
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|CopyableCommandLinkFactory (CopyableLabel label, Widget widget)
specifier|public
name|CopyableCommandLinkFactory
parameter_list|(
name|CopyableLabel
name|label
parameter_list|,
name|Widget
name|widget
parameter_list|)
block|{
name|copyLabel
operator|=
name|label
expr_stmt|;
name|this
operator|.
name|widget
operator|=
name|widget
expr_stmt|;
block|}
block|}
DECL|method|DownloadCommandLink (String text)
specifier|public
name|DownloadCommandLink
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|super
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|setStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|downloadLink
argument_list|()
argument_list|)
expr_stmt|;
name|Roles
operator|.
name|getTabRole
argument_list|()
operator|.
name|set
argument_list|(
name|getElement
argument_list|()
argument_list|)
expr_stmt|;
name|addClickHandler
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onClick (ClickEvent event)
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|event
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
name|event
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
name|select
argument_list|()
expr_stmt|;
block|}
DECL|method|select ()
name|void
name|select
parameter_list|()
block|{
name|DownloadCommandPanel
name|parent
init|=
operator|(
name|DownloadCommandPanel
operator|)
name|getParent
argument_list|()
decl_stmt|;
for|for
control|(
name|Widget
name|w
range|:
name|parent
control|)
block|{
if|if
condition|(
name|w
operator|!=
name|this
operator|&&
name|w
operator|instanceof
name|DownloadCommandLink
condition|)
block|{
name|w
operator|.
name|removeStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|downloadLink_Active
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|parent
operator|.
name|setCurrentCommand
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|downloadLink_Active
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|setCurrentUrl (DownloadUrlLink link)
specifier|protected
specifier|abstract
name|void
name|setCurrentUrl
parameter_list|(
name|DownloadUrlLink
name|link
parameter_list|)
function_decl|;
block|}
end_class

end_unit

