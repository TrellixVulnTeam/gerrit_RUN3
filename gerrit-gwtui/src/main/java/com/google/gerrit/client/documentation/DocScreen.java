begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.documentation
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|documentation
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|GerritCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|RestApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|Screen
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|JsArray
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|KeyUtil
import|;
end_import

begin_class
DECL|class|DocScreen
specifier|public
class|class
name|DocScreen
extends|extends
name|Screen
block|{
DECL|field|table
specifier|private
name|DocTable
name|table
decl_stmt|;
DECL|field|query
specifier|private
specifier|final
name|String
name|query
decl_stmt|;
DECL|method|DocScreen (String query)
specifier|public
name|DocScreen
parameter_list|(
name|String
name|query
parameter_list|)
block|{
name|this
operator|.
name|query
operator|=
name|KeyUtil
operator|.
name|decode
argument_list|(
name|query
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onInitUI ()
specifier|protected
name|void
name|onInitUI
parameter_list|()
block|{
name|super
operator|.
name|onInitUI
argument_list|()
expr_stmt|;
name|table
operator|=
operator|new
name|DocTable
argument_list|()
expr_stmt|;
name|table
operator|.
name|setSavePointerId
argument_list|(
name|query
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|setWindowTitle
argument_list|(
name|Util
operator|.
name|M
operator|.
name|docQueryWindowTitle
argument_list|(
name|query
argument_list|)
argument_list|)
expr_stmt|;
name|setPageTitle
argument_list|(
name|Util
operator|.
name|M
operator|.
name|docQueryPageTitle
argument_list|(
name|query
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onLoad ()
specifier|protected
name|void
name|onLoad
parameter_list|()
block|{
name|super
operator|.
name|onLoad
argument_list|()
expr_stmt|;
name|doQuery
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|registerKeys ()
specifier|public
name|void
name|registerKeys
parameter_list|()
block|{
name|super
operator|.
name|registerKeys
argument_list|()
expr_stmt|;
name|table
operator|.
name|setRegisterKeys
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|loadCallback ()
specifier|private
name|AsyncCallback
argument_list|<
name|JsArray
argument_list|<
name|DocInfo
argument_list|>
argument_list|>
name|loadCallback
parameter_list|()
block|{
return|return
operator|new
name|GerritCallback
argument_list|<
name|JsArray
argument_list|<
name|DocInfo
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|JsArray
argument_list|<
name|DocInfo
argument_list|>
name|result
parameter_list|)
block|{
name|displayResults
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|display
argument_list|()
expr_stmt|;
block|}
block|}
return|;
block|}
DECL|method|displayResults (JsArray<DocInfo> result)
specifier|private
name|void
name|displayResults
parameter_list|(
name|JsArray
argument_list|<
name|DocInfo
argument_list|>
name|result
parameter_list|)
block|{
name|table
operator|.
name|display
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|table
operator|.
name|finishDisplay
argument_list|()
expr_stmt|;
block|}
DECL|method|doQuery ()
specifier|private
name|void
name|doQuery
parameter_list|()
block|{
name|RestApi
name|call
init|=
operator|new
name|RestApi
argument_list|(
literal|"Documentation"
argument_list|)
decl_stmt|;
name|call
operator|.
name|addParameterRaw
argument_list|(
literal|"q"
argument_list|,
name|KeyUtil
operator|.
name|encode
argument_list|(
name|query
argument_list|)
argument_list|)
expr_stmt|;
name|call
operator|.
name|get
argument_list|(
name|loadCallback
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

