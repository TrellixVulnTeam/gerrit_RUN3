begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2009 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.patches
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|patches
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|Dispatcher
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|Gerrit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|Util
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|FancyFlexTable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|Patch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|DOM
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlexTable
operator|.
name|FlexCellFormatter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HasHorizontalAlignment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|RadioButton
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * A table used to specify which two patch sets should be diff'ed.  */
end_comment

begin_class
DECL|class|HistoryTable
class|class
name|HistoryTable
extends|extends
name|FancyFlexTable
argument_list|<
name|Patch
argument_list|>
block|{
DECL|field|screen
specifier|private
specifier|final
name|PatchScreen
name|screen
decl_stmt|;
DECL|field|all
specifier|final
name|List
argument_list|<
name|HistoryRadio
argument_list|>
name|all
init|=
operator|new
name|ArrayList
argument_list|<
name|HistoryRadio
argument_list|>
argument_list|()
decl_stmt|;
DECL|method|HistoryTable (final PatchScreen parent)
name|HistoryTable
parameter_list|(
specifier|final
name|PatchScreen
name|parent
parameter_list|)
block|{
name|setStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|patchHistoryTable
argument_list|()
argument_list|)
expr_stmt|;
name|screen
operator|=
name|parent
expr_stmt|;
name|table
operator|.
name|setWidth
argument_list|(
literal|"auto"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|changeTable
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|onClick (final HistoryRadio b)
name|void
name|onClick
parameter_list|(
specifier|final
name|HistoryRadio
name|b
parameter_list|)
block|{
name|PatchSet
operator|.
name|Id
name|sideA
init|=
name|screen
operator|.
name|idSideA
decl_stmt|;
name|PatchSet
operator|.
name|Id
name|sideB
init|=
name|screen
operator|.
name|idSideB
decl_stmt|;
switch|switch
condition|(
name|b
operator|.
name|file
condition|)
block|{
case|case
literal|0
case|:
name|sideA
operator|=
name|b
operator|.
name|patchSetId
expr_stmt|;
break|break;
case|case
literal|1
case|:
name|sideB
operator|=
name|b
operator|.
name|patchSetId
expr_stmt|;
break|break;
default|default:
return|return;
block|}
name|enableAll
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Patch
operator|.
name|Key
name|k
init|=
operator|new
name|Patch
operator|.
name|Key
argument_list|(
name|sideB
argument_list|,
name|screen
operator|.
name|getPatchKey
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|screen
operator|.
name|getPatchScreenType
argument_list|()
condition|)
block|{
case|case
name|SIDE_BY_SIDE
case|:
name|Gerrit
operator|.
name|display
argument_list|(
name|Dispatcher
operator|.
name|toPatchSideBySide
argument_list|(
name|sideA
argument_list|,
name|k
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|UNIFIED
case|:
name|Gerrit
operator|.
name|display
argument_list|(
name|Dispatcher
operator|.
name|toPatchUnified
argument_list|(
name|sideA
argument_list|,
name|k
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
DECL|method|enableAll (final boolean on)
name|void
name|enableAll
parameter_list|(
specifier|final
name|boolean
name|on
parameter_list|)
block|{
for|for
control|(
specifier|final
name|HistoryRadio
name|a
range|:
name|all
control|)
block|{
name|a
operator|.
name|setEnabled
argument_list|(
name|on
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|display (final List<Patch> result)
name|void
name|display
parameter_list|(
specifier|final
name|List
argument_list|<
name|Patch
argument_list|>
name|result
parameter_list|)
block|{
name|all
operator|.
name|clear
argument_list|()
expr_stmt|;
specifier|final
name|FlexCellFormatter
name|fmt
init|=
name|table
operator|.
name|getFlexCellFormatter
argument_list|()
decl_stmt|;
name|table
operator|.
name|setText
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|PatchUtil
operator|.
name|C
operator|.
name|patchHeaderPatchSet
argument_list|()
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setStyleName
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|dataHeader
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|setText
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|PatchUtil
operator|.
name|C
operator|.
name|patchHeaderOld
argument_list|()
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setStyleName
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|dataHeader
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|setText
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|PatchUtil
operator|.
name|C
operator|.
name|patchHeaderNew
argument_list|()
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setStyleName
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|dataHeader
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|setText
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
name|Util
operator|.
name|C
operator|.
name|patchTableColumnComments
argument_list|()
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setStyleName
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|dataHeader
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|screen
operator|.
name|getPatchSetDetail
argument_list|()
operator|.
name|getInfo
argument_list|()
operator|.
name|getParents
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|1
condition|)
block|{
name|table
operator|.
name|setText
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|PatchUtil
operator|.
name|C
operator|.
name|patchBaseAutoMerge
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|table
operator|.
name|setText
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|PatchUtil
operator|.
name|C
operator|.
name|patchBase
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|fmt
operator|.
name|setStyleName
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|dataCell
argument_list|()
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|topMostCell
argument_list|()
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setStyleName
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|dataCell
argument_list|()
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setStyleName
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|dataCell
argument_list|()
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setStyleName
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|dataCell
argument_list|()
argument_list|)
expr_stmt|;
name|installRadio
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|,
name|screen
operator|.
name|idSideA
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|int
name|col
init|=
literal|2
decl_stmt|;
for|for
control|(
specifier|final
name|Patch
name|k
range|:
name|result
control|)
block|{
specifier|final
name|PatchSet
operator|.
name|Id
name|psId
init|=
name|k
operator|.
name|getKey
argument_list|()
operator|.
name|getParentKey
argument_list|()
decl_stmt|;
name|table
operator|.
name|setText
argument_list|(
literal|0
argument_list|,
name|col
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|psId
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setStyleName
argument_list|(
literal|0
argument_list|,
name|col
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|patchHistoryTablePatchSetHeader
argument_list|()
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
literal|0
argument_list|,
name|col
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|dataCell
argument_list|()
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
literal|0
argument_list|,
name|col
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|topMostCell
argument_list|()
argument_list|)
expr_stmt|;
name|installRadio
argument_list|(
literal|1
argument_list|,
name|col
argument_list|,
name|psId
argument_list|,
name|screen
operator|.
name|idSideA
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|installRadio
argument_list|(
literal|2
argument_list|,
name|col
argument_list|,
name|psId
argument_list|,
name|screen
operator|.
name|idSideB
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setStyleName
argument_list|(
literal|3
argument_list|,
name|col
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|dataCell
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|k
operator|.
name|getCommentCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|table
operator|.
name|setText
argument_list|(
literal|3
argument_list|,
name|col
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|k
operator|.
name|getCommentCount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|col
operator|++
expr_stmt|;
block|}
block|}
DECL|method|installRadio (final int row, final int col, final PatchSet.Id psId, final PatchSet.Id cur, final int file)
specifier|private
name|void
name|installRadio
parameter_list|(
specifier|final
name|int
name|row
parameter_list|,
specifier|final
name|int
name|col
parameter_list|,
specifier|final
name|PatchSet
operator|.
name|Id
name|psId
parameter_list|,
specifier|final
name|PatchSet
operator|.
name|Id
name|cur
parameter_list|,
specifier|final
name|int
name|file
parameter_list|)
block|{
specifier|final
name|HistoryRadio
name|b
init|=
operator|new
name|HistoryRadio
argument_list|(
name|psId
argument_list|,
name|file
argument_list|)
decl_stmt|;
name|b
operator|.
name|setValue
argument_list|(
name|eq
argument_list|(
name|cur
argument_list|,
name|psId
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|setWidget
argument_list|(
name|row
argument_list|,
name|col
argument_list|,
name|b
argument_list|)
expr_stmt|;
specifier|final
name|FlexCellFormatter
name|fmt
init|=
name|table
operator|.
name|getFlexCellFormatter
argument_list|()
decl_stmt|;
name|fmt
operator|.
name|setHorizontalAlignment
argument_list|(
name|row
argument_list|,
name|col
argument_list|,
name|HasHorizontalAlignment
operator|.
name|ALIGN_CENTER
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setStyleName
argument_list|(
name|row
argument_list|,
name|col
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|dataCell
argument_list|()
argument_list|)
expr_stmt|;
name|all
operator|.
name|add
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
DECL|method|eq (final PatchSet.Id cur, final PatchSet.Id psid)
specifier|private
name|boolean
name|eq
parameter_list|(
specifier|final
name|PatchSet
operator|.
name|Id
name|cur
parameter_list|,
specifier|final
name|PatchSet
operator|.
name|Id
name|psid
parameter_list|)
block|{
if|if
condition|(
name|cur
operator|==
literal|null
operator|&&
name|psid
operator|==
literal|null
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
name|psid
operator|!=
literal|null
operator|&&
name|psid
operator|.
name|equals
argument_list|(
name|cur
argument_list|)
return|;
block|}
DECL|class|HistoryRadio
specifier|private
class|class
name|HistoryRadio
extends|extends
name|RadioButton
block|{
DECL|field|patchSetId
specifier|final
name|PatchSet
operator|.
name|Id
name|patchSetId
decl_stmt|;
DECL|field|file
specifier|final
name|int
name|file
decl_stmt|;
DECL|method|HistoryRadio (final PatchSet.Id ps, final int f)
name|HistoryRadio
parameter_list|(
specifier|final
name|PatchSet
operator|.
name|Id
name|ps
parameter_list|,
specifier|final
name|int
name|f
parameter_list|)
block|{
name|super
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|f
argument_list|)
argument_list|)
expr_stmt|;
name|sinkEvents
argument_list|(
name|Event
operator|.
name|ONCLICK
argument_list|)
expr_stmt|;
name|patchSetId
operator|=
name|ps
expr_stmt|;
name|file
operator|=
name|f
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onBrowserEvent (final Event event)
specifier|public
name|void
name|onBrowserEvent
parameter_list|(
specifier|final
name|Event
name|event
parameter_list|)
block|{
switch|switch
condition|(
name|DOM
operator|.
name|eventGetType
argument_list|(
name|event
argument_list|)
condition|)
block|{
case|case
name|Event
operator|.
name|ONCLICK
case|:
name|onClick
argument_list|(
name|this
argument_list|)
expr_stmt|;
break|break;
default|default:
name|super
operator|.
name|onBrowserEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

