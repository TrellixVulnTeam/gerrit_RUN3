begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2012 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.changes
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|Gerrit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|GerritCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|NeedsSignInKeyCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|ChangeDetail
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|ChangeInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|ToggleStarRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|HasValueChangeHandlers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|GwtEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|resources
operator|.
name|client
operator|.
name|ImageResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtjsonrpc
operator|.
name|common
operator|.
name|VoidResult
import|;
end_import

begin_class
DECL|class|StarCache
specifier|public
class|class
name|StarCache
implements|implements
name|HasValueChangeHandlers
argument_list|<
name|Boolean
argument_list|>
block|{
DECL|class|KeyCommand
specifier|public
class|class
name|KeyCommand
extends|extends
name|NeedsSignInKeyCommand
block|{
DECL|method|KeyCommand (int mask, char key, String help)
specifier|public
name|KeyCommand
parameter_list|(
name|int
name|mask
parameter_list|,
name|char
name|key
parameter_list|,
name|String
name|help
parameter_list|)
block|{
name|super
argument_list|(
name|mask
argument_list|,
name|key
argument_list|,
name|help
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onKeyPress (final KeyPressEvent event)
specifier|public
name|void
name|onKeyPress
parameter_list|(
specifier|final
name|KeyPressEvent
name|event
parameter_list|)
block|{
name|StarCache
operator|.
name|this
operator|.
name|toggleStar
argument_list|()
expr_stmt|;
block|}
block|}
DECL|field|cache
name|ChangeCache
name|cache
decl_stmt|;
DECL|field|manager
specifier|private
name|HandlerManager
name|manager
init|=
operator|new
name|HandlerManager
argument_list|(
name|this
argument_list|)
decl_stmt|;
DECL|method|StarCache (final Change.Id chg)
specifier|public
name|StarCache
parameter_list|(
specifier|final
name|Change
operator|.
name|Id
name|chg
parameter_list|)
block|{
name|cache
operator|=
name|ChangeCache
operator|.
name|get
argument_list|(
name|chg
argument_list|)
expr_stmt|;
block|}
DECL|method|get ()
specifier|public
name|boolean
name|get
parameter_list|()
block|{
name|ChangeDetail
name|detail
init|=
name|cache
operator|.
name|getChangeDetailCache
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
if|if
condition|(
name|detail
operator|!=
literal|null
condition|)
block|{
return|return
name|detail
operator|.
name|isStarred
argument_list|()
return|;
block|}
name|ChangeInfo
name|info
init|=
name|cache
operator|.
name|getChangeInfoCache
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
if|if
condition|(
name|info
operator|!=
literal|null
condition|)
block|{
return|return
name|info
operator|.
name|isStarred
argument_list|()
return|;
block|}
return|return
literal|false
return|;
block|}
DECL|method|set (final boolean s)
specifier|public
name|void
name|set
parameter_list|(
specifier|final
name|boolean
name|s
parameter_list|)
block|{
if|if
condition|(
name|Gerrit
operator|.
name|isSignedIn
argument_list|()
operator|&&
name|s
operator|!=
name|get
argument_list|()
condition|)
block|{
specifier|final
name|ToggleStarRequest
name|req
init|=
operator|new
name|ToggleStarRequest
argument_list|()
decl_stmt|;
name|req
operator|.
name|toggle
argument_list|(
name|cache
operator|.
name|getChangeId
argument_list|()
argument_list|,
name|s
argument_list|)
expr_stmt|;
name|Util
operator|.
name|LIST_SVC
operator|.
name|toggleStars
argument_list|(
name|req
argument_list|,
operator|new
name|GerritCallback
argument_list|<
name|VoidResult
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|(
specifier|final
name|VoidResult
name|result
parameter_list|)
block|{
name|setStarred
argument_list|(
name|s
argument_list|)
expr_stmt|;
name|fireEvent
argument_list|(
operator|new
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
argument_list|(
name|s
argument_list|)
block|{}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|setStarred (final boolean s)
specifier|private
name|void
name|setStarred
parameter_list|(
specifier|final
name|boolean
name|s
parameter_list|)
block|{
name|ChangeDetail
name|detail
init|=
name|cache
operator|.
name|getChangeDetailCache
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
if|if
condition|(
name|detail
operator|!=
literal|null
condition|)
block|{
name|detail
operator|.
name|setStarred
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
name|ChangeInfo
name|info
init|=
name|cache
operator|.
name|getChangeInfoCache
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
if|if
condition|(
name|info
operator|!=
literal|null
condition|)
block|{
name|info
operator|.
name|setStarred
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|toggleStar ()
specifier|public
name|void
name|toggleStar
parameter_list|()
block|{
name|set
argument_list|(
operator|!
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
DECL|method|createStar ()
specifier|public
name|Image
name|createStar
parameter_list|()
block|{
specifier|final
name|Image
name|star
init|=
operator|new
name|Image
argument_list|(
name|getResource
argument_list|()
argument_list|)
decl_stmt|;
name|star
operator|.
name|setVisible
argument_list|(
name|Gerrit
operator|.
name|isSignedIn
argument_list|()
argument_list|)
expr_stmt|;
name|star
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
specifier|final
name|ClickEvent
name|event
parameter_list|)
block|{
name|StarCache
operator|.
name|this
operator|.
name|toggleStar
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|ValueChangeHandler
name|starUpdater
init|=
operator|new
name|ValueChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onValueChange
parameter_list|(
name|ValueChangeEvent
name|event
parameter_list|)
block|{
name|star
operator|.
name|setResource
argument_list|(
name|StarCache
operator|.
name|this
operator|.
name|getResource
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|cache
operator|.
name|getChangeDetailCache
argument_list|()
operator|.
name|addValueChangeHandler
argument_list|(
name|starUpdater
argument_list|)
expr_stmt|;
name|cache
operator|.
name|getChangeInfoCache
argument_list|()
operator|.
name|addValueChangeHandler
argument_list|(
name|starUpdater
argument_list|)
expr_stmt|;
name|this
operator|.
name|addValueChangeHandler
argument_list|(
name|starUpdater
argument_list|)
expr_stmt|;
return|return
name|star
return|;
block|}
DECL|method|getResource ()
specifier|private
name|ImageResource
name|getResource
parameter_list|()
block|{
return|return
name|get
argument_list|()
condition|?
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|starFilled
argument_list|()
else|:
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|starOpen
argument_list|()
return|;
block|}
DECL|method|fireEvent (GwtEvent<?> event)
specifier|public
name|void
name|fireEvent
parameter_list|(
name|GwtEvent
argument_list|<
name|?
argument_list|>
name|event
parameter_list|)
block|{
name|manager
operator|.
name|fireEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|addValueChangeHandler ( ValueChangeHandler<Boolean> handler)
specifier|public
name|HandlerRegistration
name|addValueChangeHandler
parameter_list|(
name|ValueChangeHandler
argument_list|<
name|Boolean
argument_list|>
name|handler
parameter_list|)
block|{
return|return
name|manager
operator|.
name|addHandler
argument_list|(
name|ValueChangeEvent
operator|.
name|getType
argument_list|()
argument_list|,
name|handler
argument_list|)
return|;
block|}
block|}
end_class

end_unit

