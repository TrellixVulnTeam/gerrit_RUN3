begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.account
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|account
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|VoidResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|info
operator|.
name|AccountInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|info
operator|.
name|AgreementInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|info
operator|.
name|GpgKeyInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|CallbackGroup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|NativeMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|NativeString
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|Natives
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|RestApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|JavaScriptObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|JsArray
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|JsArrayString
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/** A collection of static methods which work on the Gerrit REST API for specific accounts. */
end_comment

begin_class
DECL|class|AccountApi
specifier|public
class|class
name|AccountApi
block|{
DECL|method|self ()
specifier|public
specifier|static
name|RestApi
name|self
parameter_list|()
block|{
return|return
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|view
argument_list|(
literal|"self"
argument_list|)
return|;
block|}
comment|/** Retrieve the account edit preferences */
DECL|method|getEditPreferences (AsyncCallback<EditPreferences> cb)
specifier|public
specifier|static
name|void
name|getEditPreferences
parameter_list|(
name|AsyncCallback
argument_list|<
name|EditPreferences
argument_list|>
name|cb
parameter_list|)
block|{
name|self
argument_list|()
operator|.
name|view
argument_list|(
literal|"preferences.edit"
argument_list|)
operator|.
name|get
argument_list|(
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/** Put the account edit preferences */
DECL|method|putEditPreferences (EditPreferences in, AsyncCallback<EditPreferences> cb)
specifier|public
specifier|static
name|void
name|putEditPreferences
parameter_list|(
name|EditPreferences
name|in
parameter_list|,
name|AsyncCallback
argument_list|<
name|EditPreferences
argument_list|>
name|cb
parameter_list|)
block|{
name|self
argument_list|()
operator|.
name|view
argument_list|(
literal|"preferences.edit"
argument_list|)
operator|.
name|put
argument_list|(
name|in
argument_list|,
name|cb
argument_list|)
expr_stmt|;
block|}
DECL|method|suggest (String query, int limit, AsyncCallback<JsArray<AccountInfo>> cb)
specifier|public
specifier|static
name|void
name|suggest
parameter_list|(
name|String
name|query
parameter_list|,
name|int
name|limit
parameter_list|,
name|AsyncCallback
argument_list|<
name|JsArray
argument_list|<
name|AccountInfo
argument_list|>
argument_list|>
name|cb
parameter_list|)
block|{
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|addParameterTrue
argument_list|(
literal|"suggest"
argument_list|)
operator|.
name|addParameter
argument_list|(
literal|"q"
argument_list|,
name|query
argument_list|)
operator|.
name|addParameter
argument_list|(
literal|"n"
argument_list|,
name|limit
argument_list|)
operator|.
name|background
argument_list|()
operator|.
name|get
argument_list|(
name|cb
argument_list|)
expr_stmt|;
block|}
DECL|method|putDiffPreferences (DiffPreferences in, AsyncCallback<DiffPreferences> cb)
specifier|public
specifier|static
name|void
name|putDiffPreferences
parameter_list|(
name|DiffPreferences
name|in
parameter_list|,
name|AsyncCallback
argument_list|<
name|DiffPreferences
argument_list|>
name|cb
parameter_list|)
block|{
name|self
argument_list|()
operator|.
name|view
argument_list|(
literal|"preferences.diff"
argument_list|)
operator|.
name|put
argument_list|(
name|in
argument_list|,
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/** Retrieve the username */
DECL|method|getUsername (String account, AsyncCallback<NativeString> cb)
specifier|public
specifier|static
name|void
name|getUsername
parameter_list|(
name|String
name|account
parameter_list|,
name|AsyncCallback
argument_list|<
name|NativeString
argument_list|>
name|cb
parameter_list|)
block|{
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"username"
argument_list|)
operator|.
name|get
argument_list|(
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/** Set the username */
DECL|method|setUsername (String account, String username, AsyncCallback<NativeString> cb)
specifier|public
specifier|static
name|void
name|setUsername
parameter_list|(
name|String
name|account
parameter_list|,
name|String
name|username
parameter_list|,
name|AsyncCallback
argument_list|<
name|NativeString
argument_list|>
name|cb
parameter_list|)
block|{
name|UsernameInput
name|input
init|=
name|UsernameInput
operator|.
name|create
argument_list|()
decl_stmt|;
name|input
operator|.
name|username
argument_list|(
name|username
argument_list|)
expr_stmt|;
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"username"
argument_list|)
operator|.
name|put
argument_list|(
name|input
argument_list|,
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/** Retrieve the account name */
DECL|method|getName (String account, AsyncCallback<NativeString> cb)
specifier|public
specifier|static
name|void
name|getName
parameter_list|(
name|String
name|account
parameter_list|,
name|AsyncCallback
argument_list|<
name|NativeString
argument_list|>
name|cb
parameter_list|)
block|{
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"name"
argument_list|)
operator|.
name|get
argument_list|(
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/** Set the account name */
DECL|method|setName (String account, String name, AsyncCallback<NativeString> cb)
specifier|public
specifier|static
name|void
name|setName
parameter_list|(
name|String
name|account
parameter_list|,
name|String
name|name
parameter_list|,
name|AsyncCallback
argument_list|<
name|NativeString
argument_list|>
name|cb
parameter_list|)
block|{
name|AccountNameInput
name|input
init|=
name|AccountNameInput
operator|.
name|create
argument_list|()
decl_stmt|;
name|input
operator|.
name|name
argument_list|(
name|name
argument_list|)
expr_stmt|;
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"name"
argument_list|)
operator|.
name|put
argument_list|(
name|input
argument_list|,
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/** Retrieve email addresses */
DECL|method|getEmails (String account, AsyncCallback<JsArray<EmailInfo>> cb)
specifier|public
specifier|static
name|void
name|getEmails
parameter_list|(
name|String
name|account
parameter_list|,
name|AsyncCallback
argument_list|<
name|JsArray
argument_list|<
name|EmailInfo
argument_list|>
argument_list|>
name|cb
parameter_list|)
block|{
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"emails"
argument_list|)
operator|.
name|get
argument_list|(
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/** Register a new email address */
DECL|method|registerEmail (String account, String email, AsyncCallback<EmailInfo> cb)
specifier|public
specifier|static
name|void
name|registerEmail
parameter_list|(
name|String
name|account
parameter_list|,
name|String
name|email
parameter_list|,
name|AsyncCallback
argument_list|<
name|EmailInfo
argument_list|>
name|cb
parameter_list|)
block|{
name|JavaScriptObject
name|in
init|=
name|JavaScriptObject
operator|.
name|createObject
argument_list|()
decl_stmt|;
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"emails"
argument_list|)
operator|.
name|id
argument_list|(
name|email
argument_list|)
operator|.
name|ifNoneMatch
argument_list|()
operator|.
name|put
argument_list|(
name|in
argument_list|,
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/** Set preferred email address */
DECL|method|setPreferredEmail ( String account, String email, AsyncCallback<NativeString> cb)
specifier|public
specifier|static
name|void
name|setPreferredEmail
parameter_list|(
name|String
name|account
parameter_list|,
name|String
name|email
parameter_list|,
name|AsyncCallback
argument_list|<
name|NativeString
argument_list|>
name|cb
parameter_list|)
block|{
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"emails"
argument_list|)
operator|.
name|id
argument_list|(
name|email
argument_list|)
operator|.
name|view
argument_list|(
literal|"preferred"
argument_list|)
operator|.
name|put
argument_list|(
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/** Retrieve SSH keys */
DECL|method|getSshKeys (String account, AsyncCallback<JsArray<SshKeyInfo>> cb)
specifier|public
specifier|static
name|void
name|getSshKeys
parameter_list|(
name|String
name|account
parameter_list|,
name|AsyncCallback
argument_list|<
name|JsArray
argument_list|<
name|SshKeyInfo
argument_list|>
argument_list|>
name|cb
parameter_list|)
block|{
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"sshkeys"
argument_list|)
operator|.
name|get
argument_list|(
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/** Add a new SSH keys */
DECL|method|addSshKey (String account, String sshPublicKey, AsyncCallback<SshKeyInfo> cb)
specifier|public
specifier|static
name|void
name|addSshKey
parameter_list|(
name|String
name|account
parameter_list|,
name|String
name|sshPublicKey
parameter_list|,
name|AsyncCallback
argument_list|<
name|SshKeyInfo
argument_list|>
name|cb
parameter_list|)
block|{
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"sshkeys"
argument_list|)
operator|.
name|post
argument_list|(
name|sshPublicKey
argument_list|,
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/** Retrieve Watched Projects */
DECL|method|getWatchedProjects ( String account, AsyncCallback<JsArray<ProjectWatchInfo>> cb)
specifier|public
specifier|static
name|void
name|getWatchedProjects
parameter_list|(
name|String
name|account
parameter_list|,
name|AsyncCallback
argument_list|<
name|JsArray
argument_list|<
name|ProjectWatchInfo
argument_list|>
argument_list|>
name|cb
parameter_list|)
block|{
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"watched.projects"
argument_list|)
operator|.
name|get
argument_list|(
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/** Create/Update Watched Project */
DECL|method|updateWatchedProject ( String account, ProjectWatchInfo watchedProjectInfo, AsyncCallback<JsArray<ProjectWatchInfo>> cb)
specifier|public
specifier|static
name|void
name|updateWatchedProject
parameter_list|(
name|String
name|account
parameter_list|,
name|ProjectWatchInfo
name|watchedProjectInfo
parameter_list|,
name|AsyncCallback
argument_list|<
name|JsArray
argument_list|<
name|ProjectWatchInfo
argument_list|>
argument_list|>
name|cb
parameter_list|)
block|{
name|Set
argument_list|<
name|ProjectWatchInfo
argument_list|>
name|watchedProjectInfos
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|watchedProjectInfos
operator|.
name|add
argument_list|(
name|watchedProjectInfo
argument_list|)
expr_stmt|;
name|updateWatchedProjects
argument_list|(
name|account
argument_list|,
name|watchedProjectInfos
argument_list|,
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/** Create/Update Watched Projects */
DECL|method|updateWatchedProjects ( String account, Set<ProjectWatchInfo> watchedProjectInfos, AsyncCallback<JsArray<ProjectWatchInfo>> cb)
specifier|public
specifier|static
name|void
name|updateWatchedProjects
parameter_list|(
name|String
name|account
parameter_list|,
name|Set
argument_list|<
name|ProjectWatchInfo
argument_list|>
name|watchedProjectInfos
parameter_list|,
name|AsyncCallback
argument_list|<
name|JsArray
argument_list|<
name|ProjectWatchInfo
argument_list|>
argument_list|>
name|cb
parameter_list|)
block|{
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"watched.projects"
argument_list|)
operator|.
name|post
argument_list|(
name|projectWatchArrayFromSet
argument_list|(
name|watchedProjectInfos
argument_list|)
argument_list|,
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/** Delete Watched Project */
DECL|method|deleteWatchedProject ( String account, ProjectWatchInfo watchedProjectInfo, AsyncCallback<JsArray<ProjectWatchInfo>> cb)
specifier|public
specifier|static
name|void
name|deleteWatchedProject
parameter_list|(
name|String
name|account
parameter_list|,
name|ProjectWatchInfo
name|watchedProjectInfo
parameter_list|,
name|AsyncCallback
argument_list|<
name|JsArray
argument_list|<
name|ProjectWatchInfo
argument_list|>
argument_list|>
name|cb
parameter_list|)
block|{
name|Set
argument_list|<
name|ProjectWatchInfo
argument_list|>
name|watchedProjectInfos
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|watchedProjectInfos
operator|.
name|add
argument_list|(
name|watchedProjectInfo
argument_list|)
expr_stmt|;
name|deleteWatchedProjects
argument_list|(
name|account
argument_list|,
name|watchedProjectInfos
argument_list|,
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/** Delete Watched Projects */
DECL|method|deleteWatchedProjects ( String account, Set<ProjectWatchInfo> watchedProjectInfos, AsyncCallback<JsArray<ProjectWatchInfo>> cb)
specifier|public
specifier|static
name|void
name|deleteWatchedProjects
parameter_list|(
name|String
name|account
parameter_list|,
name|Set
argument_list|<
name|ProjectWatchInfo
argument_list|>
name|watchedProjectInfos
parameter_list|,
name|AsyncCallback
argument_list|<
name|JsArray
argument_list|<
name|ProjectWatchInfo
argument_list|>
argument_list|>
name|cb
parameter_list|)
block|{
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"watched.projects:delete"
argument_list|)
operator|.
name|post
argument_list|(
name|projectWatchArrayFromSet
argument_list|(
name|watchedProjectInfos
argument_list|)
argument_list|,
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/**    * Delete SSH keys. For each key to be deleted a separate DELETE request is fired to the server.    * The {@code onSuccess} method of the provided callback is invoked once after all requests    * succeeded. If any request fails the callbacks' {@code onFailure} method is invoked. In a    * failure case it can be that still some of the keys were successfully deleted.    */
DECL|method|deleteSshKeys ( String account, Set<Integer> sequenceNumbers, AsyncCallback<VoidResult> cb)
specifier|public
specifier|static
name|void
name|deleteSshKeys
parameter_list|(
name|String
name|account
parameter_list|,
name|Set
argument_list|<
name|Integer
argument_list|>
name|sequenceNumbers
parameter_list|,
name|AsyncCallback
argument_list|<
name|VoidResult
argument_list|>
name|cb
parameter_list|)
block|{
name|CallbackGroup
name|group
init|=
operator|new
name|CallbackGroup
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|seq
range|:
name|sequenceNumbers
control|)
block|{
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"sshkeys"
argument_list|)
operator|.
name|id
argument_list|(
name|seq
argument_list|)
operator|.
name|delete
argument_list|(
name|group
operator|.
name|add
argument_list|(
name|cb
argument_list|)
argument_list|)
expr_stmt|;
name|cb
operator|=
name|CallbackGroup
operator|.
name|emptyCallback
argument_list|()
expr_stmt|;
block|}
name|group
operator|.
name|done
argument_list|()
expr_stmt|;
block|}
comment|/** Generate a new HTTP password */
DECL|method|generateHttpPassword (String account, AsyncCallback<NativeString> cb)
specifier|public
specifier|static
name|void
name|generateHttpPassword
parameter_list|(
name|String
name|account
parameter_list|,
name|AsyncCallback
argument_list|<
name|NativeString
argument_list|>
name|cb
parameter_list|)
block|{
name|HttpPasswordInput
name|in
init|=
name|HttpPasswordInput
operator|.
name|create
argument_list|()
decl_stmt|;
name|in
operator|.
name|generate
argument_list|(
literal|true
argument_list|)
expr_stmt|;
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"password.http"
argument_list|)
operator|.
name|put
argument_list|(
name|in
argument_list|,
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/** Enter a contributor agreement */
DECL|method|enterAgreement (String account, String name, AsyncCallback<NativeString> cb)
specifier|public
specifier|static
name|void
name|enterAgreement
parameter_list|(
name|String
name|account
parameter_list|,
name|String
name|name
parameter_list|,
name|AsyncCallback
argument_list|<
name|NativeString
argument_list|>
name|cb
parameter_list|)
block|{
name|AgreementInput
name|in
init|=
name|AgreementInput
operator|.
name|create
argument_list|()
decl_stmt|;
name|in
operator|.
name|name
argument_list|(
name|name
argument_list|)
expr_stmt|;
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"agreements"
argument_list|)
operator|.
name|put
argument_list|(
name|in
argument_list|,
name|cb
argument_list|)
expr_stmt|;
block|}
DECL|method|projectWatchArrayFromSet (Set<ProjectWatchInfo> set)
specifier|private
specifier|static
name|JsArray
argument_list|<
name|ProjectWatchInfo
argument_list|>
name|projectWatchArrayFromSet
parameter_list|(
name|Set
argument_list|<
name|ProjectWatchInfo
argument_list|>
name|set
parameter_list|)
block|{
name|JsArray
argument_list|<
name|ProjectWatchInfo
argument_list|>
name|jsArray
init|=
name|JsArray
operator|.
name|createArray
argument_list|()
operator|.
name|cast
argument_list|()
decl_stmt|;
for|for
control|(
name|ProjectWatchInfo
name|p
range|:
name|set
control|)
block|{
name|jsArray
operator|.
name|push
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
return|return
name|jsArray
return|;
block|}
DECL|class|AgreementInput
specifier|private
specifier|static
class|class
name|AgreementInput
extends|extends
name|JavaScriptObject
block|{
DECL|method|name (String n)
specifier|final
specifier|native
name|void
name|name
parameter_list|(
name|String
name|n
parameter_list|)
comment|/*-{ if(n)this.name=n; }-*/
function_decl|;
DECL|method|create ()
specifier|static
name|AgreementInput
name|create
parameter_list|()
block|{
return|return
name|createObject
argument_list|()
operator|.
name|cast
argument_list|()
return|;
block|}
DECL|method|AgreementInput ()
specifier|protected
name|AgreementInput
parameter_list|()
block|{}
block|}
DECL|class|HttpPasswordInput
specifier|private
specifier|static
class|class
name|HttpPasswordInput
extends|extends
name|JavaScriptObject
block|{
DECL|method|generate (boolean g)
specifier|final
specifier|native
name|void
name|generate
parameter_list|(
name|boolean
name|g
parameter_list|)
comment|/*-{ if(g)this.generate=g; }-*/
function_decl|;
DECL|method|create ()
specifier|static
name|HttpPasswordInput
name|create
parameter_list|()
block|{
return|return
name|createObject
argument_list|()
operator|.
name|cast
argument_list|()
return|;
block|}
DECL|method|HttpPasswordInput ()
specifier|protected
name|HttpPasswordInput
parameter_list|()
block|{}
block|}
DECL|class|UsernameInput
specifier|private
specifier|static
class|class
name|UsernameInput
extends|extends
name|JavaScriptObject
block|{
DECL|method|username (String u)
specifier|final
specifier|native
name|void
name|username
parameter_list|(
name|String
name|u
parameter_list|)
comment|/*-{ if(u)this.username=u; }-*/
function_decl|;
DECL|method|create ()
specifier|static
name|UsernameInput
name|create
parameter_list|()
block|{
return|return
name|createObject
argument_list|()
operator|.
name|cast
argument_list|()
return|;
block|}
DECL|method|UsernameInput ()
specifier|protected
name|UsernameInput
parameter_list|()
block|{}
block|}
DECL|class|AccountNameInput
specifier|private
specifier|static
class|class
name|AccountNameInput
extends|extends
name|JavaScriptObject
block|{
DECL|method|name (String n)
specifier|final
specifier|native
name|void
name|name
parameter_list|(
name|String
name|n
parameter_list|)
comment|/*-{ if(n)this.name=n; }-*/
function_decl|;
DECL|method|create ()
specifier|static
name|AccountNameInput
name|create
parameter_list|()
block|{
return|return
name|createObject
argument_list|()
operator|.
name|cast
argument_list|()
return|;
block|}
DECL|method|AccountNameInput ()
specifier|protected
name|AccountNameInput
parameter_list|()
block|{}
block|}
DECL|method|addGpgKey ( String account, String armored, AsyncCallback<NativeMap<GpgKeyInfo>> cb)
specifier|public
specifier|static
name|void
name|addGpgKey
parameter_list|(
name|String
name|account
parameter_list|,
name|String
name|armored
parameter_list|,
name|AsyncCallback
argument_list|<
name|NativeMap
argument_list|<
name|GpgKeyInfo
argument_list|>
argument_list|>
name|cb
parameter_list|)
block|{
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"gpgkeys"
argument_list|)
operator|.
name|post
argument_list|(
name|GpgKeysInput
operator|.
name|add
argument_list|(
name|armored
argument_list|)
argument_list|,
name|cb
argument_list|)
expr_stmt|;
block|}
DECL|method|deleteGpgKeys ( String account, Iterable<String> fingerprints, AsyncCallback<NativeMap<GpgKeyInfo>> cb)
specifier|public
specifier|static
name|void
name|deleteGpgKeys
parameter_list|(
name|String
name|account
parameter_list|,
name|Iterable
argument_list|<
name|String
argument_list|>
name|fingerprints
parameter_list|,
name|AsyncCallback
argument_list|<
name|NativeMap
argument_list|<
name|GpgKeyInfo
argument_list|>
argument_list|>
name|cb
parameter_list|)
block|{
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"gpgkeys"
argument_list|)
operator|.
name|post
argument_list|(
name|GpgKeysInput
operator|.
name|delete
argument_list|(
name|fingerprints
argument_list|)
argument_list|,
name|cb
argument_list|)
expr_stmt|;
block|}
comment|/** List contributor agreements */
DECL|method|getAgreements (String account, AsyncCallback<JsArray<AgreementInfo>> cb)
specifier|public
specifier|static
name|void
name|getAgreements
parameter_list|(
name|String
name|account
parameter_list|,
name|AsyncCallback
argument_list|<
name|JsArray
argument_list|<
name|AgreementInfo
argument_list|>
argument_list|>
name|cb
parameter_list|)
block|{
operator|new
name|RestApi
argument_list|(
literal|"/accounts/"
argument_list|)
operator|.
name|id
argument_list|(
name|account
argument_list|)
operator|.
name|view
argument_list|(
literal|"agreements"
argument_list|)
operator|.
name|get
argument_list|(
name|cb
argument_list|)
expr_stmt|;
block|}
DECL|class|GpgKeysInput
specifier|private
specifier|static
class|class
name|GpgKeysInput
extends|extends
name|JavaScriptObject
block|{
DECL|method|add (String key)
specifier|static
name|GpgKeysInput
name|add
parameter_list|(
name|String
name|key
parameter_list|)
block|{
return|return
name|createWithAdd
argument_list|(
name|Natives
operator|.
name|arrayOf
argument_list|(
name|key
argument_list|)
argument_list|)
return|;
block|}
DECL|method|delete (Iterable<String> fingerprints)
specifier|static
name|GpgKeysInput
name|delete
parameter_list|(
name|Iterable
argument_list|<
name|String
argument_list|>
name|fingerprints
parameter_list|)
block|{
return|return
name|createWithDelete
argument_list|(
name|Natives
operator|.
name|arrayOf
argument_list|(
name|fingerprints
argument_list|)
argument_list|)
return|;
block|}
DECL|method|createWithAdd (JsArrayString keys)
specifier|private
specifier|static
specifier|native
name|GpgKeysInput
name|createWithAdd
parameter_list|(
name|JsArrayString
name|keys
parameter_list|)
comment|/*-{       return {'add': keys};     }-*/
function_decl|;
DECL|method|createWithDelete (JsArrayString fingerprints)
specifier|private
specifier|static
specifier|native
name|GpgKeysInput
name|createWithDelete
parameter_list|(
name|JsArrayString
name|fingerprints
parameter_list|)
comment|/*-{       return {'delete': fingerprints};     }-*/
function_decl|;
DECL|method|GpgKeysInput ()
specifier|protected
name|GpgKeysInput
parameter_list|()
block|{}
block|}
block|}
end_class

end_unit

