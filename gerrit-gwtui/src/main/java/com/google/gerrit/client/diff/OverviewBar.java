begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|//Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.diff
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|diff
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Unit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseDownEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseMoveEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|MouseUpEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|resources
operator|.
name|client
operator|.
name|CssResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiBinder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiField
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|DOM
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTMLPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_import
import|import
name|net
operator|.
name|codemirror
operator|.
name|lib
operator|.
name|CodeMirror
import|;
end_import

begin_import
import|import
name|net
operator|.
name|codemirror
operator|.
name|lib
operator|.
name|LineCharacter
import|;
end_import

begin_import
import|import
name|net
operator|.
name|codemirror
operator|.
name|lib
operator|.
name|ScrollInfo
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/** Displays overview of all edits and comments in this file. */
end_comment

begin_class
DECL|class|OverviewBar
class|class
name|OverviewBar
extends|extends
name|Composite
implements|implements
name|ClickHandler
block|{
DECL|interface|Binder
interface|interface
name|Binder
extends|extends
name|UiBinder
argument_list|<
name|HTMLPanel
argument_list|,
name|OverviewBar
argument_list|>
block|{}
DECL|field|uiBinder
specifier|private
specifier|static
specifier|final
name|Binder
name|uiBinder
init|=
name|GWT
operator|.
name|create
argument_list|(
name|Binder
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|interface|Style
interface|interface
name|Style
extends|extends
name|CssResource
block|{
DECL|method|gutter ()
name|String
name|gutter
parameter_list|()
function_decl|;
DECL|method|halfGutter ()
name|String
name|halfGutter
parameter_list|()
function_decl|;
DECL|method|comment ()
name|String
name|comment
parameter_list|()
function_decl|;
DECL|method|draft ()
name|String
name|draft
parameter_list|()
function_decl|;
DECL|method|insert ()
name|String
name|insert
parameter_list|()
function_decl|;
DECL|method|delete ()
name|String
name|delete
parameter_list|()
function_decl|;
DECL|method|viewportDrag ()
name|String
name|viewportDrag
parameter_list|()
function_decl|;
block|}
DECL|enum|MarkType
enum|enum
name|MarkType
block|{
DECL|enumConstant|COMMENT
DECL|enumConstant|DRAFT
DECL|enumConstant|INSERT
DECL|enumConstant|DELETE
DECL|enumConstant|EDIT
name|COMMENT
block|,
name|DRAFT
block|,
name|INSERT
block|,
name|DELETE
block|,
name|EDIT
block|}
DECL|field|style
annotation|@
name|UiField
name|Style
name|style
decl_stmt|;
DECL|field|viewport
annotation|@
name|UiField
name|Label
name|viewport
decl_stmt|;
DECL|field|diff
specifier|private
specifier|final
name|List
argument_list|<
name|MarkHandle
argument_list|>
name|diff
decl_stmt|;
DECL|field|comments
specifier|private
specifier|final
name|Set
argument_list|<
name|MarkHandle
argument_list|>
name|comments
decl_stmt|;
DECL|field|cmB
specifier|private
name|CodeMirror
name|cmB
decl_stmt|;
DECL|field|dragging
specifier|private
name|boolean
name|dragging
decl_stmt|;
DECL|field|startY
specifier|private
name|int
name|startY
decl_stmt|;
DECL|field|ratio
specifier|private
name|double
name|ratio
decl_stmt|;
DECL|method|OverviewBar ()
name|OverviewBar
parameter_list|()
block|{
name|initWidget
argument_list|(
name|uiBinder
operator|.
name|createAndBindUi
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
name|diff
operator|=
operator|new
name|ArrayList
argument_list|<
name|MarkHandle
argument_list|>
argument_list|()
expr_stmt|;
name|comments
operator|=
operator|new
name|HashSet
argument_list|<
name|MarkHandle
argument_list|>
argument_list|()
expr_stmt|;
name|addDomHandler
argument_list|(
name|this
argument_list|,
name|ClickEvent
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|init (CodeMirror cmB)
name|void
name|init
parameter_list|(
name|CodeMirror
name|cmB
parameter_list|)
block|{
name|this
operator|.
name|cmB
operator|=
name|cmB
expr_stmt|;
block|}
DECL|method|refresh ()
name|void
name|refresh
parameter_list|()
block|{
name|update
argument_list|(
name|cmB
operator|.
name|getScrollInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|update (ScrollInfo si)
name|void
name|update
parameter_list|(
name|ScrollInfo
name|si
parameter_list|)
block|{
name|double
name|viewHeight
init|=
name|si
operator|.
name|getClientHeight
argument_list|()
decl_stmt|;
name|double
name|r
init|=
name|ratio
argument_list|(
name|si
argument_list|)
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
name|style
init|=
name|viewport
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
decl_stmt|;
name|style
operator|.
name|setTop
argument_list|(
name|si
operator|.
name|getTop
argument_list|()
operator|*
name|r
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|style
operator|.
name|setHeight
argument_list|(
name|Math
operator|.
name|max
argument_list|(
literal|10
argument_list|,
name|viewHeight
operator|*
name|r
argument_list|)
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setHeight
argument_list|(
name|viewHeight
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
for|for
control|(
name|MarkHandle
name|info
range|:
name|diff
control|)
block|{
name|info
operator|.
name|position
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|MarkHandle
name|info
range|:
name|comments
control|)
block|{
name|info
operator|.
name|position
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onUnload ()
specifier|protected
name|void
name|onUnload
parameter_list|()
block|{
name|super
operator|.
name|onUnload
argument_list|()
expr_stmt|;
if|if
condition|(
name|dragging
condition|)
block|{
name|DOM
operator|.
name|releaseCapture
argument_list|(
name|viewport
operator|.
name|getElement
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onClick (ClickEvent e)
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getY
argument_list|()
operator|<
name|viewport
operator|.
name|getElement
argument_list|()
operator|.
name|getOffsetTop
argument_list|()
condition|)
block|{
name|CodeMirror
operator|.
name|handleVimKey
argument_list|(
name|cmB
argument_list|,
literal|"<PageUp>"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|CodeMirror
operator|.
name|handleVimKey
argument_list|(
name|cmB
argument_list|,
literal|"<PageDown>"
argument_list|)
expr_stmt|;
block|}
name|cmB
operator|.
name|focus
argument_list|()
expr_stmt|;
block|}
annotation|@
name|UiHandler
argument_list|(
literal|"viewport"
argument_list|)
DECL|method|onMouseDown (MouseDownEvent e)
name|void
name|onMouseDown
parameter_list|(
name|MouseDownEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|cmB
operator|!=
literal|null
condition|)
block|{
name|dragging
operator|=
literal|true
expr_stmt|;
name|ratio
operator|=
name|ratio
argument_list|(
name|cmB
operator|.
name|getScrollInfo
argument_list|()
argument_list|)
expr_stmt|;
name|startY
operator|=
name|e
operator|.
name|getY
argument_list|()
expr_stmt|;
name|viewport
operator|.
name|addStyleName
argument_list|(
name|style
operator|.
name|viewportDrag
argument_list|()
argument_list|)
expr_stmt|;
name|DOM
operator|.
name|setCapture
argument_list|(
name|viewport
operator|.
name|getElement
argument_list|()
argument_list|)
expr_stmt|;
name|e
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
name|e
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|UiHandler
argument_list|(
literal|"viewport"
argument_list|)
DECL|method|onMouseMove (MouseMoveEvent e)
name|void
name|onMouseMove
parameter_list|(
name|MouseMoveEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|dragging
condition|)
block|{
name|int
name|y
init|=
name|e
operator|.
name|getRelativeY
argument_list|(
name|getElement
argument_list|()
argument_list|)
operator|-
name|startY
decl_stmt|;
name|cmB
operator|.
name|scrollToY
argument_list|(
name|Math
operator|.
name|max
argument_list|(
literal|0
argument_list|,
name|y
operator|/
name|ratio
argument_list|)
argument_list|)
expr_stmt|;
name|e
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
name|e
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|UiHandler
argument_list|(
literal|"viewport"
argument_list|)
DECL|method|onMouseUp (MouseUpEvent e)
name|void
name|onMouseUp
parameter_list|(
name|MouseUpEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|dragging
condition|)
block|{
name|dragging
operator|=
literal|false
expr_stmt|;
name|DOM
operator|.
name|releaseCapture
argument_list|(
name|viewport
operator|.
name|getElement
argument_list|()
argument_list|)
expr_stmt|;
name|viewport
operator|.
name|removeStyleName
argument_list|(
name|style
operator|.
name|viewportDrag
argument_list|()
argument_list|)
expr_stmt|;
name|e
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
name|e
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|ratio (ScrollInfo si)
specifier|private
name|double
name|ratio
parameter_list|(
name|ScrollInfo
name|si
parameter_list|)
block|{
name|double
name|barHeight
init|=
name|si
operator|.
name|getClientHeight
argument_list|()
decl_stmt|;
name|double
name|contentHeight
init|=
name|si
operator|.
name|getHeight
argument_list|()
decl_stmt|;
return|return
name|barHeight
operator|/
name|contentHeight
return|;
block|}
DECL|method|add (CodeMirror cm, int line, int height, MarkType type)
name|MarkHandle
name|add
parameter_list|(
name|CodeMirror
name|cm
parameter_list|,
name|int
name|line
parameter_list|,
name|int
name|height
parameter_list|,
name|MarkType
name|type
parameter_list|)
block|{
name|MarkHandle
name|mark
init|=
operator|new
name|MarkHandle
argument_list|(
name|cm
argument_list|,
name|line
argument_list|,
name|height
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|COMMENT
case|:
name|mark
operator|.
name|addStyleName
argument_list|(
name|style
operator|.
name|comment
argument_list|()
argument_list|)
expr_stmt|;
name|comments
operator|.
name|add
argument_list|(
name|mark
argument_list|)
expr_stmt|;
break|break;
case|case
name|DRAFT
case|:
name|mark
operator|.
name|addStyleName
argument_list|(
name|style
operator|.
name|draft
argument_list|()
argument_list|)
expr_stmt|;
name|mark
operator|.
name|getElement
argument_list|()
operator|.
name|setInnerText
argument_list|(
literal|"*"
argument_list|)
expr_stmt|;
name|comments
operator|.
name|add
argument_list|(
name|mark
argument_list|)
expr_stmt|;
break|break;
case|case
name|INSERT
case|:
name|mark
operator|.
name|addStyleName
argument_list|(
name|style
operator|.
name|insert
argument_list|()
argument_list|)
expr_stmt|;
name|diff
operator|.
name|add
argument_list|(
name|mark
argument_list|)
expr_stmt|;
break|break;
case|case
name|DELETE
case|:
name|mark
operator|.
name|addStyleName
argument_list|(
name|style
operator|.
name|delete
argument_list|()
argument_list|)
expr_stmt|;
name|diff
operator|.
name|add
argument_list|(
name|mark
argument_list|)
expr_stmt|;
break|break;
case|case
name|EDIT
case|:
name|mark
operator|.
name|edit
operator|=
name|DOM
operator|.
name|createDiv
argument_list|()
expr_stmt|;
name|mark
operator|.
name|edit
operator|.
name|setClassName
argument_list|(
name|style
operator|.
name|halfGutter
argument_list|()
argument_list|)
expr_stmt|;
name|mark
operator|.
name|getElement
argument_list|()
operator|.
name|appendChild
argument_list|(
name|mark
operator|.
name|edit
argument_list|)
expr_stmt|;
name|mark
operator|.
name|addStyleName
argument_list|(
name|style
operator|.
name|insert
argument_list|()
argument_list|)
expr_stmt|;
name|diff
operator|.
name|add
argument_list|(
name|mark
argument_list|)
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|cmB
operator|!=
literal|null
condition|)
block|{
name|mark
operator|.
name|position
argument_list|(
name|ratio
argument_list|(
name|cmB
operator|.
name|getScrollInfo
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
operator|(
operator|(
name|HTMLPanel
operator|)
name|getWidget
argument_list|()
operator|)
operator|.
name|add
argument_list|(
name|mark
argument_list|)
expr_stmt|;
return|return
name|mark
return|;
block|}
DECL|method|clearDiffMarkers ()
name|void
name|clearDiffMarkers
parameter_list|()
block|{
for|for
control|(
name|MarkHandle
name|mark
range|:
name|diff
control|)
block|{
name|mark
operator|.
name|removeFromParent
argument_list|()
expr_stmt|;
block|}
name|diff
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
DECL|class|MarkHandle
class|class
name|MarkHandle
extends|extends
name|Widget
implements|implements
name|ClickHandler
block|{
DECL|field|MIN_HEIGHT
specifier|private
specifier|static
specifier|final
name|int
name|MIN_HEIGHT
init|=
literal|3
decl_stmt|;
DECL|field|cm
specifier|private
specifier|final
name|CodeMirror
name|cm
decl_stmt|;
DECL|field|line
specifier|private
specifier|final
name|int
name|line
decl_stmt|;
DECL|field|height
specifier|private
specifier|final
name|int
name|height
decl_stmt|;
DECL|field|edit
specifier|private
name|Element
name|edit
decl_stmt|;
DECL|method|MarkHandle (CodeMirror cm, int line, int height)
name|MarkHandle
parameter_list|(
name|CodeMirror
name|cm
parameter_list|,
name|int
name|line
parameter_list|,
name|int
name|height
parameter_list|)
block|{
name|this
operator|.
name|cm
operator|=
name|cm
expr_stmt|;
name|this
operator|.
name|line
operator|=
name|line
expr_stmt|;
name|this
operator|.
name|height
operator|=
name|height
expr_stmt|;
name|setElement
argument_list|(
name|DOM
operator|.
name|createDiv
argument_list|()
argument_list|)
expr_stmt|;
name|setStyleName
argument_list|(
name|style
operator|.
name|gutter
argument_list|()
argument_list|)
expr_stmt|;
name|addDomHandler
argument_list|(
name|this
argument_list|,
name|ClickEvent
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|position (double ratio)
name|void
name|position
parameter_list|(
name|double
name|ratio
parameter_list|)
block|{
name|double
name|y
init|=
name|cm
operator|.
name|heightAtLine
argument_list|(
name|line
argument_list|,
literal|"local"
argument_list|)
decl_stmt|;
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setTop
argument_list|(
name|y
operator|*
name|ratio
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
if|if
condition|(
name|height
operator|>
literal|1
condition|)
block|{
name|double
name|e
init|=
name|cm
operator|.
name|heightAtLine
argument_list|(
name|line
operator|+
name|height
argument_list|,
literal|"local"
argument_list|)
decl_stmt|;
name|double
name|h
init|=
name|Math
operator|.
name|max
argument_list|(
name|MIN_HEIGHT
argument_list|,
operator|(
name|e
operator|-
name|y
operator|)
operator|*
name|ratio
argument_list|)
decl_stmt|;
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setHeight
argument_list|(
name|h
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
if|if
condition|(
name|edit
operator|!=
literal|null
condition|)
block|{
name|edit
operator|.
name|getStyle
argument_list|()
operator|.
name|setHeight
argument_list|(
name|h
argument_list|,
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
DECL|method|onClick (ClickEvent e)
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|height
operator|==
literal|1
operator|||
operator|!
name|visible
argument_list|()
condition|)
block|{
name|e
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
name|double
name|y
init|=
name|cm
operator|.
name|heightAtLine
argument_list|(
name|line
argument_list|,
literal|"local"
argument_list|)
decl_stmt|;
name|double
name|viewport
init|=
name|cm
operator|.
name|getScrollInfo
argument_list|()
operator|.
name|getClientHeight
argument_list|()
decl_stmt|;
name|cm
operator|.
name|setCursor
argument_list|(
name|LineCharacter
operator|.
name|create
argument_list|(
name|line
argument_list|)
argument_list|)
expr_stmt|;
name|cm
operator|.
name|scrollToY
argument_list|(
name|y
operator|-
literal|0.5
operator|*
name|viewport
argument_list|)
expr_stmt|;
name|cm
operator|.
name|focus
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|visible ()
specifier|private
name|boolean
name|visible
parameter_list|()
block|{
name|int
name|markT
init|=
name|getElement
argument_list|()
operator|.
name|getOffsetTop
argument_list|()
decl_stmt|;
name|int
name|markE
init|=
name|markT
operator|+
name|getElement
argument_list|()
operator|.
name|getOffsetHeight
argument_list|()
decl_stmt|;
name|int
name|viewT
init|=
name|viewport
operator|.
name|getElement
argument_list|()
operator|.
name|getOffsetTop
argument_list|()
decl_stmt|;
name|int
name|viewE
init|=
name|viewT
operator|+
name|viewport
operator|.
name|getElement
argument_list|()
operator|.
name|getOffsetHeight
argument_list|()
decl_stmt|;
return|return
operator|(
name|viewT
operator|<=
name|markT
operator|&&
name|markT
operator|<
name|viewE
operator|)
comment|// mark top within viewport
operator|||
operator|(
name|viewT
operator|<=
name|markE
operator|&&
name|markE
operator|<
name|viewE
operator|)
comment|// mark end within viewport
operator|||
operator|(
name|markT
operator|<=
name|viewT
operator|&&
name|viewE
operator|<=
name|markE
operator|)
return|;
comment|// mark contains viewport
block|}
DECL|method|remove ()
name|void
name|remove
parameter_list|()
block|{
name|removeFromParent
argument_list|()
expr_stmt|;
name|comments
operator|.
name|remove
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

