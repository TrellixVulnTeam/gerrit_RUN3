begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2008 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.account
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|account
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|Gerrit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|projects
operator|.
name|ProjectMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|GerritCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|ScreenLoadCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|HintTextBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|ProjectNameSuggestOracle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|ProjectsTable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|PageLinks
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|AccountProjectWatchInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyCodes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ResizeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ResizeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|SelectionHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlowPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Grid
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTMLTable
operator|.
name|CellFormatter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|PopupPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ScrollPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestBox
operator|.
name|DefaultSuggestionDisplay
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestOracle
operator|.
name|Suggestion
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|globalkey
operator|.
name|client
operator|.
name|GlobalKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|globalkey
operator|.
name|client
operator|.
name|HidePopupPanelCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|user
operator|.
name|client
operator|.
name|PluginSafeDialogBox
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
DECL|class|MyWatchedProjectsScreen
specifier|public
class|class
name|MyWatchedProjectsScreen
extends|extends
name|SettingsScreen
implements|implements
name|ResizeHandler
block|{
DECL|field|addNew
specifier|private
name|Button
name|addNew
decl_stmt|;
DECL|field|nameBox
specifier|private
name|HintTextBox
name|nameBox
decl_stmt|;
DECL|field|nameTxt
specifier|private
name|SuggestBox
name|nameTxt
decl_stmt|;
DECL|field|filterTxt
specifier|private
name|HintTextBox
name|filterTxt
decl_stmt|;
DECL|field|watchesTab
specifier|private
name|MyWatchesTable
name|watchesTab
decl_stmt|;
DECL|field|browse
specifier|private
name|Button
name|browse
decl_stmt|;
DECL|field|popup
specifier|private
name|PluginSafeDialogBox
name|popup
decl_stmt|;
DECL|field|close
specifier|private
name|Button
name|close
decl_stmt|;
DECL|field|projectsTab
specifier|private
name|ProjectsTable
name|projectsTab
decl_stmt|;
DECL|field|delSel
specifier|private
name|Button
name|delSel
decl_stmt|;
DECL|field|popupPosition
specifier|private
name|PopupPanel
operator|.
name|PositionCallback
name|popupPosition
decl_stmt|;
DECL|field|regWindowResize
specifier|private
name|HandlerRegistration
name|regWindowResize
decl_stmt|;
DECL|field|preferredPopupWidth
specifier|private
name|int
name|preferredPopupWidth
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|submitOnSelection
specifier|private
name|boolean
name|submitOnSelection
decl_stmt|;
DECL|field|firstPopupLoad
specifier|private
name|boolean
name|firstPopupLoad
init|=
literal|true
decl_stmt|;
DECL|field|popingUp
specifier|private
name|boolean
name|popingUp
decl_stmt|;
DECL|field|sp
specifier|private
name|ScrollPanel
name|sp
decl_stmt|;
annotation|@
name|Override
DECL|method|onInitUI ()
specifier|protected
name|void
name|onInitUI
parameter_list|()
block|{
name|super
operator|.
name|onInitUI
argument_list|()
expr_stmt|;
name|createWidgets
argument_list|()
expr_stmt|;
comment|/* top table */
specifier|final
name|Grid
name|grid
init|=
operator|new
name|Grid
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|grid
operator|.
name|setStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|infoBlock
argument_list|()
argument_list|)
expr_stmt|;
name|grid
operator|.
name|setText
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|Util
operator|.
name|C
operator|.
name|watchedProjectName
argument_list|()
argument_list|)
expr_stmt|;
name|grid
operator|.
name|setWidget
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|nameTxt
argument_list|)
expr_stmt|;
name|grid
operator|.
name|setText
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|Util
operator|.
name|C
operator|.
name|watchedProjectFilter
argument_list|()
argument_list|)
expr_stmt|;
name|grid
operator|.
name|setWidget
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|filterTxt
argument_list|)
expr_stmt|;
specifier|final
name|CellFormatter
name|fmt
init|=
name|grid
operator|.
name|getCellFormatter
argument_list|()
decl_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|topmost
argument_list|()
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|topmost
argument_list|()
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|bottomheader
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|FlowPanel
name|fp
init|=
operator|new
name|FlowPanel
argument_list|()
decl_stmt|;
name|fp
operator|.
name|setStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|addWatchPanel
argument_list|()
argument_list|)
expr_stmt|;
name|fp
operator|.
name|add
argument_list|(
name|grid
argument_list|)
expr_stmt|;
name|fp
operator|.
name|add
argument_list|(
name|addNew
argument_list|)
expr_stmt|;
name|fp
operator|.
name|add
argument_list|(
name|browse
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|fp
argument_list|)
expr_stmt|;
comment|/* bottom table */
name|add
argument_list|(
name|watchesTab
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|delSel
argument_list|)
expr_stmt|;
comment|/* popup */
specifier|final
name|FlowPanel
name|pfp
init|=
operator|new
name|FlowPanel
argument_list|()
decl_stmt|;
name|sp
operator|=
operator|new
name|ScrollPanel
argument_list|(
name|projectsTab
argument_list|)
expr_stmt|;
name|pfp
operator|.
name|add
argument_list|(
name|sp
argument_list|)
expr_stmt|;
name|pfp
operator|.
name|add
argument_list|(
name|close
argument_list|)
expr_stmt|;
name|popup
operator|.
name|setWidget
argument_list|(
name|pfp
argument_list|)
expr_stmt|;
name|popupPosition
operator|=
operator|new
name|PopupPanel
operator|.
name|PositionCallback
argument_list|()
block|{
specifier|public
name|void
name|setPosition
parameter_list|(
name|int
name|offsetWidth
parameter_list|,
name|int
name|offsetHeight
parameter_list|)
block|{
if|if
condition|(
name|preferredPopupWidth
operator|==
operator|-
literal|1
condition|)
block|{
name|preferredPopupWidth
operator|=
name|offsetWidth
expr_stmt|;
block|}
name|int
name|top
init|=
name|grid
operator|.
name|getAbsoluteTop
argument_list|()
operator|-
literal|50
decl_stmt|;
comment|// under page header
comment|// Try to place it to the right of everything else, but not
comment|// right justified
name|int
name|left
init|=
literal|5
operator|+
name|Math
operator|.
name|max
argument_list|(
name|grid
operator|.
name|getAbsoluteLeft
argument_list|()
operator|+
name|grid
operator|.
name|getOffsetWidth
argument_list|()
argument_list|,
name|watchesTab
operator|.
name|getAbsoluteLeft
argument_list|()
operator|+
name|watchesTab
operator|.
name|getOffsetWidth
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|top
operator|+
name|offsetHeight
operator|>
name|Window
operator|.
name|getClientHeight
argument_list|()
condition|)
block|{
name|top
operator|=
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|-
name|offsetHeight
expr_stmt|;
block|}
if|if
condition|(
name|left
operator|+
name|offsetWidth
operator|>
name|Window
operator|.
name|getClientWidth
argument_list|()
condition|)
block|{
name|left
operator|=
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|-
name|offsetWidth
expr_stmt|;
block|}
if|if
condition|(
name|top
operator|<
literal|0
condition|)
block|{
name|sp
operator|.
name|setHeight
argument_list|(
operator|(
name|sp
operator|.
name|getOffsetHeight
argument_list|()
operator|+
name|top
operator|)
operator|+
literal|"px"
argument_list|)
expr_stmt|;
name|top
operator|=
literal|0
expr_stmt|;
block|}
if|if
condition|(
name|left
operator|<
literal|0
condition|)
block|{
name|sp
operator|.
name|setWidth
argument_list|(
operator|(
name|sp
operator|.
name|getOffsetWidth
argument_list|()
operator|+
name|left
operator|)
operator|+
literal|"px"
argument_list|)
expr_stmt|;
name|left
operator|=
literal|0
expr_stmt|;
block|}
name|popup
operator|.
name|setPopupPosition
argument_list|(
name|left
argument_list|,
name|top
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onResize (final ResizeEvent event)
specifier|public
name|void
name|onResize
parameter_list|(
specifier|final
name|ResizeEvent
name|event
parameter_list|)
block|{
name|sp
operator|.
name|setSize
argument_list|(
literal|"100%"
argument_list|,
literal|"100%"
argument_list|)
expr_stmt|;
comment|// For some reason keeping track of preferredWidth keeps the width better,
comment|// but using 100% for height works better.
name|popup
operator|.
name|setHeight
argument_list|(
literal|"100%"
argument_list|)
expr_stmt|;
name|popupPosition
operator|.
name|setPosition
argument_list|(
name|preferredPopupWidth
argument_list|,
name|popup
operator|.
name|getOffsetHeight
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createWidgets ()
specifier|protected
name|void
name|createWidgets
parameter_list|()
block|{
name|nameBox
operator|=
operator|new
name|HintTextBox
argument_list|()
expr_stmt|;
name|nameTxt
operator|=
operator|new
name|SuggestBox
argument_list|(
operator|new
name|ProjectNameSuggestOracle
argument_list|()
argument_list|,
name|nameBox
argument_list|)
expr_stmt|;
name|nameBox
operator|.
name|setVisibleLength
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|nameBox
operator|.
name|setHintText
argument_list|(
name|Util
operator|.
name|C
operator|.
name|defaultProjectName
argument_list|()
argument_list|)
expr_stmt|;
name|nameBox
operator|.
name|addKeyPressHandler
argument_list|(
operator|new
name|KeyPressHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
name|submitOnSelection
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_ENTER
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|DefaultSuggestionDisplay
operator|)
name|nameTxt
operator|.
name|getSuggestionDisplay
argument_list|()
operator|)
operator|.
name|isSuggestionListShowing
argument_list|()
condition|)
block|{
name|submitOnSelection
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|doAddNew
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|nameTxt
operator|.
name|addSelectionHandler
argument_list|(
operator|new
name|SelectionHandler
argument_list|<
name|Suggestion
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSelection
parameter_list|(
name|SelectionEvent
argument_list|<
name|Suggestion
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
name|submitOnSelection
condition|)
block|{
name|submitOnSelection
operator|=
literal|false
expr_stmt|;
name|doAddNew
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|filterTxt
operator|=
operator|new
name|HintTextBox
argument_list|()
expr_stmt|;
name|filterTxt
operator|.
name|setVisibleLength
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|filterTxt
operator|.
name|setHintText
argument_list|(
name|Util
operator|.
name|C
operator|.
name|defaultFilter
argument_list|()
argument_list|)
expr_stmt|;
name|filterTxt
operator|.
name|addKeyPressHandler
argument_list|(
operator|new
name|KeyPressHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getKeyCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_ENTER
condition|)
block|{
name|doAddNew
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|addNew
operator|=
operator|new
name|Button
argument_list|(
name|Util
operator|.
name|C
operator|.
name|buttonWatchProject
argument_list|()
argument_list|)
expr_stmt|;
name|addNew
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
specifier|final
name|ClickEvent
name|event
parameter_list|)
block|{
name|doAddNew
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|projectsTab
operator|=
operator|new
name|ProjectsTable
argument_list|()
block|{
block|{
name|keysNavigation
operator|.
name|add
argument_list|(
operator|new
name|OpenKeyCommand
argument_list|(
literal|0
argument_list|,
literal|'o'
argument_list|,
name|Util
operator|.
name|C
operator|.
name|projectListOpen
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|keysNavigation
operator|.
name|add
argument_list|(
operator|new
name|OpenKeyCommand
argument_list|(
literal|0
argument_list|,
name|KeyCodes
operator|.
name|KEY_ENTER
argument_list|,
name|Util
operator|.
name|C
operator|.
name|projectListOpen
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|movePointerTo
parameter_list|(
specifier|final
name|int
name|row
parameter_list|,
specifier|final
name|boolean
name|scroll
parameter_list|)
block|{
name|super
operator|.
name|movePointerTo
argument_list|(
name|row
argument_list|,
name|scroll
argument_list|)
expr_stmt|;
comment|// prevent user input from being overwritten by simply poping up
if|if
condition|(
operator|!
name|popingUp
operator|||
literal|""
operator|.
name|equals
argument_list|(
name|nameBox
operator|.
name|getText
argument_list|()
argument_list|)
condition|)
block|{
name|nameBox
operator|.
name|setText
argument_list|(
name|getRowItem
argument_list|(
name|row
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|onOpenRow
parameter_list|(
specifier|final
name|int
name|row
parameter_list|)
block|{
name|super
operator|.
name|onOpenRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|nameBox
operator|.
name|setText
argument_list|(
name|getRowItem
argument_list|(
name|row
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|doAddNew
argument_list|()
expr_stmt|;
block|}
block|}
expr_stmt|;
name|projectsTab
operator|.
name|setSavePointerId
argument_list|(
name|PageLinks
operator|.
name|SETTINGS_PROJECTS
argument_list|)
expr_stmt|;
name|close
operator|=
operator|new
name|Button
argument_list|(
name|Util
operator|.
name|C
operator|.
name|projectsClose
argument_list|()
argument_list|)
expr_stmt|;
name|close
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
specifier|final
name|ClickEvent
name|event
parameter_list|)
block|{
name|closePopup
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|popup
operator|=
operator|new
name|PluginSafeDialogBox
argument_list|()
expr_stmt|;
name|popup
operator|.
name|setModal
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|popup
operator|.
name|setText
argument_list|(
name|Util
operator|.
name|C
operator|.
name|projects
argument_list|()
argument_list|)
expr_stmt|;
name|browse
operator|=
operator|new
name|Button
argument_list|(
name|Util
operator|.
name|C
operator|.
name|buttonBrowseProjects
argument_list|()
argument_list|)
expr_stmt|;
name|browse
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
specifier|final
name|ClickEvent
name|event
parameter_list|)
block|{
name|displayPopup
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|watchesTab
operator|=
operator|new
name|MyWatchesTable
argument_list|()
expr_stmt|;
name|delSel
operator|=
operator|new
name|Button
argument_list|(
name|Util
operator|.
name|C
operator|.
name|buttonDeleteSshKey
argument_list|()
argument_list|)
expr_stmt|;
name|delSel
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
specifier|final
name|ClickEvent
name|event
parameter_list|)
block|{
name|watchesTab
operator|.
name|deleteChecked
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onLoad ()
specifier|protected
name|void
name|onLoad
parameter_list|()
block|{
name|super
operator|.
name|onLoad
argument_list|()
expr_stmt|;
name|populateWatches
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUnload ()
specifier|protected
name|void
name|onUnload
parameter_list|()
block|{
name|super
operator|.
name|onUnload
argument_list|()
expr_stmt|;
name|closePopup
argument_list|()
expr_stmt|;
block|}
DECL|method|displayPopup ()
specifier|protected
name|void
name|displayPopup
parameter_list|()
block|{
name|popingUp
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|firstPopupLoad
condition|)
block|{
comment|// For sizing/positioning, delay display until loaded
name|populateProjects
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|popup
operator|.
name|setPopupPositionAndShow
argument_list|(
name|popupPosition
argument_list|)
expr_stmt|;
name|GlobalKey
operator|.
name|dialog
argument_list|(
name|popup
argument_list|)
expr_stmt|;
name|GlobalKey
operator|.
name|addApplication
argument_list|(
name|popup
argument_list|,
operator|new
name|HidePopupPanelCommand
argument_list|(
literal|0
argument_list|,
name|KeyCodes
operator|.
name|KEY_ESCAPE
argument_list|,
name|popup
argument_list|)
argument_list|)
expr_stmt|;
name|projectsTab
operator|.
name|setRegisterKeys
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|projectsTab
operator|.
name|finishDisplay
argument_list|()
expr_stmt|;
if|if
condition|(
name|regWindowResize
operator|==
literal|null
condition|)
block|{
name|regWindowResize
operator|=
name|Window
operator|.
name|addResizeHandler
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
name|popingUp
operator|=
literal|false
expr_stmt|;
block|}
block|}
DECL|method|closePopup ()
specifier|protected
name|void
name|closePopup
parameter_list|()
block|{
name|popup
operator|.
name|hide
argument_list|()
expr_stmt|;
if|if
condition|(
name|regWindowResize
operator|!=
literal|null
condition|)
block|{
name|regWindowResize
operator|.
name|removeHandler
argument_list|()
expr_stmt|;
name|regWindowResize
operator|=
literal|null
expr_stmt|;
block|}
block|}
DECL|method|doAddNew ()
specifier|protected
name|void
name|doAddNew
parameter_list|()
block|{
specifier|final
name|String
name|projectName
init|=
name|nameTxt
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
literal|""
operator|.
name|equals
argument_list|(
name|projectName
argument_list|)
condition|)
block|{
return|return;
block|}
name|String
name|filter
init|=
name|filterTxt
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
name|filter
operator|==
literal|null
operator|||
name|filter
operator|.
name|isEmpty
argument_list|()
operator|||
name|filter
operator|.
name|equals
argument_list|(
name|Util
operator|.
name|C
operator|.
name|defaultFilter
argument_list|()
argument_list|)
condition|)
block|{
name|filter
operator|=
literal|null
expr_stmt|;
block|}
name|addNew
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|nameBox
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|filterTxt
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Util
operator|.
name|ACCOUNT_SVC
operator|.
name|addProjectWatch
argument_list|(
name|projectName
argument_list|,
name|filter
argument_list|,
operator|new
name|GerritCallback
argument_list|<
name|AccountProjectWatchInfo
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|(
specifier|final
name|AccountProjectWatchInfo
name|result
parameter_list|)
block|{
name|addNew
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|nameBox
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|filterTxt
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|nameTxt
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|watchesTab
operator|.
name|insertWatch
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
specifier|final
name|Throwable
name|caught
parameter_list|)
block|{
name|addNew
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|nameBox
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|filterTxt
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|super
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|populateWatches ()
specifier|protected
name|void
name|populateWatches
parameter_list|()
block|{
name|Util
operator|.
name|ACCOUNT_SVC
operator|.
name|myProjectWatch
argument_list|(
operator|new
name|ScreenLoadCallback
argument_list|<
name|List
argument_list|<
name|AccountProjectWatchInfo
argument_list|>
argument_list|>
argument_list|(
name|this
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|preDisplay
parameter_list|(
specifier|final
name|List
argument_list|<
name|AccountProjectWatchInfo
argument_list|>
name|result
parameter_list|)
block|{
name|watchesTab
operator|.
name|display
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|populateProjects ()
specifier|protected
name|void
name|populateProjects
parameter_list|()
block|{
name|ProjectMap
operator|.
name|all
argument_list|(
operator|new
name|GerritCallback
argument_list|<
name|ProjectMap
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
specifier|final
name|ProjectMap
name|result
parameter_list|)
block|{
name|projectsTab
operator|.
name|display
argument_list|(
name|result
argument_list|)
expr_stmt|;
if|if
condition|(
name|firstPopupLoad
condition|)
block|{
comment|// Display was delayed until table was loaded
name|firstPopupLoad
operator|=
literal|false
expr_stmt|;
name|displayPopup
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

