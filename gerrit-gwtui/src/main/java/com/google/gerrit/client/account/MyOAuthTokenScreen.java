begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2016 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.account
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|account
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|Gerrit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|info
operator|.
name|GeneralPreferences
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|info
operator|.
name|OAuthTokenInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|GerritCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|ScreenLoadCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|DateTimeFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|LocaleInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlowPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Grid
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTMLTable
operator|.
name|CellFormatter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|clippy
operator|.
name|client
operator|.
name|CopyableLabel
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_class
DECL|class|MyOAuthTokenScreen
specifier|public
class|class
name|MyOAuthTokenScreen
extends|extends
name|SettingsScreen
block|{
DECL|field|tokenLabel
specifier|private
name|CopyableLabel
name|tokenLabel
decl_stmt|;
DECL|field|expiresLabel
specifier|private
name|Label
name|expiresLabel
decl_stmt|;
DECL|field|expiredNote
specifier|private
name|Label
name|expiredNote
decl_stmt|;
DECL|field|netrcValue
specifier|private
name|CopyableLabel
name|netrcValue
decl_stmt|;
DECL|field|cookieValue
specifier|private
name|CopyableLabel
name|cookieValue
decl_stmt|;
DECL|field|flow
specifier|private
name|FlowPanel
name|flow
decl_stmt|;
DECL|field|grid
specifier|private
name|Grid
name|grid
decl_stmt|;
annotation|@
name|Override
DECL|method|onInitUI ()
specifier|protected
name|void
name|onInitUI
parameter_list|()
block|{
name|super
operator|.
name|onInitUI
argument_list|()
expr_stmt|;
name|tokenLabel
operator|=
operator|new
name|CopyableLabel
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|tokenLabel
operator|.
name|addStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|oauthToken
argument_list|()
argument_list|)
expr_stmt|;
name|expiresLabel
operator|=
operator|new
name|Label
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|expiresLabel
operator|.
name|addStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|oauthExpires
argument_list|()
argument_list|)
expr_stmt|;
name|grid
operator|=
operator|new
name|Grid
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|grid
operator|.
name|setStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|infoBlock
argument_list|()
argument_list|)
expr_stmt|;
name|grid
operator|.
name|addStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|oauthInfoBlock
argument_list|()
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|grid
argument_list|)
expr_stmt|;
name|expiredNote
operator|=
operator|new
name|Label
argument_list|(
name|Util
operator|.
name|C
operator|.
name|labelOAuthExpired
argument_list|()
argument_list|)
expr_stmt|;
name|expiredNote
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|expiredNote
argument_list|)
expr_stmt|;
name|row
argument_list|(
name|grid
argument_list|,
literal|0
argument_list|,
name|Util
operator|.
name|C
operator|.
name|labelOAuthToken
argument_list|()
argument_list|,
name|tokenLabel
argument_list|)
expr_stmt|;
name|row
argument_list|(
name|grid
argument_list|,
literal|1
argument_list|,
name|Util
operator|.
name|C
operator|.
name|labelOAuthExpires
argument_list|()
argument_list|,
name|expiresLabel
argument_list|)
expr_stmt|;
name|CellFormatter
name|fmt
init|=
name|grid
operator|.
name|getCellFormatter
argument_list|()
decl_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|topmost
argument_list|()
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|topmost
argument_list|()
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|bottomheader
argument_list|()
argument_list|)
expr_stmt|;
name|flow
operator|=
operator|new
name|FlowPanel
argument_list|()
expr_stmt|;
name|flow
operator|.
name|setStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|oauthPanel
argument_list|()
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|flow
argument_list|)
expr_stmt|;
name|Label
name|netrcLabel
init|=
operator|new
name|Label
argument_list|(
name|Util
operator|.
name|C
operator|.
name|labelOAuthNetRCEntry
argument_list|()
argument_list|)
decl_stmt|;
name|netrcLabel
operator|.
name|setStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|oauthPanelNetRCHeading
argument_list|()
argument_list|)
expr_stmt|;
name|flow
operator|.
name|add
argument_list|(
name|netrcLabel
argument_list|)
expr_stmt|;
name|netrcValue
operator|=
operator|new
name|CopyableLabel
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|netrcValue
operator|.
name|setStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|oauthPanelNetRCEntry
argument_list|()
argument_list|)
expr_stmt|;
name|flow
operator|.
name|add
argument_list|(
name|netrcValue
argument_list|)
expr_stmt|;
name|Label
name|cookieLabel
init|=
operator|new
name|Label
argument_list|(
name|Util
operator|.
name|C
operator|.
name|labelOAuthGitCookie
argument_list|()
argument_list|)
decl_stmt|;
name|cookieLabel
operator|.
name|setStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|oauthPanelCookieHeading
argument_list|()
argument_list|)
expr_stmt|;
name|flow
operator|.
name|add
argument_list|(
name|cookieLabel
argument_list|)
expr_stmt|;
name|cookieValue
operator|=
operator|new
name|CopyableLabel
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|cookieValue
operator|.
name|setStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|oauthPanelCookieEntry
argument_list|()
argument_list|)
expr_stmt|;
name|flow
operator|.
name|add
argument_list|(
name|cookieValue
argument_list|)
expr_stmt|;
block|}
DECL|method|row (Grid grid, int row, String name, Widget field)
specifier|private
name|void
name|row
parameter_list|(
name|Grid
name|grid
parameter_list|,
name|int
name|row
parameter_list|,
name|String
name|name
parameter_list|,
name|Widget
name|field
parameter_list|)
block|{
specifier|final
name|CellFormatter
name|fmt
init|=
name|grid
operator|.
name|getCellFormatter
argument_list|()
decl_stmt|;
if|if
condition|(
name|LocaleInfo
operator|.
name|getCurrentLocale
argument_list|()
operator|.
name|isRTL
argument_list|()
condition|)
block|{
name|grid
operator|.
name|setText
argument_list|(
name|row
argument_list|,
literal|1
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|grid
operator|.
name|setWidget
argument_list|(
name|row
argument_list|,
literal|0
argument_list|,
name|field
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
name|row
argument_list|,
literal|1
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|grid
operator|.
name|setText
argument_list|(
name|row
argument_list|,
literal|0
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|grid
operator|.
name|setWidget
argument_list|(
name|row
argument_list|,
literal|1
argument_list|,
name|field
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
name|row
argument_list|,
literal|0
argument_list|,
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|header
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onLoad ()
specifier|protected
name|void
name|onLoad
parameter_list|()
block|{
name|super
operator|.
name|onLoad
argument_list|()
expr_stmt|;
name|AccountApi
operator|.
name|self
argument_list|()
operator|.
name|view
argument_list|(
literal|"preferences"
argument_list|)
operator|.
name|get
argument_list|(
operator|new
name|ScreenLoadCallback
argument_list|<
name|GeneralPreferences
argument_list|>
argument_list|(
name|this
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|void
name|preDisplay
parameter_list|(
name|GeneralPreferences
name|prefs
parameter_list|)
block|{
name|display
argument_list|(
name|prefs
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|display (GeneralPreferences prefs)
specifier|private
name|void
name|display
parameter_list|(
name|GeneralPreferences
name|prefs
parameter_list|)
block|{
name|AccountApi
operator|.
name|self
argument_list|()
operator|.
name|view
argument_list|(
literal|"oauthtoken"
argument_list|)
operator|.
name|get
argument_list|(
operator|new
name|GerritCallback
argument_list|<
name|OAuthTokenInfo
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|OAuthTokenInfo
name|tokenInfo
parameter_list|)
block|{
name|tokenLabel
operator|.
name|setText
argument_list|(
name|tokenInfo
operator|.
name|accessToken
argument_list|()
argument_list|)
expr_stmt|;
name|expiresLabel
operator|.
name|setText
argument_list|(
name|getExpiresAt
argument_list|(
name|tokenInfo
argument_list|,
name|prefs
argument_list|)
argument_list|)
expr_stmt|;
name|netrcValue
operator|.
name|setText
argument_list|(
name|getNetRC
argument_list|(
name|tokenInfo
argument_list|)
argument_list|)
expr_stmt|;
name|cookieValue
operator|.
name|setText
argument_list|(
name|getCookie
argument_list|(
name|tokenInfo
argument_list|)
argument_list|)
expr_stmt|;
name|flow
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|expiredNote
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
if|if
condition|(
name|isNoSuchEntity
argument_list|(
name|caught
argument_list|)
operator|||
name|isSigninFailure
argument_list|(
name|caught
argument_list|)
condition|)
block|{
name|tokenLabel
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|expiresLabel
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|netrcValue
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|cookieValue
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|flow
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|expiredNote
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|showFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|getExpiresAt (OAuthTokenInfo tokenInfo)
specifier|private
specifier|static
name|long
name|getExpiresAt
parameter_list|(
name|OAuthTokenInfo
name|tokenInfo
parameter_list|)
block|{
if|if
condition|(
name|tokenInfo
operator|.
name|expiresAt
argument_list|()
operator|==
literal|null
condition|)
block|{
return|return
name|Long
operator|.
name|MAX_VALUE
return|;
block|}
name|long
name|expiresAt
decl_stmt|;
try|try
block|{
name|expiresAt
operator|=
name|Long
operator|.
name|parseLong
argument_list|(
name|tokenInfo
operator|.
name|expiresAt
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
return|return
name|Long
operator|.
name|MAX_VALUE
return|;
block|}
return|return
name|expiresAt
return|;
block|}
DECL|method|getExpiresAtSeconds (OAuthTokenInfo tokenInfo)
specifier|private
specifier|static
name|long
name|getExpiresAtSeconds
parameter_list|(
name|OAuthTokenInfo
name|tokenInfo
parameter_list|)
block|{
return|return
name|getExpiresAt
argument_list|(
name|tokenInfo
argument_list|)
operator|/
literal|1000L
return|;
block|}
DECL|method|getExpiresAt (OAuthTokenInfo tokenInfo, GeneralPreferences prefs)
specifier|private
specifier|static
name|String
name|getExpiresAt
parameter_list|(
name|OAuthTokenInfo
name|tokenInfo
parameter_list|,
name|GeneralPreferences
name|prefs
parameter_list|)
block|{
name|long
name|expiresAt
init|=
name|getExpiresAt
argument_list|(
name|tokenInfo
argument_list|)
decl_stmt|;
if|if
condition|(
name|expiresAt
operator|==
name|Long
operator|.
name|MAX_VALUE
condition|)
block|{
return|return
literal|""
return|;
block|}
name|String
name|dateFormat
init|=
name|prefs
operator|.
name|dateFormat
argument_list|()
operator|.
name|getLongFormat
argument_list|()
decl_stmt|;
name|String
name|timeFormat
init|=
name|prefs
operator|.
name|timeFormat
argument_list|()
operator|.
name|getFormat
argument_list|()
decl_stmt|;
name|DateTimeFormat
name|formatter
init|=
name|DateTimeFormat
operator|.
name|getFormat
argument_list|(
name|dateFormat
operator|+
literal|" "
operator|+
name|timeFormat
argument_list|)
decl_stmt|;
return|return
name|formatter
operator|.
name|format
argument_list|(
operator|new
name|Date
argument_list|(
name|expiresAt
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getNetRC (OAuthTokenInfo accessTokenInfo)
specifier|private
specifier|static
name|String
name|getNetRC
parameter_list|(
name|OAuthTokenInfo
name|accessTokenInfo
parameter_list|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"machine "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|accessTokenInfo
operator|.
name|resourceHost
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" login "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|accessTokenInfo
operator|.
name|username
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" password "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|accessTokenInfo
operator|.
name|accessToken
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|getCookie (OAuthTokenInfo accessTokenInfo)
specifier|private
specifier|static
name|String
name|getCookie
parameter_list|(
name|OAuthTokenInfo
name|accessTokenInfo
parameter_list|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|accessTokenInfo
operator|.
name|resourceHost
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\tFALSE\t/\tTRUE\t"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|getExpiresAtSeconds
argument_list|(
name|accessTokenInfo
argument_list|)
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\tgit-"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|accessTokenInfo
operator|.
name|username
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'\t'
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|accessTokenInfo
operator|.
name|accessToken
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|accessTokenInfo
operator|.
name|providerId
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|'@'
argument_list|)
operator|.
name|append
argument_list|(
name|accessTokenInfo
operator|.
name|providerId
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

