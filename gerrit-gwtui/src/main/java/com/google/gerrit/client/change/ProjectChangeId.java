begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|change
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|PageLinks
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_comment
comment|/** Provides logic for parsing a numeric change id and project from a URL. */
end_comment

begin_class
DECL|class|ProjectChangeId
specifier|public
class|class
name|ProjectChangeId
block|{
comment|/** Parses a {@link ProjectChangeId} from it's string representation. */
DECL|method|create (String token)
specifier|public
specifier|static
name|ProjectChangeId
name|create
parameter_list|(
name|String
name|token
parameter_list|)
block|{
name|String
name|mutableToken
init|=
name|token
decl_stmt|;
comment|// Try parsing /c/project/+/numericChangeId where token is project/+/numericChangeId
name|int
name|delimiter
init|=
name|mutableToken
operator|.
name|indexOf
argument_list|(
name|PageLinks
operator|.
name|PROJECT_CHANGE_DELIMITER
argument_list|)
decl_stmt|;
name|Project
operator|.
name|NameKey
name|project
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|delimiter
operator|>
literal|0
condition|)
block|{
name|project
operator|=
operator|new
name|Project
operator|.
name|NameKey
argument_list|(
name|token
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|delimiter
argument_list|)
argument_list|)
expr_stmt|;
name|mutableToken
operator|=
name|mutableToken
operator|.
name|substring
argument_list|(
name|delimiter
operator|+
name|PageLinks
operator|.
name|PROJECT_CHANGE_DELIMITER
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Try parsing /c/numericChangeId where token is numericChangeId
name|int
name|s
init|=
name|mutableToken
operator|.
name|indexOf
argument_list|(
literal|'/'
argument_list|)
decl_stmt|;
if|if
condition|(
name|s
operator|>
literal|0
condition|)
block|{
name|mutableToken
operator|=
name|mutableToken
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
comment|// Special case: project/+/1233,edit/
name|s
operator|=
name|mutableToken
operator|.
name|indexOf
argument_list|(
literal|",edit"
argument_list|)
expr_stmt|;
if|if
condition|(
name|s
operator|>
literal|0
condition|)
block|{
name|mutableToken
operator|=
name|mutableToken
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
name|Integer
name|cId
init|=
name|tryParse
argument_list|(
name|mutableToken
argument_list|)
decl_stmt|;
if|if
condition|(
name|cId
operator|!=
literal|null
condition|)
block|{
return|return
operator|new
name|ProjectChangeId
argument_list|(
name|project
argument_list|,
operator|new
name|Change
operator|.
name|Id
argument_list|(
name|cId
argument_list|)
argument_list|)
return|;
block|}
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|token
operator|+
literal|" is not a valid change identifier"
argument_list|)
throw|;
block|}
DECL|field|project
annotation|@
name|Nullable
specifier|private
specifier|final
name|Project
operator|.
name|NameKey
name|project
decl_stmt|;
DECL|field|changeId
specifier|private
specifier|final
name|Change
operator|.
name|Id
name|changeId
decl_stmt|;
annotation|@
name|VisibleForTesting
DECL|method|ProjectChangeId (@ullable Project.NameKey project, Change.Id changeId)
name|ProjectChangeId
parameter_list|(
annotation|@
name|Nullable
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|Change
operator|.
name|Id
name|changeId
parameter_list|)
block|{
name|this
operator|.
name|project
operator|=
name|project
expr_stmt|;
name|this
operator|.
name|changeId
operator|=
name|changeId
expr_stmt|;
block|}
annotation|@
name|Nullable
DECL|method|getProject ()
specifier|public
name|Project
operator|.
name|NameKey
name|getProject
parameter_list|()
block|{
return|return
name|project
return|;
block|}
DECL|method|getChangeId ()
specifier|public
name|Change
operator|.
name|Id
name|getChangeId
parameter_list|()
block|{
return|return
name|changeId
return|;
block|}
comment|/**    * Calculate the length of the string representation of the change ID that was parsed from the    * token.    *    * @return the length of the {@link com.google.gerrit.reviewdb.client.Change.Id} if no project was    *     parsed from the token. The length of {@link    *     com.google.gerrit.reviewdb.client.Project.NameKey} + the delimiter + the length of {@link    *     com.google.gerrit.reviewdb.client.Change.Id} otherwise.    */
DECL|method|identifierLength ()
specifier|public
name|int
name|identifierLength
parameter_list|()
block|{
if|if
condition|(
name|project
operator|==
literal|null
condition|)
block|{
return|return
name|String
operator|.
name|valueOf
argument_list|(
name|changeId
argument_list|)
operator|.
name|length
argument_list|()
return|;
block|}
return|return
name|PageLinks
operator|.
name|toChangeId
argument_list|(
name|project
argument_list|,
name|changeId
argument_list|)
operator|.
name|length
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object obj)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|instanceof
name|ProjectChangeId
condition|)
block|{
name|ProjectChangeId
name|other
init|=
operator|(
name|ProjectChangeId
operator|)
name|obj
decl_stmt|;
return|return
name|Objects
operator|.
name|equals
argument_list|(
name|changeId
argument_list|,
name|other
operator|.
name|changeId
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|project
argument_list|,
name|other
operator|.
name|project
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hash
argument_list|(
name|changeId
argument_list|,
name|project
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"ProjectChangeId.Result{changeId: "
operator|+
name|changeId
operator|+
literal|", project: "
operator|+
name|project
operator|+
literal|"}"
return|;
block|}
DECL|method|tryParse (String s)
specifier|private
specifier|static
name|Integer
name|tryParse
parameter_list|(
name|String
name|s
parameter_list|)
block|{
try|try
block|{
return|return
name|Integer
operator|.
name|parseInt
argument_list|(
name|s
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
block|}
end_class

end_unit

