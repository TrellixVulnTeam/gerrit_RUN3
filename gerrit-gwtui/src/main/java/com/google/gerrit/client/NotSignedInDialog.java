begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2009 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|CloseEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|CloseHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|History
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlowPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|PopupPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|globalkey
operator|.
name|client
operator|.
name|GlobalKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|user
operator|.
name|client
operator|.
name|PluginSafePopupPanel
import|;
end_import

begin_comment
comment|/** A dialog box telling the user they are not signed in. */
end_comment

begin_class
DECL|class|NotSignedInDialog
specifier|public
class|class
name|NotSignedInDialog
extends|extends
name|PluginSafePopupPanel
implements|implements
name|CloseHandler
argument_list|<
name|PopupPanel
argument_list|>
block|{
DECL|field|signin
specifier|private
name|Button
name|signin
decl_stmt|;
DECL|field|buttonClicked
specifier|private
name|boolean
name|buttonClicked
decl_stmt|;
DECL|method|NotSignedInDialog ()
specifier|public
name|NotSignedInDialog
parameter_list|()
block|{
name|super
argument_list|(
comment|/* auto hide */
literal|false
argument_list|,
comment|/* modal */
literal|true
argument_list|)
expr_stmt|;
name|setGlassEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|getGlassElement
argument_list|()
operator|.
name|addClassName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|errorDialogGlass
argument_list|()
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|errorDialog
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|FlowPanel
name|buttons
init|=
operator|new
name|FlowPanel
argument_list|()
decl_stmt|;
name|signin
operator|=
operator|new
name|Button
argument_list|()
expr_stmt|;
name|signin
operator|.
name|setText
argument_list|(
name|Gerrit
operator|.
name|C
operator|.
name|menuSignIn
argument_list|()
argument_list|)
expr_stmt|;
name|signin
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|buttonClicked
operator|=
literal|true
expr_stmt|;
name|hide
argument_list|()
expr_stmt|;
name|Gerrit
operator|.
name|doSignIn
argument_list|(
name|History
operator|.
name|getToken
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|add
argument_list|(
name|signin
argument_list|)
expr_stmt|;
specifier|final
name|Button
name|close
init|=
operator|new
name|Button
argument_list|()
decl_stmt|;
name|close
operator|.
name|getElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setProperty
argument_list|(
literal|"marginLeft"
argument_list|,
literal|"200px"
argument_list|)
expr_stmt|;
name|close
operator|.
name|setText
argument_list|(
name|Gerrit
operator|.
name|C
operator|.
name|signInDialogClose
argument_list|()
argument_list|)
expr_stmt|;
name|close
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|buttonClicked
operator|=
literal|true
expr_stmt|;
name|Gerrit
operator|.
name|deleteSessionCookie
argument_list|()
expr_stmt|;
name|hide
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|add
argument_list|(
name|close
argument_list|)
expr_stmt|;
name|Label
name|title
init|=
operator|new
name|Label
argument_list|(
name|Gerrit
operator|.
name|C
operator|.
name|notSignedInTitle
argument_list|()
argument_list|)
decl_stmt|;
name|title
operator|.
name|setStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|errorDialogTitle
argument_list|()
argument_list|)
expr_stmt|;
name|FlowPanel
name|center
init|=
operator|new
name|FlowPanel
argument_list|()
decl_stmt|;
name|center
operator|.
name|add
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|center
operator|.
name|add
argument_list|(
operator|new
name|HTML
argument_list|(
name|Gerrit
operator|.
name|C
operator|.
name|notSignedInBody
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|center
operator|.
name|add
argument_list|(
name|buttons
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|center
argument_list|)
expr_stmt|;
name|int
name|l
init|=
name|Window
operator|.
name|getScrollLeft
argument_list|()
operator|+
literal|20
decl_stmt|;
name|int
name|t
init|=
name|Window
operator|.
name|getScrollTop
argument_list|()
operator|+
literal|20
decl_stmt|;
name|setPopupPosition
argument_list|(
name|l
argument_list|,
name|t
argument_list|)
expr_stmt|;
name|addCloseHandler
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onClose (CloseEvent<PopupPanel> event)
specifier|public
name|void
name|onClose
parameter_list|(
name|CloseEvent
argument_list|<
name|PopupPanel
argument_list|>
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|buttonClicked
condition|)
block|{
comment|// the dialog was closed without one of the buttons being pressed
comment|// e.g. the user pressed ESC to close the dialog
name|Gerrit
operator|.
name|deleteSessionCookie
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|center ()
specifier|public
name|void
name|center
parameter_list|()
block|{
name|show
argument_list|()
expr_stmt|;
name|GlobalKey
operator|.
name|dialog
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|signin
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

