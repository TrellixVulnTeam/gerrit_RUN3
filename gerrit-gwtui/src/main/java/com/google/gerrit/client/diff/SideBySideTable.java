begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.diff
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|diff
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|DiffObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Patch
operator|.
name|ChangeType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|resources
operator|.
name|client
operator|.
name|CssResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiBinder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiField
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTMLPanel
import|;
end_import

begin_comment
comment|/**  * A table with one row and two columns to hold the two CodeMirrors displaying the files to be  * compared.  */
end_comment

begin_class
DECL|class|SideBySideTable
class|class
name|SideBySideTable
extends|extends
name|DiffTable
block|{
DECL|interface|Binder
interface|interface
name|Binder
extends|extends
name|UiBinder
argument_list|<
name|HTMLPanel
argument_list|,
name|SideBySideTable
argument_list|>
block|{}
DECL|field|uiBinder
specifier|private
specifier|static
specifier|final
name|Binder
name|uiBinder
init|=
name|GWT
operator|.
name|create
argument_list|(
name|Binder
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|interface|DiffTableStyle
interface|interface
name|DiffTableStyle
extends|extends
name|CssResource
block|{
DECL|method|intralineBg ()
name|String
name|intralineBg
parameter_list|()
function_decl|;
DECL|method|diff ()
name|String
name|diff
parameter_list|()
function_decl|;
DECL|method|hideA ()
name|String
name|hideA
parameter_list|()
function_decl|;
DECL|method|hideB ()
name|String
name|hideB
parameter_list|()
function_decl|;
DECL|method|padding ()
name|String
name|padding
parameter_list|()
function_decl|;
block|}
DECL|field|parent
specifier|private
name|SideBySide
name|parent
decl_stmt|;
DECL|field|cmA
annotation|@
name|UiField
name|Element
name|cmA
decl_stmt|;
DECL|field|cmB
annotation|@
name|UiField
name|Element
name|cmB
decl_stmt|;
DECL|field|style
annotation|@
name|UiField
specifier|static
name|DiffTableStyle
name|style
decl_stmt|;
DECL|field|visibleA
specifier|private
name|boolean
name|visibleA
decl_stmt|;
DECL|method|SideBySideTable (SideBySide parent, DiffObject base, DiffObject revision, String path)
name|SideBySideTable
parameter_list|(
name|SideBySide
name|parent
parameter_list|,
name|DiffObject
name|base
parameter_list|,
name|DiffObject
name|revision
parameter_list|,
name|String
name|path
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|,
name|base
argument_list|,
name|revision
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|uiBinder
operator|.
name|createAndBindUi
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|visibleA
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|parent
operator|=
name|parent
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|isVisibleA ()
name|boolean
name|isVisibleA
parameter_list|()
block|{
return|return
name|visibleA
return|;
block|}
DECL|method|setVisibleA (boolean show)
name|void
name|setVisibleA
parameter_list|(
name|boolean
name|show
parameter_list|)
block|{
name|visibleA
operator|=
name|show
expr_stmt|;
if|if
condition|(
name|show
condition|)
block|{
name|removeStyleName
argument_list|(
name|style
operator|.
name|hideA
argument_list|()
argument_list|)
expr_stmt|;
name|parent
operator|.
name|syncScroll
argument_list|(
name|DisplaySide
operator|.
name|B
argument_list|)
expr_stmt|;
comment|// match B's viewport
block|}
else|else
block|{
name|addStyleName
argument_list|(
name|style
operator|.
name|hideA
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|toggleA ()
name|Runnable
name|toggleA
parameter_list|()
block|{
return|return
parameter_list|()
lambda|->
name|setVisibleA
argument_list|(
operator|!
name|isVisibleA
argument_list|()
argument_list|)
return|;
block|}
DECL|method|setVisibleB (boolean show)
name|void
name|setVisibleB
parameter_list|(
name|boolean
name|show
parameter_list|)
block|{
if|if
condition|(
name|show
condition|)
block|{
name|removeStyleName
argument_list|(
name|style
operator|.
name|hideB
argument_list|()
argument_list|)
expr_stmt|;
name|parent
operator|.
name|syncScroll
argument_list|(
name|DisplaySide
operator|.
name|A
argument_list|)
expr_stmt|;
comment|// match A's viewport
block|}
else|else
block|{
name|addStyleName
argument_list|(
name|style
operator|.
name|hideB
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|setHideEmptyPane (boolean hide)
name|void
name|setHideEmptyPane
parameter_list|(
name|boolean
name|hide
parameter_list|)
block|{
if|if
condition|(
name|getChangeType
argument_list|()
operator|==
name|ChangeType
operator|.
name|ADDED
condition|)
block|{
name|setVisibleA
argument_list|(
operator|!
name|hide
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|getChangeType
argument_list|()
operator|==
name|ChangeType
operator|.
name|DELETED
condition|)
block|{
name|setVisibleB
argument_list|(
operator|!
name|hide
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|getDiffScreen ()
name|SideBySide
name|getDiffScreen
parameter_list|()
block|{
return|return
name|parent
return|;
block|}
annotation|@
name|Override
DECL|method|getHeaderHeight ()
name|int
name|getHeaderHeight
parameter_list|()
block|{
name|int
name|h
init|=
name|patchSetSelectBoxA
operator|.
name|getOffsetHeight
argument_list|()
decl_stmt|;
if|if
condition|(
name|hasHeader
argument_list|()
condition|)
block|{
name|h
operator|+=
name|diffHeaderRow
operator|.
name|getOffsetHeight
argument_list|()
expr_stmt|;
block|}
return|return
name|h
return|;
block|}
block|}
end_class

end_unit

