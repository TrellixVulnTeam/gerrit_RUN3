begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2009 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.ui
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|Gerrit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|QueryScreen
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|PageLinks
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|RefNames
import|;
end_import

begin_comment
comment|/** Link to the open changes of a project. */
end_comment

begin_class
DECL|class|BranchLink
specifier|public
class|class
name|BranchLink
extends|extends
name|InlineHyperlink
block|{
DECL|field|query
specifier|private
specifier|final
name|String
name|query
decl_stmt|;
DECL|method|BranchLink (Project.NameKey project, Change.Status status, String branch, String topic)
specifier|public
name|BranchLink
parameter_list|(
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|Change
operator|.
name|Status
name|status
parameter_list|,
name|String
name|branch
parameter_list|,
name|String
name|topic
parameter_list|)
block|{
name|this
argument_list|(
name|text
argument_list|(
name|branch
argument_list|,
name|topic
argument_list|)
argument_list|,
name|query
argument_list|(
name|project
argument_list|,
name|status
argument_list|,
name|branch
argument_list|,
name|topic
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|BranchLink (String text, Project.NameKey project, Change.Status status, String branch, String topic)
specifier|public
name|BranchLink
parameter_list|(
name|String
name|text
parameter_list|,
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|Change
operator|.
name|Status
name|status
parameter_list|,
name|String
name|branch
parameter_list|,
name|String
name|topic
parameter_list|)
block|{
name|this
argument_list|(
name|text
argument_list|,
name|query
argument_list|(
name|project
argument_list|,
name|status
argument_list|,
name|branch
argument_list|,
name|topic
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|BranchLink (String text, String query)
specifier|private
name|BranchLink
parameter_list|(
name|String
name|text
parameter_list|,
name|String
name|query
parameter_list|)
block|{
name|super
argument_list|(
name|text
argument_list|,
name|PageLinks
operator|.
name|toChangeQuery
argument_list|(
name|query
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|query
operator|=
name|query
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|go ()
specifier|public
name|void
name|go
parameter_list|()
block|{
name|Gerrit
operator|.
name|display
argument_list|(
name|getTargetHistoryToken
argument_list|()
argument_list|,
name|createScreen
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createScreen ()
specifier|private
name|Screen
name|createScreen
parameter_list|()
block|{
return|return
name|QueryScreen
operator|.
name|forQuery
argument_list|(
name|query
argument_list|)
return|;
block|}
DECL|method|text (String branch, String topic)
specifier|private
specifier|static
name|String
name|text
parameter_list|(
name|String
name|branch
parameter_list|,
name|String
name|topic
parameter_list|)
block|{
if|if
condition|(
name|topic
operator|!=
literal|null
operator|&&
operator|!
name|topic
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
name|branch
operator|+
literal|" ("
operator|+
name|topic
operator|+
literal|")"
return|;
block|}
else|else
block|{
return|return
name|branch
return|;
block|}
block|}
DECL|method|query (Project.NameKey project, Change.Status status, String branch, String topic)
specifier|public
specifier|static
name|String
name|query
parameter_list|(
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|Change
operator|.
name|Status
name|status
parameter_list|,
name|String
name|branch
parameter_list|,
name|String
name|topic
parameter_list|)
block|{
name|String
name|query
init|=
name|PageLinks
operator|.
name|projectQuery
argument_list|(
name|project
argument_list|,
name|status
argument_list|)
decl_stmt|;
if|if
condition|(
name|branch
operator|.
name|startsWith
argument_list|(
name|RefNames
operator|.
name|REFS
argument_list|)
condition|)
block|{
if|if
condition|(
name|branch
operator|.
name|startsWith
argument_list|(
name|RefNames
operator|.
name|REFS_HEADS
argument_list|)
condition|)
block|{
name|query
operator|+=
literal|" "
operator|+
name|PageLinks
operator|.
name|op
argument_list|(
literal|"branch"
argument_list|,
comment|//
name|branch
operator|.
name|substring
argument_list|(
name|RefNames
operator|.
name|REFS_HEADS
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|query
operator|+=
literal|" "
operator|+
name|PageLinks
operator|.
name|op
argument_list|(
literal|"ref"
argument_list|,
name|branch
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|// Assume it was clipped already by the caller.  This
comment|// happens for example inside of the ChangeInfo object.
comment|//
name|query
operator|+=
literal|" "
operator|+
name|PageLinks
operator|.
name|op
argument_list|(
literal|"branch"
argument_list|,
name|branch
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|topic
operator|!=
literal|null
operator|&&
operator|!
name|topic
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|query
operator|+=
literal|" "
operator|+
name|PageLinks
operator|.
name|op
argument_list|(
literal|"exacttopic"
argument_list|,
name|topic
argument_list|)
expr_stmt|;
block|}
return|return
name|query
return|;
block|}
block|}
end_class

end_unit

