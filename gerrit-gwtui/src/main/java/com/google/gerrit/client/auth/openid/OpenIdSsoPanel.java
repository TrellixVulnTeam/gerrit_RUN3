begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2012 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.auth.openid
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|auth
operator|.
name|openid
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|Gerrit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|GerritCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|auth
operator|.
name|SignInMode
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|auth
operator|.
name|openid
operator|.
name|DiscoveryResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|FormElement
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlowPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FormPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Hidden
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
DECL|class|OpenIdSsoPanel
specifier|public
class|class
name|OpenIdSsoPanel
extends|extends
name|FlowPanel
block|{
DECL|field|redirectForm
specifier|private
specifier|final
name|FormPanel
name|redirectForm
decl_stmt|;
DECL|field|redirectBody
specifier|private
specifier|final
name|FlowPanel
name|redirectBody
decl_stmt|;
DECL|field|ssoUrl
specifier|private
specifier|final
name|String
name|ssoUrl
decl_stmt|;
DECL|method|OpenIdSsoPanel ()
specifier|public
name|OpenIdSsoPanel
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|redirectBody
operator|=
operator|new
name|FlowPanel
argument_list|()
expr_stmt|;
name|redirectBody
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|redirectForm
operator|=
operator|new
name|FormPanel
argument_list|()
expr_stmt|;
name|redirectForm
operator|.
name|add
argument_list|(
name|redirectBody
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|redirectForm
argument_list|)
expr_stmt|;
name|ssoUrl
operator|=
name|Gerrit
operator|.
name|getConfig
argument_list|()
operator|.
name|getOpenIdSsoUrl
argument_list|()
expr_stmt|;
block|}
DECL|method|authenticate (SignInMode requestedMode, final String token)
specifier|public
name|void
name|authenticate
parameter_list|(
name|SignInMode
name|requestedMode
parameter_list|,
specifier|final
name|String
name|token
parameter_list|)
block|{
name|OpenIdUtil
operator|.
name|SVC
operator|.
name|discover
argument_list|(
name|ssoUrl
argument_list|,
name|requestedMode
argument_list|,
comment|/* remember */
literal|false
argument_list|,
name|token
argument_list|,
operator|new
name|GerritCallback
argument_list|<
name|DiscoveryResult
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|(
specifier|final
name|DiscoveryResult
name|result
parameter_list|)
block|{
name|onDiscovery
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|onDiscovery (final DiscoveryResult result)
specifier|private
name|void
name|onDiscovery
parameter_list|(
specifier|final
name|DiscoveryResult
name|result
parameter_list|)
block|{
switch|switch
condition|(
name|result
operator|.
name|status
condition|)
block|{
case|case
name|VALID
case|:
name|redirectForm
operator|.
name|setMethod
argument_list|(
name|FormPanel
operator|.
name|METHOD_POST
argument_list|)
expr_stmt|;
name|redirectForm
operator|.
name|setAction
argument_list|(
name|result
operator|.
name|providerUrl
argument_list|)
expr_stmt|;
name|redirectBody
operator|.
name|clear
argument_list|()
expr_stmt|;
for|for
control|(
specifier|final
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|e
range|:
name|result
operator|.
name|providerArgs
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|redirectBody
operator|.
name|add
argument_list|(
operator|new
name|Hidden
argument_list|(
name|e
operator|.
name|getKey
argument_list|()
argument_list|,
name|e
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|FormElement
operator|.
name|as
argument_list|(
name|redirectForm
operator|.
name|getElement
argument_list|()
argument_list|)
operator|.
name|setTarget
argument_list|(
literal|"_top"
argument_list|)
expr_stmt|;
name|redirectForm
operator|.
name|submit
argument_list|()
expr_stmt|;
break|break;
case|case
name|ERROR
case|:
case|case
name|NO_PROVIDER
case|:
case|case
name|NOT_ALLOWED
case|:
break|break;
block|}
block|}
block|}
end_class

end_unit

