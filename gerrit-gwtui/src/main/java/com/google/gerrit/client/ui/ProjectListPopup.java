begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2011 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.ui
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|Gerrit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|account
operator|.
name|Util
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|projects
operator|.
name|ProjectMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|GerritCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyCodes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyUpEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyUpHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlowPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HorizontalPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|PopupPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ScrollPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|globalkey
operator|.
name|client
operator|.
name|GlobalKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|globalkey
operator|.
name|client
operator|.
name|HidePopupPanelCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|globalkey
operator|.
name|client
operator|.
name|NpTextBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|user
operator|.
name|client
operator|.
name|PluginSafeDialogBox
import|;
end_import

begin_comment
comment|/** A popup containing all projects. */
end_comment

begin_class
DECL|class|ProjectListPopup
specifier|public
class|class
name|ProjectListPopup
block|{
DECL|field|projectsTab
specifier|private
name|HighlightingProjectsTable
name|projectsTab
decl_stmt|;
DECL|field|popup
specifier|private
name|PluginSafeDialogBox
name|popup
decl_stmt|;
DECL|field|filterTxt
specifier|private
name|NpTextBox
name|filterTxt
decl_stmt|;
DECL|field|filterPanel
specifier|private
name|HorizontalPanel
name|filterPanel
decl_stmt|;
DECL|field|match
specifier|private
name|String
name|match
decl_stmt|;
DECL|field|query
specifier|private
name|Query
name|query
decl_stmt|;
DECL|field|close
specifier|private
name|Button
name|close
decl_stmt|;
DECL|field|sp
specifier|private
name|ScrollPanel
name|sp
decl_stmt|;
DECL|field|popupPosition
specifier|private
name|PopupPanel
operator|.
name|PositionCallback
name|popupPosition
decl_stmt|;
DECL|field|preferredTop
specifier|private
name|int
name|preferredTop
decl_stmt|;
DECL|field|preferredLeft
specifier|private
name|int
name|preferredLeft
decl_stmt|;
DECL|field|poppingUp
specifier|private
name|boolean
name|poppingUp
decl_stmt|;
DECL|field|firstPopupLoad
specifier|private
name|boolean
name|firstPopupLoad
init|=
literal|true
decl_stmt|;
DECL|method|initPopup (final String popupText, final String currentPageLink)
specifier|public
name|void
name|initPopup
parameter_list|(
specifier|final
name|String
name|popupText
parameter_list|,
specifier|final
name|String
name|currentPageLink
parameter_list|)
block|{
name|createWidgets
argument_list|(
name|popupText
argument_list|,
name|currentPageLink
argument_list|)
expr_stmt|;
specifier|final
name|FlowPanel
name|pfp
init|=
operator|new
name|FlowPanel
argument_list|()
decl_stmt|;
name|pfp
operator|.
name|add
argument_list|(
name|filterPanel
argument_list|)
expr_stmt|;
name|sp
operator|=
operator|new
name|ScrollPanel
argument_list|(
name|projectsTab
argument_list|)
expr_stmt|;
name|sp
operator|.
name|setSize
argument_list|(
literal|"100%"
argument_list|,
literal|"100%"
argument_list|)
expr_stmt|;
name|pfp
operator|.
name|add
argument_list|(
name|sp
argument_list|)
expr_stmt|;
name|pfp
operator|.
name|add
argument_list|(
name|close
argument_list|)
expr_stmt|;
name|popup
operator|.
name|setWidget
argument_list|(
name|pfp
argument_list|)
expr_stmt|;
name|popup
operator|.
name|setHeight
argument_list|(
literal|"100%"
argument_list|)
expr_stmt|;
name|popupPosition
operator|=
name|getPositionCallback
argument_list|()
expr_stmt|;
block|}
DECL|method|getPositionCallback ()
specifier|protected
name|PopupPanel
operator|.
name|PositionCallback
name|getPositionCallback
parameter_list|()
block|{
return|return
operator|new
name|PopupPanel
operator|.
name|PositionCallback
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|setPosition
parameter_list|(
name|int
name|offsetWidth
parameter_list|,
name|int
name|offsetHeight
parameter_list|)
block|{
if|if
condition|(
name|preferredTop
operator|+
name|offsetHeight
operator|>
name|Window
operator|.
name|getClientWidth
argument_list|()
condition|)
block|{
name|preferredTop
operator|=
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|-
name|offsetHeight
expr_stmt|;
block|}
if|if
condition|(
name|preferredLeft
operator|+
name|offsetWidth
operator|>
name|Window
operator|.
name|getClientWidth
argument_list|()
condition|)
block|{
name|preferredLeft
operator|=
name|Window
operator|.
name|getClientWidth
argument_list|()
operator|-
name|offsetWidth
expr_stmt|;
block|}
if|if
condition|(
name|preferredTop
operator|<
literal|0
condition|)
block|{
name|sp
operator|.
name|setHeight
argument_list|(
operator|(
name|sp
operator|.
name|getOffsetHeight
argument_list|()
operator|+
name|preferredTop
operator|)
operator|+
literal|"px"
argument_list|)
expr_stmt|;
name|preferredTop
operator|=
literal|0
expr_stmt|;
block|}
if|if
condition|(
name|preferredLeft
operator|<
literal|0
condition|)
block|{
name|sp
operator|.
name|setWidth
argument_list|(
operator|(
name|sp
operator|.
name|getOffsetWidth
argument_list|()
operator|+
name|preferredLeft
operator|)
operator|+
literal|"px"
argument_list|)
expr_stmt|;
name|preferredLeft
operator|=
literal|0
expr_stmt|;
block|}
name|popup
operator|.
name|setPopupPosition
argument_list|(
name|preferredLeft
argument_list|,
name|preferredTop
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
comment|/**    * Invoked after moving pointer to a project.    *    * @param projectName project name.    */
DECL|method|onMovePointerTo (String projectName)
specifier|protected
name|void
name|onMovePointerTo
parameter_list|(
name|String
name|projectName
parameter_list|)
block|{   }
comment|/**    * Invoked after opening a project row.    *    * @param projectName project name.    */
DECL|method|openRow (String projectName)
specifier|protected
name|void
name|openRow
parameter_list|(
name|String
name|projectName
parameter_list|)
block|{   }
DECL|method|isPoppingUp ()
specifier|public
name|boolean
name|isPoppingUp
parameter_list|()
block|{
return|return
name|poppingUp
return|;
block|}
DECL|method|createWidgets (final String popupText, final String currentPageLink)
specifier|private
name|void
name|createWidgets
parameter_list|(
specifier|final
name|String
name|popupText
parameter_list|,
specifier|final
name|String
name|currentPageLink
parameter_list|)
block|{
name|filterPanel
operator|=
operator|new
name|HorizontalPanel
argument_list|()
expr_stmt|;
name|filterPanel
operator|.
name|setStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|projectFilterPanel
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Label
name|filterLabel
init|=
operator|new
name|Label
argument_list|(
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|admin
operator|.
name|Util
operator|.
name|C
operator|.
name|projectFilter
argument_list|()
argument_list|)
decl_stmt|;
name|filterLabel
operator|.
name|setStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|projectFilterLabel
argument_list|()
argument_list|)
expr_stmt|;
name|filterPanel
operator|.
name|add
argument_list|(
name|filterLabel
argument_list|)
expr_stmt|;
name|filterTxt
operator|=
operator|new
name|NpTextBox
argument_list|()
expr_stmt|;
name|filterTxt
operator|.
name|addKeyUpHandler
argument_list|(
operator|new
name|KeyUpHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyUp
parameter_list|(
name|KeyUpEvent
name|event
parameter_list|)
block|{
name|Query
name|q
init|=
operator|new
name|Query
argument_list|(
name|filterTxt
operator|.
name|getValue
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|match
operator|.
name|equals
argument_list|(
name|q
operator|.
name|qMatch
argument_list|)
condition|)
block|{
if|if
condition|(
name|query
operator|==
literal|null
condition|)
block|{
name|q
operator|.
name|run
argument_list|()
expr_stmt|;
block|}
name|query
operator|=
name|q
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|filterPanel
operator|.
name|add
argument_list|(
name|filterTxt
argument_list|)
expr_stmt|;
name|projectsTab
operator|=
operator|new
name|HighlightingProjectsTable
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|void
name|movePointerTo
parameter_list|(
specifier|final
name|int
name|row
parameter_list|,
specifier|final
name|boolean
name|scroll
parameter_list|)
block|{
name|super
operator|.
name|movePointerTo
argument_list|(
name|row
argument_list|,
name|scroll
argument_list|)
expr_stmt|;
name|onMovePointerTo
argument_list|(
name|getRowItem
argument_list|(
name|row
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|onOpenRow
parameter_list|(
specifier|final
name|int
name|row
parameter_list|)
block|{
name|super
operator|.
name|onOpenRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|openRow
argument_list|(
name|getRowItem
argument_list|(
name|row
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
name|projectsTab
operator|.
name|setSavePointerId
argument_list|(
name|currentPageLink
argument_list|)
expr_stmt|;
name|close
operator|=
operator|new
name|Button
argument_list|(
name|Util
operator|.
name|C
operator|.
name|projectsClose
argument_list|()
argument_list|)
expr_stmt|;
name|close
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
specifier|final
name|ClickEvent
name|event
parameter_list|)
block|{
name|closePopup
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|popup
operator|=
operator|new
name|PluginSafeDialogBox
argument_list|()
expr_stmt|;
name|popup
operator|.
name|setModal
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|popup
operator|.
name|setText
argument_list|(
name|popupText
argument_list|)
expr_stmt|;
block|}
DECL|method|displayPopup ()
specifier|public
name|void
name|displayPopup
parameter_list|()
block|{
name|poppingUp
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|firstPopupLoad
condition|)
block|{
comment|// For sizing/positioning, delay display until loaded
name|match
operator|=
literal|""
expr_stmt|;
name|query
operator|=
operator|new
name|Query
argument_list|(
name|match
argument_list|)
operator|.
name|run
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|popup
operator|.
name|setPopupPositionAndShow
argument_list|(
name|popupPosition
argument_list|)
expr_stmt|;
name|GlobalKey
operator|.
name|dialog
argument_list|(
name|popup
argument_list|)
expr_stmt|;
try|try
block|{
name|GlobalKey
operator|.
name|addApplication
argument_list|(
name|popup
argument_list|,
operator|new
name|HidePopupPanelCommand
argument_list|(
literal|0
argument_list|,
name|KeyCodes
operator|.
name|KEY_ESCAPE
argument_list|,
name|popup
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{       }
name|projectsTab
operator|.
name|setRegisterKeys
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|projectsTab
operator|.
name|finishDisplay
argument_list|()
expr_stmt|;
name|filterTxt
operator|.
name|setFocus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|poppingUp
operator|=
literal|false
expr_stmt|;
block|}
block|}
DECL|method|closePopup ()
specifier|public
name|void
name|closePopup
parameter_list|()
block|{
name|popup
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
DECL|method|setPreferredCoordinates (final int top, final int left)
specifier|public
name|void
name|setPreferredCoordinates
parameter_list|(
specifier|final
name|int
name|top
parameter_list|,
specifier|final
name|int
name|left
parameter_list|)
block|{
name|this
operator|.
name|preferredTop
operator|=
name|top
expr_stmt|;
name|this
operator|.
name|preferredLeft
operator|=
name|left
expr_stmt|;
block|}
DECL|class|Query
specifier|private
class|class
name|Query
block|{
DECL|field|qMatch
specifier|private
specifier|final
name|String
name|qMatch
decl_stmt|;
DECL|method|Query (String match)
name|Query
parameter_list|(
name|String
name|match
parameter_list|)
block|{
name|this
operator|.
name|qMatch
operator|=
name|match
expr_stmt|;
block|}
DECL|method|run ()
name|Query
name|run
parameter_list|()
block|{
name|ProjectMap
operator|.
name|match
argument_list|(
name|qMatch
argument_list|,
operator|new
name|GerritCallback
argument_list|<
name|ProjectMap
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|ProjectMap
name|result
parameter_list|)
block|{
if|if
condition|(
operator|!
name|firstPopupLoad
operator|&&
operator|!
name|popup
operator|.
name|isShowing
argument_list|()
condition|)
block|{
name|query
operator|=
literal|null
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|query
operator|==
name|Query
operator|.
name|this
condition|)
block|{
name|query
operator|=
literal|null
expr_stmt|;
name|showMap
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|query
operator|.
name|run
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
DECL|method|showMap (ProjectMap result)
specifier|private
name|void
name|showMap
parameter_list|(
name|ProjectMap
name|result
parameter_list|)
block|{
name|ProjectListPopup
operator|.
name|this
operator|.
name|match
operator|=
name|qMatch
expr_stmt|;
name|projectsTab
operator|.
name|display
argument_list|(
name|result
argument_list|,
name|qMatch
argument_list|)
expr_stmt|;
if|if
condition|(
name|firstPopupLoad
condition|)
block|{
comment|// Display was delayed until table was loaded
name|firstPopupLoad
operator|=
literal|false
expr_stmt|;
name|displayPopup
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

