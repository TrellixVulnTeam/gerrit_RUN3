begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2012 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.changes
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|actions
operator|.
name|ActionInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|ChangeInfo
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|ChangeInfo
operator|.
name|GitPerson
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|ChangeInfo
operator|.
name|MessageInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|ChangeInfo
operator|.
name|RevisionInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|NativeMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|Natives
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|RestApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|ListenableValue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|changes
operator|.
name|ListChangesOption
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|AccountInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|AccountInfoCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|ChangeDetail
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|PatchSetDetail
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|SubmitRecord
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|SubmitTypeRecord
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|UiCommandDetail
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Branch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|ChangeMessage
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Patch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSetInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSetInfo
operator|.
name|ParentInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|RevId
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|UserIdentity
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|JsArray
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FocusWidget
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtjsonrpc
operator|.
name|common
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
DECL|class|ChangeDetailCache
specifier|public
class|class
name|ChangeDetailCache
extends|extends
name|ListenableValue
argument_list|<
name|ChangeDetail
argument_list|>
block|{
DECL|class|NewGerritCallback
specifier|public
specifier|static
class|class
name|NewGerritCallback
extends|extends
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|GerritCallback
argument_list|<
name|ChangeInfo
argument_list|>
block|{
annotation|@
name|Override
DECL|method|onSuccess (ChangeInfo detail)
specifier|public
name|void
name|onSuccess
parameter_list|(
name|ChangeInfo
name|detail
parameter_list|)
block|{
name|setChangeDetail
argument_list|(
name|reverse
argument_list|(
name|detail
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|OldGerritCallback
specifier|public
specifier|static
class|class
name|OldGerritCallback
extends|extends
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|GerritCallback
argument_list|<
name|ChangeDetail
argument_list|>
block|{
annotation|@
name|Override
DECL|method|onSuccess (ChangeDetail detail)
specifier|public
name|void
name|onSuccess
parameter_list|(
name|ChangeDetail
name|detail
parameter_list|)
block|{
name|setChangeDetail
argument_list|(
name|detail
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*    * GerritCallback which will re-enable a FocusWidget    * {@link com.google.gwt.user.client.ui.FocusWidget} if we are returning    * with a failed result.    *    * It is up to the caller to handle the original disabling of the Widget.    */
DECL|class|GerritWidgetCallback
specifier|public
specifier|static
class|class
name|GerritWidgetCallback
extends|extends
name|OldGerritCallback
block|{
DECL|field|widget
specifier|private
name|FocusWidget
name|widget
decl_stmt|;
DECL|method|GerritWidgetCallback (FocusWidget widget)
specifier|public
name|GerritWidgetCallback
parameter_list|(
name|FocusWidget
name|widget
parameter_list|)
block|{
name|this
operator|.
name|widget
operator|=
name|widget
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onFailure (Throwable caught)
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|widget
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|super
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|IgnoreErrorCallback
specifier|public
specifier|static
class|class
name|IgnoreErrorCallback
implements|implements
name|AsyncCallback
argument_list|<
name|ChangeDetail
argument_list|>
block|{
annotation|@
name|Override
DECL|method|onSuccess (ChangeDetail info)
specifier|public
name|void
name|onSuccess
parameter_list|(
name|ChangeDetail
name|info
parameter_list|)
block|{
name|setChangeDetail
argument_list|(
name|info
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onFailure (Throwable caught)
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{     }
block|}
DECL|method|reverse (ChangeInfo info)
specifier|public
specifier|static
name|ChangeDetail
name|reverse
parameter_list|(
name|ChangeInfo
name|info
parameter_list|)
block|{
name|info
operator|.
name|revisions
argument_list|()
operator|.
name|copyKeysIntoChildren
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
name|RevisionInfo
name|rev
init|=
name|current
argument_list|(
name|info
argument_list|)
decl_stmt|;
name|ChangeDetail
name|r
init|=
operator|new
name|ChangeDetail
argument_list|()
decl_stmt|;
name|r
operator|.
name|setAllowsAnonymous
argument_list|(
name|rev
operator|.
name|has_fetch
argument_list|()
operator|&&
name|rev
operator|.
name|fetch
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"http"
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setCanAbandon
argument_list|(
name|can
argument_list|(
name|info
operator|.
name|actions
argument_list|()
argument_list|,
literal|"abandon"
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setCanEditCommitMessage
argument_list|(
name|can
argument_list|(
name|rev
operator|.
name|actions
argument_list|()
argument_list|,
literal|"message"
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setCanCherryPick
argument_list|(
name|can
argument_list|(
name|rev
operator|.
name|actions
argument_list|()
argument_list|,
literal|"cherrypick"
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setCanPublish
argument_list|(
name|can
argument_list|(
name|rev
operator|.
name|actions
argument_list|()
argument_list|,
literal|"publish"
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setCanRebase
argument_list|(
name|can
argument_list|(
name|rev
operator|.
name|actions
argument_list|()
argument_list|,
literal|"rebase"
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setCanRestore
argument_list|(
name|can
argument_list|(
name|info
operator|.
name|actions
argument_list|()
argument_list|,
literal|"restore"
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setCanRevert
argument_list|(
name|can
argument_list|(
name|info
operator|.
name|actions
argument_list|()
argument_list|,
literal|"revert"
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setCanDeleteDraft
argument_list|(
name|can
argument_list|(
name|rev
operator|.
name|actions
argument_list|()
argument_list|,
literal|"/"
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setCanEditTopicName
argument_list|(
name|can
argument_list|(
name|info
operator|.
name|actions
argument_list|()
argument_list|,
literal|"topic"
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setCanSubmit
argument_list|(
name|can
argument_list|(
name|rev
operator|.
name|actions
argument_list|()
argument_list|,
literal|"submit"
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setCanEdit
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|r
operator|.
name|setChange
argument_list|(
name|toChange
argument_list|(
name|info
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setStarred
argument_list|(
name|info
operator|.
name|starred
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|setPatchSets
argument_list|(
name|toPatchSets
argument_list|(
name|info
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setMessages
argument_list|(
name|toMessages
argument_list|(
name|info
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setAccounts
argument_list|(
name|users
argument_list|(
name|info
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setCurrentPatchSetId
argument_list|(
operator|new
name|PatchSet
operator|.
name|Id
argument_list|(
name|info
operator|.
name|legacy_id
argument_list|()
argument_list|,
name|rev
operator|.
name|_number
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setCurrentPatchSetDetail
argument_list|(
name|toPatchSetDetail
argument_list|(
name|info
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setSubmitRecords
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|SubmitRecord
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
comment|// Obtained later in ChangeScreen.
name|r
operator|.
name|setSubmitTypeRecord
argument_list|(
operator|new
name|SubmitTypeRecord
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|getSubmitTypeRecord
argument_list|()
operator|.
name|status
operator|=
name|SubmitTypeRecord
operator|.
name|Status
operator|.
name|RULE_ERROR
expr_stmt|;
name|r
operator|.
name|setPatchSetsWithDraftComments
argument_list|(
operator|new
name|HashSet
argument_list|<
name|PatchSet
operator|.
name|Id
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|setDependsOn
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|ChangeInfo
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|setNeededBy
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|ChangeInfo
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|r
return|;
block|}
DECL|method|toPatchSetDetail (ChangeInfo info)
specifier|private
specifier|static
name|PatchSetDetail
name|toPatchSetDetail
parameter_list|(
name|ChangeInfo
name|info
parameter_list|)
block|{
name|RevisionInfo
name|rev
init|=
name|current
argument_list|(
name|info
argument_list|)
decl_stmt|;
name|PatchSetDetail
name|p
init|=
operator|new
name|PatchSetDetail
argument_list|()
decl_stmt|;
name|p
operator|.
name|setPatchSet
argument_list|(
name|toPatchSet
argument_list|(
name|info
argument_list|,
name|rev
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setProject
argument_list|(
name|info
operator|.
name|project_name_key
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|setInfo
argument_list|(
operator|new
name|PatchSetInfo
argument_list|(
name|p
operator|.
name|getPatchSet
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|getInfo
argument_list|()
operator|.
name|setRevId
argument_list|(
name|rev
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|getInfo
argument_list|()
operator|.
name|setParents
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|ParentInfo
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|getInfo
argument_list|()
operator|.
name|setAuthor
argument_list|(
name|toUser
argument_list|(
name|rev
operator|.
name|commit
argument_list|()
operator|.
name|author
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|getInfo
argument_list|()
operator|.
name|setCommitter
argument_list|(
name|toUser
argument_list|(
name|rev
operator|.
name|commit
argument_list|()
operator|.
name|committer
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|getInfo
argument_list|()
operator|.
name|setSubject
argument_list|(
name|rev
operator|.
name|commit
argument_list|()
operator|.
name|subject
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|getInfo
argument_list|()
operator|.
name|setMessage
argument_list|(
name|rev
operator|.
name|commit
argument_list|()
operator|.
name|message
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|rev
operator|.
name|commit
argument_list|()
operator|.
name|parents
argument_list|()
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|CommitInfo
name|c
range|:
name|Natives
operator|.
name|asList
argument_list|(
name|rev
operator|.
name|commit
argument_list|()
operator|.
name|parents
argument_list|()
argument_list|)
control|)
block|{
name|p
operator|.
name|getInfo
argument_list|()
operator|.
name|getParents
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|ParentInfo
argument_list|(
operator|new
name|RevId
argument_list|(
name|c
operator|.
name|commit
argument_list|()
argument_list|)
argument_list|,
name|c
operator|.
name|subject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|p
operator|.
name|setPatches
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|Patch
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|setCommands
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|UiCommandDetail
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|rev
operator|.
name|files
argument_list|()
expr_stmt|;
return|return
name|p
return|;
block|}
DECL|method|toUser (GitPerson p)
specifier|private
specifier|static
name|UserIdentity
name|toUser
parameter_list|(
name|GitPerson
name|p
parameter_list|)
block|{
name|UserIdentity
name|u
init|=
operator|new
name|UserIdentity
argument_list|()
decl_stmt|;
name|u
operator|.
name|setName
argument_list|(
name|p
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|u
operator|.
name|setEmail
argument_list|(
name|p
operator|.
name|email
argument_list|()
argument_list|)
expr_stmt|;
name|u
operator|.
name|setDate
argument_list|(
name|p
operator|.
name|date
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|u
return|;
block|}
DECL|method|users (ChangeInfo info)
specifier|public
specifier|static
name|AccountInfoCache
name|users
parameter_list|(
name|ChangeInfo
name|info
parameter_list|)
block|{
name|Map
argument_list|<
name|Integer
argument_list|,
name|AccountInfo
argument_list|>
name|r
init|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|AccountInfo
argument_list|>
argument_list|()
decl_stmt|;
name|add
argument_list|(
name|r
argument_list|,
name|info
operator|.
name|owner
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|info
operator|.
name|messages
argument_list|()
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|MessageInfo
name|m
range|:
name|Natives
operator|.
name|asList
argument_list|(
name|info
operator|.
name|messages
argument_list|()
argument_list|)
control|)
block|{
name|add
argument_list|(
name|r
argument_list|,
name|m
operator|.
name|author
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|AccountInfoCache
argument_list|(
name|r
operator|.
name|values
argument_list|()
argument_list|)
return|;
block|}
DECL|method|add (Map<Integer, AccountInfo> r, com.google.gerrit.client.account.AccountInfo user)
specifier|private
specifier|static
name|void
name|add
parameter_list|(
name|Map
argument_list|<
name|Integer
argument_list|,
name|AccountInfo
argument_list|>
name|r
parameter_list|,
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|account
operator|.
name|AccountInfo
name|user
parameter_list|)
block|{
if|if
condition|(
name|user
operator|!=
literal|null
operator|&&
operator|!
name|r
operator|.
name|containsKey
argument_list|(
name|user
operator|.
name|_account_id
argument_list|()
argument_list|)
condition|)
block|{
name|AccountInfo
name|a
init|=
operator|new
name|AccountInfo
argument_list|(
operator|new
name|Account
operator|.
name|Id
argument_list|(
name|user
operator|.
name|_account_id
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|a
operator|.
name|setPreferredEmail
argument_list|(
name|user
operator|.
name|email
argument_list|()
argument_list|)
expr_stmt|;
name|a
operator|.
name|setFullName
argument_list|(
name|user
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|put
argument_list|(
name|user
operator|.
name|_account_id
argument_list|()
argument_list|,
name|a
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|can (NativeMap<ActionInfo> m, String n)
specifier|private
specifier|static
name|boolean
name|can
parameter_list|(
name|NativeMap
argument_list|<
name|ActionInfo
argument_list|>
name|m
parameter_list|,
name|String
name|n
parameter_list|)
block|{
return|return
name|m
operator|!=
literal|null
operator|&&
name|m
operator|.
name|containsKey
argument_list|(
name|n
argument_list|)
operator|&&
name|m
operator|.
name|get
argument_list|(
name|n
argument_list|)
operator|.
name|enabled
argument_list|()
return|;
block|}
DECL|method|toMessages (ChangeInfo info)
specifier|private
specifier|static
name|List
argument_list|<
name|ChangeMessage
argument_list|>
name|toMessages
parameter_list|(
name|ChangeInfo
name|info
parameter_list|)
block|{
name|List
argument_list|<
name|ChangeMessage
argument_list|>
name|msgs
init|=
operator|new
name|ArrayList
argument_list|<
name|ChangeMessage
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|MessageInfo
name|m
range|:
name|Natives
operator|.
name|asList
argument_list|(
name|info
operator|.
name|messages
argument_list|()
argument_list|)
control|)
block|{
name|ChangeMessage
name|o
init|=
operator|new
name|ChangeMessage
argument_list|(
operator|new
name|ChangeMessage
operator|.
name|Key
argument_list|(
name|info
operator|.
name|legacy_id
argument_list|()
argument_list|,
name|m
operator|.
name|date
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|m
operator|.
name|author
argument_list|()
operator|!=
literal|null
condition|?
operator|new
name|Account
operator|.
name|Id
argument_list|(
name|m
operator|.
name|author
argument_list|()
operator|.
name|_account_id
argument_list|()
argument_list|)
else|:
literal|null
argument_list|,
name|m
operator|.
name|date
argument_list|()
argument_list|,
name|m
operator|.
name|_revisionNumber
argument_list|()
operator|>
literal|0
condition|?
operator|new
name|PatchSet
operator|.
name|Id
argument_list|(
name|info
operator|.
name|legacy_id
argument_list|()
argument_list|,
name|m
operator|.
name|_revisionNumber
argument_list|()
argument_list|)
else|:
literal|null
argument_list|)
decl_stmt|;
name|o
operator|.
name|setMessage
argument_list|(
name|m
operator|.
name|message
argument_list|()
argument_list|)
expr_stmt|;
name|msgs
operator|.
name|add
argument_list|(
name|o
argument_list|)
expr_stmt|;
block|}
return|return
name|msgs
return|;
block|}
DECL|method|toPatchSets (ChangeInfo info)
specifier|private
specifier|static
name|List
argument_list|<
name|PatchSet
argument_list|>
name|toPatchSets
parameter_list|(
name|ChangeInfo
name|info
parameter_list|)
block|{
name|JsArray
argument_list|<
name|RevisionInfo
argument_list|>
name|all
init|=
name|info
operator|.
name|revisions
argument_list|()
operator|.
name|values
argument_list|()
decl_stmt|;
name|RevisionInfo
operator|.
name|sortRevisionInfoByNumber
argument_list|(
name|all
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|PatchSet
argument_list|>
name|r
init|=
operator|new
name|ArrayList
argument_list|<
name|PatchSet
argument_list|>
argument_list|(
name|all
operator|.
name|length
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|RevisionInfo
name|rev
range|:
name|Natives
operator|.
name|asList
argument_list|(
name|all
argument_list|)
control|)
block|{
name|r
operator|.
name|add
argument_list|(
name|toPatchSet
argument_list|(
name|info
argument_list|,
name|rev
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|r
return|;
block|}
DECL|method|toPatchSet (ChangeInfo info, RevisionInfo rev)
specifier|private
specifier|static
name|PatchSet
name|toPatchSet
parameter_list|(
name|ChangeInfo
name|info
parameter_list|,
name|RevisionInfo
name|rev
parameter_list|)
block|{
name|PatchSet
name|p
init|=
operator|new
name|PatchSet
argument_list|(
operator|new
name|PatchSet
operator|.
name|Id
argument_list|(
name|info
operator|.
name|legacy_id
argument_list|()
argument_list|,
name|rev
operator|.
name|_number
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|p
operator|.
name|setCreatedOn
argument_list|(
name|rev
operator|.
name|commit
argument_list|()
operator|.
name|committer
argument_list|()
operator|.
name|date
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|setDraft
argument_list|(
name|rev
operator|.
name|draft
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRevision
argument_list|(
operator|new
name|RevId
argument_list|(
name|rev
operator|.
name|name
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|p
return|;
block|}
DECL|method|toChange (ChangeInfo info)
specifier|public
specifier|static
name|Change
name|toChange
parameter_list|(
name|ChangeInfo
name|info
parameter_list|)
block|{
name|RevisionInfo
name|rev
init|=
name|current
argument_list|(
name|info
argument_list|)
decl_stmt|;
name|PatchSetInfo
name|p
init|=
operator|new
name|PatchSetInfo
argument_list|(
operator|new
name|PatchSet
operator|.
name|Id
argument_list|(
name|info
operator|.
name|legacy_id
argument_list|()
argument_list|,
name|rev
operator|.
name|_number
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|p
operator|.
name|setSubject
argument_list|(
name|info
operator|.
name|subject
argument_list|()
argument_list|)
expr_stmt|;
name|Change
name|c
init|=
operator|new
name|Change
argument_list|(
operator|new
name|Change
operator|.
name|Key
argument_list|(
name|info
operator|.
name|change_id
argument_list|()
argument_list|)
argument_list|,
name|info
operator|.
name|legacy_id
argument_list|()
argument_list|,
operator|new
name|Account
operator|.
name|Id
argument_list|(
name|info
operator|.
name|owner
argument_list|()
operator|.
name|_account_id
argument_list|()
argument_list|)
argument_list|,
operator|new
name|Branch
operator|.
name|NameKey
argument_list|(
name|info
operator|.
name|project_name_key
argument_list|()
argument_list|,
name|info
operator|.
name|branch
argument_list|()
argument_list|)
argument_list|,
name|info
operator|.
name|created
argument_list|()
argument_list|)
decl_stmt|;
name|c
operator|.
name|setTopic
argument_list|(
name|info
operator|.
name|topic
argument_list|()
argument_list|)
expr_stmt|;
name|c
operator|.
name|setStatus
argument_list|(
name|info
operator|.
name|status
argument_list|()
argument_list|)
expr_stmt|;
name|c
operator|.
name|setCurrentPatchSet
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|c
operator|.
name|setLastUpdatedOn
argument_list|(
name|info
operator|.
name|updated
argument_list|()
argument_list|)
expr_stmt|;
name|c
operator|.
name|setMergeable
argument_list|(
name|info
operator|.
name|mergeable
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|c
return|;
block|}
DECL|method|current (ChangeInfo info)
specifier|private
specifier|static
name|RevisionInfo
name|current
parameter_list|(
name|ChangeInfo
name|info
parameter_list|)
block|{
name|RevisionInfo
name|rev
init|=
name|info
operator|.
name|revision
argument_list|(
name|info
operator|.
name|current_revision
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|rev
operator|==
literal|null
condition|)
block|{
name|JsArray
argument_list|<
name|RevisionInfo
argument_list|>
name|all
init|=
name|info
operator|.
name|revisions
argument_list|()
operator|.
name|values
argument_list|()
decl_stmt|;
name|RevisionInfo
operator|.
name|sortRevisionInfoByNumber
argument_list|(
name|all
argument_list|)
expr_stmt|;
name|rev
operator|=
name|all
operator|.
name|get
argument_list|(
name|all
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
return|return
name|rev
return|;
block|}
DECL|method|setChangeDetail (ChangeDetail detail)
specifier|public
specifier|static
name|void
name|setChangeDetail
parameter_list|(
name|ChangeDetail
name|detail
parameter_list|)
block|{
name|Change
operator|.
name|Id
name|chgId
init|=
name|detail
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|ChangeCache
operator|.
name|get
argument_list|(
name|chgId
argument_list|)
operator|.
name|getChangeDetailCache
argument_list|()
operator|.
name|set
argument_list|(
name|detail
argument_list|)
expr_stmt|;
name|StarredChanges
operator|.
name|fireChangeStarEvent
argument_list|(
name|chgId
argument_list|,
name|detail
operator|.
name|isStarred
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|field|changeId
specifier|private
specifier|final
name|Change
operator|.
name|Id
name|changeId
decl_stmt|;
DECL|method|ChangeDetailCache (final Change.Id chg)
specifier|public
name|ChangeDetailCache
parameter_list|(
specifier|final
name|Change
operator|.
name|Id
name|chg
parameter_list|)
block|{
name|changeId
operator|=
name|chg
expr_stmt|;
block|}
DECL|method|refresh ()
specifier|public
name|void
name|refresh
parameter_list|()
block|{
name|RestApi
name|call
init|=
name|ChangeApi
operator|.
name|detail
argument_list|(
name|changeId
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
name|ChangeList
operator|.
name|addOptions
argument_list|(
name|call
argument_list|,
name|EnumSet
operator|.
name|of
argument_list|(
name|ListChangesOption
operator|.
name|CURRENT_ACTIONS
argument_list|,
name|ListChangesOption
operator|.
name|ALL_REVISIONS
argument_list|,
name|ListChangesOption
operator|.
name|ALL_COMMITS
argument_list|)
argument_list|)
expr_stmt|;
name|call
operator|.
name|get
argument_list|(
operator|new
name|NewGerritCallback
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

