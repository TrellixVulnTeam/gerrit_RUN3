begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|//Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.diff
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|diff
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|account
operator|.
name|AccountInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|CommentLinkProcessor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|DoubleClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|DoubleClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|resources
operator|.
name|client
operator|.
name|CssResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiBinder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiField
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTMLPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|globalkey
operator|.
name|client
operator|.
name|NpTextArea
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_comment
comment|/** An HtmlPanel for displaying and editing a draft */
end_comment

begin_comment
comment|//TODO: Make the buttons functional.
end_comment

begin_class
DECL|class|DraftBox
class|class
name|DraftBox
extends|extends
name|CommentBox
block|{
DECL|interface|Binder
interface|interface
name|Binder
extends|extends
name|UiBinder
argument_list|<
name|HTMLPanel
argument_list|,
name|DraftBox
argument_list|>
block|{}
DECL|field|uiBinder
specifier|private
specifier|static
name|UiBinder
argument_list|<
name|HTMLPanel
argument_list|,
name|CommentBox
argument_list|>
name|uiBinder
init|=
name|GWT
operator|.
name|create
argument_list|(
name|Binder
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|interface|DraftBoxStyle
interface|interface
name|DraftBoxStyle
extends|extends
name|CssResource
block|{
DECL|method|edit ()
name|String
name|edit
parameter_list|()
function_decl|;
DECL|method|view ()
name|String
name|view
parameter_list|()
function_decl|;
block|}
annotation|@
name|UiField
DECL|field|editArea
name|NpTextArea
name|editArea
decl_stmt|;
annotation|@
name|UiField
DECL|field|draftStyle
name|DraftBoxStyle
name|draftStyle
decl_stmt|;
DECL|field|messageClick
specifier|private
name|HandlerRegistration
name|messageClick
decl_stmt|;
DECL|method|DraftBox (AccountInfo author, Timestamp when, String message, CommentLinkProcessor linkProcessor)
name|DraftBox
parameter_list|(
name|AccountInfo
name|author
parameter_list|,
name|Timestamp
name|when
parameter_list|,
name|String
name|message
parameter_list|,
name|CommentLinkProcessor
name|linkProcessor
parameter_list|)
block|{
name|super
argument_list|(
name|uiBinder
argument_list|,
name|author
argument_list|,
name|when
argument_list|,
name|message
argument_list|,
name|linkProcessor
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setEdit
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// TODO: Need a resize handler on editArea.
block|}
annotation|@
name|Override
DECL|method|onLoad ()
specifier|protected
name|void
name|onLoad
parameter_list|()
block|{
name|super
operator|.
name|onLoad
argument_list|()
expr_stmt|;
name|messageClick
operator|=
name|contentPanelMessage
operator|.
name|addDomHandler
argument_list|(
operator|new
name|DoubleClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onDoubleClick
parameter_list|(
name|DoubleClickEvent
name|arg0
parameter_list|)
block|{
name|editArea
operator|.
name|setText
argument_list|(
name|contentPanelMessage
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|setEdit
argument_list|(
operator|!
name|isEdit
argument_list|()
argument_list|)
expr_stmt|;
name|runClickCallback
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|,
name|DoubleClickEvent
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|setEdit (boolean edit)
specifier|private
name|void
name|setEdit
parameter_list|(
name|boolean
name|edit
parameter_list|)
block|{
if|if
condition|(
name|edit
condition|)
block|{
name|removeStyleName
argument_list|(
name|draftStyle
operator|.
name|view
argument_list|()
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
name|draftStyle
operator|.
name|edit
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|removeStyleName
argument_list|(
name|draftStyle
operator|.
name|edit
argument_list|()
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
name|draftStyle
operator|.
name|view
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|isEdit ()
specifier|private
name|boolean
name|isEdit
parameter_list|()
block|{
return|return
name|getStyleName
argument_list|()
operator|.
name|contains
argument_list|(
name|draftStyle
operator|.
name|edit
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|onUnload ()
specifier|protected
name|void
name|onUnload
parameter_list|()
block|{
name|super
operator|.
name|onUnload
argument_list|()
expr_stmt|;
if|if
condition|(
name|messageClick
operator|!=
literal|null
condition|)
block|{
name|messageClick
operator|.
name|removeHandler
argument_list|()
expr_stmt|;
name|messageClick
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

