begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.actions
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|actions
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|api
operator|.
name|ActionContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|api
operator|.
name|ChangeGlue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|api
operator|.
name|EditGlue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|api
operator|.
name|ProjectGlue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|api
operator|.
name|RevisionGlue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|info
operator|.
name|ActionInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|info
operator|.
name|ChangeInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|info
operator|.
name|ChangeInfo
operator|.
name|EditInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|info
operator|.
name|ChangeInfo
operator|.
name|RevisionInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|projects
operator|.
name|BranchInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|safehtml
operator|.
name|client
operator|.
name|SafeHtmlBuilder
import|;
end_import

begin_class
DECL|class|ActionButton
specifier|public
class|class
name|ActionButton
extends|extends
name|Button
implements|implements
name|ClickHandler
block|{
DECL|field|project
specifier|private
specifier|final
name|Project
operator|.
name|NameKey
name|project
decl_stmt|;
DECL|field|branch
specifier|private
specifier|final
name|BranchInfo
name|branch
decl_stmt|;
DECL|field|change
specifier|private
specifier|final
name|ChangeInfo
name|change
decl_stmt|;
DECL|field|edit
specifier|private
specifier|final
name|EditInfo
name|edit
decl_stmt|;
DECL|field|revision
specifier|private
specifier|final
name|RevisionInfo
name|revision
decl_stmt|;
DECL|field|action
specifier|private
specifier|final
name|ActionInfo
name|action
decl_stmt|;
DECL|field|ctx
specifier|private
name|ActionContext
name|ctx
decl_stmt|;
DECL|method|ActionButton (Project.NameKey project, ActionInfo action)
specifier|public
name|ActionButton
parameter_list|(
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|ActionInfo
name|action
parameter_list|)
block|{
name|this
argument_list|(
name|project
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|ActionButton (Project.NameKey project, BranchInfo branch, ActionInfo action)
specifier|public
name|ActionButton
parameter_list|(
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|BranchInfo
name|branch
parameter_list|,
name|ActionInfo
name|action
parameter_list|)
block|{
name|this
argument_list|(
name|project
argument_list|,
name|branch
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|ActionButton (ChangeInfo change, ActionInfo action)
specifier|public
name|ActionButton
parameter_list|(
name|ChangeInfo
name|change
parameter_list|,
name|ActionInfo
name|action
parameter_list|)
block|{
name|this
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|change
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|ActionButton (ChangeInfo change, RevisionInfo revision, ActionInfo action)
specifier|public
name|ActionButton
parameter_list|(
name|ChangeInfo
name|change
parameter_list|,
name|RevisionInfo
name|revision
parameter_list|,
name|ActionInfo
name|action
parameter_list|)
block|{
name|this
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|change
argument_list|,
literal|null
argument_list|,
name|revision
argument_list|,
name|action
argument_list|)
expr_stmt|;
block|}
DECL|method|ActionButton (Project.NameKey project, BranchInfo branch, ChangeInfo change, EditInfo edit, RevisionInfo revision, ActionInfo action)
specifier|private
name|ActionButton
parameter_list|(
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|BranchInfo
name|branch
parameter_list|,
name|ChangeInfo
name|change
parameter_list|,
name|EditInfo
name|edit
parameter_list|,
name|RevisionInfo
name|revision
parameter_list|,
name|ActionInfo
name|action
parameter_list|)
block|{
name|super
argument_list|(
operator|new
name|SafeHtmlBuilder
argument_list|()
operator|.
name|openDiv
argument_list|()
operator|.
name|append
argument_list|(
name|action
operator|.
name|label
argument_list|()
argument_list|)
operator|.
name|closeDiv
argument_list|()
argument_list|)
expr_stmt|;
name|setStyleName
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|setTitle
argument_list|(
name|action
operator|.
name|title
argument_list|()
argument_list|)
expr_stmt|;
name|setEnabled
argument_list|(
name|action
operator|.
name|enabled
argument_list|()
argument_list|)
expr_stmt|;
name|addClickHandler
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|this
operator|.
name|project
operator|=
name|project
expr_stmt|;
name|this
operator|.
name|branch
operator|=
name|branch
expr_stmt|;
name|this
operator|.
name|change
operator|=
name|change
expr_stmt|;
name|this
operator|.
name|edit
operator|=
name|edit
expr_stmt|;
name|this
operator|.
name|revision
operator|=
name|revision
expr_stmt|;
name|this
operator|.
name|action
operator|=
name|action
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onClick (ClickEvent event)
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|ctx
operator|!=
literal|null
operator|&&
name|ctx
operator|.
name|has_popup
argument_list|()
condition|)
block|{
name|ctx
operator|.
name|hide
argument_list|()
expr_stmt|;
name|ctx
operator|=
literal|null
expr_stmt|;
return|return;
block|}
if|if
condition|(
name|revision
operator|!=
literal|null
condition|)
block|{
name|RevisionGlue
operator|.
name|onAction
argument_list|(
name|change
argument_list|,
name|revision
argument_list|,
name|action
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|edit
operator|!=
literal|null
condition|)
block|{
name|EditGlue
operator|.
name|onAction
argument_list|(
name|change
argument_list|,
name|edit
argument_list|,
name|action
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|change
operator|!=
literal|null
condition|)
block|{
name|ChangeGlue
operator|.
name|onAction
argument_list|(
name|change
argument_list|,
name|action
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|branch
operator|!=
literal|null
condition|)
block|{
name|ProjectGlue
operator|.
name|onAction
argument_list|(
name|project
argument_list|,
name|branch
argument_list|,
name|action
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|project
operator|!=
literal|null
condition|)
block|{
name|ProjectGlue
operator|.
name|onAction
argument_list|(
name|project
argument_list|,
name|action
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onUnload ()
specifier|public
name|void
name|onUnload
parameter_list|()
block|{
if|if
condition|(
name|ctx
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|ctx
operator|.
name|has_popup
argument_list|()
condition|)
block|{
name|ctx
operator|.
name|hide
argument_list|()
expr_stmt|;
block|}
name|ctx
operator|=
literal|null
expr_stmt|;
block|}
name|super
operator|.
name|onUnload
argument_list|()
expr_stmt|;
block|}
DECL|method|link (ActionContext ctx)
specifier|public
name|void
name|link
parameter_list|(
name|ActionContext
name|ctx
parameter_list|)
block|{
name|this
operator|.
name|ctx
operator|=
name|ctx
expr_stmt|;
block|}
DECL|method|unlink ()
specifier|public
name|void
name|unlink
parameter_list|()
block|{
name|ctx
operator|=
literal|null
expr_stmt|;
block|}
block|}
end_class

end_unit

