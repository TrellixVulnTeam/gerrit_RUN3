begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2010 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.download
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|download
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|Gerrit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|account
operator|.
name|AccountApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|info
operator|.
name|DownloadInfo
operator|.
name|DownloadSchemeInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|info
operator|.
name|GeneralPreferences
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|aria
operator|.
name|client
operator|.
name|Roles
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|JavaScriptObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Anchor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
DECL|class|DownloadUrlLink
specifier|public
class|class
name|DownloadUrlLink
extends|extends
name|Anchor
implements|implements
name|ClickHandler
block|{
DECL|method|createDownloadUrlLinks ( boolean allowAnonymous, DownloadPanel downloadPanel)
specifier|public
specifier|static
name|List
argument_list|<
name|DownloadUrlLink
argument_list|>
name|createDownloadUrlLinks
parameter_list|(
name|boolean
name|allowAnonymous
parameter_list|,
name|DownloadPanel
name|downloadPanel
parameter_list|)
block|{
name|List
argument_list|<
name|DownloadUrlLink
argument_list|>
name|urls
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|s
range|:
name|Gerrit
operator|.
name|info
argument_list|()
operator|.
name|download
argument_list|()
operator|.
name|schemes
argument_list|()
control|)
block|{
name|DownloadSchemeInfo
name|scheme
init|=
name|Gerrit
operator|.
name|info
argument_list|()
operator|.
name|download
argument_list|()
operator|.
name|scheme
argument_list|(
name|s
argument_list|)
decl_stmt|;
if|if
condition|(
name|scheme
operator|.
name|isAuthRequired
argument_list|()
operator|&&
operator|!
name|allowAnonymous
condition|)
block|{
continue|continue;
block|}
name|urls
operator|.
name|add
argument_list|(
operator|new
name|DownloadUrlLink
argument_list|(
name|downloadPanel
argument_list|,
name|scheme
argument_list|,
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|urls
return|;
block|}
DECL|field|downloadPanel
specifier|private
specifier|final
name|DownloadPanel
name|downloadPanel
decl_stmt|;
DECL|field|schemeInfo
specifier|private
specifier|final
name|DownloadSchemeInfo
name|schemeInfo
decl_stmt|;
DECL|field|schemeName
specifier|private
specifier|final
name|String
name|schemeName
decl_stmt|;
DECL|method|DownloadUrlLink ( DownloadPanel downloadPanel, DownloadSchemeInfo schemeInfo, String schemeName)
specifier|public
name|DownloadUrlLink
parameter_list|(
name|DownloadPanel
name|downloadPanel
parameter_list|,
name|DownloadSchemeInfo
name|schemeInfo
parameter_list|,
name|String
name|schemeName
parameter_list|)
block|{
name|super
argument_list|(
name|schemeName
argument_list|)
expr_stmt|;
name|setStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|downloadLink
argument_list|()
argument_list|)
expr_stmt|;
name|Roles
operator|.
name|getTabRole
argument_list|()
operator|.
name|set
argument_list|(
name|getElement
argument_list|()
argument_list|)
expr_stmt|;
name|addClickHandler
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|this
operator|.
name|downloadPanel
operator|=
name|downloadPanel
expr_stmt|;
name|this
operator|.
name|schemeInfo
operator|=
name|schemeInfo
expr_stmt|;
name|this
operator|.
name|schemeName
operator|=
name|schemeName
expr_stmt|;
block|}
DECL|method|getSchemeName ()
specifier|public
name|String
name|getSchemeName
parameter_list|()
block|{
return|return
name|schemeName
return|;
block|}
annotation|@
name|Override
DECL|method|onClick (ClickEvent event)
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|event
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
name|event
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
name|select
argument_list|()
expr_stmt|;
name|GeneralPreferences
name|prefs
init|=
name|Gerrit
operator|.
name|getUserPreferences
argument_list|()
decl_stmt|;
if|if
condition|(
name|Gerrit
operator|.
name|isSignedIn
argument_list|()
operator|&&
operator|!
name|schemeName
operator|.
name|equals
argument_list|(
name|prefs
operator|.
name|downloadScheme
argument_list|()
argument_list|)
condition|)
block|{
name|prefs
operator|.
name|downloadScheme
argument_list|(
name|schemeName
argument_list|)
expr_stmt|;
name|GeneralPreferences
name|in
init|=
name|GeneralPreferences
operator|.
name|create
argument_list|()
decl_stmt|;
name|in
operator|.
name|downloadScheme
argument_list|(
name|schemeName
argument_list|)
expr_stmt|;
name|AccountApi
operator|.
name|self
argument_list|()
operator|.
name|view
argument_list|(
literal|"preferences"
argument_list|)
operator|.
name|put
argument_list|(
name|in
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|JavaScriptObject
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|JavaScriptObject
name|result
parameter_list|)
block|{}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|select ()
name|void
name|select
parameter_list|()
block|{
name|downloadPanel
operator|.
name|populateDownloadCommandLinks
argument_list|(
name|schemeInfo
argument_list|)
expr_stmt|;
name|DownloadUrlPanel
name|parent
init|=
operator|(
name|DownloadUrlPanel
operator|)
name|getParent
argument_list|()
decl_stmt|;
for|for
control|(
name|Widget
name|w
range|:
name|parent
control|)
block|{
if|if
condition|(
name|w
operator|!=
name|this
operator|&&
name|w
operator|instanceof
name|DownloadUrlLink
condition|)
block|{
name|w
operator|.
name|removeStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|downloadLink_Active
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|addStyleName
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|css
argument_list|()
operator|.
name|downloadLink_Active
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

