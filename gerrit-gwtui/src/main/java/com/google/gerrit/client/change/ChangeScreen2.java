begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|change
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|FormatUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|Gerrit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|account
operator|.
name|AccountInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|actions
operator|.
name|ActionInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|ChangeApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|ChangeInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|ChangeInfo
operator|.
name|ApprovalInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|ChangeInfo
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|ChangeInfo
operator|.
name|LabelInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|ChangeInfo
operator|.
name|MergeableInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|ChangeInfo
operator|.
name|MessageInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|ChangeInfo
operator|.
name|RevisionInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|ChangeList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|CommentInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|RevisionInfoCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|StarredChanges
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|Util
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|diff
operator|.
name|DiffApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|diff
operator|.
name|FileInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|projects
operator|.
name|ConfigInfoCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|projects
operator|.
name|ConfigInfoCache
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|CallbackGroup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|GerritCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|NativeMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|NativeString
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|Natives
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|RestApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|ScreenLoadCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|ChangeLink
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|CommentLinkProcessor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|Screen
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|UserActivityMonitor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|changes
operator|.
name|ListChangesOption
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
operator|.
name|SubmitType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|JsArray
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|JsArrayString
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|AnchorElement
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|CloseEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|CloseHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ValueChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|resources
operator|.
name|client
operator|.
name|CssResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiBinder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiField
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlowPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTMLPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|PopupPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ToggleButton
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|clippy
operator|.
name|client
operator|.
name|CopyableLabel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|globalkey
operator|.
name|client
operator|.
name|GlobalKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|globalkey
operator|.
name|client
operator|.
name|KeyCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|globalkey
operator|.
name|client
operator|.
name|KeyCommandSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|KeyUtil
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
DECL|class|ChangeScreen2
specifier|public
class|class
name|ChangeScreen2
extends|extends
name|Screen
block|{
DECL|interface|Binder
interface|interface
name|Binder
extends|extends
name|UiBinder
argument_list|<
name|HTMLPanel
argument_list|,
name|ChangeScreen2
argument_list|>
block|{}
DECL|field|uiBinder
specifier|private
specifier|static
specifier|final
name|Binder
name|uiBinder
init|=
name|GWT
operator|.
name|create
argument_list|(
name|Binder
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|interface|Style
interface|interface
name|Style
extends|extends
name|CssResource
block|{
DECL|method|labelName ()
name|String
name|labelName
parameter_list|()
function_decl|;
DECL|method|label_user ()
name|String
name|label_user
parameter_list|()
function_decl|;
DECL|method|label_ok ()
name|String
name|label_ok
parameter_list|()
function_decl|;
DECL|method|label_reject ()
name|String
name|label_reject
parameter_list|()
function_decl|;
DECL|method|label_may ()
name|String
name|label_may
parameter_list|()
function_decl|;
DECL|method|label_need ()
name|String
name|label_need
parameter_list|()
function_decl|;
DECL|method|replyBox ()
name|String
name|replyBox
parameter_list|()
function_decl|;
DECL|method|selected ()
name|String
name|selected
parameter_list|()
function_decl|;
block|}
DECL|field|changeId
specifier|private
specifier|final
name|Change
operator|.
name|Id
name|changeId
decl_stmt|;
DECL|field|revision
specifier|private
name|String
name|revision
decl_stmt|;
DECL|field|changeInfo
specifier|private
name|ChangeInfo
name|changeInfo
decl_stmt|;
DECL|field|commentLinkProcessor
specifier|private
name|CommentLinkProcessor
name|commentLinkProcessor
decl_stmt|;
DECL|field|keysNavigation
specifier|private
name|KeyCommandSet
name|keysNavigation
decl_stmt|;
DECL|field|keysAction
specifier|private
name|KeyCommandSet
name|keysAction
decl_stmt|;
DECL|field|handlers
specifier|private
name|List
argument_list|<
name|HandlerRegistration
argument_list|>
name|handlers
init|=
operator|new
name|ArrayList
argument_list|<
name|HandlerRegistration
argument_list|>
argument_list|(
literal|4
argument_list|)
decl_stmt|;
DECL|field|updateCheck
specifier|private
name|UpdateCheckTimer
name|updateCheck
decl_stmt|;
DECL|field|lastDisplayedUpdate
specifier|private
name|Timestamp
name|lastDisplayedUpdate
decl_stmt|;
DECL|field|updateAvailable
specifier|private
name|UpdateAvailableBar
name|updateAvailable
decl_stmt|;
DECL|field|openReplyBox
specifier|private
name|boolean
name|openReplyBox
decl_stmt|;
DECL|field|headerLine
annotation|@
name|UiField
name|HTMLPanel
name|headerLine
decl_stmt|;
DECL|field|style
annotation|@
name|UiField
name|Style
name|style
decl_stmt|;
DECL|field|star
annotation|@
name|UiField
name|ToggleButton
name|star
decl_stmt|;
DECL|field|reload
annotation|@
name|UiField
name|Reload
name|reload
decl_stmt|;
DECL|field|permalink
annotation|@
name|UiField
name|AnchorElement
name|permalink
decl_stmt|;
DECL|field|reviewersText
annotation|@
name|UiField
name|Element
name|reviewersText
decl_stmt|;
DECL|field|reviewers
annotation|@
name|UiField
name|Reviewers
name|reviewers
decl_stmt|;
DECL|field|changeIdText
annotation|@
name|UiField
name|Element
name|changeIdText
decl_stmt|;
DECL|field|ownerText
annotation|@
name|UiField
name|Element
name|ownerText
decl_stmt|;
DECL|field|statusText
annotation|@
name|UiField
name|Element
name|statusText
decl_stmt|;
DECL|field|projectText
annotation|@
name|UiField
name|Element
name|projectText
decl_stmt|;
DECL|field|branchText
annotation|@
name|UiField
name|Element
name|branchText
decl_stmt|;
DECL|field|submitActionText
annotation|@
name|UiField
name|Element
name|submitActionText
decl_stmt|;
DECL|field|notMergeable
annotation|@
name|UiField
name|Element
name|notMergeable
decl_stmt|;
DECL|field|idText
annotation|@
name|UiField
name|CopyableLabel
name|idText
decl_stmt|;
DECL|field|topic
annotation|@
name|UiField
name|Topic
name|topic
decl_stmt|;
DECL|field|actionText
annotation|@
name|UiField
name|Element
name|actionText
decl_stmt|;
DECL|field|actionDate
annotation|@
name|UiField
name|Element
name|actionDate
decl_stmt|;
DECL|field|actions
annotation|@
name|UiField
name|Actions
name|actions
decl_stmt|;
DECL|field|labels
annotation|@
name|UiField
name|Labels
name|labels
decl_stmt|;
DECL|field|commit
annotation|@
name|UiField
name|CommitBox
name|commit
decl_stmt|;
DECL|field|related
annotation|@
name|UiField
name|RelatedChanges
name|related
decl_stmt|;
DECL|field|files
annotation|@
name|UiField
name|FileTable
name|files
decl_stmt|;
DECL|field|history
annotation|@
name|UiField
name|FlowPanel
name|history
decl_stmt|;
DECL|field|revisions
annotation|@
name|UiField
name|Button
name|revisions
decl_stmt|;
DECL|field|download
annotation|@
name|UiField
name|Button
name|download
decl_stmt|;
DECL|field|reply
annotation|@
name|UiField
name|Button
name|reply
decl_stmt|;
DECL|field|expandAll
annotation|@
name|UiField
name|Button
name|expandAll
decl_stmt|;
DECL|field|collapseAll
annotation|@
name|UiField
name|Button
name|collapseAll
decl_stmt|;
DECL|field|editMessage
annotation|@
name|UiField
name|Button
name|editMessage
decl_stmt|;
DECL|field|quickApprove
annotation|@
name|UiField
name|QuickApprove
name|quickApprove
decl_stmt|;
DECL|field|replyAction
specifier|private
name|ReplyAction
name|replyAction
decl_stmt|;
DECL|field|editMessageAction
specifier|private
name|EditMessageAction
name|editMessageAction
decl_stmt|;
DECL|field|revisionsAction
specifier|private
name|RevisionsAction
name|revisionsAction
decl_stmt|;
DECL|field|downloadAction
specifier|private
name|DownloadAction
name|downloadAction
decl_stmt|;
DECL|method|ChangeScreen2 (Change.Id changeId, String revision, boolean openReplyBox)
specifier|public
name|ChangeScreen2
parameter_list|(
name|Change
operator|.
name|Id
name|changeId
parameter_list|,
name|String
name|revision
parameter_list|,
name|boolean
name|openReplyBox
parameter_list|)
block|{
name|this
operator|.
name|changeId
operator|=
name|changeId
expr_stmt|;
name|this
operator|.
name|revision
operator|=
name|revision
operator|!=
literal|null
operator|&&
operator|!
name|revision
operator|.
name|isEmpty
argument_list|()
condition|?
name|revision
else|:
literal|null
expr_stmt|;
name|this
operator|.
name|openReplyBox
operator|=
name|openReplyBox
expr_stmt|;
name|add
argument_list|(
name|uiBinder
operator|.
name|createAndBindUi
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onLoad ()
specifier|protected
name|void
name|onLoad
parameter_list|()
block|{
name|super
operator|.
name|onLoad
argument_list|()
expr_stmt|;
name|loadChangeInfo
argument_list|(
literal|true
argument_list|,
operator|new
name|GerritCallback
argument_list|<
name|ChangeInfo
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|ChangeInfo
name|info
parameter_list|)
block|{
name|info
operator|.
name|init
argument_list|()
expr_stmt|;
name|loadConfigInfo
argument_list|(
name|info
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|loadChangeInfo (boolean fg, AsyncCallback<ChangeInfo> cb)
name|void
name|loadChangeInfo
parameter_list|(
name|boolean
name|fg
parameter_list|,
name|AsyncCallback
argument_list|<
name|ChangeInfo
argument_list|>
name|cb
parameter_list|)
block|{
name|RestApi
name|call
init|=
name|ChangeApi
operator|.
name|detail
argument_list|(
name|changeId
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
name|ChangeList
operator|.
name|addOptions
argument_list|(
name|call
argument_list|,
name|EnumSet
operator|.
name|of
argument_list|(
name|ListChangesOption
operator|.
name|CURRENT_ACTIONS
argument_list|,
name|fg
operator|&&
name|revision
operator|!=
literal|null
condition|?
name|ListChangesOption
operator|.
name|ALL_REVISIONS
else|:
name|ListChangesOption
operator|.
name|CURRENT_REVISION
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|fg
condition|)
block|{
name|call
operator|.
name|background
argument_list|()
expr_stmt|;
block|}
name|call
operator|.
name|get
argument_list|(
name|cb
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUnload ()
specifier|protected
name|void
name|onUnload
parameter_list|()
block|{
if|if
condition|(
name|updateAvailable
operator|!=
literal|null
condition|)
block|{
name|updateAvailable
operator|.
name|hide
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|updateAvailable
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|updateCheck
operator|!=
literal|null
condition|)
block|{
name|updateCheck
operator|.
name|cancel
argument_list|()
expr_stmt|;
name|updateCheck
operator|=
literal|null
expr_stmt|;
block|}
for|for
control|(
name|HandlerRegistration
name|h
range|:
name|handlers
control|)
block|{
name|h
operator|.
name|removeHandler
argument_list|()
expr_stmt|;
block|}
name|handlers
operator|.
name|clear
argument_list|()
expr_stmt|;
name|super
operator|.
name|onUnload
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onInitUI ()
specifier|protected
name|void
name|onInitUI
parameter_list|()
block|{
name|super
operator|.
name|onInitUI
argument_list|()
expr_stmt|;
name|setHeaderVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Resources
operator|.
name|I
operator|.
name|style
argument_list|()
operator|.
name|ensureInjected
argument_list|()
expr_stmt|;
name|star
operator|.
name|setVisible
argument_list|(
name|Gerrit
operator|.
name|isSignedIn
argument_list|()
argument_list|)
expr_stmt|;
name|labels
operator|.
name|init
argument_list|(
name|style
argument_list|,
name|statusText
argument_list|)
expr_stmt|;
name|reviewers
operator|.
name|init
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|keysNavigation
operator|=
operator|new
name|KeyCommandSet
argument_list|(
name|Gerrit
operator|.
name|C
operator|.
name|sectionNavigation
argument_list|()
argument_list|)
expr_stmt|;
name|keysNavigation
operator|.
name|add
argument_list|(
operator|new
name|KeyCommand
argument_list|(
literal|0
argument_list|,
literal|'u'
argument_list|,
name|Util
operator|.
name|C
operator|.
name|upToChangeList
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
specifier|final
name|KeyPressEvent
name|event
parameter_list|)
block|{
name|Gerrit
operator|.
name|displayLastChangeList
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|keysNavigation
operator|.
name|add
argument_list|(
operator|new
name|KeyCommand
argument_list|(
literal|0
argument_list|,
literal|'R'
argument_list|,
name|Util
operator|.
name|C
operator|.
name|keyReloadChange
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
specifier|final
name|KeyPressEvent
name|event
parameter_list|)
block|{
name|reload
operator|.
name|reload
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|keysAction
operator|=
operator|new
name|KeyCommandSet
argument_list|(
name|Gerrit
operator|.
name|C
operator|.
name|sectionActions
argument_list|()
argument_list|)
expr_stmt|;
name|keysAction
operator|.
name|add
argument_list|(
operator|new
name|KeyCommand
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|,
name|Util
operator|.
name|C
operator|.
name|keyPublishComments
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|Gerrit
operator|.
name|isSignedIn
argument_list|()
condition|)
block|{
name|onReply
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Gerrit
operator|.
name|doSignIn
argument_list|(
name|getToken
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|Gerrit
operator|.
name|isSignedIn
argument_list|()
condition|)
block|{
name|keysAction
operator|.
name|add
argument_list|(
operator|new
name|KeyCommand
argument_list|(
literal|0
argument_list|,
literal|'s'
argument_list|,
name|Util
operator|.
name|C
operator|.
name|changeTableStar
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
name|star
operator|.
name|setValue
argument_list|(
operator|!
name|star
operator|.
name|getValue
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|keysAction
operator|.
name|add
argument_list|(
operator|new
name|KeyCommand
argument_list|(
literal|0
argument_list|,
literal|'c'
argument_list|,
name|Util
operator|.
name|C
operator|.
name|keyAddReviewers
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
name|reviewers
operator|.
name|onOpenForm
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|initRevisionsAction (ChangeInfo info, String revision)
specifier|private
name|void
name|initRevisionsAction
parameter_list|(
name|ChangeInfo
name|info
parameter_list|,
name|String
name|revision
parameter_list|)
block|{
name|revisionsAction
operator|=
operator|new
name|RevisionsAction
argument_list|(
name|info
operator|.
name|legacy_id
argument_list|()
argument_list|,
name|revision
argument_list|,
name|style
argument_list|,
name|headerLine
argument_list|,
name|revisions
argument_list|)
expr_stmt|;
block|}
DECL|method|initDownloadAction (ChangeInfo info, String revision)
specifier|private
name|void
name|initDownloadAction
parameter_list|(
name|ChangeInfo
name|info
parameter_list|,
name|String
name|revision
parameter_list|)
block|{
name|downloadAction
operator|=
operator|new
name|DownloadAction
argument_list|(
name|info
operator|.
name|legacy_id
argument_list|()
argument_list|,
name|info
operator|.
name|project
argument_list|()
argument_list|,
name|info
operator|.
name|revision
argument_list|(
name|revision
argument_list|)
argument_list|,
name|style
argument_list|,
name|headerLine
argument_list|,
name|download
argument_list|)
expr_stmt|;
block|}
DECL|method|initEditMessageAction (ChangeInfo info, String revision)
specifier|private
name|void
name|initEditMessageAction
parameter_list|(
name|ChangeInfo
name|info
parameter_list|,
name|String
name|revision
parameter_list|)
block|{
name|NativeMap
argument_list|<
name|ActionInfo
argument_list|>
name|actions
init|=
name|info
operator|.
name|revision
argument_list|(
name|revision
argument_list|)
operator|.
name|actions
argument_list|()
decl_stmt|;
if|if
condition|(
name|actions
operator|!=
literal|null
operator|&&
name|actions
operator|.
name|containsKey
argument_list|(
literal|"message"
argument_list|)
condition|)
block|{
name|editMessage
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|editMessageAction
operator|=
operator|new
name|EditMessageAction
argument_list|(
name|info
operator|.
name|legacy_id
argument_list|()
argument_list|,
name|revision
argument_list|,
name|info
operator|.
name|revision
argument_list|(
name|revision
argument_list|)
operator|.
name|commit
argument_list|()
operator|.
name|message
argument_list|()
argument_list|,
name|style
argument_list|,
name|editMessage
argument_list|,
name|reply
argument_list|)
expr_stmt|;
name|keysAction
operator|.
name|add
argument_list|(
operator|new
name|KeyCommand
argument_list|(
literal|0
argument_list|,
literal|'e'
argument_list|,
name|Util
operator|.
name|C
operator|.
name|keyEditMessage
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
name|editMessageAction
operator|.
name|onEdit
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|registerKeys ()
specifier|public
name|void
name|registerKeys
parameter_list|()
block|{
name|super
operator|.
name|registerKeys
argument_list|()
expr_stmt|;
name|handlers
operator|.
name|add
argument_list|(
name|GlobalKey
operator|.
name|add
argument_list|(
name|this
argument_list|,
name|keysNavigation
argument_list|)
argument_list|)
expr_stmt|;
name|handlers
operator|.
name|add
argument_list|(
name|GlobalKey
operator|.
name|add
argument_list|(
name|this
argument_list|,
name|keysAction
argument_list|)
argument_list|)
expr_stmt|;
name|files
operator|.
name|registerKeys
argument_list|()
expr_stmt|;
name|related
operator|.
name|registerKeys
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onShowView ()
specifier|public
name|void
name|onShowView
parameter_list|()
block|{
name|super
operator|.
name|onShowView
argument_list|()
expr_stmt|;
name|related
operator|.
name|setMaxHeight
argument_list|(
name|commit
operator|.
name|getElement
argument_list|()
operator|.
name|getParentElement
argument_list|()
operator|.
name|getOffsetHeight
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|openReplyBox
condition|)
block|{
name|onReply
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|String
name|prior
init|=
name|Gerrit
operator|.
name|getPriorView
argument_list|()
decl_stmt|;
if|if
condition|(
name|prior
operator|!=
literal|null
operator|&&
name|prior
operator|.
name|startsWith
argument_list|(
literal|"/c/"
argument_list|)
condition|)
block|{
name|scrollToPath
argument_list|(
name|prior
operator|.
name|substring
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|startPoller
argument_list|()
expr_stmt|;
block|}
DECL|method|scrollToPath (String token)
specifier|private
name|void
name|scrollToPath
parameter_list|(
name|String
name|token
parameter_list|)
block|{
name|int
name|s
init|=
name|token
operator|.
name|indexOf
argument_list|(
literal|'/'
argument_list|)
decl_stmt|;
try|try
block|{
if|if
condition|(
name|s
operator|<
literal|0
operator|||
operator|!
name|changeId
operator|.
name|equals
argument_list|(
name|Change
operator|.
name|Id
operator|.
name|parse
argument_list|(
name|token
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|s
argument_list|)
argument_list|)
argument_list|)
condition|)
block|{
return|return;
comment|// Unrelated URL, do not scroll.
block|}
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
return|return;
block|}
name|s
operator|=
name|token
operator|.
name|indexOf
argument_list|(
literal|'/'
argument_list|,
name|s
operator|+
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|s
operator|<
literal|0
condition|)
block|{
return|return;
comment|// URL does not name a file.
block|}
name|int
name|c
init|=
name|token
operator|.
name|lastIndexOf
argument_list|(
literal|','
argument_list|)
decl_stmt|;
if|if
condition|(
literal|0
operator|<=
name|c
condition|)
block|{
name|token
operator|=
name|token
operator|.
name|substring
argument_list|(
name|s
operator|+
literal|1
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|token
operator|=
name|token
operator|.
name|substring
argument_list|(
name|s
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|token
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|files
operator|.
name|scrollToPath
argument_list|(
name|KeyUtil
operator|.
name|decode
argument_list|(
name|token
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|UiHandler
argument_list|(
literal|"star"
argument_list|)
DECL|method|onToggleStar (ValueChangeEvent<Boolean> e)
name|void
name|onToggleStar
parameter_list|(
name|ValueChangeEvent
argument_list|<
name|Boolean
argument_list|>
name|e
parameter_list|)
block|{
name|StarredChanges
operator|.
name|toggleStar
argument_list|(
name|changeId
argument_list|,
name|e
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|UiHandler
argument_list|(
literal|"download"
argument_list|)
DECL|method|onDownload (ClickEvent e)
name|void
name|onDownload
parameter_list|(
name|ClickEvent
name|e
parameter_list|)
block|{
name|downloadAction
operator|.
name|show
argument_list|()
expr_stmt|;
block|}
annotation|@
name|UiHandler
argument_list|(
literal|"revisions"
argument_list|)
DECL|method|onRevision (ClickEvent e)
name|void
name|onRevision
parameter_list|(
name|ClickEvent
name|e
parameter_list|)
block|{
name|revisionsAction
operator|.
name|show
argument_list|()
expr_stmt|;
block|}
annotation|@
name|UiHandler
argument_list|(
literal|"reply"
argument_list|)
DECL|method|onReply (ClickEvent e)
name|void
name|onReply
parameter_list|(
name|ClickEvent
name|e
parameter_list|)
block|{
name|onReply
argument_list|()
expr_stmt|;
block|}
DECL|method|onReply ()
specifier|private
name|void
name|onReply
parameter_list|()
block|{
if|if
condition|(
name|Gerrit
operator|.
name|isSignedIn
argument_list|()
condition|)
block|{
name|replyAction
operator|.
name|onReply
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|Gerrit
operator|.
name|doSignIn
argument_list|(
name|getToken
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|UiHandler
argument_list|(
literal|"editMessage"
argument_list|)
DECL|method|onEditMessage (ClickEvent e)
name|void
name|onEditMessage
parameter_list|(
name|ClickEvent
name|e
parameter_list|)
block|{
name|editMessageAction
operator|.
name|onEdit
argument_list|()
expr_stmt|;
block|}
annotation|@
name|UiHandler
argument_list|(
literal|"expandAll"
argument_list|)
DECL|method|onExpandAll (ClickEvent e)
name|void
name|onExpandAll
parameter_list|(
name|ClickEvent
name|e
parameter_list|)
block|{
name|int
name|n
init|=
name|history
operator|.
name|getWidgetCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|n
condition|;
name|i
operator|++
control|)
block|{
operator|(
operator|(
name|Message
operator|)
name|history
operator|.
name|getWidget
argument_list|(
name|i
argument_list|)
operator|)
operator|.
name|setOpen
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|expandAll
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|collapseAll
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|UiHandler
argument_list|(
literal|"collapseAll"
argument_list|)
DECL|method|onCollapseAll (ClickEvent e)
name|void
name|onCollapseAll
parameter_list|(
name|ClickEvent
name|e
parameter_list|)
block|{
name|int
name|n
init|=
name|history
operator|.
name|getWidgetCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|n
condition|;
name|i
operator|++
control|)
block|{
operator|(
operator|(
name|Message
operator|)
name|history
operator|.
name|getWidget
argument_list|(
name|i
argument_list|)
operator|)
operator|.
name|setOpen
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
name|expandAll
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|collapseAll
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|loadConfigInfo (final ChangeInfo info)
specifier|private
name|void
name|loadConfigInfo
parameter_list|(
specifier|final
name|ChangeInfo
name|info
parameter_list|)
block|{
name|info
operator|.
name|revisions
argument_list|()
operator|.
name|copyKeysIntoChildren
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
specifier|final
name|RevisionInfo
name|rev
init|=
name|resolveRevisionToDisplay
argument_list|(
name|info
argument_list|)
decl_stmt|;
name|CallbackGroup
name|group
init|=
operator|new
name|CallbackGroup
argument_list|()
decl_stmt|;
name|loadDiff
argument_list|(
name|rev
argument_list|,
name|myLastReply
argument_list|(
name|info
argument_list|)
argument_list|,
name|group
argument_list|)
expr_stmt|;
name|loadCommit
argument_list|(
name|rev
argument_list|,
name|group
argument_list|)
expr_stmt|;
name|RevisionInfoCache
operator|.
name|add
argument_list|(
name|changeId
argument_list|,
name|rev
argument_list|)
expr_stmt|;
name|ConfigInfoCache
operator|.
name|add
argument_list|(
name|info
argument_list|)
expr_stmt|;
name|ConfigInfoCache
operator|.
name|get
argument_list|(
name|info
operator|.
name|project_name_key
argument_list|()
argument_list|,
name|group
operator|.
name|add
argument_list|(
operator|new
name|ScreenLoadCallback
argument_list|<
name|ConfigInfoCache
operator|.
name|Entry
argument_list|>
argument_list|(
name|this
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|void
name|preDisplay
parameter_list|(
name|Entry
name|result
parameter_list|)
block|{
name|commentLinkProcessor
operator|=
name|result
operator|.
name|getCommentLinkProcessor
argument_list|()
expr_stmt|;
name|setTheme
argument_list|(
name|result
operator|.
name|getTheme
argument_list|()
argument_list|)
expr_stmt|;
name|renderChangeInfo
argument_list|(
name|info
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|group
operator|.
name|done
argument_list|()
expr_stmt|;
block|}
DECL|method|myLastReply (ChangeInfo info)
specifier|private
specifier|static
name|Timestamp
name|myLastReply
parameter_list|(
name|ChangeInfo
name|info
parameter_list|)
block|{
if|if
condition|(
name|Gerrit
operator|.
name|isSignedIn
argument_list|()
operator|&&
name|info
operator|.
name|messages
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|int
name|self
init|=
name|Gerrit
operator|.
name|getUserAccountInfo
argument_list|()
operator|.
name|_account_id
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|info
operator|.
name|messages
argument_list|()
operator|.
name|length
argument_list|()
operator|-
literal|1
init|;
name|i
operator|>=
literal|0
condition|;
name|i
operator|--
control|)
block|{
name|MessageInfo
name|m
init|=
name|info
operator|.
name|messages
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|m
operator|.
name|author
argument_list|()
operator|!=
literal|null
operator|&&
name|m
operator|.
name|author
argument_list|()
operator|.
name|_account_id
argument_list|()
operator|==
name|self
condition|)
block|{
return|return
name|m
operator|.
name|date
argument_list|()
return|;
block|}
block|}
block|}
return|return
literal|null
return|;
block|}
DECL|method|loadDiff (final RevisionInfo rev, final Timestamp myLastReply, CallbackGroup group)
specifier|private
name|void
name|loadDiff
parameter_list|(
specifier|final
name|RevisionInfo
name|rev
parameter_list|,
specifier|final
name|Timestamp
name|myLastReply
parameter_list|,
name|CallbackGroup
name|group
parameter_list|)
block|{
specifier|final
name|List
argument_list|<
name|NativeMap
argument_list|<
name|JsArray
argument_list|<
name|CommentInfo
argument_list|>
argument_list|>
argument_list|>
name|comments
init|=
name|loadComments
argument_list|(
name|rev
argument_list|,
name|group
argument_list|)
decl_stmt|;
specifier|final
name|List
argument_list|<
name|NativeMap
argument_list|<
name|JsArray
argument_list|<
name|CommentInfo
argument_list|>
argument_list|>
argument_list|>
name|drafts
init|=
name|loadDrafts
argument_list|(
name|rev
argument_list|,
name|group
argument_list|)
decl_stmt|;
name|DiffApi
operator|.
name|list
argument_list|(
name|changeId
operator|.
name|get
argument_list|()
argument_list|,
name|rev
operator|.
name|name
argument_list|()
argument_list|,
name|group
operator|.
name|add
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|NativeMap
argument_list|<
name|FileInfo
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|NativeMap
argument_list|<
name|FileInfo
argument_list|>
name|m
parameter_list|)
block|{
name|files
operator|.
name|setRevisions
argument_list|(
literal|null
argument_list|,
operator|new
name|PatchSet
operator|.
name|Id
argument_list|(
name|changeId
argument_list|,
name|rev
operator|.
name|_number
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|files
operator|.
name|setValue
argument_list|(
name|m
argument_list|,
name|myLastReply
argument_list|,
name|comments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|drafts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{         }
block|}
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|Gerrit
operator|.
name|isSignedIn
argument_list|()
condition|)
block|{
name|ChangeApi
operator|.
name|revision
argument_list|(
name|changeId
operator|.
name|get
argument_list|()
argument_list|,
name|rev
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|view
argument_list|(
literal|"files"
argument_list|)
operator|.
name|addParameterTrue
argument_list|(
literal|"reviewed"
argument_list|)
operator|.
name|get
argument_list|(
name|group
operator|.
name|add
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|JsArrayString
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|JsArrayString
name|result
parameter_list|)
block|{
name|files
operator|.
name|markReviewed
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{             }
block|}
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|loadComments ( RevisionInfo rev, CallbackGroup group)
specifier|private
name|List
argument_list|<
name|NativeMap
argument_list|<
name|JsArray
argument_list|<
name|CommentInfo
argument_list|>
argument_list|>
argument_list|>
name|loadComments
parameter_list|(
name|RevisionInfo
name|rev
parameter_list|,
name|CallbackGroup
name|group
parameter_list|)
block|{
specifier|final
name|List
argument_list|<
name|NativeMap
argument_list|<
name|JsArray
argument_list|<
name|CommentInfo
argument_list|>
argument_list|>
argument_list|>
name|r
init|=
operator|new
name|ArrayList
argument_list|<
name|NativeMap
argument_list|<
name|JsArray
argument_list|<
name|CommentInfo
argument_list|>
argument_list|>
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|ChangeApi
operator|.
name|revision
argument_list|(
name|changeId
operator|.
name|get
argument_list|()
argument_list|,
name|rev
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|view
argument_list|(
literal|"comments"
argument_list|)
operator|.
name|get
argument_list|(
name|group
operator|.
name|add
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|NativeMap
argument_list|<
name|JsArray
argument_list|<
name|CommentInfo
argument_list|>
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|NativeMap
argument_list|<
name|JsArray
argument_list|<
name|CommentInfo
argument_list|>
argument_list|>
name|result
parameter_list|)
block|{
name|r
operator|.
name|add
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{         }
block|}
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|r
return|;
block|}
DECL|method|loadDrafts ( RevisionInfo rev, CallbackGroup group)
specifier|private
name|List
argument_list|<
name|NativeMap
argument_list|<
name|JsArray
argument_list|<
name|CommentInfo
argument_list|>
argument_list|>
argument_list|>
name|loadDrafts
parameter_list|(
name|RevisionInfo
name|rev
parameter_list|,
name|CallbackGroup
name|group
parameter_list|)
block|{
specifier|final
name|List
argument_list|<
name|NativeMap
argument_list|<
name|JsArray
argument_list|<
name|CommentInfo
argument_list|>
argument_list|>
argument_list|>
name|r
init|=
operator|new
name|ArrayList
argument_list|<
name|NativeMap
argument_list|<
name|JsArray
argument_list|<
name|CommentInfo
argument_list|>
argument_list|>
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
if|if
condition|(
name|Gerrit
operator|.
name|isSignedIn
argument_list|()
condition|)
block|{
name|ChangeApi
operator|.
name|revision
argument_list|(
name|changeId
operator|.
name|get
argument_list|()
argument_list|,
name|rev
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|view
argument_list|(
literal|"drafts"
argument_list|)
operator|.
name|get
argument_list|(
name|group
operator|.
name|add
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|NativeMap
argument_list|<
name|JsArray
argument_list|<
name|CommentInfo
argument_list|>
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|NativeMap
argument_list|<
name|JsArray
argument_list|<
name|CommentInfo
argument_list|>
argument_list|>
name|result
parameter_list|)
block|{
name|r
operator|.
name|add
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{           }
block|}
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|r
operator|.
name|add
argument_list|(
name|NativeMap
operator|.
expr|<
name|JsArray
argument_list|<
name|CommentInfo
argument_list|>
operator|>
name|create
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|r
return|;
block|}
DECL|method|loadCommit (final RevisionInfo rev, CallbackGroup group)
specifier|private
name|void
name|loadCommit
parameter_list|(
specifier|final
name|RevisionInfo
name|rev
parameter_list|,
name|CallbackGroup
name|group
parameter_list|)
block|{
name|ChangeApi
operator|.
name|revision
argument_list|(
name|changeId
operator|.
name|get
argument_list|()
argument_list|,
name|rev
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|view
argument_list|(
literal|"commit"
argument_list|)
operator|.
name|get
argument_list|(
name|group
operator|.
name|add
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|CommitInfo
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|CommitInfo
name|info
parameter_list|)
block|{
name|rev
operator|.
name|set_commit
argument_list|(
name|info
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{         }
block|}
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|loadMergeable (final Change.Status status, final boolean canSubmit)
specifier|private
name|void
name|loadMergeable
parameter_list|(
specifier|final
name|Change
operator|.
name|Status
name|status
parameter_list|,
specifier|final
name|boolean
name|canSubmit
parameter_list|)
block|{
if|if
condition|(
name|Gerrit
operator|.
name|getConfig
argument_list|()
operator|.
name|testChangeMerge
argument_list|()
condition|)
block|{
name|ChangeApi
operator|.
name|revision
argument_list|(
name|changeId
operator|.
name|get
argument_list|()
argument_list|,
name|revision
argument_list|)
operator|.
name|view
argument_list|(
literal|"mergeable"
argument_list|)
operator|.
name|get
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|MergeableInfo
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|MergeableInfo
name|result
parameter_list|)
block|{
if|if
condition|(
name|canSubmit
condition|)
block|{
name|actions
operator|.
name|setSubmitEnabled
argument_list|(
name|result
operator|.
name|mergeable
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|status
operator|==
name|Change
operator|.
name|Status
operator|.
name|NEW
condition|)
block|{
name|statusText
operator|.
name|setInnerText
argument_list|(
name|result
operator|.
name|mergeable
argument_list|()
condition|?
name|Util
operator|.
name|C
operator|.
name|readyToSubmit
argument_list|()
else|:
name|Util
operator|.
name|C
operator|.
name|mergeConflict
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|setVisible
argument_list|(
name|notMergeable
argument_list|,
operator|!
name|result
operator|.
name|mergeable
argument_list|()
argument_list|)
expr_stmt|;
name|renderSubmitType
argument_list|(
name|result
operator|.
name|submit_type
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|loadSubmitType
argument_list|(
name|status
argument_list|,
name|canSubmit
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|loadSubmitType
argument_list|(
name|status
argument_list|,
name|canSubmit
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|loadSubmitType (final Change.Status status, final boolean canSubmit)
specifier|private
name|void
name|loadSubmitType
parameter_list|(
specifier|final
name|Change
operator|.
name|Status
name|status
parameter_list|,
specifier|final
name|boolean
name|canSubmit
parameter_list|)
block|{
if|if
condition|(
name|canSubmit
condition|)
block|{
name|actions
operator|.
name|setSubmitEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|status
operator|==
name|Change
operator|.
name|Status
operator|.
name|NEW
condition|)
block|{
name|statusText
operator|.
name|setInnerText
argument_list|(
name|Util
operator|.
name|C
operator|.
name|readyToSubmit
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|ChangeApi
operator|.
name|revision
argument_list|(
name|changeId
operator|.
name|get
argument_list|()
argument_list|,
name|revision
argument_list|)
operator|.
name|view
argument_list|(
literal|"submit_type"
argument_list|)
operator|.
name|get
argument_list|(
operator|new
name|AsyncCallback
argument_list|<
name|NativeString
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|NativeString
name|result
parameter_list|)
block|{
name|renderSubmitType
argument_list|(
name|result
operator|.
name|asString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{         }
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|resolveRevisionToDisplay (ChangeInfo info)
specifier|private
name|RevisionInfo
name|resolveRevisionToDisplay
parameter_list|(
name|ChangeInfo
name|info
parameter_list|)
block|{
if|if
condition|(
name|revision
operator|==
literal|null
condition|)
block|{
name|revision
operator|=
name|info
operator|.
name|current_revision
argument_list|()
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|!
name|info
operator|.
name|revisions
argument_list|()
operator|.
name|containsKey
argument_list|(
name|revision
argument_list|)
condition|)
block|{
name|JsArray
argument_list|<
name|RevisionInfo
argument_list|>
name|list
init|=
name|info
operator|.
name|revisions
argument_list|()
operator|.
name|values
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|list
operator|.
name|length
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|RevisionInfo
name|r
init|=
name|list
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|revision
operator|.
name|equals
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|r
operator|.
name|_number
argument_list|()
argument_list|)
argument_list|)
condition|)
block|{
name|revision
operator|=
name|r
operator|.
name|name
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
return|return
name|info
operator|.
name|revision
argument_list|(
name|revision
argument_list|)
return|;
block|}
DECL|method|renderChangeInfo (ChangeInfo info)
specifier|private
name|void
name|renderChangeInfo
parameter_list|(
name|ChangeInfo
name|info
parameter_list|)
block|{
name|changeInfo
operator|=
name|info
expr_stmt|;
name|lastDisplayedUpdate
operator|=
name|info
operator|.
name|updated
argument_list|()
expr_stmt|;
name|boolean
name|current
init|=
name|info
operator|.
name|status
argument_list|()
operator|.
name|isOpen
argument_list|()
operator|&&
name|revision
operator|.
name|equals
argument_list|(
name|info
operator|.
name|current_revision
argument_list|()
argument_list|)
decl_stmt|;
name|boolean
name|canSubmit
init|=
name|labels
operator|.
name|set
argument_list|(
name|info
argument_list|,
name|current
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|current
operator|&&
name|info
operator|.
name|status
argument_list|()
operator|==
name|Change
operator|.
name|Status
operator|.
name|NEW
condition|)
block|{
name|statusText
operator|.
name|setInnerText
argument_list|(
name|Util
operator|.
name|C
operator|.
name|notCurrent
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|statusText
operator|.
name|setInnerText
argument_list|(
name|Util
operator|.
name|toLongString
argument_list|(
name|info
operator|.
name|status
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|renderOwner
argument_list|(
name|info
argument_list|)
expr_stmt|;
name|renderReviewers
argument_list|(
name|info
argument_list|)
expr_stmt|;
name|renderActionTextDate
argument_list|(
name|info
argument_list|)
expr_stmt|;
name|renderHistory
argument_list|(
name|info
argument_list|)
expr_stmt|;
name|initRevisionsAction
argument_list|(
name|info
argument_list|,
name|revision
argument_list|)
expr_stmt|;
name|initDownloadAction
argument_list|(
name|info
argument_list|,
name|revision
argument_list|)
expr_stmt|;
name|actions
operator|.
name|display
argument_list|(
name|info
argument_list|,
name|revision
argument_list|)
expr_stmt|;
name|star
operator|.
name|setValue
argument_list|(
name|info
operator|.
name|starred
argument_list|()
argument_list|)
expr_stmt|;
name|permalink
operator|.
name|setHref
argument_list|(
name|ChangeLink
operator|.
name|permalink
argument_list|(
name|changeId
argument_list|)
argument_list|)
expr_stmt|;
name|changeIdText
operator|.
name|setInnerText
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|info
operator|.
name|legacy_id
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|projectText
operator|.
name|setInnerText
argument_list|(
name|info
operator|.
name|project
argument_list|()
argument_list|)
expr_stmt|;
name|branchText
operator|.
name|setInnerText
argument_list|(
name|info
operator|.
name|branch
argument_list|()
argument_list|)
expr_stmt|;
name|idText
operator|.
name|setText
argument_list|(
literal|"Change-Id: "
operator|+
name|info
operator|.
name|change_id
argument_list|()
argument_list|)
expr_stmt|;
name|idText
operator|.
name|setPreviewText
argument_list|(
name|info
operator|.
name|change_id
argument_list|()
argument_list|)
expr_stmt|;
name|reload
operator|.
name|set
argument_list|(
name|info
argument_list|)
expr_stmt|;
name|topic
operator|.
name|set
argument_list|(
name|info
argument_list|,
name|revision
argument_list|)
expr_stmt|;
name|commit
operator|.
name|set
argument_list|(
name|commentLinkProcessor
argument_list|,
name|info
argument_list|,
name|revision
argument_list|)
expr_stmt|;
name|related
operator|.
name|set
argument_list|(
name|info
argument_list|,
name|revision
argument_list|)
expr_stmt|;
name|quickApprove
operator|.
name|set
argument_list|(
name|info
argument_list|,
name|revision
argument_list|)
expr_stmt|;
if|if
condition|(
name|Gerrit
operator|.
name|isSignedIn
argument_list|()
condition|)
block|{
name|initEditMessageAction
argument_list|(
name|info
argument_list|,
name|revision
argument_list|)
expr_stmt|;
name|replyAction
operator|=
operator|new
name|ReplyAction
argument_list|(
name|info
argument_list|,
name|revision
argument_list|,
name|style
argument_list|,
name|reply
argument_list|)
expr_stmt|;
if|if
condition|(
name|topic
operator|.
name|canEdit
argument_list|()
condition|)
block|{
name|keysAction
operator|.
name|add
argument_list|(
operator|new
name|KeyCommand
argument_list|(
literal|0
argument_list|,
literal|'t'
argument_list|,
name|Util
operator|.
name|C
operator|.
name|keyEditTopic
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
name|topic
operator|.
name|onEdit
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|current
condition|)
block|{
name|loadMergeable
argument_list|(
name|info
operator|.
name|status
argument_list|()
argument_list|,
name|canSubmit
argument_list|)
expr_stmt|;
block|}
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|Util
operator|.
name|M
operator|.
name|changeScreenTitleId
argument_list|(
name|info
operator|.
name|id_abbreviated
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|info
operator|.
name|subject
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|": "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|info
operator|.
name|subject
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|setWindowTitle
argument_list|(
name|sb
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|renderReviewers (ChangeInfo info)
specifier|private
name|void
name|renderReviewers
parameter_list|(
name|ChangeInfo
name|info
parameter_list|)
block|{
comment|// TODO Fix approximation of reviewers and CC list(s).
name|Map
argument_list|<
name|Integer
argument_list|,
name|AccountInfo
argument_list|>
name|r
init|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|AccountInfo
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|Integer
argument_list|,
name|AccountInfo
argument_list|>
name|cc
init|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|AccountInfo
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|LabelInfo
name|label
range|:
name|Natives
operator|.
name|asList
argument_list|(
name|info
operator|.
name|all_labels
argument_list|()
operator|.
name|values
argument_list|()
argument_list|)
control|)
block|{
if|if
condition|(
name|label
operator|.
name|all
argument_list|()
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|ApprovalInfo
name|ai
range|:
name|Natives
operator|.
name|asList
argument_list|(
name|label
operator|.
name|all
argument_list|()
argument_list|)
control|)
block|{
operator|(
name|ai
operator|.
name|value
argument_list|()
operator|!=
literal|0
condition|?
name|r
else|:
name|cc
operator|)
operator|.
name|put
argument_list|(
name|ai
operator|.
name|_account_id
argument_list|()
argument_list|,
name|ai
argument_list|)
expr_stmt|;
block|}
block|}
block|}
for|for
control|(
name|Integer
name|i
range|:
name|r
operator|.
name|keySet
argument_list|()
control|)
block|{
name|cc
operator|.
name|remove
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
name|r
operator|.
name|remove
argument_list|(
name|info
operator|.
name|owner
argument_list|()
operator|.
name|_account_id
argument_list|()
argument_list|)
expr_stmt|;
name|cc
operator|.
name|remove
argument_list|(
name|info
operator|.
name|owner
argument_list|()
operator|.
name|_account_id
argument_list|()
argument_list|)
expr_stmt|;
name|reviewersText
operator|.
name|setInnerSafeHtml
argument_list|(
name|Labels
operator|.
name|formatUserList
argument_list|(
name|style
argument_list|,
name|r
operator|.
name|values
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|reviewers
operator|.
name|set
argument_list|(
name|info
operator|.
name|legacy_id
argument_list|()
argument_list|)
expr_stmt|;
name|reviewers
operator|.
name|setReviewers
argument_list|(
name|Labels
operator|.
name|formatUserList
argument_list|(
name|style
argument_list|,
name|cc
operator|.
name|values
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|renderOwner (ChangeInfo info)
specifier|private
name|void
name|renderOwner
parameter_list|(
name|ChangeInfo
name|info
parameter_list|)
block|{
comment|// TODO info card hover
name|String
name|name
init|=
name|info
operator|.
name|owner
argument_list|()
operator|.
name|name
argument_list|()
operator|!=
literal|null
condition|?
name|info
operator|.
name|owner
argument_list|()
operator|.
name|name
argument_list|()
else|:
name|Gerrit
operator|.
name|getConfig
argument_list|()
operator|.
name|getAnonymousCowardName
argument_list|()
decl_stmt|;
name|ownerText
operator|.
name|setInnerText
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|ownerText
operator|.
name|setTitle
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
DECL|method|renderSubmitType (String action)
specifier|private
name|void
name|renderSubmitType
parameter_list|(
name|String
name|action
parameter_list|)
block|{
try|try
block|{
name|SubmitType
name|type
init|=
name|Project
operator|.
name|SubmitType
operator|.
name|valueOf
argument_list|(
name|action
argument_list|)
decl_stmt|;
name|submitActionText
operator|.
name|setInnerText
argument_list|(
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|admin
operator|.
name|Util
operator|.
name|toLongString
argument_list|(
name|type
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|submitActionText
operator|.
name|setInnerText
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|renderActionTextDate (ChangeInfo info)
specifier|private
name|void
name|renderActionTextDate
parameter_list|(
name|ChangeInfo
name|info
parameter_list|)
block|{
name|String
name|action
decl_stmt|;
if|if
condition|(
name|info
operator|.
name|created
argument_list|()
operator|.
name|equals
argument_list|(
name|info
operator|.
name|updated
argument_list|()
argument_list|)
condition|)
block|{
name|action
operator|=
name|Util
operator|.
name|C
operator|.
name|changeInfoBlockUploaded
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|action
operator|=
name|Util
operator|.
name|C
operator|.
name|changeInfoBlockUpdated
argument_list|()
expr_stmt|;
block|}
name|actionText
operator|.
name|setInnerText
argument_list|(
name|action
argument_list|)
expr_stmt|;
name|actionDate
operator|.
name|setInnerText
argument_list|(
name|FormatUtil
operator|.
name|relativeFormat
argument_list|(
name|info
operator|.
name|updated
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|renderHistory (ChangeInfo info)
specifier|private
name|void
name|renderHistory
parameter_list|(
name|ChangeInfo
name|info
parameter_list|)
block|{
name|JsArray
argument_list|<
name|MessageInfo
argument_list|>
name|messages
init|=
name|info
operator|.
name|messages
argument_list|()
decl_stmt|;
if|if
condition|(
name|messages
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|messages
operator|.
name|length
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|history
operator|.
name|add
argument_list|(
operator|new
name|Message
argument_list|(
name|commentLinkProcessor
argument_list|,
name|messages
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|showUpdates (ChangeInfo newInfo)
name|void
name|showUpdates
parameter_list|(
name|ChangeInfo
name|newInfo
parameter_list|)
block|{
if|if
condition|(
operator|!
name|isAttached
argument_list|()
operator|||
name|newInfo
operator|.
name|updated
argument_list|()
operator|.
name|equals
argument_list|(
name|lastDisplayedUpdate
argument_list|)
condition|)
block|{
return|return;
block|}
name|JsArray
argument_list|<
name|MessageInfo
argument_list|>
name|om
init|=
name|changeInfo
operator|.
name|messages
argument_list|()
decl_stmt|;
name|JsArray
argument_list|<
name|MessageInfo
argument_list|>
name|nm
init|=
name|newInfo
operator|.
name|messages
argument_list|()
decl_stmt|;
if|if
condition|(
name|om
operator|==
literal|null
condition|)
block|{
name|om
operator|=
name|JsArray
operator|.
name|createArray
argument_list|()
operator|.
name|cast
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|nm
operator|==
literal|null
condition|)
block|{
name|nm
operator|=
name|JsArray
operator|.
name|createArray
argument_list|()
operator|.
name|cast
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|updateAvailable
operator|==
literal|null
condition|)
block|{
name|updateAvailable
operator|=
operator|new
name|UpdateAvailableBar
argument_list|()
block|{
annotation|@
name|Override
name|void
name|onShow
parameter_list|()
block|{
name|reload
operator|.
name|reload
argument_list|()
expr_stmt|;
block|}
name|void
name|onIgnore
parameter_list|(
name|Timestamp
name|newTime
parameter_list|)
block|{
name|lastDisplayedUpdate
operator|=
name|newTime
expr_stmt|;
block|}
block|}
expr_stmt|;
name|updateAvailable
operator|.
name|addCloseHandler
argument_list|(
operator|new
name|CloseHandler
argument_list|<
name|PopupPanel
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClose
parameter_list|(
name|CloseEvent
argument_list|<
name|PopupPanel
argument_list|>
name|event
parameter_list|)
block|{
name|updateAvailable
operator|=
literal|null
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
name|updateAvailable
operator|.
name|set
argument_list|(
name|Natives
operator|.
name|asList
argument_list|(
name|nm
argument_list|)
operator|.
name|subList
argument_list|(
name|om
operator|.
name|length
argument_list|()
argument_list|,
name|nm
operator|.
name|length
argument_list|()
argument_list|)
argument_list|,
name|newInfo
operator|.
name|updated
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|updateAvailable
operator|.
name|isShowing
argument_list|()
condition|)
block|{
name|updateAvailable
operator|.
name|popup
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|startPoller ()
specifier|private
name|void
name|startPoller
parameter_list|()
block|{
if|if
condition|(
name|Gerrit
operator|.
name|isSignedIn
argument_list|()
operator|&&
literal|0
operator|<
name|Gerrit
operator|.
name|getConfig
argument_list|()
operator|.
name|getChangeUpdateDelay
argument_list|()
condition|)
block|{
name|updateCheck
operator|=
operator|new
name|UpdateCheckTimer
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|updateCheck
operator|.
name|schedule
argument_list|()
expr_stmt|;
name|handlers
operator|.
name|add
argument_list|(
name|UserActivityMonitor
operator|.
name|addValueChangeHandler
argument_list|(
name|updateCheck
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

