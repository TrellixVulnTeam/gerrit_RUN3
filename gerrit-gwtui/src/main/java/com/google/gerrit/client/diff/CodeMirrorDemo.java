begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.diff
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|diff
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|CallbackGroup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|GerritCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|ScreenLoadCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|Screen
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ResizeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|logical
operator|.
name|shared
operator|.
name|ResizeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlowPanel
import|;
end_import

begin_import
import|import
name|net
operator|.
name|codemirror
operator|.
name|lib
operator|.
name|CodeMirror
import|;
end_import

begin_import
import|import
name|net
operator|.
name|codemirror
operator|.
name|lib
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|net
operator|.
name|codemirror
operator|.
name|lib
operator|.
name|ModeInjector
import|;
end_import

begin_class
DECL|class|CodeMirrorDemo
specifier|public
class|class
name|CodeMirrorDemo
extends|extends
name|Screen
block|{
DECL|field|HEADER_FOOTER
specifier|private
specifier|static
specifier|final
name|int
name|HEADER_FOOTER
init|=
literal|60
operator|+
literal|15
operator|*
literal|2
operator|+
literal|38
decl_stmt|;
DECL|field|base
specifier|private
specifier|final
name|PatchSet
operator|.
name|Id
name|base
decl_stmt|;
DECL|field|revision
specifier|private
specifier|final
name|PatchSet
operator|.
name|Id
name|revision
decl_stmt|;
DECL|field|path
specifier|private
specifier|final
name|String
name|path
decl_stmt|;
DECL|field|editorContainer
specifier|private
name|FlowPanel
name|editorContainer
decl_stmt|;
DECL|field|cm
specifier|private
name|CodeMirror
name|cm
decl_stmt|;
DECL|field|resizeHandler
specifier|private
name|HandlerRegistration
name|resizeHandler
decl_stmt|;
DECL|method|CodeMirrorDemo ( PatchSet.Id base, PatchSet.Id revision, String path)
specifier|public
name|CodeMirrorDemo
parameter_list|(
name|PatchSet
operator|.
name|Id
name|base
parameter_list|,
name|PatchSet
operator|.
name|Id
name|revision
parameter_list|,
name|String
name|path
parameter_list|)
block|{
name|this
operator|.
name|base
operator|=
name|base
expr_stmt|;
name|this
operator|.
name|revision
operator|=
name|revision
expr_stmt|;
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onInitUI ()
specifier|protected
name|void
name|onInitUI
parameter_list|()
block|{
name|super
operator|.
name|onInitUI
argument_list|()
expr_stmt|;
name|add
argument_list|(
name|editorContainer
operator|=
operator|new
name|FlowPanel
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onLoad ()
specifier|protected
name|void
name|onLoad
parameter_list|()
block|{
name|super
operator|.
name|onLoad
argument_list|()
expr_stmt|;
name|CallbackGroup
name|group
init|=
operator|new
name|CallbackGroup
argument_list|()
decl_stmt|;
name|CodeMirror
operator|.
name|initLibrary
argument_list|(
name|group
operator|.
name|add
argument_list|(
operator|new
name|GerritCallback
argument_list|<
name|Void
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|Void
name|result
parameter_list|)
block|{       }
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|DiffApi
operator|.
name|diff
argument_list|(
name|revision
argument_list|,
name|path
argument_list|)
operator|.
name|base
argument_list|(
name|base
argument_list|)
operator|.
name|wholeFile
argument_list|()
operator|.
name|ignoreWhitespace
argument_list|(
name|DiffApi
operator|.
name|IgnoreWhitespace
operator|.
name|NONE
argument_list|)
operator|.
name|get
argument_list|(
name|group
operator|.
name|add
argument_list|(
operator|new
name|GerritCallback
argument_list|<
name|DiffInfo
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
specifier|final
name|DiffInfo
name|diff
parameter_list|)
block|{
operator|new
name|ModeInjector
argument_list|()
operator|.
name|add
argument_list|(
name|getContentType
argument_list|(
name|diff
operator|.
name|meta_a
argument_list|()
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|getContentType
argument_list|(
name|diff
operator|.
name|meta_b
argument_list|()
argument_list|)
argument_list|)
operator|.
name|inject
argument_list|(
operator|new
name|ScreenLoadCallback
argument_list|<
name|Void
argument_list|>
argument_list|(
name|CodeMirrorDemo
operator|.
name|this
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|void
name|preDisplay
parameter_list|(
name|Void
name|result
parameter_list|)
block|{
name|display
argument_list|(
name|diff
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onShowView ()
specifier|public
name|void
name|onShowView
parameter_list|()
block|{
name|super
operator|.
name|onShowView
argument_list|()
expr_stmt|;
name|cm
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUnload ()
specifier|protected
name|void
name|onUnload
parameter_list|()
block|{
name|super
operator|.
name|onUnload
argument_list|()
expr_stmt|;
if|if
condition|(
name|resizeHandler
operator|!=
literal|null
condition|)
block|{
name|resizeHandler
operator|.
name|removeHandler
argument_list|()
expr_stmt|;
name|resizeHandler
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|cm
operator|!=
literal|null
condition|)
block|{
name|cm
operator|.
name|getWrapperElement
argument_list|()
operator|.
name|removeFromParent
argument_list|()
expr_stmt|;
name|cm
operator|=
literal|null
expr_stmt|;
block|}
block|}
DECL|method|display (DiffInfo diff)
specifier|private
name|void
name|display
parameter_list|(
name|DiffInfo
name|diff
parameter_list|)
block|{
name|Configuration
name|cfg
init|=
name|Configuration
operator|.
name|create
argument_list|()
operator|.
name|set
argument_list|(
literal|"readOnly"
argument_list|,
literal|true
argument_list|)
operator|.
name|set
argument_list|(
literal|"lineNumbers"
argument_list|,
literal|true
argument_list|)
operator|.
name|set
argument_list|(
literal|"tabSize"
argument_list|,
literal|2
argument_list|)
operator|.
name|set
argument_list|(
literal|"mode"
argument_list|,
name|getContentType
argument_list|(
name|diff
operator|.
name|meta_b
argument_list|()
argument_list|)
argument_list|)
operator|.
name|set
argument_list|(
literal|"value"
argument_list|,
name|diff
operator|.
name|text_b
argument_list|()
argument_list|)
decl_stmt|;
name|cm
operator|=
name|CodeMirror
operator|.
name|create
argument_list|(
name|editorContainer
operator|.
name|getElement
argument_list|()
argument_list|,
name|cfg
argument_list|)
expr_stmt|;
name|cm
operator|.
name|setWidth
argument_list|(
literal|"100%"
argument_list|)
expr_stmt|;
name|cm
operator|.
name|setHeight
argument_list|(
name|Window
operator|.
name|getClientHeight
argument_list|()
operator|-
name|HEADER_FOOTER
argument_list|)
expr_stmt|;
name|resizeHandler
operator|=
name|Window
operator|.
name|addResizeHandler
argument_list|(
operator|new
name|ResizeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onResize
parameter_list|(
name|ResizeEvent
name|event
parameter_list|)
block|{
name|cm
operator|.
name|setHeight
argument_list|(
name|event
operator|.
name|getHeight
argument_list|()
operator|-
name|HEADER_FOOTER
argument_list|)
expr_stmt|;
name|cm
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|getContentType (DiffInfo.FileMeta meta)
specifier|private
specifier|static
name|String
name|getContentType
parameter_list|(
name|DiffInfo
operator|.
name|FileMeta
name|meta
parameter_list|)
block|{
return|return
name|meta
operator|!=
literal|null
operator|&&
name|meta
operator|.
name|content_type
argument_list|()
operator|!=
literal|null
condition|?
name|ModeInjector
operator|.
name|getContentType
argument_list|(
name|meta
operator|.
name|content_type
argument_list|()
argument_list|)
else|:
literal|null
return|;
block|}
block|}
end_class

end_unit

