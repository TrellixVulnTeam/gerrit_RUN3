begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|//Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.diff
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|diff
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|AvatarImage
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|FormatUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|account
operator|.
name|AccountInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|CommentLinkProcessor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|resources
operator|.
name|client
operator|.
name|CssResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiBinder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiField
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTMLPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|safehtml
operator|.
name|client
operator|.
name|SafeHtml
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|safehtml
operator|.
name|client
operator|.
name|SafeHtmlBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_comment
comment|/** An HtmlPanel holding the DialogBox to display a comment */
end_comment

begin_class
DECL|class|CommentBox
class|class
name|CommentBox
extends|extends
name|Composite
block|{
DECL|interface|Binder
interface|interface
name|Binder
extends|extends
name|UiBinder
argument_list|<
name|HTMLPanel
argument_list|,
name|CommentBox
argument_list|>
block|{}
DECL|field|uiBinder
specifier|private
specifier|static
name|Binder
name|uiBinder
init|=
name|GWT
operator|.
name|create
argument_list|(
name|Binder
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|interface|CommentBoxStyle
interface|interface
name|CommentBoxStyle
extends|extends
name|CssResource
block|{
DECL|method|open ()
name|String
name|open
parameter_list|()
function_decl|;
DECL|method|close ()
name|String
name|close
parameter_list|()
function_decl|;
block|}
DECL|field|commentLinkProcessor
specifier|private
name|CommentLinkProcessor
name|commentLinkProcessor
decl_stmt|;
DECL|field|headerClick
specifier|private
name|HandlerRegistration
name|headerClick
decl_stmt|;
DECL|field|clickCallback
specifier|private
name|Runnable
name|clickCallback
decl_stmt|;
annotation|@
name|UiField
DECL|field|header
name|Widget
name|header
decl_stmt|;
annotation|@
name|UiField
DECL|field|avatar
name|AvatarImage
name|avatar
decl_stmt|;
annotation|@
name|UiField
DECL|field|name
name|Element
name|name
decl_stmt|;
annotation|@
name|UiField
DECL|field|summary
name|Element
name|summary
decl_stmt|;
annotation|@
name|UiField
DECL|field|date
name|Element
name|date
decl_stmt|;
annotation|@
name|UiField
DECL|field|contentPanel
name|Element
name|contentPanel
decl_stmt|;
annotation|@
name|UiField
DECL|field|contentPanelMessage
name|HTML
name|contentPanelMessage
decl_stmt|;
annotation|@
name|UiField
DECL|field|style
name|CommentBoxStyle
name|style
decl_stmt|;
DECL|method|CommentBox (AccountInfo author, Timestamp when, String message, CommentLinkProcessor linkProcessor, boolean isDraft)
name|CommentBox
parameter_list|(
name|AccountInfo
name|author
parameter_list|,
name|Timestamp
name|when
parameter_list|,
name|String
name|message
parameter_list|,
name|CommentLinkProcessor
name|linkProcessor
parameter_list|,
name|boolean
name|isDraft
parameter_list|)
block|{
name|initWidget
argument_list|(
name|uiBinder
operator|.
name|createAndBindUi
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
comment|// TODO: Format the comment box differently based on whether isDraft
comment|// is true.
name|commentLinkProcessor
operator|=
name|linkProcessor
expr_stmt|;
name|setAuthorNameText
argument_list|(
name|author
argument_list|)
expr_stmt|;
name|date
operator|.
name|setInnerText
argument_list|(
name|FormatUtil
operator|.
name|shortFormatDayTime
argument_list|(
name|when
argument_list|)
argument_list|)
expr_stmt|;
name|setMessageText
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|setOpen
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onLoad ()
specifier|protected
name|void
name|onLoad
parameter_list|()
block|{
name|super
operator|.
name|onLoad
argument_list|()
expr_stmt|;
name|headerClick
operator|=
name|header
operator|.
name|addDomHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|setOpen
argument_list|(
operator|!
name|isOpen
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|clickCallback
operator|!=
literal|null
condition|)
block|{
name|clickCallback
operator|.
name|run
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|,
name|ClickEvent
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|setOpenCloseHandler (final Runnable callback)
name|void
name|setOpenCloseHandler
parameter_list|(
specifier|final
name|Runnable
name|callback
parameter_list|)
block|{
name|clickCallback
operator|=
name|callback
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUnload ()
specifier|protected
name|void
name|onUnload
parameter_list|()
block|{
name|super
operator|.
name|onUnload
argument_list|()
expr_stmt|;
if|if
condition|(
name|headerClick
operator|!=
literal|null
condition|)
block|{
name|headerClick
operator|.
name|removeHandler
argument_list|()
expr_stmt|;
name|headerClick
operator|=
literal|null
expr_stmt|;
block|}
block|}
DECL|method|setAuthorNameText (AccountInfo author)
specifier|private
name|void
name|setAuthorNameText
parameter_list|(
name|AccountInfo
name|author
parameter_list|)
block|{
comment|// TODO: Set avatar's display to none if we get a 404.
name|avatar
operator|=
operator|new
name|AvatarImage
argument_list|(
name|author
argument_list|,
literal|26
argument_list|)
expr_stmt|;
name|name
operator|.
name|setInnerText
argument_list|(
name|FormatUtil
operator|.
name|name
argument_list|(
name|author
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|setMessageText (String message)
specifier|private
name|void
name|setMessageText
parameter_list|(
name|String
name|message
parameter_list|)
block|{
if|if
condition|(
name|message
operator|==
literal|null
condition|)
block|{
name|message
operator|=
literal|""
expr_stmt|;
block|}
else|else
block|{
name|message
operator|=
name|message
operator|.
name|trim
argument_list|()
expr_stmt|;
block|}
name|summary
operator|.
name|setInnerText
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|SafeHtml
name|buf
init|=
operator|new
name|SafeHtmlBuilder
argument_list|()
operator|.
name|append
argument_list|(
name|message
argument_list|)
operator|.
name|wikify
argument_list|()
decl_stmt|;
name|buf
operator|=
name|commentLinkProcessor
operator|.
name|apply
argument_list|(
name|buf
argument_list|)
expr_stmt|;
name|SafeHtml
operator|.
name|set
argument_list|(
name|contentPanelMessage
argument_list|,
name|buf
argument_list|)
expr_stmt|;
block|}
DECL|method|setOpen (boolean open)
specifier|private
name|void
name|setOpen
parameter_list|(
name|boolean
name|open
parameter_list|)
block|{
if|if
condition|(
name|open
condition|)
block|{
name|removeStyleName
argument_list|(
name|style
operator|.
name|close
argument_list|()
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
name|style
operator|.
name|open
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|removeStyleName
argument_list|(
name|style
operator|.
name|open
argument_list|()
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
name|style
operator|.
name|close
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|isOpen ()
specifier|private
name|boolean
name|isOpen
parameter_list|()
block|{
return|return
name|getStyleName
argument_list|()
operator|.
name|contains
argument_list|(
name|style
operator|.
name|open
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

