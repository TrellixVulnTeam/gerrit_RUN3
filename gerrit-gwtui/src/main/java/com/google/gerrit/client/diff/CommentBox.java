begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|//Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.diff
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|diff
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|CommentInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|CommentLinkProcessor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
operator|.
name|ScheduledCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|resources
operator|.
name|client
operator|.
name|CssResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiBinder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiField
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTML
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|safehtml
operator|.
name|client
operator|.
name|SafeHtml
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|safehtml
operator|.
name|client
operator|.
name|SafeHtmlBuilder
import|;
end_import

begin_import
import|import
name|net
operator|.
name|codemirror
operator|.
name|lib
operator|.
name|CodeMirror
import|;
end_import

begin_import
import|import
name|net
operator|.
name|codemirror
operator|.
name|lib
operator|.
name|LineWidget
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_comment
comment|/** An HtmlPanel for displaying a comment */
end_comment

begin_class
DECL|class|CommentBox
specifier|abstract
class|class
name|CommentBox
extends|extends
name|Composite
block|{
DECL|interface|CommentBoxStyle
interface|interface
name|CommentBoxStyle
extends|extends
name|CssResource
block|{
DECL|method|open ()
name|String
name|open
parameter_list|()
function_decl|;
DECL|method|close ()
name|String
name|close
parameter_list|()
function_decl|;
block|}
DECL|field|commentLinkProcessor
specifier|private
name|CommentLinkProcessor
name|commentLinkProcessor
decl_stmt|;
DECL|field|original
specifier|private
name|CommentInfo
name|original
decl_stmt|;
DECL|field|patchSetId
specifier|private
name|PatchSet
operator|.
name|Id
name|patchSetId
decl_stmt|;
DECL|field|widgetManager
specifier|private
name|PaddingManager
name|widgetManager
decl_stmt|;
DECL|field|diffView
specifier|private
name|CodeMirrorDemo
name|diffView
decl_stmt|;
DECL|field|draft
specifier|private
name|boolean
name|draft
decl_stmt|;
DECL|field|selfWidget
specifier|private
name|LineWidget
name|selfWidget
decl_stmt|;
DECL|field|cm
specifier|private
name|CodeMirror
name|cm
decl_stmt|;
DECL|field|regClick
specifier|private
name|HandlerRegistration
name|regClick
decl_stmt|;
DECL|field|clickFocusHandler
specifier|private
name|ClickHandler
name|clickFocusHandler
decl_stmt|;
annotation|@
name|UiField
argument_list|(
name|provided
operator|=
literal|true
argument_list|)
DECL|field|header
name|CommentBoxHeader
name|header
decl_stmt|;
annotation|@
name|UiField
DECL|field|contentPanelMessage
name|HTML
name|contentPanelMessage
decl_stmt|;
annotation|@
name|UiField
DECL|field|res
name|CommentBoxResources
name|res
decl_stmt|;
DECL|method|CommentBox ( CodeMirrorDemo host, CodeMirror cmInstance, UiBinder<? extends Widget, CommentBox> binder, PatchSet.Id id, CommentInfo info, CommentLinkProcessor linkProcessor, boolean isDraft)
name|CommentBox
parameter_list|(
name|CodeMirrorDemo
name|host
parameter_list|,
name|CodeMirror
name|cmInstance
parameter_list|,
name|UiBinder
argument_list|<
name|?
extends|extends
name|Widget
argument_list|,
name|CommentBox
argument_list|>
name|binder
parameter_list|,
name|PatchSet
operator|.
name|Id
name|id
parameter_list|,
name|CommentInfo
name|info
parameter_list|,
name|CommentLinkProcessor
name|linkProcessor
parameter_list|,
name|boolean
name|isDraft
parameter_list|)
block|{
name|diffView
operator|=
name|host
expr_stmt|;
name|cm
operator|=
name|cmInstance
expr_stmt|;
name|commentLinkProcessor
operator|=
name|linkProcessor
expr_stmt|;
name|original
operator|=
name|info
expr_stmt|;
name|patchSetId
operator|=
name|id
expr_stmt|;
name|draft
operator|=
name|isDraft
expr_stmt|;
name|header
operator|=
operator|new
name|CommentBoxHeader
argument_list|(
name|info
operator|.
name|author
argument_list|()
argument_list|,
name|info
operator|.
name|updated
argument_list|()
argument_list|,
name|isDraft
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|binder
operator|.
name|createAndBindUi
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
name|clickFocusHandler
operator|=
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|cm
operator|.
name|focus
argument_list|()
expr_stmt|;
block|}
block|}
expr_stmt|;
name|enableClickFocusHandler
argument_list|()
expr_stmt|;
name|res
operator|.
name|style
argument_list|()
operator|.
name|ensureInjected
argument_list|()
expr_stmt|;
name|setMessageText
argument_list|(
name|info
operator|.
name|message
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|resizePaddingWidget ()
name|void
name|resizePaddingWidget
parameter_list|()
block|{
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleDeferred
argument_list|(
operator|new
name|ScheduledCommand
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
if|if
condition|(
name|selfWidget
operator|==
literal|null
operator|||
name|widgetManager
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"resizePaddingWidget() called before setting up widgets"
argument_list|)
throw|;
block|}
name|selfWidget
operator|.
name|changed
argument_list|()
expr_stmt|;
name|widgetManager
operator|.
name|resizePaddingWidget
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|setMessageText (String message)
name|void
name|setMessageText
parameter_list|(
name|String
name|message
parameter_list|)
block|{
if|if
condition|(
name|message
operator|==
literal|null
condition|)
block|{
name|message
operator|=
literal|""
expr_stmt|;
block|}
else|else
block|{
name|message
operator|=
name|message
operator|.
name|trim
argument_list|()
expr_stmt|;
block|}
name|header
operator|.
name|setSummaryText
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|SafeHtml
name|buf
init|=
operator|new
name|SafeHtmlBuilder
argument_list|()
operator|.
name|append
argument_list|(
name|message
argument_list|)
operator|.
name|wikify
argument_list|()
decl_stmt|;
name|buf
operator|=
name|commentLinkProcessor
operator|.
name|apply
argument_list|(
name|buf
argument_list|)
expr_stmt|;
name|SafeHtml
operator|.
name|set
argument_list|(
name|contentPanelMessage
argument_list|,
name|buf
argument_list|)
expr_stmt|;
block|}
DECL|method|setDate (Timestamp when)
name|void
name|setDate
parameter_list|(
name|Timestamp
name|when
parameter_list|)
block|{
name|header
operator|.
name|setDate
argument_list|(
name|when
argument_list|)
expr_stmt|;
block|}
DECL|method|setOpen (boolean open)
name|void
name|setOpen
parameter_list|(
name|boolean
name|open
parameter_list|)
block|{
if|if
condition|(
name|open
condition|)
block|{
name|removeStyleName
argument_list|(
name|res
operator|.
name|style
argument_list|()
operator|.
name|close
argument_list|()
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
name|res
operator|.
name|style
argument_list|()
operator|.
name|open
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|removeStyleName
argument_list|(
name|res
operator|.
name|style
argument_list|()
operator|.
name|open
argument_list|()
argument_list|)
expr_stmt|;
name|addStyleName
argument_list|(
name|res
operator|.
name|style
argument_list|()
operator|.
name|close
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|resizePaddingWidget
argument_list|()
expr_stmt|;
block|}
DECL|method|isOpen ()
name|boolean
name|isOpen
parameter_list|()
block|{
return|return
name|getStyleName
argument_list|()
operator|.
name|contains
argument_list|(
name|res
operator|.
name|style
argument_list|()
operator|.
name|open
argument_list|()
argument_list|)
return|;
block|}
DECL|method|getDiffView ()
name|CodeMirrorDemo
name|getDiffView
parameter_list|()
block|{
return|return
name|diffView
return|;
block|}
DECL|method|getPatchSetId ()
name|PatchSet
operator|.
name|Id
name|getPatchSetId
parameter_list|()
block|{
return|return
name|patchSetId
return|;
block|}
DECL|method|getOriginal ()
name|CommentInfo
name|getOriginal
parameter_list|()
block|{
return|return
name|original
return|;
block|}
DECL|method|updateOriginal (CommentInfo newInfo)
name|void
name|updateOriginal
parameter_list|(
name|CommentInfo
name|newInfo
parameter_list|)
block|{
name|original
operator|=
name|newInfo
expr_stmt|;
block|}
DECL|method|getPaddingManager ()
name|PaddingManager
name|getPaddingManager
parameter_list|()
block|{
return|return
name|widgetManager
return|;
block|}
DECL|method|isDraft ()
name|boolean
name|isDraft
parameter_list|()
block|{
return|return
name|draft
return|;
block|}
DECL|method|setPaddingManager (PaddingManager manager)
name|void
name|setPaddingManager
parameter_list|(
name|PaddingManager
name|manager
parameter_list|)
block|{
name|widgetManager
operator|=
name|manager
expr_stmt|;
block|}
DECL|method|setSelfWidget (LineWidget widget)
name|void
name|setSelfWidget
parameter_list|(
name|LineWidget
name|widget
parameter_list|)
block|{
name|selfWidget
operator|=
name|widget
expr_stmt|;
block|}
DECL|method|getSelfWidget ()
name|LineWidget
name|getSelfWidget
parameter_list|()
block|{
return|return
name|selfWidget
return|;
block|}
DECL|method|getCm ()
name|CodeMirror
name|getCm
parameter_list|()
block|{
return|return
name|cm
return|;
block|}
annotation|@
name|UiHandler
argument_list|(
literal|"header"
argument_list|)
DECL|method|onHeaderClick (ClickEvent e)
name|void
name|onHeaderClick
parameter_list|(
name|ClickEvent
name|e
parameter_list|)
block|{
name|setOpen
argument_list|(
operator|!
name|isOpen
argument_list|()
argument_list|)
expr_stmt|;
name|cm
operator|.
name|focus
argument_list|()
expr_stmt|;
block|}
DECL|method|enableClickFocusHandler ()
name|void
name|enableClickFocusHandler
parameter_list|()
block|{
if|if
condition|(
name|regClick
operator|==
literal|null
condition|)
block|{
name|regClick
operator|=
name|addDomHandler
argument_list|(
name|clickFocusHandler
argument_list|,
name|ClickEvent
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|disableClickFocusHandler ()
name|void
name|disableClickFocusHandler
parameter_list|()
block|{
if|if
condition|(
name|regClick
operator|!=
literal|null
condition|)
block|{
name|regClick
operator|.
name|removeHandler
argument_list|()
expr_stmt|;
name|regClick
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

