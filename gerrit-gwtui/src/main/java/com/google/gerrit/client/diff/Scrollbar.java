begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2014 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.diff
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|diff
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|resources
operator|.
name|client
operator|.
name|CssResource
import|;
end_import

begin_import
import|import
name|net
operator|.
name|codemirror
operator|.
name|lib
operator|.
name|CodeMirror
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/** Displays overview of all edits and comments in this file. */
end_comment

begin_class
DECL|class|Scrollbar
class|class
name|Scrollbar
block|{
static|static
block|{
name|Resources
operator|.
name|I
operator|.
name|scrollbarStyle
argument_list|()
operator|.
name|ensureInjected
argument_list|()
expr_stmt|;
block|}
DECL|interface|Style
interface|interface
name|Style
extends|extends
name|CssResource
block|{
DECL|method|comment ()
name|String
name|comment
parameter_list|()
function_decl|;
DECL|method|draft ()
name|String
name|draft
parameter_list|()
function_decl|;
DECL|method|insert ()
name|String
name|insert
parameter_list|()
function_decl|;
DECL|method|delete ()
name|String
name|delete
parameter_list|()
function_decl|;
DECL|method|edit ()
name|String
name|edit
parameter_list|()
function_decl|;
block|}
DECL|field|diff
specifier|private
specifier|final
name|List
argument_list|<
name|ScrollbarAnnotation
argument_list|>
name|diff
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|parent
specifier|private
specifier|final
name|DiffTable
name|parent
decl_stmt|;
DECL|method|Scrollbar (DiffTable d)
name|Scrollbar
parameter_list|(
name|DiffTable
name|d
parameter_list|)
block|{
name|parent
operator|=
name|d
expr_stmt|;
block|}
DECL|method|comment (CodeMirror cm, int line)
name|ScrollbarAnnotation
name|comment
parameter_list|(
name|CodeMirror
name|cm
parameter_list|,
name|int
name|line
parameter_list|)
block|{
name|ScrollbarAnnotation
name|a
init|=
operator|new
name|ScrollbarAnnotation
argument_list|(
name|cm
argument_list|)
decl_stmt|;
name|a
operator|.
name|setStyleName
argument_list|(
name|Resources
operator|.
name|I
operator|.
name|scrollbarStyle
argument_list|()
operator|.
name|comment
argument_list|()
argument_list|)
expr_stmt|;
name|a
operator|.
name|at
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|a
operator|.
name|getElement
argument_list|()
operator|.
name|setInnerText
argument_list|(
literal|"\u2736"
argument_list|)
expr_stmt|;
comment|// Six pointed black star
name|parent
operator|.
name|add
argument_list|(
name|a
argument_list|)
expr_stmt|;
return|return
name|a
return|;
block|}
DECL|method|draft (CodeMirror cm, int line)
name|ScrollbarAnnotation
name|draft
parameter_list|(
name|CodeMirror
name|cm
parameter_list|,
name|int
name|line
parameter_list|)
block|{
name|ScrollbarAnnotation
name|a
init|=
operator|new
name|ScrollbarAnnotation
argument_list|(
name|cm
argument_list|)
decl_stmt|;
name|a
operator|.
name|setStyleName
argument_list|(
name|Resources
operator|.
name|I
operator|.
name|scrollbarStyle
argument_list|()
operator|.
name|draft
argument_list|()
argument_list|)
expr_stmt|;
name|a
operator|.
name|at
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|a
operator|.
name|getElement
argument_list|()
operator|.
name|setInnerText
argument_list|(
literal|"\u270D"
argument_list|)
expr_stmt|;
comment|// Writing hand
name|parent
operator|.
name|add
argument_list|(
name|a
argument_list|)
expr_stmt|;
return|return
name|a
return|;
block|}
DECL|method|insert (CodeMirror cm, int line, int len)
name|ScrollbarAnnotation
name|insert
parameter_list|(
name|CodeMirror
name|cm
parameter_list|,
name|int
name|line
parameter_list|,
name|int
name|len
parameter_list|)
block|{
name|ScrollbarAnnotation
name|a
init|=
name|diff
argument_list|(
name|cm
argument_list|,
name|line
argument_list|,
name|len
argument_list|)
decl_stmt|;
name|a
operator|.
name|setStyleName
argument_list|(
name|Resources
operator|.
name|I
operator|.
name|scrollbarStyle
argument_list|()
operator|.
name|insert
argument_list|()
argument_list|)
expr_stmt|;
name|parent
operator|.
name|add
argument_list|(
name|a
argument_list|)
expr_stmt|;
return|return
name|a
return|;
block|}
DECL|method|delete (CodeMirror cmA, CodeMirror cmB, int line, int len)
name|ScrollbarAnnotation
name|delete
parameter_list|(
name|CodeMirror
name|cmA
parameter_list|,
name|CodeMirror
name|cmB
parameter_list|,
name|int
name|line
parameter_list|,
name|int
name|len
parameter_list|)
block|{
name|ScrollbarAnnotation
name|a
init|=
name|diff
argument_list|(
name|cmA
argument_list|,
name|line
argument_list|,
name|len
argument_list|)
decl_stmt|;
name|a
operator|.
name|setStyleName
argument_list|(
name|Resources
operator|.
name|I
operator|.
name|scrollbarStyle
argument_list|()
operator|.
name|delete
argument_list|()
argument_list|)
expr_stmt|;
name|a
operator|.
name|renderOn
argument_list|(
name|cmB
argument_list|)
expr_stmt|;
name|parent
operator|.
name|add
argument_list|(
name|a
argument_list|)
expr_stmt|;
return|return
name|a
return|;
block|}
DECL|method|edit (CodeMirror cm, int line, int len)
name|ScrollbarAnnotation
name|edit
parameter_list|(
name|CodeMirror
name|cm
parameter_list|,
name|int
name|line
parameter_list|,
name|int
name|len
parameter_list|)
block|{
name|ScrollbarAnnotation
name|a
init|=
name|diff
argument_list|(
name|cm
argument_list|,
name|line
argument_list|,
name|len
argument_list|)
decl_stmt|;
name|a
operator|.
name|setStyleName
argument_list|(
name|Resources
operator|.
name|I
operator|.
name|scrollbarStyle
argument_list|()
operator|.
name|edit
argument_list|()
argument_list|)
expr_stmt|;
name|parent
operator|.
name|add
argument_list|(
name|a
argument_list|)
expr_stmt|;
return|return
name|a
return|;
block|}
DECL|method|diff (CodeMirror cm, int s, int n)
specifier|private
name|ScrollbarAnnotation
name|diff
parameter_list|(
name|CodeMirror
name|cm
parameter_list|,
name|int
name|s
parameter_list|,
name|int
name|n
parameter_list|)
block|{
name|ScrollbarAnnotation
name|a
init|=
operator|new
name|ScrollbarAnnotation
argument_list|(
name|cm
argument_list|)
decl_stmt|;
name|a
operator|.
name|at
argument_list|(
name|CodeMirror
operator|.
name|pos
argument_list|(
name|s
argument_list|)
argument_list|,
name|CodeMirror
operator|.
name|pos
argument_list|(
name|s
operator|+
name|n
argument_list|)
argument_list|)
expr_stmt|;
name|diff
operator|.
name|add
argument_list|(
name|a
argument_list|)
expr_stmt|;
return|return
name|a
return|;
block|}
DECL|method|removeDiffAnnotations ()
name|void
name|removeDiffAnnotations
parameter_list|()
block|{
for|for
control|(
name|ScrollbarAnnotation
name|a
range|:
name|diff
control|)
block|{
name|a
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
name|diff
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

