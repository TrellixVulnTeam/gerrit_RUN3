begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|change
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountGeneralPreferences
operator|.
name|DownloadScheme
operator|.
name|REPO_DOWNLOAD
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|Gerrit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|account
operator|.
name|AccountApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|ChangeInfo
operator|.
name|FetchInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|NativeMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|RestApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountGeneralPreferences
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountGeneralPreferences
operator|.
name|DownloadScheme
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|JavaScriptObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|AnchorElement
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiBinder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiField
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|uibinder
operator|.
name|client
operator|.
name|UiHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTMLPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|UIObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|clippy
operator|.
name|client
operator|.
name|CopyableLabel
import|;
end_import

begin_class
DECL|class|DownloadBox
class|class
name|DownloadBox
extends|extends
name|Composite
block|{
DECL|interface|Binder
interface|interface
name|Binder
extends|extends
name|UiBinder
argument_list|<
name|HTMLPanel
argument_list|,
name|DownloadBox
argument_list|>
block|{}
DECL|field|uiBinder
specifier|private
specifier|static
specifier|final
name|Binder
name|uiBinder
init|=
name|GWT
operator|.
name|create
argument_list|(
name|Binder
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|fetch
specifier|private
specifier|final
name|NativeMap
argument_list|<
name|FetchInfo
argument_list|>
name|fetch
decl_stmt|;
DECL|field|revision
specifier|private
specifier|final
name|String
name|revision
decl_stmt|;
DECL|field|project
specifier|private
specifier|final
name|String
name|project
decl_stmt|;
DECL|field|psId
specifier|private
specifier|final
name|PatchSet
operator|.
name|Id
name|psId
decl_stmt|;
DECL|field|scheme
annotation|@
name|UiField
name|ListBox
name|scheme
decl_stmt|;
DECL|field|checkout
annotation|@
name|UiField
name|CopyableLabel
name|checkout
decl_stmt|;
DECL|field|cherryPick
annotation|@
name|UiField
name|CopyableLabel
name|cherryPick
decl_stmt|;
DECL|field|pull
annotation|@
name|UiField
name|CopyableLabel
name|pull
decl_stmt|;
DECL|field|patchBase64
annotation|@
name|UiField
name|AnchorElement
name|patchBase64
decl_stmt|;
DECL|field|patchZip
annotation|@
name|UiField
name|AnchorElement
name|patchZip
decl_stmt|;
DECL|field|repoSection
annotation|@
name|UiField
name|Element
name|repoSection
decl_stmt|;
DECL|field|repoDownload
annotation|@
name|UiField
name|CopyableLabel
name|repoDownload
decl_stmt|;
DECL|method|DownloadBox (NativeMap<FetchInfo> fetch, String revision, String project, PatchSet.Id psId)
name|DownloadBox
parameter_list|(
name|NativeMap
argument_list|<
name|FetchInfo
argument_list|>
name|fetch
parameter_list|,
name|String
name|revision
parameter_list|,
name|String
name|project
parameter_list|,
name|PatchSet
operator|.
name|Id
name|psId
parameter_list|)
block|{
name|this
operator|.
name|fetch
operator|=
name|fetch
expr_stmt|;
name|this
operator|.
name|revision
operator|=
name|revision
expr_stmt|;
name|this
operator|.
name|project
operator|=
name|project
expr_stmt|;
name|this
operator|.
name|psId
operator|=
name|psId
expr_stmt|;
name|initWidget
argument_list|(
name|uiBinder
operator|.
name|createAndBindUi
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onLoad ()
specifier|protected
name|void
name|onLoad
parameter_list|()
block|{
if|if
condition|(
name|scheme
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
condition|)
block|{
name|renderScheme
argument_list|(
name|fetch
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|UiHandler
argument_list|(
literal|"scheme"
argument_list|)
DECL|method|onScheme (ChangeEvent event)
name|void
name|onScheme
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|renderCommands
argument_list|()
expr_stmt|;
if|if
condition|(
name|Gerrit
operator|.
name|isSignedIn
argument_list|()
condition|)
block|{
name|saveScheme
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|renderCommands ()
specifier|private
name|void
name|renderCommands
parameter_list|()
block|{
name|FetchInfo
name|info
init|=
name|fetch
operator|.
name|get
argument_list|(
name|scheme
operator|.
name|getValue
argument_list|(
name|scheme
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|checkout
argument_list|(
name|info
argument_list|)
expr_stmt|;
name|cherryPick
argument_list|(
name|info
argument_list|)
expr_stmt|;
name|pull
argument_list|(
name|info
argument_list|)
expr_stmt|;
name|patch
argument_list|(
name|info
argument_list|)
expr_stmt|;
name|repo
argument_list|(
name|info
argument_list|)
expr_stmt|;
block|}
DECL|method|checkout (FetchInfo info)
specifier|private
name|void
name|checkout
parameter_list|(
name|FetchInfo
name|info
parameter_list|)
block|{
name|checkout
operator|.
name|setText
argument_list|(
literal|"git fetch "
operator|+
name|info
operator|.
name|url
argument_list|()
operator|+
literal|" "
operator|+
name|info
operator|.
name|ref
argument_list|()
operator|+
literal|"&& git checkout FETCH_HEAD"
argument_list|)
expr_stmt|;
block|}
DECL|method|cherryPick (FetchInfo info)
specifier|private
name|void
name|cherryPick
parameter_list|(
name|FetchInfo
name|info
parameter_list|)
block|{
name|cherryPick
operator|.
name|setText
argument_list|(
literal|"git fetch "
operator|+
name|info
operator|.
name|url
argument_list|()
operator|+
literal|" "
operator|+
name|info
operator|.
name|ref
argument_list|()
operator|+
literal|"&& git cherry-pick FETCH_HEAD"
argument_list|)
expr_stmt|;
block|}
DECL|method|pull (FetchInfo info)
specifier|private
name|void
name|pull
parameter_list|(
name|FetchInfo
name|info
parameter_list|)
block|{
name|pull
operator|.
name|setText
argument_list|(
literal|"git pull "
operator|+
name|info
operator|.
name|url
argument_list|()
operator|+
literal|" "
operator|+
name|info
operator|.
name|ref
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|patch (FetchInfo info)
specifier|private
name|void
name|patch
parameter_list|(
name|FetchInfo
name|info
parameter_list|)
block|{
name|String
name|id
init|=
name|revision
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|7
argument_list|)
decl_stmt|;
name|patchBase64
operator|.
name|setInnerText
argument_list|(
name|id
operator|+
literal|".diff.base64"
argument_list|)
expr_stmt|;
name|patchBase64
operator|.
name|setHref
argument_list|(
operator|new
name|RestApi
argument_list|(
literal|"/changes/"
argument_list|)
operator|.
name|id
argument_list|(
name|psId
operator|.
name|getParentKey
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|view
argument_list|(
literal|"revisions"
argument_list|)
operator|.
name|id
argument_list|(
name|revision
argument_list|)
operator|.
name|view
argument_list|(
literal|"patch"
argument_list|)
operator|.
name|addParameterTrue
argument_list|(
literal|"download"
argument_list|)
operator|.
name|url
argument_list|()
argument_list|)
expr_stmt|;
name|patchZip
operator|.
name|setInnerText
argument_list|(
name|id
operator|+
literal|".diff.zip"
argument_list|)
expr_stmt|;
name|patchZip
operator|.
name|setHref
argument_list|(
operator|new
name|RestApi
argument_list|(
literal|"/changes/"
argument_list|)
operator|.
name|id
argument_list|(
name|psId
operator|.
name|getParentKey
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|view
argument_list|(
literal|"revisions"
argument_list|)
operator|.
name|id
argument_list|(
name|revision
argument_list|)
operator|.
name|view
argument_list|(
literal|"patch"
argument_list|)
operator|.
name|addParameterTrue
argument_list|(
literal|"zip"
argument_list|)
operator|.
name|url
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|repo (FetchInfo info)
specifier|private
name|void
name|repo
parameter_list|(
name|FetchInfo
name|info
parameter_list|)
block|{
if|if
condition|(
name|Gerrit
operator|.
name|getConfig
argument_list|()
operator|.
name|getDownloadSchemes
argument_list|()
operator|.
name|contains
argument_list|(
name|REPO_DOWNLOAD
argument_list|)
condition|)
block|{
name|UIObject
operator|.
name|setVisible
argument_list|(
name|repoSection
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|repoDownload
operator|.
name|setText
argument_list|(
literal|"repo download "
operator|+
name|project
operator|+
literal|" "
operator|+
name|psId
operator|.
name|getParentKey
argument_list|()
operator|.
name|get
argument_list|()
operator|+
literal|"/"
operator|+
name|psId
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|renderScheme (NativeMap<FetchInfo> fetch)
specifier|private
name|void
name|renderScheme
parameter_list|(
name|NativeMap
argument_list|<
name|FetchInfo
argument_list|>
name|fetch
parameter_list|)
block|{
for|for
control|(
name|String
name|id
range|:
name|fetch
operator|.
name|keySet
argument_list|()
control|)
block|{
name|FetchInfo
name|info
init|=
name|fetch
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|String
name|u
init|=
name|info
operator|.
name|url
argument_list|()
decl_stmt|;
name|int
name|css
init|=
name|u
operator|.
name|indexOf
argument_list|(
literal|"://"
argument_list|)
decl_stmt|;
if|if
condition|(
name|css
operator|>
literal|0
condition|)
block|{
name|int
name|s
init|=
name|u
operator|.
name|indexOf
argument_list|(
literal|'/'
argument_list|,
name|css
operator|+
literal|3
argument_list|)
decl_stmt|;
if|if
condition|(
name|s
operator|>
literal|0
condition|)
block|{
name|u
operator|=
name|u
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|s
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
name|scheme
operator|.
name|addItem
argument_list|(
name|u
argument_list|,
name|id
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|scheme
operator|.
name|getItemCount
argument_list|()
operator|==
literal|1
condition|)
block|{
name|scheme
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|scheme
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|select
init|=
literal|0
decl_stmt|;
name|String
name|find
init|=
name|getUserPreference
argument_list|()
decl_stmt|;
if|if
condition|(
name|find
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|scheme
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|find
operator|.
name|equals
argument_list|(
name|scheme
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
block|{
name|select
operator|=
name|i
expr_stmt|;
break|break;
block|}
block|}
block|}
name|scheme
operator|.
name|setSelectedIndex
argument_list|(
name|select
argument_list|)
expr_stmt|;
block|}
name|renderCommands
argument_list|()
expr_stmt|;
block|}
DECL|method|getUserPreference ()
specifier|private
specifier|static
name|String
name|getUserPreference
parameter_list|()
block|{
if|if
condition|(
name|Gerrit
operator|.
name|isSignedIn
argument_list|()
condition|)
block|{
name|DownloadScheme
name|pref
init|=
name|Gerrit
operator|.
name|getUserAccount
argument_list|()
operator|.
name|getGeneralPreferences
argument_list|()
operator|.
name|getDownloadUrl
argument_list|()
decl_stmt|;
if|if
condition|(
name|pref
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|pref
condition|)
block|{
case|case
name|ANON_GIT
case|:
return|return
literal|"git"
return|;
case|case
name|HTTP
case|:
case|case
name|ANON_HTTP
case|:
return|return
literal|"http"
return|;
case|case
name|SSH
case|:
return|return
literal|"ssh"
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
block|}
return|return
literal|null
return|;
block|}
DECL|method|saveScheme ()
specifier|private
name|void
name|saveScheme
parameter_list|()
block|{
name|DownloadScheme
name|scheme
init|=
name|getSelectedScheme
argument_list|()
decl_stmt|;
name|AccountGeneralPreferences
name|pref
init|=
name|Gerrit
operator|.
name|getUserAccount
argument_list|()
operator|.
name|getGeneralPreferences
argument_list|()
decl_stmt|;
if|if
condition|(
name|scheme
operator|!=
literal|null
operator|&&
name|scheme
operator|!=
name|pref
operator|.
name|getDownloadUrl
argument_list|()
condition|)
block|{
name|pref
operator|.
name|setDownloadUrl
argument_list|(
name|scheme
argument_list|)
expr_stmt|;
name|PreferenceInput
name|in
init|=
name|PreferenceInput
operator|.
name|create
argument_list|()
decl_stmt|;
name|in
operator|.
name|download_scheme
argument_list|(
name|scheme
argument_list|)
expr_stmt|;
name|AccountApi
operator|.
name|self
argument_list|()
operator|.
name|view
argument_list|(
literal|"preferences"
argument_list|)
operator|.
name|post
argument_list|(
name|in
argument_list|,
operator|new
name|AsyncCallback
argument_list|<
name|JavaScriptObject
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|JavaScriptObject
name|result
parameter_list|)
block|{             }
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{             }
block|}
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getSelectedScheme ()
specifier|private
name|DownloadScheme
name|getSelectedScheme
parameter_list|()
block|{
name|String
name|id
init|=
name|scheme
operator|.
name|getValue
argument_list|(
name|scheme
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
literal|"git"
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
block|{
return|return
name|DownloadScheme
operator|.
name|ANON_GIT
return|;
block|}
elseif|else
if|if
condition|(
literal|"http"
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
block|{
return|return
name|DownloadScheme
operator|.
name|HTTP
return|;
block|}
elseif|else
if|if
condition|(
literal|"ssh"
operator|.
name|equals
argument_list|(
name|id
argument_list|)
condition|)
block|{
return|return
name|DownloadScheme
operator|.
name|SSH
return|;
block|}
return|return
literal|null
return|;
block|}
DECL|class|PreferenceInput
specifier|private
specifier|static
class|class
name|PreferenceInput
extends|extends
name|JavaScriptObject
block|{
DECL|method|create ()
specifier|static
name|PreferenceInput
name|create
parameter_list|()
block|{
return|return
name|createObject
argument_list|()
operator|.
name|cast
argument_list|()
return|;
block|}
DECL|method|download_scheme (DownloadScheme s)
specifier|final
name|void
name|download_scheme
parameter_list|(
name|DownloadScheme
name|s
parameter_list|)
block|{
name|download_scheme0
argument_list|(
name|s
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|download_scheme0 (String n)
specifier|private
specifier|final
specifier|native
name|void
name|download_scheme0
parameter_list|(
name|String
name|n
parameter_list|)
comment|/*-{       this.download_scheme = n;     }-*/
function_decl|;
DECL|method|PreferenceInput ()
specifier|protected
name|PreferenceInput
parameter_list|()
block|{     }
block|}
block|}
end_class

end_unit

