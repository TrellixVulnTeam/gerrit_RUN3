begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|change
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|Gerrit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|change
operator|.
name|RelatedChanges
operator|.
name|ChangeAndCommit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
operator|.
name|Util
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|info
operator|.
name|ChangeInfo
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|PageLinks
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|GWT
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|JsArray
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|core
operator|.
name|client
operator|.
name|Scheduler
operator|.
name|RepeatingCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|AnchorElement
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|NativeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|NodeList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|dom
operator|.
name|client
operator|.
name|Style
operator|.
name|Visibility
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|DoubleClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|DoubleClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ScrollEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ScrollHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|shared
operator|.
name|HandlerRegistration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|safehtml
operator|.
name|shared
operator|.
name|SafeHtml
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|DOM
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|AbstractImagePrototype
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|InlineLabel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|IsWidget
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ScrollPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SimplePanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|impl
operator|.
name|HyperlinkImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|globalkey
operator|.
name|client
operator|.
name|GlobalKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|globalkey
operator|.
name|client
operator|.
name|KeyCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|globalkey
operator|.
name|client
operator|.
name|KeyCommandSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|safehtml
operator|.
name|client
operator|.
name|SafeHtmlBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_class
DECL|class|RelatedChangesTab
class|class
name|RelatedChangesTab
implements|implements
name|IsWidget
block|{
DECL|field|OPEN
specifier|private
specifier|static
specifier|final
name|String
name|OPEN
init|=
name|init
argument_list|(
name|DOM
operator|.
name|createUniqueId
argument_list|()
operator|.
name|replace
argument_list|(
literal|'-'
argument_list|,
literal|'_'
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|LINK
specifier|private
specifier|static
specifier|final
name|HyperlinkImpl
name|LINK
init|=
name|GWT
operator|.
name|create
argument_list|(
name|HyperlinkImpl
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|POINTER_HTML
specifier|private
specifier|static
specifier|final
name|SafeHtml
name|POINTER_HTML
init|=
name|AbstractImagePrototype
operator|.
name|create
argument_list|(
name|Gerrit
operator|.
name|RESOURCES
operator|.
name|arrowRight
argument_list|()
argument_list|)
operator|.
name|getSafeHtml
argument_list|()
decl_stmt|;
DECL|method|init (String o)
specifier|private
specifier|static
specifier|native
name|String
name|init
parameter_list|(
name|String
name|o
parameter_list|)
comment|/*-{     $wnd[o] = $entry(@com.google.gerrit.client.change.RelatedChangesTab::onOpen(       Lcom/google/gwt/dom/client/NativeEvent;Lcom/google/gwt/dom/client/Element;));     return o + '(event,this)';   }-*/
function_decl|;
DECL|method|onOpen (NativeEvent evt, Element e)
specifier|private
specifier|static
name|boolean
name|onOpen
parameter_list|(
name|NativeEvent
name|evt
parameter_list|,
name|Element
name|e
parameter_list|)
block|{
if|if
condition|(
name|LINK
operator|.
name|handleAsClick
argument_list|(
name|evt
operator|.
expr|<
name|Event
operator|>
name|cast
argument_list|()
argument_list|)
condition|)
block|{
name|Gerrit
operator|.
name|display
argument_list|(
name|e
operator|.
name|getAttribute
argument_list|(
literal|"href"
argument_list|)
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|evt
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|field|panel
specifier|private
specifier|final
name|SimplePanel
name|panel
decl_stmt|;
DECL|field|subject
specifier|private
specifier|final
name|RelatedChanges
operator|.
name|Tab
name|subject
decl_stmt|;
DECL|field|showBranches
specifier|private
name|boolean
name|showBranches
decl_stmt|;
DECL|field|showProjects
specifier|private
name|boolean
name|showProjects
decl_stmt|;
DECL|field|showSubmittable
specifier|private
name|boolean
name|showSubmittable
decl_stmt|;
DECL|field|showIndirectAncestors
specifier|private
name|boolean
name|showIndirectAncestors
decl_stmt|;
DECL|field|registerKeys
specifier|private
name|boolean
name|registerKeys
decl_stmt|;
DECL|field|maxHeight
specifier|private
name|int
name|maxHeight
decl_stmt|;
DECL|field|project
specifier|private
name|String
name|project
decl_stmt|;
DECL|field|view
specifier|private
name|NavigationList
name|view
decl_stmt|;
DECL|method|RelatedChangesTab (RelatedChanges.Tab subject)
name|RelatedChangesTab
parameter_list|(
name|RelatedChanges
operator|.
name|Tab
name|subject
parameter_list|)
block|{
name|panel
operator|=
operator|new
name|SimplePanel
argument_list|()
expr_stmt|;
name|this
operator|.
name|subject
operator|=
name|subject
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|asWidget ()
specifier|public
name|Widget
name|asWidget
parameter_list|()
block|{
return|return
name|panel
return|;
block|}
DECL|method|setShowBranches (boolean showBranches)
name|void
name|setShowBranches
parameter_list|(
name|boolean
name|showBranches
parameter_list|)
block|{
name|this
operator|.
name|showBranches
operator|=
name|showBranches
expr_stmt|;
block|}
DECL|method|setShowProjects (boolean showProjects)
name|void
name|setShowProjects
parameter_list|(
name|boolean
name|showProjects
parameter_list|)
block|{
name|this
operator|.
name|showProjects
operator|=
name|showProjects
expr_stmt|;
block|}
DECL|method|setShowSubmittable (boolean submittable)
name|void
name|setShowSubmittable
parameter_list|(
name|boolean
name|submittable
parameter_list|)
block|{
name|this
operator|.
name|showSubmittable
operator|=
name|submittable
expr_stmt|;
block|}
DECL|method|setShowIndirectAncestors (boolean showIndirectAncestors)
name|void
name|setShowIndirectAncestors
parameter_list|(
name|boolean
name|showIndirectAncestors
parameter_list|)
block|{
name|this
operator|.
name|showIndirectAncestors
operator|=
name|showIndirectAncestors
expr_stmt|;
block|}
DECL|method|setMaxHeight (int height)
name|void
name|setMaxHeight
parameter_list|(
name|int
name|height
parameter_list|)
block|{
name|maxHeight
operator|=
name|height
expr_stmt|;
if|if
condition|(
name|view
operator|!=
literal|null
condition|)
block|{
name|view
operator|.
name|setHeight
argument_list|(
name|height
operator|+
literal|"px"
argument_list|)
expr_stmt|;
name|view
operator|.
name|ensureRowMeasurements
argument_list|()
expr_stmt|;
name|view
operator|.
name|movePointerTo
argument_list|(
name|view
operator|.
name|selectedRow
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|registerKeys (boolean on)
name|void
name|registerKeys
parameter_list|(
name|boolean
name|on
parameter_list|)
block|{
name|registerKeys
operator|=
name|on
expr_stmt|;
if|if
condition|(
name|view
operator|!=
literal|null
condition|)
block|{
name|view
operator|.
name|setRegisterKeys
argument_list|(
name|on
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|setError (String message)
name|void
name|setError
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|panel
operator|.
name|setWidget
argument_list|(
operator|new
name|InlineLabel
argument_list|(
name|message
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|=
literal|null
expr_stmt|;
name|project
operator|=
literal|null
expr_stmt|;
block|}
DECL|method|setChanges (String project, String revision, JsArray<ChangeAndCommit> changes)
name|void
name|setChanges
parameter_list|(
name|String
name|project
parameter_list|,
name|String
name|revision
parameter_list|,
name|JsArray
argument_list|<
name|ChangeAndCommit
argument_list|>
name|changes
parameter_list|)
block|{
if|if
condition|(
literal|0
operator|==
name|changes
operator|.
name|length
argument_list|()
condition|)
block|{
name|setError
argument_list|(
name|Resources
operator|.
name|C
operator|.
name|noChanges
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
name|this
operator|.
name|project
operator|=
name|project
expr_stmt|;
name|view
operator|=
operator|new
name|NavigationList
argument_list|()
expr_stmt|;
name|panel
operator|.
name|setWidget
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|DisplayCommand
name|display
init|=
operator|new
name|DisplayCommand
argument_list|(
name|revision
argument_list|,
name|changes
argument_list|,
name|view
argument_list|)
decl_stmt|;
if|if
condition|(
name|display
operator|.
name|execute
argument_list|()
condition|)
block|{
name|Scheduler
operator|.
name|get
argument_list|()
operator|.
name|scheduleIncremental
argument_list|(
name|display
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|DisplayCommand
specifier|private
specifier|final
class|class
name|DisplayCommand
implements|implements
name|RepeatingCommand
block|{
DECL|field|revision
specifier|private
specifier|final
name|String
name|revision
decl_stmt|;
DECL|field|changes
specifier|private
specifier|final
name|JsArray
argument_list|<
name|ChangeAndCommit
argument_list|>
name|changes
decl_stmt|;
DECL|field|rows
specifier|private
specifier|final
name|List
argument_list|<
name|SafeHtml
argument_list|>
name|rows
decl_stmt|;
DECL|field|connected
specifier|private
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|connected
decl_stmt|;
DECL|field|navList
specifier|private
specifier|final
name|NavigationList
name|navList
decl_stmt|;
DECL|field|start
specifier|private
name|double
name|start
decl_stmt|;
DECL|field|row
specifier|private
name|int
name|row
decl_stmt|;
DECL|field|connectedPos
specifier|private
name|int
name|connectedPos
decl_stmt|;
DECL|field|selected
specifier|private
name|int
name|selected
decl_stmt|;
DECL|method|DisplayCommand ( String revision, JsArray<ChangeAndCommit> changes, NavigationList navList)
specifier|private
name|DisplayCommand
parameter_list|(
name|String
name|revision
parameter_list|,
name|JsArray
argument_list|<
name|ChangeAndCommit
argument_list|>
name|changes
parameter_list|,
name|NavigationList
name|navList
parameter_list|)
block|{
name|this
operator|.
name|revision
operator|=
name|revision
expr_stmt|;
name|this
operator|.
name|changes
operator|=
name|changes
expr_stmt|;
name|this
operator|.
name|navList
operator|=
name|navList
expr_stmt|;
name|rows
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|changes
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|connectedPos
operator|=
name|changes
operator|.
name|length
argument_list|()
operator|-
literal|1
expr_stmt|;
name|connected
operator|=
name|showIndirectAncestors
condition|?
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|Math
operator|.
name|max
argument_list|(
name|changes
operator|.
name|length
argument_list|()
operator|*
literal|4
operator|/
literal|3
argument_list|,
literal|16
argument_list|)
argument_list|)
else|:
literal|null
expr_stmt|;
block|}
DECL|method|computeConnected ()
specifier|private
name|boolean
name|computeConnected
parameter_list|()
block|{
comment|// Since TOPO sorted, when can walk the list in reverse and find all
comment|// the connections.
if|if
condition|(
operator|!
name|connected
operator|.
name|contains
argument_list|(
name|revision
argument_list|)
condition|)
block|{
while|while
condition|(
name|connectedPos
operator|>=
literal|0
condition|)
block|{
name|CommitInfo
name|c
init|=
name|changes
operator|.
name|get
argument_list|(
name|connectedPos
argument_list|)
operator|.
name|commit
argument_list|()
decl_stmt|;
name|connected
operator|.
name|add
argument_list|(
name|c
operator|.
name|commit
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|longRunning
argument_list|(
operator|--
name|connectedPos
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|c
operator|.
name|commit
argument_list|()
operator|.
name|equals
argument_list|(
name|revision
argument_list|)
condition|)
block|{
break|break;
block|}
block|}
block|}
while|while
condition|(
name|connectedPos
operator|>=
literal|0
condition|)
block|{
name|CommitInfo
name|c
init|=
name|changes
operator|.
name|get
argument_list|(
name|connectedPos
argument_list|)
operator|.
name|commit
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|c
operator|.
name|parents
argument_list|()
operator|.
name|length
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
if|if
condition|(
name|connected
operator|.
name|contains
argument_list|(
name|c
operator|.
name|parents
argument_list|()
operator|.
name|get
argument_list|(
name|j
argument_list|)
operator|.
name|commit
argument_list|()
argument_list|)
condition|)
block|{
name|connected
operator|.
name|add
argument_list|(
name|c
operator|.
name|commit
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|longRunning
argument_list|(
operator|--
name|connectedPos
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|execute ()
specifier|public
name|boolean
name|execute
parameter_list|()
block|{
if|if
condition|(
name|navList
operator|!=
name|view
operator|||
operator|!
name|panel
operator|.
name|isAttached
argument_list|()
condition|)
block|{
comment|// If the user navigated away, we aren't in the DOM anymore.
comment|// Don't continue to render.
return|return
literal|false
return|;
block|}
name|start
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
if|if
condition|(
name|connected
operator|!=
literal|null
operator|&&
name|computeConnected
argument_list|()
condition|)
block|{
return|return
literal|true
return|;
block|}
while|while
condition|(
name|row
operator|<
name|changes
operator|.
name|length
argument_list|()
condition|)
block|{
name|ChangeAndCommit
name|info
init|=
name|changes
operator|.
name|get
argument_list|(
name|row
argument_list|)
decl_stmt|;
name|String
name|commit
init|=
name|info
operator|.
name|commit
argument_list|()
operator|.
name|commit
argument_list|()
decl_stmt|;
name|rows
operator|.
name|add
argument_list|(
operator|new
name|RowSafeHtml
argument_list|(
name|info
argument_list|,
name|connected
operator|!=
literal|null
operator|&&
operator|!
name|connected
operator|.
name|contains
argument_list|(
name|commit
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|revision
operator|.
name|equals
argument_list|(
name|commit
argument_list|)
condition|)
block|{
name|selected
operator|=
name|row
expr_stmt|;
block|}
if|if
condition|(
name|longRunning
argument_list|(
operator|++
name|row
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
name|navList
operator|.
name|rows
operator|=
name|rows
expr_stmt|;
name|navList
operator|.
name|ensureRowMeasurements
argument_list|()
expr_stmt|;
name|navList
operator|.
name|movePointerTo
argument_list|(
name|selected
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
DECL|method|longRunning (int i)
specifier|private
name|boolean
name|longRunning
parameter_list|(
name|int
name|i
parameter_list|)
block|{
return|return
operator|(
name|i
operator|%
literal|10
operator|)
operator|==
literal|0
operator|&&
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|start
operator|>
literal|50
return|;
block|}
block|}
DECL|class|RowSafeHtml
specifier|private
class|class
name|RowSafeHtml
implements|implements
name|SafeHtml
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
DECL|field|html
specifier|private
name|String
name|html
decl_stmt|;
DECL|field|info
specifier|private
name|ChangeAndCommit
name|info
decl_stmt|;
DECL|field|notConnected
specifier|private
specifier|final
name|boolean
name|notConnected
decl_stmt|;
DECL|method|RowSafeHtml (ChangeAndCommit info, boolean notConnected)
name|RowSafeHtml
parameter_list|(
name|ChangeAndCommit
name|info
parameter_list|,
name|boolean
name|notConnected
parameter_list|)
block|{
name|this
operator|.
name|info
operator|=
name|info
expr_stmt|;
name|this
operator|.
name|notConnected
operator|=
name|notConnected
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|asString ()
specifier|public
name|String
name|asString
parameter_list|()
block|{
if|if
condition|(
name|html
operator|==
literal|null
condition|)
block|{
name|SafeHtmlBuilder
name|sb
init|=
operator|new
name|SafeHtmlBuilder
argument_list|()
decl_stmt|;
name|renderRow
argument_list|(
name|sb
argument_list|)
expr_stmt|;
name|html
operator|=
name|sb
operator|.
name|asString
argument_list|()
expr_stmt|;
name|info
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|html
return|;
block|}
DECL|method|renderRow (SafeHtmlBuilder sb)
specifier|private
name|void
name|renderRow
parameter_list|(
name|SafeHtmlBuilder
name|sb
parameter_list|)
block|{
name|sb
operator|.
name|openDiv
argument_list|()
operator|.
name|setStyleName
argument_list|(
name|RelatedChanges
operator|.
name|R
operator|.
name|css
argument_list|()
operator|.
name|row
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|openSpan
argument_list|()
operator|.
name|setStyleName
argument_list|(
name|RelatedChanges
operator|.
name|R
operator|.
name|css
argument_list|()
operator|.
name|pointer
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|POINTER_HTML
argument_list|)
expr_stmt|;
name|sb
operator|.
name|closeSpan
argument_list|()
expr_stmt|;
if|if
condition|(
name|info
operator|.
name|status
argument_list|()
operator|==
name|Change
operator|.
name|Status
operator|.
name|ABANDONED
condition|)
block|{
name|sb
operator|.
name|openSpan
argument_list|()
operator|.
name|setStyleName
argument_list|(
name|RelatedChanges
operator|.
name|R
operator|.
name|css
argument_list|()
operator|.
name|strikedSubject
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|sb
operator|.
name|openSpan
argument_list|()
operator|.
name|setStyleName
argument_list|(
name|RelatedChanges
operator|.
name|R
operator|.
name|css
argument_list|()
operator|.
name|subject
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|sb
operator|.
name|setAttribute
argument_list|(
literal|"data-branch"
argument_list|,
name|info
operator|.
name|branch
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|setAttribute
argument_list|(
literal|"data-project"
argument_list|,
name|info
operator|.
name|project
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|url
init|=
name|url
argument_list|()
decl_stmt|;
if|if
condition|(
name|url
operator|!=
literal|null
condition|)
block|{
name|sb
operator|.
name|openAnchor
argument_list|()
operator|.
name|setAttribute
argument_list|(
literal|"href"
argument_list|,
name|url
argument_list|)
expr_stmt|;
if|if
condition|(
name|url
operator|.
name|startsWith
argument_list|(
literal|"#"
argument_list|)
condition|)
block|{
name|sb
operator|.
name|setAttribute
argument_list|(
literal|"onclick"
argument_list|,
name|OPEN
argument_list|)
expr_stmt|;
block|}
name|sb
operator|.
name|setAttribute
argument_list|(
literal|"title"
argument_list|,
name|info
operator|.
name|commit
argument_list|()
operator|.
name|subject
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|showProjects
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|info
operator|.
name|project
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|": "
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|showBranches
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|info
operator|.
name|branch
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|": "
argument_list|)
expr_stmt|;
block|}
name|sb
operator|.
name|append
argument_list|(
name|info
operator|.
name|commit
argument_list|()
operator|.
name|subject
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|closeAnchor
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sb
operator|.
name|append
argument_list|(
name|info
operator|.
name|commit
argument_list|()
operator|.
name|subject
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|sb
operator|.
name|closeSpan
argument_list|()
expr_stmt|;
name|sb
operator|.
name|openSpan
argument_list|()
expr_stmt|;
if|if
condition|(
name|info
operator|.
name|status
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|info
operator|.
name|status
argument_list|()
operator|.
name|isOpen
argument_list|()
condition|)
block|{
name|sb
operator|.
name|setStyleName
argument_list|(
name|RelatedChanges
operator|.
name|R
operator|.
name|css
argument_list|()
operator|.
name|gitweb
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|setAttribute
argument_list|(
literal|"title"
argument_list|,
name|Util
operator|.
name|toLongString
argument_list|(
name|info
operator|.
name|status
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'\u25CF'
argument_list|)
expr_stmt|;
comment|// Unicode 'BLACK CIRCLE'
block|}
elseif|else
if|if
condition|(
name|notConnected
condition|)
block|{
name|sb
operator|.
name|setStyleName
argument_list|(
name|RelatedChanges
operator|.
name|R
operator|.
name|css
argument_list|()
operator|.
name|indirect
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|setAttribute
argument_list|(
literal|"title"
argument_list|,
name|Resources
operator|.
name|C
operator|.
name|indirectAncestor
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'~'
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|info
operator|.
name|hasCurrentRevisionNumber
argument_list|()
operator|&&
name|info
operator|.
name|hasRevisionNumber
argument_list|()
operator|&&
name|info
operator|.
name|_currentRevisionNumber
argument_list|()
operator|!=
name|info
operator|.
name|_revisionNumber
argument_list|()
condition|)
block|{
name|sb
operator|.
name|setStyleName
argument_list|(
name|RelatedChanges
operator|.
name|R
operator|.
name|css
argument_list|()
operator|.
name|notCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|setAttribute
argument_list|(
literal|"title"
argument_list|,
name|Util
operator|.
name|C
operator|.
name|notCurrent
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'\u25CF'
argument_list|)
expr_stmt|;
comment|// Unicode 'BLACK CIRCLE'
block|}
elseif|else
if|if
condition|(
name|showSubmittable
operator|&&
name|info
operator|.
name|submittable
argument_list|()
condition|)
block|{
name|sb
operator|.
name|setStyleName
argument_list|(
name|RelatedChanges
operator|.
name|R
operator|.
name|css
argument_list|()
operator|.
name|submittable
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|setAttribute
argument_list|(
literal|"title"
argument_list|,
name|Util
operator|.
name|C
operator|.
name|submittable
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'\u2713'
argument_list|)
expr_stmt|;
comment|// Unicode 'CHECK MARK'
block|}
else|else
block|{
name|sb
operator|.
name|setStyleName
argument_list|(
name|RelatedChanges
operator|.
name|R
operator|.
name|css
argument_list|()
operator|.
name|current
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|sb
operator|.
name|closeSpan
argument_list|()
expr_stmt|;
name|sb
operator|.
name|closeDiv
argument_list|()
expr_stmt|;
block|}
DECL|method|url ()
specifier|private
name|String
name|url
parameter_list|()
block|{
if|if
condition|(
name|info
operator|.
name|hasChangeNumber
argument_list|()
operator|&&
name|info
operator|.
name|hasRevisionNumber
argument_list|()
condition|)
block|{
return|return
literal|"#"
operator|+
name|PageLinks
operator|.
name|toChange
argument_list|(
operator|new
name|Project
operator|.
name|NameKey
argument_list|(
name|info
operator|.
name|project
argument_list|()
argument_list|)
argument_list|,
name|info
operator|.
name|patchSetId
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
block|}
DECL|class|NavigationList
specifier|private
class|class
name|NavigationList
extends|extends
name|ScrollPanel
implements|implements
name|ClickHandler
implements|,
name|DoubleClickHandler
implements|,
name|ScrollHandler
block|{
DECL|field|keysNavigation
specifier|private
specifier|final
name|KeyCommandSet
name|keysNavigation
decl_stmt|;
DECL|field|body
specifier|private
specifier|final
name|Element
name|body
decl_stmt|;
DECL|field|surrogate
specifier|private
specifier|final
name|Element
name|surrogate
decl_stmt|;
DECL|field|fragment
specifier|private
specifier|final
name|Node
name|fragment
init|=
name|createDocumentFragment
argument_list|()
decl_stmt|;
DECL|field|rows
name|List
argument_list|<
name|SafeHtml
argument_list|>
name|rows
decl_stmt|;
DECL|field|regNavigation
specifier|private
name|HandlerRegistration
name|regNavigation
decl_stmt|;
DECL|field|selectedRow
specifier|private
name|int
name|selectedRow
decl_stmt|;
DECL|field|startRow
specifier|private
name|int
name|startRow
decl_stmt|;
DECL|field|rowHeight
specifier|private
name|int
name|rowHeight
decl_stmt|;
DECL|field|rowWidth
specifier|private
name|int
name|rowWidth
decl_stmt|;
DECL|method|NavigationList ()
name|NavigationList
parameter_list|()
block|{
name|addDomHandler
argument_list|(
name|this
argument_list|,
name|ClickEvent
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|addDomHandler
argument_list|(
name|this
argument_list|,
name|DoubleClickEvent
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|addScrollHandler
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|keysNavigation
operator|=
operator|new
name|KeyCommandSet
argument_list|(
name|Resources
operator|.
name|C
operator|.
name|relatedChanges
argument_list|()
argument_list|)
expr_stmt|;
name|keysNavigation
operator|.
name|add
argument_list|(
operator|new
name|KeyCommand
argument_list|(
literal|0
argument_list|,
literal|'K'
argument_list|,
name|Resources
operator|.
name|C
operator|.
name|previousChange
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
name|movePointerTo
argument_list|(
name|selectedRow
operator|-
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|,
operator|new
name|KeyCommand
argument_list|(
literal|0
argument_list|,
literal|'J'
argument_list|,
name|Resources
operator|.
name|C
operator|.
name|nextChange
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
name|movePointerTo
argument_list|(
name|selectedRow
operator|+
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|keysNavigation
operator|.
name|add
argument_list|(
operator|new
name|KeyCommand
argument_list|(
literal|0
argument_list|,
literal|'O'
argument_list|,
name|Resources
operator|.
name|C
operator|.
name|openChange
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
name|KeyPressEvent
name|event
parameter_list|)
block|{
name|onOpenRow
argument_list|(
name|getRow
argument_list|(
name|selectedRow
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|maxHeight
operator|>
literal|0
condition|)
block|{
name|setHeight
argument_list|(
name|maxHeight
operator|+
literal|"px"
argument_list|)
expr_stmt|;
block|}
name|body
operator|=
name|DOM
operator|.
name|createDiv
argument_list|()
expr_stmt|;
name|body
operator|.
name|getStyle
argument_list|()
operator|.
name|setPosition
argument_list|(
name|Style
operator|.
name|Position
operator|.
name|RELATIVE
argument_list|)
expr_stmt|;
name|body
operator|.
name|getStyle
argument_list|()
operator|.
name|setVisibility
argument_list|(
name|Visibility
operator|.
name|HIDDEN
argument_list|)
expr_stmt|;
name|getContainerElement
argument_list|()
operator|.
name|appendChild
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|surrogate
operator|=
name|DOM
operator|.
name|createDiv
argument_list|()
expr_stmt|;
name|surrogate
operator|.
name|getStyle
argument_list|()
operator|.
name|setVisibility
argument_list|(
name|Visibility
operator|.
name|HIDDEN
argument_list|)
expr_stmt|;
block|}
DECL|method|ensureRowMeasurements ()
specifier|private
name|boolean
name|ensureRowMeasurements
parameter_list|()
block|{
if|if
condition|(
name|rowHeight
operator|==
literal|0
operator|&&
name|rows
operator|!=
literal|null
condition|)
block|{
name|surrogate
operator|.
name|setInnerSafeHtml
argument_list|(
name|rows
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|getContainerElement
argument_list|()
operator|.
name|appendChild
argument_list|(
name|surrogate
argument_list|)
expr_stmt|;
name|rowHeight
operator|=
name|surrogate
operator|.
name|getOffsetHeight
argument_list|()
expr_stmt|;
name|rowWidth
operator|=
name|surrogate
operator|.
name|getOffsetWidth
argument_list|()
expr_stmt|;
name|getContainerElement
argument_list|()
operator|.
name|removeChild
argument_list|(
name|surrogate
argument_list|)
expr_stmt|;
name|getContainerElement
argument_list|()
operator|.
name|getStyle
argument_list|()
operator|.
name|setHeight
argument_list|(
name|rowHeight
operator|*
name|rows
operator|.
name|size
argument_list|()
argument_list|,
name|Style
operator|.
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
DECL|method|movePointerTo (int row, boolean scroll)
specifier|public
name|void
name|movePointerTo
parameter_list|(
name|int
name|row
parameter_list|,
name|boolean
name|scroll
parameter_list|)
block|{
if|if
condition|(
name|rows
operator|!=
literal|null
operator|&&
literal|0
operator|<=
name|row
operator|&&
name|row
operator|<
name|rows
operator|.
name|size
argument_list|()
condition|)
block|{
name|renderSelected
argument_list|(
name|selectedRow
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|selectedRow
operator|=
name|row
expr_stmt|;
if|if
condition|(
name|scroll
operator|&&
name|rowHeight
operator|!=
literal|0
condition|)
block|{
comment|// Position the selected row in the middle.
name|setVerticalScrollPosition
argument_list|(
name|Math
operator|.
name|max
argument_list|(
name|rowHeight
operator|*
name|selectedRow
operator|-
name|maxHeight
operator|/
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|render
argument_list|()
expr_stmt|;
block|}
name|renderSelected
argument_list|(
name|selectedRow
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|renderSelected (int row, boolean selected)
specifier|private
name|void
name|renderSelected
parameter_list|(
name|int
name|row
parameter_list|,
name|boolean
name|selected
parameter_list|)
block|{
name|Element
name|e
init|=
name|getRow
argument_list|(
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|e
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|selected
condition|)
block|{
name|e
operator|.
name|addClassName
argument_list|(
name|RelatedChanges
operator|.
name|R
operator|.
name|css
argument_list|()
operator|.
name|activeRow
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|e
operator|.
name|removeClassName
argument_list|(
name|RelatedChanges
operator|.
name|R
operator|.
name|css
argument_list|()
operator|.
name|activeRow
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|render ()
specifier|private
name|void
name|render
parameter_list|()
block|{
if|if
condition|(
name|rows
operator|==
literal|null
operator|||
name|rowHeight
operator|==
literal|0
condition|)
block|{
return|return;
block|}
name|int
name|currStart
init|=
name|startRow
decl_stmt|;
name|int
name|currEnd
init|=
name|startRow
operator|+
name|body
operator|.
name|getChildCount
argument_list|()
decl_stmt|;
name|int
name|vpos
init|=
name|getVerticalScrollPosition
argument_list|()
decl_stmt|;
name|int
name|start
init|=
name|Math
operator|.
name|max
argument_list|(
name|vpos
operator|/
name|rowHeight
operator|-
literal|5
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|int
name|end
init|=
name|Math
operator|.
name|min
argument_list|(
operator|(
name|vpos
operator|+
name|maxHeight
operator|)
operator|/
name|rowHeight
operator|+
literal|5
argument_list|,
name|rows
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|currStart
operator|<=
name|start
operator|&&
name|end
operator|<=
name|currEnd
condition|)
block|{
return|return;
comment|// All of the required nodes are already in the DOM.
block|}
if|if
condition|(
name|end
operator|<=
name|currStart
condition|)
block|{
name|renderRange
argument_list|(
name|start
argument_list|,
name|end
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|start
operator|<
name|currStart
condition|)
block|{
name|renderRange
argument_list|(
name|start
argument_list|,
name|currStart
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|start
operator|>=
name|currEnd
condition|)
block|{
name|renderRange
argument_list|(
name|start
argument_list|,
name|end
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|end
operator|>
name|currEnd
condition|)
block|{
name|renderRange
argument_list|(
name|currEnd
argument_list|,
name|end
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|renderSelected
argument_list|(
name|selectedRow
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|currEnd
operator|==
literal|0
condition|)
block|{
comment|// Account for the scroll bars
name|int
name|width
init|=
name|body
operator|.
name|getOffsetWidth
argument_list|()
decl_stmt|;
if|if
condition|(
name|rowWidth
operator|>
name|width
condition|)
block|{
name|int
name|w
init|=
literal|2
operator|*
name|rowWidth
operator|-
name|width
decl_stmt|;
name|setWidth
argument_list|(
name|w
operator|+
literal|"px"
argument_list|)
expr_stmt|;
block|}
name|body
operator|.
name|getStyle
argument_list|()
operator|.
name|clearVisibility
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|renderRange (int start, int end, boolean removeAll, boolean insertFirst)
specifier|private
name|void
name|renderRange
parameter_list|(
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|,
name|boolean
name|removeAll
parameter_list|,
name|boolean
name|insertFirst
parameter_list|)
block|{
name|SafeHtmlBuilder
name|sb
init|=
operator|new
name|SafeHtmlBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|start
init|;
name|i
operator|<
name|end
condition|;
name|i
operator|++
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|rows
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|removeAll
condition|)
block|{
name|body
operator|.
name|setInnerSafeHtml
argument_list|(
name|sb
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|surrogate
operator|.
name|setInnerSafeHtml
argument_list|(
name|sb
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|cnt
init|=
name|surrogate
operator|.
name|getChildCount
argument_list|()
init|;
name|cnt
operator|>
literal|0
condition|;
name|cnt
operator|--
control|)
block|{
name|fragment
operator|.
name|appendChild
argument_list|(
name|surrogate
operator|.
name|getFirstChild
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|insertFirst
condition|)
block|{
name|body
operator|.
name|insertFirst
argument_list|(
name|fragment
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|body
operator|.
name|appendChild
argument_list|(
name|fragment
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|insertFirst
operator|||
name|removeAll
condition|)
block|{
name|startRow
operator|=
name|start
expr_stmt|;
name|body
operator|.
name|getStyle
argument_list|()
operator|.
name|setTop
argument_list|(
name|start
operator|*
name|rowHeight
argument_list|,
name|Style
operator|.
name|Unit
operator|.
name|PX
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onClick (ClickEvent event)
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|Element
name|row
init|=
name|getRow
argument_list|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getEventTarget
argument_list|()
operator|.
operator|<
name|Element
operator|>
name|cast
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|row
operator|!=
literal|null
condition|)
block|{
name|movePointerTo
argument_list|(
name|startRow
operator|+
name|DOM
operator|.
name|getChildIndex
argument_list|(
name|body
argument_list|,
name|row
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|event
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
block|}
name|saveSelectedTab
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onDoubleClick (DoubleClickEvent event)
specifier|public
name|void
name|onDoubleClick
parameter_list|(
name|DoubleClickEvent
name|event
parameter_list|)
block|{
name|Element
name|row
init|=
name|getRow
argument_list|(
name|event
operator|.
name|getNativeEvent
argument_list|()
operator|.
name|getEventTarget
argument_list|()
operator|.
operator|<
name|Element
operator|>
name|cast
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|row
operator|!=
literal|null
condition|)
block|{
name|movePointerTo
argument_list|(
name|startRow
operator|+
name|DOM
operator|.
name|getChildIndex
argument_list|(
name|body
argument_list|,
name|row
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|onOpenRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|event
operator|.
name|stopPropagation
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onScroll (ScrollEvent event)
specifier|public
name|void
name|onScroll
parameter_list|(
name|ScrollEvent
name|event
parameter_list|)
block|{
name|render
argument_list|()
expr_stmt|;
block|}
DECL|method|getRow (Element e)
specifier|private
name|Element
name|getRow
parameter_list|(
name|Element
name|e
parameter_list|)
block|{
for|for
control|(
name|Element
name|prev
init|=
name|e
init|;
name|e
operator|!=
literal|null
condition|;
name|prev
operator|=
name|e
control|)
block|{
if|if
condition|(
operator|(
name|e
operator|=
name|DOM
operator|.
name|getParent
argument_list|(
name|e
argument_list|)
operator|)
operator|==
name|body
condition|)
block|{
return|return
name|prev
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
DECL|method|getRow (int row)
specifier|private
name|Element
name|getRow
parameter_list|(
name|int
name|row
parameter_list|)
block|{
if|if
condition|(
name|startRow
operator|<=
name|row
operator|&&
name|row
operator|<
name|startRow
operator|+
name|body
operator|.
name|getChildCount
argument_list|()
condition|)
block|{
return|return
name|body
operator|.
name|getChild
argument_list|(
name|row
operator|-
name|startRow
argument_list|)
operator|.
name|cast
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
DECL|method|onOpenRow (Element row)
specifier|private
name|void
name|onOpenRow
parameter_list|(
name|Element
name|row
parameter_list|)
block|{
comment|// Find the first HREF of the anchor of the select row (if any)
if|if
condition|(
name|row
operator|!=
literal|null
condition|)
block|{
name|NodeList
argument_list|<
name|Element
argument_list|>
name|nodes
init|=
name|row
operator|.
name|getElementsByTagName
argument_list|(
name|AnchorElement
operator|.
name|TAG
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nodes
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|String
name|url
init|=
name|nodes
operator|.
name|getItem
argument_list|(
name|i
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"href"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|url
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|url
operator|.
name|startsWith
argument_list|(
literal|"#"
argument_list|)
condition|)
block|{
name|Gerrit
operator|.
name|display
argument_list|(
name|url
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Window
operator|.
name|Location
operator|.
name|assign
argument_list|(
name|url
argument_list|)
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
name|saveSelectedTab
argument_list|()
expr_stmt|;
block|}
DECL|method|saveSelectedTab ()
specifier|private
name|void
name|saveSelectedTab
parameter_list|()
block|{
name|RelatedChanges
operator|.
name|setSavedTab
argument_list|(
name|subject
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onLoad ()
specifier|protected
name|void
name|onLoad
parameter_list|()
block|{
name|super
operator|.
name|onLoad
argument_list|()
expr_stmt|;
name|setRegisterKeys
argument_list|(
name|registerKeys
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onUnload ()
specifier|protected
name|void
name|onUnload
parameter_list|()
block|{
name|setRegisterKeys
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|super
operator|.
name|onUnload
argument_list|()
expr_stmt|;
block|}
DECL|method|setRegisterKeys (boolean on)
specifier|public
name|void
name|setRegisterKeys
parameter_list|(
name|boolean
name|on
parameter_list|)
block|{
if|if
condition|(
name|on
operator|&&
name|isAttached
argument_list|()
condition|)
block|{
if|if
condition|(
name|regNavigation
operator|==
literal|null
condition|)
block|{
name|regNavigation
operator|=
name|GlobalKey
operator|.
name|add
argument_list|(
name|this
argument_list|,
name|keysNavigation
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|view
operator|.
name|ensureRowMeasurements
argument_list|()
condition|)
block|{
name|view
operator|.
name|movePointerTo
argument_list|(
name|view
operator|.
name|selectedRow
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|regNavigation
operator|!=
literal|null
condition|)
block|{
name|regNavigation
operator|.
name|removeHandler
argument_list|()
expr_stmt|;
name|regNavigation
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
DECL|method|createDocumentFragment ()
specifier|private
specifier|static
specifier|native
name|Node
name|createDocumentFragment
parameter_list|()
comment|/*-{     return $doc.createDocumentFragment();   }-*/
function_decl|;
block|}
end_class

end_unit

