begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.httpd.raw
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|httpd
operator|.
name|raw
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|createMock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|expect
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|replay
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|verify
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|GerritApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|accounts
operator|.
name|Accounts
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|config
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|config
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ServerInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|AuthException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|util
operator|.
name|http
operator|.
name|testutil
operator|.
name|FakeHttpServletRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|util
operator|.
name|http
operator|.
name|testutil
operator|.
name|FakeHttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|IndexServletTest
specifier|public
class|class
name|IndexServletTest
block|{
annotation|@
name|Test
DECL|method|renderTemplate ()
specifier|public
name|void
name|renderTemplate
parameter_list|()
throws|throws
name|Exception
block|{
name|Accounts
name|accountsApi
init|=
name|createMock
argument_list|(
name|Accounts
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|accountsApi
operator|.
name|self
argument_list|()
argument_list|)
operator|.
name|andThrow
argument_list|(
operator|new
name|AuthException
argument_list|(
literal|"user needs to be authenticated"
argument_list|)
argument_list|)
expr_stmt|;
name|Server
name|serverApi
init|=
name|createMock
argument_list|(
name|Server
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|serverApi
operator|.
name|getVersion
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|"123"
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|serverApi
operator|.
name|topMenus
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|()
argument_list|)
expr_stmt|;
name|ServerInfo
name|serverInfo
init|=
operator|new
name|ServerInfo
argument_list|()
decl_stmt|;
name|serverInfo
operator|.
name|defaultTheme
operator|=
literal|"my-default-theme"
expr_stmt|;
name|expect
argument_list|(
name|serverApi
operator|.
name|getInfo
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|serverInfo
argument_list|)
expr_stmt|;
name|Config
name|configApi
init|=
name|createMock
argument_list|(
name|Config
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|configApi
operator|.
name|server
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|serverApi
argument_list|)
expr_stmt|;
name|GerritApi
name|gerritApi
init|=
name|createMock
argument_list|(
name|GerritApi
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|gerritApi
operator|.
name|accounts
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|accountsApi
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|gerritApi
operator|.
name|config
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|configApi
argument_list|)
expr_stmt|;
name|String
name|testCanonicalUrl
init|=
literal|"foo-url"
decl_stmt|;
name|String
name|testCdnPath
init|=
literal|"bar-cdn"
decl_stmt|;
name|String
name|testFaviconURL
init|=
literal|"zaz-url"
decl_stmt|;
name|IndexServlet
name|servlet
init|=
operator|new
name|IndexServlet
argument_list|(
name|testCanonicalUrl
argument_list|,
name|testCdnPath
argument_list|,
name|testFaviconURL
argument_list|,
name|gerritApi
argument_list|)
decl_stmt|;
name|FakeHttpServletResponse
name|response
init|=
operator|new
name|FakeHttpServletResponse
argument_list|()
decl_stmt|;
name|replay
argument_list|(
name|gerritApi
argument_list|)
expr_stmt|;
name|replay
argument_list|(
name|configApi
argument_list|)
expr_stmt|;
name|replay
argument_list|(
name|serverApi
argument_list|)
expr_stmt|;
name|replay
argument_list|(
name|accountsApi
argument_list|)
expr_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
operator|new
name|FakeHttpServletRequest
argument_list|()
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|gerritApi
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|configApi
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|serverApi
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|accountsApi
argument_list|)
expr_stmt|;
name|String
name|output
init|=
name|response
operator|.
name|getActualBodyString
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|output
argument_list|)
operator|.
name|contains
argument_list|(
literal|"<!DOCTYPE html>"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|output
argument_list|)
operator|.
name|contains
argument_list|(
literal|"window.CANONICAL_PATH = '"
operator|+
name|testCanonicalUrl
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|output
argument_list|)
operator|.
name|contains
argument_list|(
literal|"<link rel=\"preload\" href=\""
operator|+
name|testCdnPath
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|output
argument_list|)
operator|.
name|contains
argument_list|(
literal|"<link rel=\"icon\" type=\"image/x-icon\" href=\""
operator|+
name|testCanonicalUrl
operator|+
literal|"/"
operator|+
name|testFaviconURL
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|output
argument_list|)
operator|.
name|contains
argument_list|(
literal|"window.INITIAL_DATA = JSON.parse("
operator|+
literal|"'\\x7b\\x22\\/config\\/server\\/version\\x22: \\x22123\\x22, "
operator|+
literal|"\\x22\\/config\\/server\\/info\\x22: \\x7b\\x22default_theme\\x22:"
operator|+
literal|"\\x22my-default-theme\\x22\\x7d, \\x22\\/config\\/server\\/top-menus\\x22: "
operator|+
literal|"\\x5b\\x5d\\x7d');</script>"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

