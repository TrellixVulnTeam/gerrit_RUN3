begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2019 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.notedb
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|entities
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|entities
operator|.
name|Comment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|entities
operator|.
name|PatchLineComment
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|entities
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|util
operator|.
name|time
operator|.
name|TimeUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|DraftCommentNotesTest
specifier|public
class|class
name|DraftCommentNotesTest
extends|extends
name|AbstractChangeNotesTest
block|{
annotation|@
name|Test
DECL|method|createAndPublishCommentInOneAction_runsDraftOperationAsynchronously ()
specifier|public
name|void
name|createAndPublishCommentInOneAction_runsDraftOperationAsynchronously
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
decl_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
expr_stmt|;
name|update
operator|.
name|putComment
argument_list|(
name|Status
operator|.
name|PUBLISHED
argument_list|,
name|comment
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|newNotes
argument_list|(
name|c
argument_list|)
operator|.
name|getDraftComments
argument_list|(
name|otherUserId
argument_list|)
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|assertableFanOutExecutor
operator|.
name|assertInteractions
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createAndPublishComment_runsPublishDraftOperationAsynchronously ()
specifier|public
name|void
name|createAndPublishComment_runsPublishDraftOperationAsynchronously
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
decl_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
expr_stmt|;
name|update
operator|.
name|putComment
argument_list|(
name|Status
operator|.
name|DRAFT
argument_list|,
name|comment
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|newNotes
argument_list|(
name|c
argument_list|)
operator|.
name|getDraftComments
argument_list|(
name|otherUserId
argument_list|)
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertableFanOutExecutor
operator|.
name|assertInteractions
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
expr_stmt|;
name|update
operator|.
name|putComment
argument_list|(
name|Status
operator|.
name|PUBLISHED
argument_list|,
name|comment
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|newNotes
argument_list|(
name|c
argument_list|)
operator|.
name|getDraftComments
argument_list|(
name|otherUserId
argument_list|)
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|assertableFanOutExecutor
operator|.
name|assertInteractions
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createAndDeleteDraftComment_runsDraftOperationSynchronously ()
specifier|public
name|void
name|createAndDeleteDraftComment_runsDraftOperationSynchronously
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
decl_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
expr_stmt|;
name|update
operator|.
name|putComment
argument_list|(
name|Status
operator|.
name|DRAFT
argument_list|,
name|comment
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|notes
operator|.
name|getDraftComments
argument_list|(
name|otherUserId
argument_list|)
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertableFanOutExecutor
operator|.
name|assertInteractions
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
expr_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
expr_stmt|;
name|update
operator|.
name|deleteComment
argument_list|(
name|comment
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|notes
operator|=
name|newNotes
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|notes
operator|.
name|getDraftComments
argument_list|(
name|otherUserId
argument_list|)
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|assertableFanOutExecutor
operator|.
name|assertInteractions
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
DECL|method|comment (PatchSet.Id psId)
specifier|private
name|Comment
name|comment
parameter_list|(
name|PatchSet
operator|.
name|Id
name|psId
parameter_list|)
block|{
return|return
name|newComment
argument_list|(
name|psId
argument_list|,
literal|"filename"
argument_list|,
literal|"uuid"
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
name|otherUser
argument_list|,
literal|null
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|,
literal|"comment"
argument_list|,
operator|(
name|short
operator|)
literal|0
argument_list|,
name|ObjectId
operator|.
name|fromString
argument_list|(
literal|"abcd1234abcd1234abcd1234abcd1234abcd1234"
argument_list|)
argument_list|,
literal|false
argument_list|)
return|;
block|}
block|}
end_class

end_unit

