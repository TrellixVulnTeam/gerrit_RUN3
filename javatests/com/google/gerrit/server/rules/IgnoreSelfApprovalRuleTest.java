begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2018 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.rules
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|rules
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|LabelType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|LabelValue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|LabelId
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSetApproval
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testing
operator|.
name|GerritBaseTests
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|Instant
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|IgnoreSelfApprovalRuleTest
specifier|public
class|class
name|IgnoreSelfApprovalRuleTest
extends|extends
name|GerritBaseTests
block|{
DECL|field|CHANGE_ID
specifier|private
specifier|static
specifier|final
name|Change
operator|.
name|Id
name|CHANGE_ID
init|=
operator|new
name|Change
operator|.
name|Id
argument_list|(
literal|100
argument_list|)
decl_stmt|;
DECL|field|PS_ID
specifier|private
specifier|static
specifier|final
name|PatchSet
operator|.
name|Id
name|PS_ID
init|=
name|PatchSet
operator|.
name|id
argument_list|(
name|CHANGE_ID
argument_list|,
literal|1
argument_list|)
decl_stmt|;
DECL|field|VERIFIED
specifier|private
specifier|static
specifier|final
name|LabelType
name|VERIFIED
init|=
name|makeLabel
argument_list|(
literal|"Verified"
argument_list|)
decl_stmt|;
DECL|field|USER1
specifier|private
specifier|static
specifier|final
name|Account
operator|.
name|Id
name|USER1
init|=
name|makeAccount
argument_list|(
literal|100001
argument_list|)
decl_stmt|;
annotation|@
name|Test
DECL|method|filtersByLabel ()
specifier|public
name|void
name|filtersByLabel
parameter_list|()
block|{
name|LabelType
name|codeReview
init|=
name|makeLabel
argument_list|(
literal|"Code-Review"
argument_list|)
decl_stmt|;
name|PatchSetApproval
name|approvalVerified
init|=
name|makeApproval
argument_list|(
name|VERIFIED
operator|.
name|getLabelId
argument_list|()
argument_list|,
name|USER1
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|PatchSetApproval
name|approvalCr
init|=
name|makeApproval
argument_list|(
name|codeReview
operator|.
name|getLabelId
argument_list|()
argument_list|,
name|USER1
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|Collection
argument_list|<
name|PatchSetApproval
argument_list|>
name|filteredApprovals
init|=
name|IgnoreSelfApprovalRule
operator|.
name|filterApprovalsByLabel
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|(
name|approvalVerified
argument_list|,
name|approvalCr
argument_list|)
argument_list|,
name|VERIFIED
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|filteredApprovals
argument_list|)
operator|.
name|containsExactly
argument_list|(
name|approvalVerified
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|filtersVotesFromUser ()
specifier|public
name|void
name|filtersVotesFromUser
parameter_list|()
block|{
name|PatchSetApproval
name|approvalM2
init|=
name|makeApproval
argument_list|(
name|VERIFIED
operator|.
name|getLabelId
argument_list|()
argument_list|,
name|USER1
argument_list|,
operator|-
literal|2
argument_list|)
decl_stmt|;
name|PatchSetApproval
name|approvalM1
init|=
name|makeApproval
argument_list|(
name|VERIFIED
operator|.
name|getLabelId
argument_list|()
argument_list|,
name|USER1
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|ImmutableList
argument_list|<
name|PatchSetApproval
argument_list|>
name|approvals
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|approvalM2
argument_list|,
name|approvalM1
argument_list|,
name|makeApproval
argument_list|(
name|VERIFIED
operator|.
name|getLabelId
argument_list|()
argument_list|,
name|USER1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|makeApproval
argument_list|(
name|VERIFIED
operator|.
name|getLabelId
argument_list|()
argument_list|,
name|USER1
argument_list|,
operator|+
literal|1
argument_list|)
argument_list|,
name|makeApproval
argument_list|(
name|VERIFIED
operator|.
name|getLabelId
argument_list|()
argument_list|,
name|USER1
argument_list|,
operator|+
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|Collection
argument_list|<
name|PatchSetApproval
argument_list|>
name|filteredApprovals
init|=
name|IgnoreSelfApprovalRule
operator|.
name|filterOutPositiveApprovalsOfUser
argument_list|(
name|approvals
argument_list|,
name|USER1
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|filteredApprovals
argument_list|)
operator|.
name|containsExactly
argument_list|(
name|approvalM1
argument_list|,
name|approvalM2
argument_list|)
expr_stmt|;
block|}
DECL|method|makeLabel (String labelName)
specifier|private
specifier|static
name|LabelType
name|makeLabel
parameter_list|(
name|String
name|labelName
parameter_list|)
block|{
name|List
argument_list|<
name|LabelValue
argument_list|>
name|values
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
comment|// The label text is irrelevant here, only the numerical value is used
name|values
operator|.
name|add
argument_list|(
operator|new
name|LabelValue
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|2
argument_list|,
literal|"-2"
argument_list|)
argument_list|)
expr_stmt|;
name|values
operator|.
name|add
argument_list|(
operator|new
name|LabelValue
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|,
literal|"-1"
argument_list|)
argument_list|)
expr_stmt|;
name|values
operator|.
name|add
argument_list|(
operator|new
name|LabelValue
argument_list|(
operator|(
name|short
operator|)
literal|0
argument_list|,
literal|"No vote."
argument_list|)
argument_list|)
expr_stmt|;
name|values
operator|.
name|add
argument_list|(
operator|new
name|LabelValue
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|,
literal|"+1"
argument_list|)
argument_list|)
expr_stmt|;
name|values
operator|.
name|add
argument_list|(
operator|new
name|LabelValue
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|,
literal|"+2"
argument_list|)
argument_list|)
expr_stmt|;
return|return
operator|new
name|LabelType
argument_list|(
name|labelName
argument_list|,
name|values
argument_list|)
return|;
block|}
DECL|method|makeApproval (LabelId labelId, Account.Id accountId, int value)
specifier|private
specifier|static
name|PatchSetApproval
name|makeApproval
parameter_list|(
name|LabelId
name|labelId
parameter_list|,
name|Account
operator|.
name|Id
name|accountId
parameter_list|,
name|int
name|value
parameter_list|)
block|{
name|PatchSetApproval
operator|.
name|Key
name|key
init|=
name|makeKey
argument_list|(
name|PS_ID
argument_list|,
name|accountId
argument_list|,
name|labelId
argument_list|)
decl_stmt|;
return|return
operator|new
name|PatchSetApproval
argument_list|(
name|key
argument_list|,
operator|(
name|short
operator|)
name|value
argument_list|,
name|Date
operator|.
name|from
argument_list|(
name|Instant
operator|.
name|now
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
DECL|method|makeKey ( PatchSet.Id psId, Account.Id accountId, LabelId labelId)
specifier|private
specifier|static
name|PatchSetApproval
operator|.
name|Key
name|makeKey
parameter_list|(
name|PatchSet
operator|.
name|Id
name|psId
parameter_list|,
name|Account
operator|.
name|Id
name|accountId
parameter_list|,
name|LabelId
name|labelId
parameter_list|)
block|{
return|return
name|PatchSetApproval
operator|.
name|key
argument_list|(
name|psId
argument_list|,
name|accountId
argument_list|,
name|labelId
argument_list|)
return|;
block|}
DECL|method|makeAccount (int account)
specifier|private
specifier|static
name|Account
operator|.
name|Id
name|makeAccount
parameter_list|(
name|int
name|account
parameter_list|)
block|{
return|return
name|Account
operator|.
name|id
argument_list|(
name|account
argument_list|)
return|;
block|}
block|}
end_class

end_unit

