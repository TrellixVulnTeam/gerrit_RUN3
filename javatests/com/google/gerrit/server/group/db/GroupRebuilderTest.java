begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.group.db
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|db
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
operator|.
name|toImmutableList
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|testing
operator|.
name|CommitInfoSubject
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|db
operator|.
name|GroupBundle
operator|.
name|builder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Streams
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|TimeUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountGroup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountGroupById
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountGroupByIdAud
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountGroupMember
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountGroupMemberAudit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|RefNames
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AllUsersName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AllUsersNameProvider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|extensions
operator|.
name|events
operator|.
name|GitReferenceUpdated
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|CommitUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|MetaDataUpdate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|InternalGroup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testing
operator|.
name|GerritBaseTests
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testing
operator|.
name|TestTimeUtil
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TimeZone
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|IntStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|internal
operator|.
name|storage
operator|.
name|dfs
operator|.
name|DfsRepositoryDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|internal
operator|.
name|storage
operator|.
name|dfs
operator|.
name|InMemoryRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|PersonIdent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Ref
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevSort
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevWalk
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|GroupRebuilderTest
specifier|public
class|class
name|GroupRebuilderTest
extends|extends
name|GerritBaseTests
block|{
DECL|field|SERVER_NAME
specifier|private
specifier|static
specifier|final
name|String
name|SERVER_NAME
init|=
literal|"Gerrit Server"
decl_stmt|;
DECL|field|SERVER_EMAIL
specifier|private
specifier|static
specifier|final
name|String
name|SERVER_EMAIL
init|=
literal|"noreply@gerritcodereview.com"
decl_stmt|;
DECL|field|TZ
specifier|private
specifier|static
specifier|final
name|TimeZone
name|TZ
init|=
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"America/Los_Angeles"
argument_list|)
decl_stmt|;
DECL|field|idCounter
specifier|private
name|AtomicInteger
name|idCounter
decl_stmt|;
DECL|field|repo
specifier|private
name|Repository
name|repo
decl_stmt|;
DECL|field|rebuilder
specifier|private
name|GroupRebuilder
name|rebuilder
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|TestTimeUtil
operator|.
name|resetWithClockStep
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
name|idCounter
operator|=
operator|new
name|AtomicInteger
argument_list|()
expr_stmt|;
name|repo
operator|=
operator|new
name|InMemoryRepository
argument_list|(
operator|new
name|DfsRepositoryDescription
argument_list|(
name|AllUsersNameProvider
operator|.
name|DEFAULT
argument_list|)
argument_list|)
expr_stmt|;
name|rebuilder
operator|=
operator|new
name|GroupRebuilder
argument_list|(
parameter_list|()
lambda|->
operator|new
name|PersonIdent
argument_list|(
name|SERVER_NAME
argument_list|,
name|SERVER_EMAIL
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|,
name|TZ
argument_list|)
argument_list|,
operator|new
name|AllUsersName
argument_list|(
name|AllUsersNameProvider
operator|.
name|DEFAULT
argument_list|)
argument_list|,
parameter_list|(
name|project
parameter_list|,
name|repo
parameter_list|,
name|batch
parameter_list|)
lambda|->
operator|new
name|MetaDataUpdate
argument_list|(
name|GitReferenceUpdated
operator|.
name|DISABLED
argument_list|,
name|project
argument_list|,
name|repo
argument_list|,
name|batch
argument_list|)
argument_list|,
comment|// Note that the expected name/email values in tests are not necessarily realistic,
comment|// since they use these trivial name/email functions. GroupRebuilderIT checks the actual
comment|// values.
parameter_list|(
name|id
parameter_list|,
name|ident
parameter_list|)
lambda|->
operator|new
name|PersonIdent
argument_list|(
literal|"Account "
operator|+
name|id
argument_list|,
name|id
operator|+
literal|"@server-id"
argument_list|,
name|ident
operator|.
name|getWhen
argument_list|()
argument_list|,
name|ident
operator|.
name|getTimeZone
argument_list|()
argument_list|)
argument_list|,
name|id
lambda|->
name|String
operator|.
name|format
argument_list|(
literal|"Account %s<%s@server-id>"
argument_list|,
name|id
argument_list|,
name|id
argument_list|)
argument_list|,
name|uuid
lambda|->
literal|"Group "
operator|+
name|uuid
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
name|TestTimeUtil
operator|.
name|useSystemTime
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|minimalGroupFields ()
specifier|public
name|void
name|minimalGroupFields
parameter_list|()
throws|throws
name|Exception
block|{
name|AccountGroup
name|g
init|=
name|newGroup
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|GroupBundle
name|b
init|=
name|builder
argument_list|()
operator|.
name|group
argument_list|(
name|g
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|rebuilder
operator|.
name|rebuild
argument_list|(
name|repo
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reload
argument_list|(
name|g
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|b
operator|.
name|toInternalGroup
argument_list|()
argument_list|)
expr_stmt|;
name|ImmutableList
argument_list|<
name|CommitInfo
argument_list|>
name|log
init|=
name|log
argument_list|(
name|g
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|log
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"Create group"
argument_list|,
name|SERVER_NAME
argument_list|,
name|SERVER_EMAIL
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|allGroupFields ()
specifier|public
name|void
name|allGroupFields
parameter_list|()
throws|throws
name|Exception
block|{
name|AccountGroup
name|g
init|=
name|newGroup
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|g
operator|.
name|setDescription
argument_list|(
literal|"Description"
argument_list|)
expr_stmt|;
name|g
operator|.
name|setOwnerGroupUUID
argument_list|(
operator|new
name|AccountGroup
operator|.
name|UUID
argument_list|(
literal|"owner"
argument_list|)
argument_list|)
expr_stmt|;
name|g
operator|.
name|setVisibleToAll
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|GroupBundle
name|b
init|=
name|builder
argument_list|()
operator|.
name|group
argument_list|(
name|g
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|rebuilder
operator|.
name|rebuild
argument_list|(
name|repo
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reload
argument_list|(
name|g
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|b
operator|.
name|toInternalGroup
argument_list|()
argument_list|)
expr_stmt|;
name|ImmutableList
argument_list|<
name|CommitInfo
argument_list|>
name|log
init|=
name|log
argument_list|(
name|g
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|log
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertServerCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"Create group"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|membersAndSubgroups ()
specifier|public
name|void
name|membersAndSubgroups
parameter_list|()
throws|throws
name|Exception
block|{
name|AccountGroup
name|g
init|=
name|newGroup
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|GroupBundle
name|b
init|=
name|builder
argument_list|()
operator|.
name|group
argument_list|(
name|g
argument_list|)
operator|.
name|members
argument_list|(
name|member
argument_list|(
name|g
argument_list|,
literal|1
argument_list|)
argument_list|,
name|member
argument_list|(
name|g
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|byId
argument_list|(
name|byId
argument_list|(
name|g
argument_list|,
literal|"x"
argument_list|)
argument_list|,
name|byId
argument_list|(
name|g
argument_list|,
literal|"y"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|rebuilder
operator|.
name|rebuild
argument_list|(
name|repo
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reload
argument_list|(
name|g
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|b
operator|.
name|toInternalGroup
argument_list|()
argument_list|)
expr_stmt|;
name|ImmutableList
argument_list|<
name|CommitInfo
argument_list|>
name|log
init|=
name|log
argument_list|(
name|g
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|log
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertServerCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"Create group"
argument_list|)
expr_stmt|;
name|assertServerCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"Update group\n"
operator|+
literal|"\n"
operator|+
literal|"Add: Account 1<1@server-id>\n"
operator|+
literal|"Add: Account 2<2@server-id>\n"
operator|+
literal|"Add-group: Group x\n"
operator|+
literal|"Add-group: Group y"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|memberAudit ()
specifier|public
name|void
name|memberAudit
parameter_list|()
throws|throws
name|Exception
block|{
name|AccountGroup
name|g
init|=
name|newGroup
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|Timestamp
name|t1
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|Timestamp
name|t2
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|Timestamp
name|t3
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|GroupBundle
name|b
init|=
name|builder
argument_list|()
operator|.
name|group
argument_list|(
name|g
argument_list|)
operator|.
name|members
argument_list|(
name|member
argument_list|(
name|g
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|memberAudit
argument_list|(
name|addMember
argument_list|(
name|g
argument_list|,
literal|1
argument_list|,
literal|8
argument_list|,
name|t2
argument_list|)
argument_list|,
name|addAndRemoveMember
argument_list|(
name|g
argument_list|,
literal|2
argument_list|,
literal|8
argument_list|,
name|t1
argument_list|,
literal|9
argument_list|,
name|t3
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|rebuilder
operator|.
name|rebuild
argument_list|(
name|repo
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reload
argument_list|(
name|g
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|b
operator|.
name|toInternalGroup
argument_list|()
argument_list|)
expr_stmt|;
name|ImmutableList
argument_list|<
name|CommitInfo
argument_list|>
name|log
init|=
name|log
argument_list|(
name|g
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|log
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|assertServerCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"Create group"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"Update group\n\nAdd: Account 2<2@server-id>"
argument_list|,
literal|"Account 8"
argument_list|,
literal|"8@server-id"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"Update group\n\nAdd: Account 1<1@server-id>"
argument_list|,
literal|"Account 8"
argument_list|,
literal|"8@server-id"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|"Update group\n\nRemove: Account 2<2@server-id>"
argument_list|,
literal|"Account 9"
argument_list|,
literal|"9@server-id"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|memberAuditLegacyRemoved ()
specifier|public
name|void
name|memberAuditLegacyRemoved
parameter_list|()
throws|throws
name|Exception
block|{
name|AccountGroup
name|g
init|=
name|newGroup
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|GroupBundle
name|b
init|=
name|builder
argument_list|()
operator|.
name|group
argument_list|(
name|g
argument_list|)
operator|.
name|members
argument_list|(
name|member
argument_list|(
name|g
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|memberAudit
argument_list|(
name|addAndLegacyRemoveMember
argument_list|(
name|g
argument_list|,
literal|1
argument_list|,
literal|8
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|)
argument_list|,
name|addMember
argument_list|(
name|g
argument_list|,
literal|2
argument_list|,
literal|8
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|rebuilder
operator|.
name|rebuild
argument_list|(
name|repo
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reload
argument_list|(
name|g
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|b
operator|.
name|toInternalGroup
argument_list|()
argument_list|)
expr_stmt|;
name|ImmutableList
argument_list|<
name|CommitInfo
argument_list|>
name|log
init|=
name|log
argument_list|(
name|g
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|log
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|assertServerCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"Create group"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"Update group\n\nAdd: Account 1<1@server-id>"
argument_list|,
literal|"Account 8"
argument_list|,
literal|"8@server-id"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"Update group\n\nRemove: Account 1<1@server-id>"
argument_list|,
literal|"Account 8"
argument_list|,
literal|"8@server-id"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|"Update group\n\nAdd: Account 2<2@server-id>"
argument_list|,
literal|"Account 8"
argument_list|,
literal|"8@server-id"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|unauditedMembershipsAddedAtEnd ()
specifier|public
name|void
name|unauditedMembershipsAddedAtEnd
parameter_list|()
throws|throws
name|Exception
block|{
name|AccountGroup
name|g
init|=
name|newGroup
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|GroupBundle
name|b
init|=
name|builder
argument_list|()
operator|.
name|group
argument_list|(
name|g
argument_list|)
operator|.
name|members
argument_list|(
name|member
argument_list|(
name|g
argument_list|,
literal|1
argument_list|)
argument_list|,
name|member
argument_list|(
name|g
argument_list|,
literal|2
argument_list|)
argument_list|,
name|member
argument_list|(
name|g
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|memberAudit
argument_list|(
name|addMember
argument_list|(
name|g
argument_list|,
literal|1
argument_list|,
literal|8
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|rebuilder
operator|.
name|rebuild
argument_list|(
name|repo
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reload
argument_list|(
name|g
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|b
operator|.
name|toInternalGroup
argument_list|()
argument_list|)
expr_stmt|;
name|ImmutableList
argument_list|<
name|CommitInfo
argument_list|>
name|log
init|=
name|log
argument_list|(
name|g
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|log
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertServerCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"Create group"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"Update group\n\nAdd: Account 1<1@server-id>"
argument_list|,
literal|"Account 8"
argument_list|,
literal|"8@server-id"
argument_list|)
expr_stmt|;
name|assertServerCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"Update group\n\nAdd: Account 2<2@server-id>\nAdd: Account 3<3@server-id>"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|byIdAudit ()
specifier|public
name|void
name|byIdAudit
parameter_list|()
throws|throws
name|Exception
block|{
name|AccountGroup
name|g
init|=
name|newGroup
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|Timestamp
name|t1
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|Timestamp
name|t2
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|Timestamp
name|t3
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|GroupBundle
name|b
init|=
name|builder
argument_list|()
operator|.
name|group
argument_list|(
name|g
argument_list|)
operator|.
name|byId
argument_list|(
name|byId
argument_list|(
name|g
argument_list|,
literal|"x"
argument_list|)
argument_list|)
operator|.
name|byIdAudit
argument_list|(
name|addById
argument_list|(
name|g
argument_list|,
literal|"x"
argument_list|,
literal|8
argument_list|,
name|t2
argument_list|)
argument_list|,
name|addAndRemoveById
argument_list|(
name|g
argument_list|,
literal|"y"
argument_list|,
literal|8
argument_list|,
name|t1
argument_list|,
literal|9
argument_list|,
name|t3
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|rebuilder
operator|.
name|rebuild
argument_list|(
name|repo
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reload
argument_list|(
name|g
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|b
operator|.
name|toInternalGroup
argument_list|()
argument_list|)
expr_stmt|;
name|ImmutableList
argument_list|<
name|CommitInfo
argument_list|>
name|log
init|=
name|log
argument_list|(
name|g
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|log
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|assertServerCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"Create group"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"Update group\n\nAdd-group: Group y"
argument_list|,
literal|"Account 8"
argument_list|,
literal|"8@server-id"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"Update group\n\nAdd-group: Group x"
argument_list|,
literal|"Account 8"
argument_list|,
literal|"8@server-id"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|"Update group\n\nRemove-group: Group y"
argument_list|,
literal|"Account 9"
argument_list|,
literal|"9@server-id"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|unauditedByIdAddedAtEnd ()
specifier|public
name|void
name|unauditedByIdAddedAtEnd
parameter_list|()
throws|throws
name|Exception
block|{
name|AccountGroup
name|g
init|=
name|newGroup
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|GroupBundle
name|b
init|=
name|builder
argument_list|()
operator|.
name|group
argument_list|(
name|g
argument_list|)
operator|.
name|byId
argument_list|(
name|byId
argument_list|(
name|g
argument_list|,
literal|"x"
argument_list|)
argument_list|,
name|byId
argument_list|(
name|g
argument_list|,
literal|"y"
argument_list|)
argument_list|,
name|byId
argument_list|(
name|g
argument_list|,
literal|"z"
argument_list|)
argument_list|)
operator|.
name|byIdAudit
argument_list|(
name|addById
argument_list|(
name|g
argument_list|,
literal|"x"
argument_list|,
literal|8
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|rebuilder
operator|.
name|rebuild
argument_list|(
name|repo
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reload
argument_list|(
name|g
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|b
operator|.
name|toInternalGroup
argument_list|()
argument_list|)
expr_stmt|;
name|ImmutableList
argument_list|<
name|CommitInfo
argument_list|>
name|log
init|=
name|log
argument_list|(
name|g
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|log
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertServerCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"Create group"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"Update group\n\nAdd-group: Group x"
argument_list|,
literal|"Account 8"
argument_list|,
literal|"8@server-id"
argument_list|)
expr_stmt|;
name|assertServerCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"Update group\n\nAdd-group: Group y\nAdd-group: Group z"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|auditsAtSameTimestampBrokenDownByType ()
specifier|public
name|void
name|auditsAtSameTimestampBrokenDownByType
parameter_list|()
throws|throws
name|Exception
block|{
name|AccountGroup
name|g
init|=
name|newGroup
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|Timestamp
name|ts
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|int
name|user
init|=
literal|8
decl_stmt|;
name|GroupBundle
name|b
init|=
name|builder
argument_list|()
operator|.
name|group
argument_list|(
name|g
argument_list|)
operator|.
name|members
argument_list|(
name|member
argument_list|(
name|g
argument_list|,
literal|1
argument_list|)
argument_list|,
name|member
argument_list|(
name|g
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|memberAudit
argument_list|(
name|addMember
argument_list|(
name|g
argument_list|,
literal|1
argument_list|,
name|user
argument_list|,
name|ts
argument_list|)
argument_list|,
name|addMember
argument_list|(
name|g
argument_list|,
literal|2
argument_list|,
name|user
argument_list|,
name|ts
argument_list|)
argument_list|,
name|addAndRemoveMember
argument_list|(
name|g
argument_list|,
literal|3
argument_list|,
name|user
argument_list|,
name|ts
argument_list|,
name|user
argument_list|,
name|ts
argument_list|)
argument_list|)
operator|.
name|byId
argument_list|(
name|byId
argument_list|(
name|g
argument_list|,
literal|"x"
argument_list|)
argument_list|,
name|byId
argument_list|(
name|g
argument_list|,
literal|"y"
argument_list|)
argument_list|)
operator|.
name|byIdAudit
argument_list|(
name|addById
argument_list|(
name|g
argument_list|,
literal|"x"
argument_list|,
name|user
argument_list|,
name|ts
argument_list|)
argument_list|,
name|addById
argument_list|(
name|g
argument_list|,
literal|"y"
argument_list|,
name|user
argument_list|,
name|ts
argument_list|)
argument_list|,
name|addAndRemoveById
argument_list|(
name|g
argument_list|,
literal|"z"
argument_list|,
name|user
argument_list|,
name|ts
argument_list|,
name|user
argument_list|,
name|ts
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|rebuilder
operator|.
name|rebuild
argument_list|(
name|repo
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reload
argument_list|(
name|g
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|b
operator|.
name|toInternalGroup
argument_list|()
argument_list|)
expr_stmt|;
name|ImmutableList
argument_list|<
name|CommitInfo
argument_list|>
name|log
init|=
name|log
argument_list|(
name|g
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|log
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|assertServerCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"Create group"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"Update group\n"
operator|+
literal|"\n"
operator|+
literal|"Add: Account 1<1@server-id>\n"
operator|+
literal|"Add: Account 2<2@server-id>\n"
operator|+
literal|"Add: Account 3<3@server-id>"
argument_list|,
literal|"Account 8"
argument_list|,
literal|"8@server-id"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"Update group\n\nRemove: Account 3<3@server-id>"
argument_list|,
literal|"Account 8"
argument_list|,
literal|"8@server-id"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|"Update group\n"
operator|+
literal|"\n"
operator|+
literal|"Add-group: Group x\n"
operator|+
literal|"Add-group: Group y\n"
operator|+
literal|"Add-group: Group z"
argument_list|,
literal|"Account 8"
argument_list|,
literal|"8@server-id"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|"Update group\n\nRemove-group: Group z"
argument_list|,
literal|"Account 8"
argument_list|,
literal|"8@server-id"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|auditsAtSameTimestampBrokenDownByUserAndType ()
specifier|public
name|void
name|auditsAtSameTimestampBrokenDownByUserAndType
parameter_list|()
throws|throws
name|Exception
block|{
name|AccountGroup
name|g
init|=
name|newGroup
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|Timestamp
name|ts
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|int
name|user1
init|=
literal|8
decl_stmt|;
name|int
name|user2
init|=
literal|9
decl_stmt|;
name|GroupBundle
name|b
init|=
name|builder
argument_list|()
operator|.
name|group
argument_list|(
name|g
argument_list|)
operator|.
name|members
argument_list|(
name|member
argument_list|(
name|g
argument_list|,
literal|1
argument_list|)
argument_list|,
name|member
argument_list|(
name|g
argument_list|,
literal|2
argument_list|)
argument_list|,
name|member
argument_list|(
name|g
argument_list|,
literal|3
argument_list|)
argument_list|)
operator|.
name|memberAudit
argument_list|(
name|addMember
argument_list|(
name|g
argument_list|,
literal|1
argument_list|,
name|user1
argument_list|,
name|ts
argument_list|)
argument_list|,
name|addMember
argument_list|(
name|g
argument_list|,
literal|2
argument_list|,
name|user2
argument_list|,
name|ts
argument_list|)
argument_list|,
name|addMember
argument_list|(
name|g
argument_list|,
literal|3
argument_list|,
name|user1
argument_list|,
name|ts
argument_list|)
argument_list|)
operator|.
name|byId
argument_list|(
name|byId
argument_list|(
name|g
argument_list|,
literal|"x"
argument_list|)
argument_list|,
name|byId
argument_list|(
name|g
argument_list|,
literal|"y"
argument_list|)
argument_list|,
name|byId
argument_list|(
name|g
argument_list|,
literal|"z"
argument_list|)
argument_list|)
operator|.
name|byIdAudit
argument_list|(
name|addById
argument_list|(
name|g
argument_list|,
literal|"x"
argument_list|,
name|user1
argument_list|,
name|ts
argument_list|)
argument_list|,
name|addById
argument_list|(
name|g
argument_list|,
literal|"y"
argument_list|,
name|user2
argument_list|,
name|ts
argument_list|)
argument_list|,
name|addById
argument_list|(
name|g
argument_list|,
literal|"z"
argument_list|,
name|user1
argument_list|,
name|ts
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|rebuilder
operator|.
name|rebuild
argument_list|(
name|repo
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reload
argument_list|(
name|g
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|b
operator|.
name|toInternalGroup
argument_list|()
argument_list|)
expr_stmt|;
name|ImmutableList
argument_list|<
name|CommitInfo
argument_list|>
name|log
init|=
name|log
argument_list|(
name|g
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|log
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|assertServerCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"Create group"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"Update group\n"
operator|+
literal|"\n"
operator|+
literal|"Add: Account 1<1@server-id>\n"
operator|+
literal|"Add: Account 3<3@server-id>"
argument_list|,
literal|"Account 8"
argument_list|,
literal|"8@server-id"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"Update group\n\nAdd-group: Group x\nAdd-group: Group z"
argument_list|,
literal|"Account 8"
argument_list|,
literal|"8@server-id"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|"Update group\n\nAdd: Account 2<2@server-id>"
argument_list|,
literal|"Account 9"
argument_list|,
literal|"9@server-id"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|,
literal|"Update group\n\nAdd-group: Group y"
argument_list|,
literal|"Account 9"
argument_list|,
literal|"9@server-id"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|fixupCommitPostDatesAllAuditEventsEvenIfAuditEventsAreInTheFuture ()
specifier|public
name|void
name|fixupCommitPostDatesAllAuditEventsEvenIfAuditEventsAreInTheFuture
parameter_list|()
throws|throws
name|Exception
block|{
name|AccountGroup
name|g
init|=
name|newGroup
argument_list|(
literal|"a"
argument_list|)
decl_stmt|;
name|IntStream
operator|.
name|range
argument_list|(
literal|0
argument_list|,
literal|20
argument_list|)
operator|.
name|forEach
argument_list|(
name|i
lambda|->
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|)
expr_stmt|;
name|Timestamp
name|future
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|TestTimeUtil
operator|.
name|resetWithClockStep
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
name|GroupBundle
name|b
init|=
name|builder
argument_list|()
operator|.
name|group
argument_list|(
name|g
argument_list|)
operator|.
name|byId
argument_list|(
name|byId
argument_list|(
name|g
argument_list|,
literal|"x"
argument_list|)
argument_list|,
name|byId
argument_list|(
name|g
argument_list|,
literal|"y"
argument_list|)
argument_list|,
name|byId
argument_list|(
name|g
argument_list|,
literal|"z"
argument_list|)
argument_list|)
operator|.
name|byIdAudit
argument_list|(
name|addById
argument_list|(
name|g
argument_list|,
literal|"x"
argument_list|,
literal|8
argument_list|,
name|future
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|rebuilder
operator|.
name|rebuild
argument_list|(
name|repo
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reload
argument_list|(
name|g
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|b
operator|.
name|toInternalGroup
argument_list|()
argument_list|)
expr_stmt|;
name|ImmutableList
argument_list|<
name|CommitInfo
argument_list|>
name|log
init|=
name|log
argument_list|(
name|g
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|log
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertServerCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|"Create group"
argument_list|)
expr_stmt|;
name|assertCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"Update group\n\nAdd-group: Group x"
argument_list|,
literal|"Account 8"
argument_list|,
literal|"8@server-id"
argument_list|)
expr_stmt|;
name|assertServerCommit
argument_list|(
name|log
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|"Update group\n\nAdd-group: Group y\nAdd-group: Group z"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|log
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|c
lambda|->
name|c
operator|.
name|committer
operator|.
name|date
argument_list|)
operator|.
name|collect
argument_list|(
name|toImmutableList
argument_list|()
argument_list|)
argument_list|)
operator|.
name|named
argument_list|(
literal|"%s"
argument_list|,
name|log
argument_list|)
operator|.
name|isOrdered
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|)
operator|.
name|isLessThan
argument_list|(
name|future
argument_list|)
expr_stmt|;
block|}
DECL|method|reload (AccountGroup g)
specifier|private
name|InternalGroup
name|reload
parameter_list|(
name|AccountGroup
name|g
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|removeRefState
argument_list|(
name|GroupConfig
operator|.
name|loadForGroup
argument_list|(
name|repo
argument_list|,
name|g
operator|.
name|getGroupUUID
argument_list|()
argument_list|)
operator|.
name|getLoadedGroup
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
return|;
block|}
DECL|method|newGroup (String name)
specifier|private
name|AccountGroup
name|newGroup
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|int
name|id
init|=
name|idCounter
operator|.
name|incrementAndGet
argument_list|()
decl_stmt|;
return|return
operator|new
name|AccountGroup
argument_list|(
operator|new
name|AccountGroup
operator|.
name|NameKey
argument_list|(
name|name
argument_list|)
argument_list|,
operator|new
name|AccountGroup
operator|.
name|Id
argument_list|(
name|id
argument_list|)
argument_list|,
operator|new
name|AccountGroup
operator|.
name|UUID
argument_list|(
name|name
operator|+
literal|"-"
operator|+
name|id
argument_list|)
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|)
return|;
block|}
DECL|method|member (AccountGroup g, int accountId)
specifier|private
name|AccountGroupMember
name|member
parameter_list|(
name|AccountGroup
name|g
parameter_list|,
name|int
name|accountId
parameter_list|)
block|{
return|return
operator|new
name|AccountGroupMember
argument_list|(
operator|new
name|AccountGroupMember
operator|.
name|Key
argument_list|(
operator|new
name|Account
operator|.
name|Id
argument_list|(
name|accountId
argument_list|)
argument_list|,
name|g
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
DECL|method|addMember ( AccountGroup g, int accountId, int adder, Timestamp addedOn)
specifier|private
name|AccountGroupMemberAudit
name|addMember
parameter_list|(
name|AccountGroup
name|g
parameter_list|,
name|int
name|accountId
parameter_list|,
name|int
name|adder
parameter_list|,
name|Timestamp
name|addedOn
parameter_list|)
block|{
return|return
operator|new
name|AccountGroupMemberAudit
argument_list|(
name|member
argument_list|(
name|g
argument_list|,
name|accountId
argument_list|)
argument_list|,
operator|new
name|Account
operator|.
name|Id
argument_list|(
name|adder
argument_list|)
argument_list|,
name|addedOn
argument_list|)
return|;
block|}
DECL|method|addAndLegacyRemoveMember ( AccountGroup g, int accountId, int adder, Timestamp addedOn)
specifier|private
name|AccountGroupMemberAudit
name|addAndLegacyRemoveMember
parameter_list|(
name|AccountGroup
name|g
parameter_list|,
name|int
name|accountId
parameter_list|,
name|int
name|adder
parameter_list|,
name|Timestamp
name|addedOn
parameter_list|)
block|{
name|AccountGroupMemberAudit
name|a
init|=
name|addMember
argument_list|(
name|g
argument_list|,
name|accountId
argument_list|,
name|adder
argument_list|,
name|addedOn
argument_list|)
decl_stmt|;
name|a
operator|.
name|removedLegacy
argument_list|()
expr_stmt|;
return|return
name|a
return|;
block|}
DECL|method|addAndRemoveMember ( AccountGroup g, int accountId, int adder, Timestamp addedOn, int removedBy, Timestamp removedOn)
specifier|private
name|AccountGroupMemberAudit
name|addAndRemoveMember
parameter_list|(
name|AccountGroup
name|g
parameter_list|,
name|int
name|accountId
parameter_list|,
name|int
name|adder
parameter_list|,
name|Timestamp
name|addedOn
parameter_list|,
name|int
name|removedBy
parameter_list|,
name|Timestamp
name|removedOn
parameter_list|)
block|{
name|AccountGroupMemberAudit
name|a
init|=
name|addMember
argument_list|(
name|g
argument_list|,
name|accountId
argument_list|,
name|adder
argument_list|,
name|addedOn
argument_list|)
decl_stmt|;
name|a
operator|.
name|removed
argument_list|(
operator|new
name|Account
operator|.
name|Id
argument_list|(
name|removedBy
argument_list|)
argument_list|,
name|removedOn
argument_list|)
expr_stmt|;
return|return
name|a
return|;
block|}
DECL|method|addById ( AccountGroup g, String subgroupUuid, int adder, Timestamp addedOn)
specifier|private
name|AccountGroupByIdAud
name|addById
parameter_list|(
name|AccountGroup
name|g
parameter_list|,
name|String
name|subgroupUuid
parameter_list|,
name|int
name|adder
parameter_list|,
name|Timestamp
name|addedOn
parameter_list|)
block|{
return|return
operator|new
name|AccountGroupByIdAud
argument_list|(
name|byId
argument_list|(
name|g
argument_list|,
name|subgroupUuid
argument_list|)
argument_list|,
operator|new
name|Account
operator|.
name|Id
argument_list|(
name|adder
argument_list|)
argument_list|,
name|addedOn
argument_list|)
return|;
block|}
DECL|method|addAndRemoveById ( AccountGroup g, String subgroupUuid, int adder, Timestamp addedOn, int removedBy, Timestamp removedOn)
specifier|private
name|AccountGroupByIdAud
name|addAndRemoveById
parameter_list|(
name|AccountGroup
name|g
parameter_list|,
name|String
name|subgroupUuid
parameter_list|,
name|int
name|adder
parameter_list|,
name|Timestamp
name|addedOn
parameter_list|,
name|int
name|removedBy
parameter_list|,
name|Timestamp
name|removedOn
parameter_list|)
block|{
name|AccountGroupByIdAud
name|a
init|=
name|addById
argument_list|(
name|g
argument_list|,
name|subgroupUuid
argument_list|,
name|adder
argument_list|,
name|addedOn
argument_list|)
decl_stmt|;
name|a
operator|.
name|removed
argument_list|(
operator|new
name|Account
operator|.
name|Id
argument_list|(
name|removedBy
argument_list|)
argument_list|,
name|removedOn
argument_list|)
expr_stmt|;
return|return
name|a
return|;
block|}
DECL|method|byId (AccountGroup g, String subgroupUuid)
specifier|private
name|AccountGroupById
name|byId
parameter_list|(
name|AccountGroup
name|g
parameter_list|,
name|String
name|subgroupUuid
parameter_list|)
block|{
return|return
operator|new
name|AccountGroupById
argument_list|(
operator|new
name|AccountGroupById
operator|.
name|Key
argument_list|(
name|g
operator|.
name|getId
argument_list|()
argument_list|,
operator|new
name|AccountGroup
operator|.
name|UUID
argument_list|(
name|subgroupUuid
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
DECL|method|log (AccountGroup g)
specifier|private
name|ImmutableList
argument_list|<
name|CommitInfo
argument_list|>
name|log
parameter_list|(
name|AccountGroup
name|g
parameter_list|)
throws|throws
name|Exception
block|{
name|ImmutableList
argument_list|<
name|CommitInfo
argument_list|>
name|result
init|=
name|ImmutableList
operator|.
name|of
argument_list|()
decl_stmt|;
try|try
init|(
name|RevWalk
name|rw
init|=
operator|new
name|RevWalk
argument_list|(
name|repo
argument_list|)
init|)
block|{
name|Ref
name|ref
init|=
name|repo
operator|.
name|exactRef
argument_list|(
name|RefNames
operator|.
name|refsGroups
argument_list|(
name|g
operator|.
name|getGroupUUID
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|ref
operator|!=
literal|null
condition|)
block|{
name|rw
operator|.
name|sort
argument_list|(
name|RevSort
operator|.
name|REVERSE
argument_list|)
expr_stmt|;
name|rw
operator|.
name|setRetainBody
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|rw
operator|.
name|markStart
argument_list|(
name|rw
operator|.
name|parseCommit
argument_list|(
name|ref
operator|.
name|getObjectId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
name|Streams
operator|.
name|stream
argument_list|(
name|rw
argument_list|)
operator|.
name|map
argument_list|(
name|CommitUtil
operator|::
name|toCommitInfo
argument_list|)
operator|.
name|collect
argument_list|(
name|toImmutableList
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|result
return|;
block|}
DECL|method|assertServerCommit (CommitInfo commitInfo, String expectedMessage)
specifier|private
specifier|static
name|void
name|assertServerCommit
parameter_list|(
name|CommitInfo
name|commitInfo
parameter_list|,
name|String
name|expectedMessage
parameter_list|)
block|{
name|assertCommit
argument_list|(
name|commitInfo
argument_list|,
name|expectedMessage
argument_list|,
name|SERVER_NAME
argument_list|,
name|SERVER_EMAIL
argument_list|)
expr_stmt|;
block|}
DECL|method|assertCommit ( CommitInfo commitInfo, String expectedMessage, String expectedName, String expectedEmail)
specifier|private
specifier|static
name|void
name|assertCommit
parameter_list|(
name|CommitInfo
name|commitInfo
parameter_list|,
name|String
name|expectedMessage
parameter_list|,
name|String
name|expectedName
parameter_list|,
name|String
name|expectedEmail
parameter_list|)
block|{
name|assertThat
argument_list|(
name|commitInfo
argument_list|)
operator|.
name|message
argument_list|()
operator|.
name|isEqualTo
argument_list|(
name|expectedMessage
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|commitInfo
argument_list|)
operator|.
name|author
argument_list|()
operator|.
name|name
argument_list|()
operator|.
name|isEqualTo
argument_list|(
name|expectedName
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|commitInfo
argument_list|)
operator|.
name|author
argument_list|()
operator|.
name|email
argument_list|()
operator|.
name|isEqualTo
argument_list|(
name|expectedEmail
argument_list|)
expr_stmt|;
comment|// Committer should always be the server, regardless of author.
name|assertThat
argument_list|(
name|commitInfo
argument_list|)
operator|.
name|committer
argument_list|()
operator|.
name|name
argument_list|()
operator|.
name|isEqualTo
argument_list|(
name|SERVER_NAME
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|commitInfo
argument_list|)
operator|.
name|committer
argument_list|()
operator|.
name|email
argument_list|()
operator|.
name|isEqualTo
argument_list|(
name|SERVER_EMAIL
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|commitInfo
argument_list|)
operator|.
name|committer
argument_list|()
operator|.
name|date
argument_list|()
operator|.
name|isEqualTo
argument_list|(
name|commitInfo
operator|.
name|author
operator|.
name|date
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|commitInfo
argument_list|)
operator|.
name|committer
argument_list|()
operator|.
name|tz
argument_list|()
operator|.
name|isEqualTo
argument_list|(
name|commitInfo
operator|.
name|author
operator|.
name|tz
argument_list|)
expr_stmt|;
block|}
DECL|method|removeRefState (InternalGroup group)
specifier|private
specifier|static
name|InternalGroup
name|removeRefState
parameter_list|(
name|InternalGroup
name|group
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|group
operator|.
name|toBuilder
argument_list|()
operator|.
name|setRefState
argument_list|(
literal|null
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

