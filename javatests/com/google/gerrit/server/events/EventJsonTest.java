begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2019 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.events
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|events
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
operator|.
name|Status
operator|.
name|NEW
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Supplier
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Suppliers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|MapSubject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|BranchNameKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|data
operator|.
name|AccountAttribute
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|data
operator|.
name|ChangeAttribute
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|data
operator|.
name|RefUpdateAttribute
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|util
operator|.
name|time
operator|.
name|TimeUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|sshd
operator|.
name|commands
operator|.
name|StreamEvents
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testing
operator|.
name|GerritBaseTests
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testing
operator|.
name|TestTimeUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|Gson
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|reflect
operator|.
name|TypeToken
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|EventJsonTest
specifier|public
class|class
name|EventJsonTest
extends|extends
name|GerritBaseTests
block|{
DECL|field|BRANCH
specifier|private
specifier|static
specifier|final
name|String
name|BRANCH
init|=
literal|"mybranch"
decl_stmt|;
DECL|field|CHANGE_ID
specifier|private
specifier|static
specifier|final
name|String
name|CHANGE_ID
init|=
literal|"Ideadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
decl_stmt|;
DECL|field|CHANGE_NUM
specifier|private
specifier|static
specifier|final
name|int
name|CHANGE_NUM
init|=
literal|1000
decl_stmt|;
DECL|field|CHANGE_NUM_DOUBLE
specifier|private
specifier|static
specifier|final
name|double
name|CHANGE_NUM_DOUBLE
init|=
name|CHANGE_NUM
decl_stmt|;
DECL|field|COMMIT_MESSAGE
specifier|private
specifier|static
specifier|final
name|String
name|COMMIT_MESSAGE
init|=
literal|"This is a test commit message"
decl_stmt|;
DECL|field|PROJECT
specifier|private
specifier|static
specifier|final
name|String
name|PROJECT
init|=
literal|"myproject"
decl_stmt|;
DECL|field|REF
specifier|private
specifier|static
specifier|final
name|String
name|REF
init|=
literal|"refs/heads/"
operator|+
name|BRANCH
decl_stmt|;
DECL|field|TS1
specifier|private
specifier|static
specifier|final
name|double
name|TS1
init|=
literal|1.2543444E9
decl_stmt|;
DECL|field|TS2
specifier|private
specifier|static
specifier|final
name|double
name|TS2
init|=
literal|1.254344401E9
decl_stmt|;
DECL|field|URL
specifier|private
specifier|static
specifier|final
name|String
name|URL
init|=
literal|"http://somewhere.com"
decl_stmt|;
comment|// TODO(dborowitz): These should be the same.
DECL|field|serializeGson
specifier|private
specifier|final
name|Gson
name|serializeGson
init|=
name|StreamEvents
operator|.
name|newGson
argument_list|()
decl_stmt|;
DECL|field|deserializeGson
specifier|private
specifier|final
name|Gson
name|deserializeGson
init|=
operator|new
name|GsonEventDeserializerProvider
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
annotation|@
name|Before
DECL|method|setTimeForTesting ()
specifier|public
name|void
name|setTimeForTesting
parameter_list|()
block|{
name|TestTimeUtil
operator|.
name|resetWithClockStep
argument_list|(
literal|1
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|refUpdatedEvent ()
specifier|public
name|void
name|refUpdatedEvent
parameter_list|()
block|{
name|RefUpdatedEvent
name|event
init|=
operator|new
name|RefUpdatedEvent
argument_list|()
decl_stmt|;
name|RefUpdateAttribute
name|refUpdatedAttribute
init|=
operator|new
name|RefUpdateAttribute
argument_list|()
decl_stmt|;
name|refUpdatedAttribute
operator|.
name|refName
operator|=
name|REF
expr_stmt|;
name|event
operator|.
name|refUpdate
operator|=
name|createSupplier
argument_list|(
name|refUpdatedAttribute
argument_list|)
expr_stmt|;
name|event
operator|.
name|submitter
operator|=
name|newAccount
argument_list|(
literal|"submitter"
argument_list|)
expr_stmt|;
name|assertThatJsonMap
argument_list|(
name|event
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"submitter"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|event
operator|.
name|submitter
operator|.
name|get
argument_list|()
operator|.
name|name
argument_list|)
operator|.
name|put
argument_list|(
literal|"email"
argument_list|,
name|event
operator|.
name|submitter
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|put
argument_list|(
literal|"username"
argument_list|,
name|event
operator|.
name|submitter
operator|.
name|get
argument_list|()
operator|.
name|username
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"refUpdate"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"refName"
argument_list|,
name|REF
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"ref-updated"
argument_list|)
operator|.
name|put
argument_list|(
literal|"eventCreatedOn"
argument_list|,
name|TS1
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|patchSetCreatedEvent ()
specifier|public
name|void
name|patchSetCreatedEvent
parameter_list|()
block|{
name|Change
name|change
init|=
name|newChange
argument_list|()
decl_stmt|;
name|PatchSetCreatedEvent
name|event
init|=
operator|new
name|PatchSetCreatedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|event
operator|.
name|uploader
operator|=
name|newAccount
argument_list|(
literal|"uploader"
argument_list|)
expr_stmt|;
name|assertThatJsonMap
argument_list|(
name|event
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"uploader"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|event
operator|.
name|uploader
operator|.
name|get
argument_list|()
operator|.
name|name
argument_list|)
operator|.
name|put
argument_list|(
literal|"email"
argument_list|,
name|event
operator|.
name|uploader
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|put
argument_list|(
literal|"username"
argument_list|,
name|event
operator|.
name|uploader
operator|.
name|get
argument_list|()
operator|.
name|username
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"change"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"branch"
argument_list|,
name|BRANCH
argument_list|)
operator|.
name|put
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
operator|.
name|put
argument_list|(
literal|"number"
argument_list|,
name|CHANGE_NUM_DOUBLE
argument_list|)
operator|.
name|put
argument_list|(
literal|"url"
argument_list|,
name|URL
argument_list|)
operator|.
name|put
argument_list|(
literal|"commitMessage"
argument_list|,
name|COMMIT_MESSAGE
argument_list|)
operator|.
name|put
argument_list|(
literal|"createdOn"
argument_list|,
name|TS1
argument_list|)
operator|.
name|put
argument_list|(
literal|"status"
argument_list|,
name|NEW
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"refName"
argument_list|,
name|REF
argument_list|)
operator|.
name|put
argument_list|(
literal|"changeKey"
argument_list|,
name|map
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"patchset-created"
argument_list|)
operator|.
name|put
argument_list|(
literal|"eventCreatedOn"
argument_list|,
name|TS2
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|assigneeChangedEvent ()
specifier|public
name|void
name|assigneeChangedEvent
parameter_list|()
block|{
name|Change
name|change
init|=
name|newChange
argument_list|()
decl_stmt|;
name|AssigneeChangedEvent
name|event
init|=
operator|new
name|AssigneeChangedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|event
operator|.
name|changer
operator|=
name|newAccount
argument_list|(
literal|"changer"
argument_list|)
expr_stmt|;
name|event
operator|.
name|oldAssignee
operator|=
name|newAccount
argument_list|(
literal|"oldAssignee"
argument_list|)
expr_stmt|;
name|assertThatJsonMap
argument_list|(
name|event
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"changer"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|event
operator|.
name|changer
operator|.
name|get
argument_list|()
operator|.
name|name
argument_list|)
operator|.
name|put
argument_list|(
literal|"email"
argument_list|,
name|event
operator|.
name|changer
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|put
argument_list|(
literal|"username"
argument_list|,
name|event
operator|.
name|changer
operator|.
name|get
argument_list|()
operator|.
name|username
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"oldAssignee"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|event
operator|.
name|oldAssignee
operator|.
name|get
argument_list|()
operator|.
name|name
argument_list|)
operator|.
name|put
argument_list|(
literal|"email"
argument_list|,
name|event
operator|.
name|oldAssignee
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|put
argument_list|(
literal|"username"
argument_list|,
name|event
operator|.
name|oldAssignee
operator|.
name|get
argument_list|()
operator|.
name|username
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"change"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"branch"
argument_list|,
name|BRANCH
argument_list|)
operator|.
name|put
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
operator|.
name|put
argument_list|(
literal|"number"
argument_list|,
name|CHANGE_NUM_DOUBLE
argument_list|)
operator|.
name|put
argument_list|(
literal|"url"
argument_list|,
name|URL
argument_list|)
operator|.
name|put
argument_list|(
literal|"commitMessage"
argument_list|,
name|COMMIT_MESSAGE
argument_list|)
operator|.
name|put
argument_list|(
literal|"createdOn"
argument_list|,
name|TS1
argument_list|)
operator|.
name|put
argument_list|(
literal|"status"
argument_list|,
name|NEW
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"refName"
argument_list|,
name|REF
argument_list|)
operator|.
name|put
argument_list|(
literal|"changeKey"
argument_list|,
name|map
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"assignee-changed"
argument_list|)
operator|.
name|put
argument_list|(
literal|"eventCreatedOn"
argument_list|,
name|TS2
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeDeletedEvent ()
specifier|public
name|void
name|changeDeletedEvent
parameter_list|()
block|{
name|Change
name|change
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeDeletedEvent
name|event
init|=
operator|new
name|ChangeDeletedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|event
operator|.
name|deleter
operator|=
name|newAccount
argument_list|(
literal|"deleter"
argument_list|)
expr_stmt|;
name|assertThatJsonMap
argument_list|(
name|event
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"deleter"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|event
operator|.
name|deleter
operator|.
name|get
argument_list|()
operator|.
name|name
argument_list|)
operator|.
name|put
argument_list|(
literal|"email"
argument_list|,
name|event
operator|.
name|deleter
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|put
argument_list|(
literal|"username"
argument_list|,
name|event
operator|.
name|deleter
operator|.
name|get
argument_list|()
operator|.
name|username
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"change"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"branch"
argument_list|,
name|BRANCH
argument_list|)
operator|.
name|put
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
operator|.
name|put
argument_list|(
literal|"number"
argument_list|,
name|CHANGE_NUM_DOUBLE
argument_list|)
operator|.
name|put
argument_list|(
literal|"url"
argument_list|,
name|URL
argument_list|)
operator|.
name|put
argument_list|(
literal|"commitMessage"
argument_list|,
name|COMMIT_MESSAGE
argument_list|)
operator|.
name|put
argument_list|(
literal|"createdOn"
argument_list|,
name|TS1
argument_list|)
operator|.
name|put
argument_list|(
literal|"status"
argument_list|,
name|NEW
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"refName"
argument_list|,
name|REF
argument_list|)
operator|.
name|put
argument_list|(
literal|"changeKey"
argument_list|,
name|map
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"change-deleted"
argument_list|)
operator|.
name|put
argument_list|(
literal|"eventCreatedOn"
argument_list|,
name|TS2
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|hashtagsChangedEvent ()
specifier|public
name|void
name|hashtagsChangedEvent
parameter_list|()
block|{
name|Change
name|change
init|=
name|newChange
argument_list|()
decl_stmt|;
name|HashtagsChangedEvent
name|event
init|=
operator|new
name|HashtagsChangedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|event
operator|.
name|editor
operator|=
name|newAccount
argument_list|(
literal|"editor"
argument_list|)
expr_stmt|;
name|event
operator|.
name|added
operator|=
operator|new
name|String
index|[]
block|{
literal|"added"
block|}
expr_stmt|;
name|event
operator|.
name|removed
operator|=
operator|new
name|String
index|[]
block|{
literal|"removed"
block|}
expr_stmt|;
name|event
operator|.
name|hashtags
operator|=
operator|new
name|String
index|[]
block|{
literal|"hashtags"
block|}
expr_stmt|;
name|assertThatJsonMap
argument_list|(
name|event
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"editor"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|event
operator|.
name|editor
operator|.
name|get
argument_list|()
operator|.
name|name
argument_list|)
operator|.
name|put
argument_list|(
literal|"email"
argument_list|,
name|event
operator|.
name|editor
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|put
argument_list|(
literal|"username"
argument_list|,
name|event
operator|.
name|editor
operator|.
name|get
argument_list|()
operator|.
name|username
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"added"
argument_list|,
name|list
argument_list|(
literal|"added"
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"removed"
argument_list|,
name|list
argument_list|(
literal|"removed"
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"hashtags"
argument_list|,
name|list
argument_list|(
literal|"hashtags"
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"change"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"branch"
argument_list|,
name|BRANCH
argument_list|)
operator|.
name|put
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
operator|.
name|put
argument_list|(
literal|"number"
argument_list|,
name|CHANGE_NUM_DOUBLE
argument_list|)
operator|.
name|put
argument_list|(
literal|"url"
argument_list|,
name|URL
argument_list|)
operator|.
name|put
argument_list|(
literal|"commitMessage"
argument_list|,
name|COMMIT_MESSAGE
argument_list|)
operator|.
name|put
argument_list|(
literal|"createdOn"
argument_list|,
name|TS1
argument_list|)
operator|.
name|put
argument_list|(
literal|"status"
argument_list|,
name|NEW
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"refName"
argument_list|,
name|REF
argument_list|)
operator|.
name|put
argument_list|(
literal|"changeKey"
argument_list|,
name|map
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"hashtags-changed"
argument_list|)
operator|.
name|put
argument_list|(
literal|"eventCreatedOn"
argument_list|,
name|TS2
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeAbandonedEvent ()
specifier|public
name|void
name|changeAbandonedEvent
parameter_list|()
block|{
name|Change
name|change
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeAbandonedEvent
name|event
init|=
operator|new
name|ChangeAbandonedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|event
operator|.
name|abandoner
operator|=
name|newAccount
argument_list|(
literal|"abandoner"
argument_list|)
expr_stmt|;
name|event
operator|.
name|reason
operator|=
literal|"some reason"
expr_stmt|;
name|assertThatJsonMap
argument_list|(
name|event
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"abandoner"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"name"
argument_list|,
name|event
operator|.
name|abandoner
operator|.
name|get
argument_list|()
operator|.
name|name
argument_list|)
operator|.
name|put
argument_list|(
literal|"email"
argument_list|,
name|event
operator|.
name|abandoner
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|put
argument_list|(
literal|"username"
argument_list|,
name|event
operator|.
name|abandoner
operator|.
name|get
argument_list|()
operator|.
name|username
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"reason"
argument_list|,
literal|"some reason"
argument_list|)
operator|.
name|put
argument_list|(
literal|"change"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"branch"
argument_list|,
name|BRANCH
argument_list|)
operator|.
name|put
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
operator|.
name|put
argument_list|(
literal|"number"
argument_list|,
name|CHANGE_NUM_DOUBLE
argument_list|)
operator|.
name|put
argument_list|(
literal|"url"
argument_list|,
name|URL
argument_list|)
operator|.
name|put
argument_list|(
literal|"commitMessage"
argument_list|,
name|COMMIT_MESSAGE
argument_list|)
operator|.
name|put
argument_list|(
literal|"createdOn"
argument_list|,
name|TS1
argument_list|)
operator|.
name|put
argument_list|(
literal|"status"
argument_list|,
name|NEW
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"refName"
argument_list|,
name|REF
argument_list|)
operator|.
name|put
argument_list|(
literal|"changeKey"
argument_list|,
name|map
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"change-abandoned"
argument_list|)
operator|.
name|put
argument_list|(
literal|"eventCreatedOn"
argument_list|,
name|TS2
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeMergedEvent ()
specifier|public
name|void
name|changeMergedEvent
parameter_list|()
block|{
name|Change
name|change
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeMergedEvent
name|event
init|=
operator|new
name|ChangeMergedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|assertThatJsonMap
argument_list|(
name|event
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"change"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"branch"
argument_list|,
name|BRANCH
argument_list|)
operator|.
name|put
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
operator|.
name|put
argument_list|(
literal|"number"
argument_list|,
name|CHANGE_NUM_DOUBLE
argument_list|)
operator|.
name|put
argument_list|(
literal|"url"
argument_list|,
name|URL
argument_list|)
operator|.
name|put
argument_list|(
literal|"commitMessage"
argument_list|,
name|COMMIT_MESSAGE
argument_list|)
operator|.
name|put
argument_list|(
literal|"createdOn"
argument_list|,
name|TS1
argument_list|)
operator|.
name|put
argument_list|(
literal|"status"
argument_list|,
name|NEW
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"refName"
argument_list|,
name|REF
argument_list|)
operator|.
name|put
argument_list|(
literal|"changeKey"
argument_list|,
name|map
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"change-merged"
argument_list|)
operator|.
name|put
argument_list|(
literal|"eventCreatedOn"
argument_list|,
name|TS2
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeRestoredEvent ()
specifier|public
name|void
name|changeRestoredEvent
parameter_list|()
block|{
name|Change
name|change
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeRestoredEvent
name|event
init|=
operator|new
name|ChangeRestoredEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|assertThatJsonMap
argument_list|(
name|event
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"change"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"branch"
argument_list|,
name|BRANCH
argument_list|)
operator|.
name|put
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
operator|.
name|put
argument_list|(
literal|"number"
argument_list|,
name|CHANGE_NUM_DOUBLE
argument_list|)
operator|.
name|put
argument_list|(
literal|"url"
argument_list|,
name|URL
argument_list|)
operator|.
name|put
argument_list|(
literal|"commitMessage"
argument_list|,
name|COMMIT_MESSAGE
argument_list|)
operator|.
name|put
argument_list|(
literal|"createdOn"
argument_list|,
name|TS1
argument_list|)
operator|.
name|put
argument_list|(
literal|"status"
argument_list|,
name|NEW
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"refName"
argument_list|,
name|REF
argument_list|)
operator|.
name|put
argument_list|(
literal|"changeKey"
argument_list|,
name|map
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"change-restored"
argument_list|)
operator|.
name|put
argument_list|(
literal|"eventCreatedOn"
argument_list|,
name|TS2
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentAddedEvent ()
specifier|public
name|void
name|commentAddedEvent
parameter_list|()
block|{
name|Change
name|change
init|=
name|newChange
argument_list|()
decl_stmt|;
name|CommentAddedEvent
name|event
init|=
operator|new
name|CommentAddedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|assertThatJsonMap
argument_list|(
name|event
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"change"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"branch"
argument_list|,
name|BRANCH
argument_list|)
operator|.
name|put
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
operator|.
name|put
argument_list|(
literal|"number"
argument_list|,
name|CHANGE_NUM_DOUBLE
argument_list|)
operator|.
name|put
argument_list|(
literal|"url"
argument_list|,
name|URL
argument_list|)
operator|.
name|put
argument_list|(
literal|"commitMessage"
argument_list|,
name|COMMIT_MESSAGE
argument_list|)
operator|.
name|put
argument_list|(
literal|"createdOn"
argument_list|,
name|TS1
argument_list|)
operator|.
name|put
argument_list|(
literal|"status"
argument_list|,
name|NEW
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"refName"
argument_list|,
name|REF
argument_list|)
operator|.
name|put
argument_list|(
literal|"changeKey"
argument_list|,
name|map
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"comment-added"
argument_list|)
operator|.
name|put
argument_list|(
literal|"eventCreatedOn"
argument_list|,
name|TS2
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|privateStateChangedEvent ()
specifier|public
name|void
name|privateStateChangedEvent
parameter_list|()
block|{
name|Change
name|change
init|=
name|newChange
argument_list|()
decl_stmt|;
name|PrivateStateChangedEvent
name|event
init|=
operator|new
name|PrivateStateChangedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|assertThatJsonMap
argument_list|(
name|event
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"change"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"branch"
argument_list|,
name|BRANCH
argument_list|)
operator|.
name|put
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
operator|.
name|put
argument_list|(
literal|"number"
argument_list|,
name|CHANGE_NUM_DOUBLE
argument_list|)
operator|.
name|put
argument_list|(
literal|"url"
argument_list|,
name|URL
argument_list|)
operator|.
name|put
argument_list|(
literal|"commitMessage"
argument_list|,
name|COMMIT_MESSAGE
argument_list|)
operator|.
name|put
argument_list|(
literal|"createdOn"
argument_list|,
name|TS1
argument_list|)
operator|.
name|put
argument_list|(
literal|"status"
argument_list|,
name|NEW
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"refName"
argument_list|,
name|REF
argument_list|)
operator|.
name|put
argument_list|(
literal|"changeKey"
argument_list|,
name|map
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"private-state-changed"
argument_list|)
operator|.
name|put
argument_list|(
literal|"eventCreatedOn"
argument_list|,
name|TS2
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|reviewerAddedEvent ()
specifier|public
name|void
name|reviewerAddedEvent
parameter_list|()
block|{
name|Change
name|change
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ReviewerAddedEvent
name|event
init|=
operator|new
name|ReviewerAddedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|assertThatJsonMap
argument_list|(
name|event
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"change"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"branch"
argument_list|,
name|BRANCH
argument_list|)
operator|.
name|put
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
operator|.
name|put
argument_list|(
literal|"number"
argument_list|,
name|CHANGE_NUM_DOUBLE
argument_list|)
operator|.
name|put
argument_list|(
literal|"url"
argument_list|,
name|URL
argument_list|)
operator|.
name|put
argument_list|(
literal|"commitMessage"
argument_list|,
name|COMMIT_MESSAGE
argument_list|)
operator|.
name|put
argument_list|(
literal|"createdOn"
argument_list|,
name|TS1
argument_list|)
operator|.
name|put
argument_list|(
literal|"status"
argument_list|,
name|NEW
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"refName"
argument_list|,
name|REF
argument_list|)
operator|.
name|put
argument_list|(
literal|"changeKey"
argument_list|,
name|map
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"reviewer-added"
argument_list|)
operator|.
name|put
argument_list|(
literal|"eventCreatedOn"
argument_list|,
name|TS2
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|reviewerDeletedEvent ()
specifier|public
name|void
name|reviewerDeletedEvent
parameter_list|()
block|{
name|Change
name|change
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ReviewerDeletedEvent
name|event
init|=
operator|new
name|ReviewerDeletedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|assertThatJsonMap
argument_list|(
name|event
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"change"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"branch"
argument_list|,
name|BRANCH
argument_list|)
operator|.
name|put
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
operator|.
name|put
argument_list|(
literal|"number"
argument_list|,
name|CHANGE_NUM_DOUBLE
argument_list|)
operator|.
name|put
argument_list|(
literal|"url"
argument_list|,
name|URL
argument_list|)
operator|.
name|put
argument_list|(
literal|"commitMessage"
argument_list|,
name|COMMIT_MESSAGE
argument_list|)
operator|.
name|put
argument_list|(
literal|"createdOn"
argument_list|,
name|TS1
argument_list|)
operator|.
name|put
argument_list|(
literal|"status"
argument_list|,
name|NEW
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"refName"
argument_list|,
name|REF
argument_list|)
operator|.
name|put
argument_list|(
literal|"changeKey"
argument_list|,
name|map
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"reviewer-deleted"
argument_list|)
operator|.
name|put
argument_list|(
literal|"eventCreatedOn"
argument_list|,
name|TS2
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteDeletedEvent ()
specifier|public
name|void
name|voteDeletedEvent
parameter_list|()
block|{
name|Change
name|change
init|=
name|newChange
argument_list|()
decl_stmt|;
name|VoteDeletedEvent
name|event
init|=
operator|new
name|VoteDeletedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|assertThatJsonMap
argument_list|(
name|event
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"change"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"branch"
argument_list|,
name|BRANCH
argument_list|)
operator|.
name|put
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
operator|.
name|put
argument_list|(
literal|"number"
argument_list|,
name|CHANGE_NUM_DOUBLE
argument_list|)
operator|.
name|put
argument_list|(
literal|"url"
argument_list|,
name|URL
argument_list|)
operator|.
name|put
argument_list|(
literal|"commitMessage"
argument_list|,
name|COMMIT_MESSAGE
argument_list|)
operator|.
name|put
argument_list|(
literal|"createdOn"
argument_list|,
name|TS1
argument_list|)
operator|.
name|put
argument_list|(
literal|"status"
argument_list|,
name|NEW
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"refName"
argument_list|,
name|REF
argument_list|)
operator|.
name|put
argument_list|(
literal|"changeKey"
argument_list|,
name|map
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"vote-deleted"
argument_list|)
operator|.
name|put
argument_list|(
literal|"eventCreatedOn"
argument_list|,
name|TS2
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|workInProgressStateChangedEvent ()
specifier|public
name|void
name|workInProgressStateChangedEvent
parameter_list|()
block|{
name|Change
name|change
init|=
name|newChange
argument_list|()
decl_stmt|;
name|WorkInProgressStateChangedEvent
name|event
init|=
operator|new
name|WorkInProgressStateChangedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|assertThatJsonMap
argument_list|(
name|event
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"change"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"branch"
argument_list|,
name|BRANCH
argument_list|)
operator|.
name|put
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
operator|.
name|put
argument_list|(
literal|"number"
argument_list|,
name|CHANGE_NUM_DOUBLE
argument_list|)
operator|.
name|put
argument_list|(
literal|"url"
argument_list|,
name|URL
argument_list|)
operator|.
name|put
argument_list|(
literal|"commitMessage"
argument_list|,
name|COMMIT_MESSAGE
argument_list|)
operator|.
name|put
argument_list|(
literal|"createdOn"
argument_list|,
name|TS1
argument_list|)
operator|.
name|put
argument_list|(
literal|"status"
argument_list|,
name|NEW
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"refName"
argument_list|,
name|REF
argument_list|)
operator|.
name|put
argument_list|(
literal|"changeKey"
argument_list|,
name|map
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"wip-state-changed"
argument_list|)
operator|.
name|put
argument_list|(
literal|"eventCreatedOn"
argument_list|,
name|TS2
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|topicChangedEvent ()
specifier|public
name|void
name|topicChangedEvent
parameter_list|()
block|{
name|Change
name|change
init|=
name|newChange
argument_list|()
decl_stmt|;
name|TopicChangedEvent
name|event
init|=
operator|new
name|TopicChangedEvent
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|assertThatJsonMap
argument_list|(
name|event
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"change"
argument_list|,
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"branch"
argument_list|,
name|BRANCH
argument_list|)
operator|.
name|put
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
operator|.
name|put
argument_list|(
literal|"number"
argument_list|,
name|CHANGE_NUM_DOUBLE
argument_list|)
operator|.
name|put
argument_list|(
literal|"url"
argument_list|,
name|URL
argument_list|)
operator|.
name|put
argument_list|(
literal|"commitMessage"
argument_list|,
name|COMMIT_MESSAGE
argument_list|)
operator|.
name|put
argument_list|(
literal|"createdOn"
argument_list|,
name|TS1
argument_list|)
operator|.
name|put
argument_list|(
literal|"status"
argument_list|,
name|NEW
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
literal|"project"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"refName"
argument_list|,
name|REF
argument_list|)
operator|.
name|put
argument_list|(
literal|"changeKey"
argument_list|,
name|map
argument_list|(
literal|"id"
argument_list|,
name|CHANGE_ID
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"topic-changed"
argument_list|)
operator|.
name|put
argument_list|(
literal|"eventCreatedOn"
argument_list|,
name|TS2
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|projectCreatedEvent ()
specifier|public
name|void
name|projectCreatedEvent
parameter_list|()
block|{
name|ProjectCreatedEvent
name|event
init|=
operator|new
name|ProjectCreatedEvent
argument_list|()
decl_stmt|;
name|event
operator|.
name|projectName
operator|=
name|PROJECT
expr_stmt|;
name|event
operator|.
name|headName
operator|=
name|REF
expr_stmt|;
name|assertThatJsonMap
argument_list|(
name|event
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|builder
argument_list|()
operator|.
name|put
argument_list|(
literal|"projectName"
argument_list|,
name|PROJECT
argument_list|)
operator|.
name|put
argument_list|(
literal|"headName"
argument_list|,
name|REF
argument_list|)
operator|.
name|put
argument_list|(
literal|"type"
argument_list|,
literal|"project-created"
argument_list|)
operator|.
name|put
argument_list|(
literal|"eventCreatedOn"
argument_list|,
name|TS1
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|newAccount (String name)
specifier|private
name|Supplier
argument_list|<
name|AccountAttribute
argument_list|>
name|newAccount
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|AccountAttribute
name|account
init|=
operator|new
name|AccountAttribute
argument_list|()
decl_stmt|;
name|account
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|account
operator|.
name|email
operator|=
name|name
operator|+
literal|"@somewhere.com"
expr_stmt|;
name|account
operator|.
name|username
operator|=
name|name
expr_stmt|;
return|return
name|Suppliers
operator|.
name|ofInstance
argument_list|(
name|account
argument_list|)
return|;
block|}
DECL|method|newChange ()
specifier|private
name|Change
name|newChange
parameter_list|()
block|{
return|return
operator|new
name|Change
argument_list|(
name|Change
operator|.
name|key
argument_list|(
name|CHANGE_ID
argument_list|)
argument_list|,
name|Change
operator|.
name|id
argument_list|(
name|CHANGE_NUM
argument_list|)
argument_list|,
name|Account
operator|.
name|id
argument_list|(
literal|9999
argument_list|)
argument_list|,
name|BranchNameKey
operator|.
name|create
argument_list|(
name|Project
operator|.
name|nameKey
argument_list|(
name|PROJECT
argument_list|)
argument_list|,
name|BRANCH
argument_list|)
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|)
return|;
block|}
DECL|method|createSupplier (T value)
specifier|private
parameter_list|<
name|T
parameter_list|>
name|Supplier
argument_list|<
name|T
argument_list|>
name|createSupplier
parameter_list|(
name|T
name|value
parameter_list|)
block|{
return|return
name|Suppliers
operator|.
name|memoize
argument_list|(
parameter_list|()
lambda|->
name|value
argument_list|)
return|;
block|}
DECL|method|asChangeAttribute (Change change)
specifier|private
name|Supplier
argument_list|<
name|ChangeAttribute
argument_list|>
name|asChangeAttribute
parameter_list|(
name|Change
name|change
parameter_list|)
block|{
name|ChangeAttribute
name|a
init|=
operator|new
name|ChangeAttribute
argument_list|()
decl_stmt|;
name|a
operator|.
name|project
operator|=
name|change
operator|.
name|getProject
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|a
operator|.
name|branch
operator|=
name|change
operator|.
name|getDest
argument_list|()
operator|.
name|shortName
argument_list|()
expr_stmt|;
name|a
operator|.
name|topic
operator|=
name|change
operator|.
name|getTopic
argument_list|()
expr_stmt|;
name|a
operator|.
name|id
operator|=
name|change
operator|.
name|getKey
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|a
operator|.
name|number
operator|=
name|change
operator|.
name|getId
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|a
operator|.
name|subject
operator|=
name|change
operator|.
name|getSubject
argument_list|()
expr_stmt|;
name|a
operator|.
name|commitMessage
operator|=
name|COMMIT_MESSAGE
expr_stmt|;
name|a
operator|.
name|url
operator|=
name|URL
expr_stmt|;
name|a
operator|.
name|status
operator|=
name|change
operator|.
name|getStatus
argument_list|()
expr_stmt|;
name|a
operator|.
name|createdOn
operator|=
name|change
operator|.
name|getCreatedOn
argument_list|()
operator|.
name|getTime
argument_list|()
operator|/
literal|1000L
expr_stmt|;
name|a
operator|.
name|wip
operator|=
name|change
operator|.
name|isWorkInProgress
argument_list|()
condition|?
literal|true
else|:
literal|null
expr_stmt|;
name|a
operator|.
name|isPrivate
operator|=
name|change
operator|.
name|isPrivate
argument_list|()
condition|?
literal|true
else|:
literal|null
expr_stmt|;
return|return
name|Suppliers
operator|.
name|ofInstance
argument_list|(
name|a
argument_list|)
return|;
block|}
DECL|method|assertThatJsonMap (Object src)
specifier|private
name|MapSubject
name|assertThatJsonMap
parameter_list|(
name|Object
name|src
parameter_list|)
block|{
comment|// Parse JSON into a raw Java map:
comment|//  * Doesn't depend on field iteration order.
comment|//  * Avoids excessively long string literals in asserts.
name|String
name|json
init|=
name|serializeGson
operator|.
name|toJson
argument_list|(
name|src
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|map
init|=
name|deserializeGson
operator|.
name|fromJson
argument_list|(
name|json
argument_list|,
operator|new
name|TypeToken
argument_list|<
name|Map
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
argument_list|>
argument_list|()
block|{}
operator|.
name|getType
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|assertThat
argument_list|(
name|map
argument_list|)
return|;
block|}
DECL|method|map (Object k, Object v)
specifier|private
specifier|static
name|ImmutableMap
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|map
parameter_list|(
name|Object
name|k
parameter_list|,
name|Object
name|v
parameter_list|)
block|{
return|return
name|ImmutableMap
operator|.
name|of
argument_list|(
name|k
argument_list|,
name|v
argument_list|)
return|;
block|}
DECL|method|list (Object... es)
specifier|private
specifier|static
name|ImmutableList
argument_list|<
name|Object
argument_list|>
name|list
parameter_list|(
name|Object
modifier|...
name|es
parameter_list|)
block|{
return|return
name|ImmutableList
operator|.
name|copyOf
argument_list|(
name|es
argument_list|)
return|;
block|}
block|}
end_class

end_unit

