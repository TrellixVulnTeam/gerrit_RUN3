begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|com.google.gerrit.server.schema
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|schema
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assert_
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|RefNames
operator|.
name|REFS_VERSION
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AllProjectsName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|GitRepositoryManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testing
operator|.
name|GerritBaseTests
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testing
operator|.
name|InMemoryRepositoryManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|junit
operator|.
name|TestRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|NoteDbSchemaVersionManagerTest
specifier|public
class|class
name|NoteDbSchemaVersionManagerTest
extends|extends
name|GerritBaseTests
block|{
DECL|field|manager
specifier|private
name|NoteDbSchemaVersionManager
name|manager
decl_stmt|;
DECL|field|tr
specifier|private
name|TestRepository
argument_list|<
name|?
argument_list|>
name|tr
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|AllProjectsName
name|allProjectsName
init|=
operator|new
name|AllProjectsName
argument_list|(
literal|"The-Projects"
argument_list|)
decl_stmt|;
name|GitRepositoryManager
name|repoManager
init|=
operator|new
name|InMemoryRepositoryManager
argument_list|()
decl_stmt|;
name|tr
operator|=
operator|new
name|TestRepository
argument_list|<>
argument_list|(
name|repoManager
operator|.
name|createRepository
argument_list|(
name|allProjectsName
argument_list|)
argument_list|)
expr_stmt|;
name|manager
operator|=
operator|new
name|NoteDbSchemaVersionManager
argument_list|(
name|allProjectsName
argument_list|,
name|repoManager
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|readMissing ()
specifier|public
name|void
name|readMissing
parameter_list|()
throws|throws
name|Exception
block|{
name|assertThat
argument_list|(
name|manager
operator|.
name|read
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|read ()
specifier|public
name|void
name|read
parameter_list|()
throws|throws
name|Exception
block|{
name|tr
operator|.
name|update
argument_list|(
name|REFS_VERSION
argument_list|,
name|tr
operator|.
name|blob
argument_list|(
literal|"123"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|manager
operator|.
name|read
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|123
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|readInvalid ()
specifier|public
name|void
name|readInvalid
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectId
name|blobId
init|=
name|tr
operator|.
name|blob
argument_list|(
literal|" 1 2 3 "
argument_list|)
decl_stmt|;
name|tr
operator|.
name|update
argument_list|(
name|REFS_VERSION
argument_list|,
name|blobId
argument_list|)
expr_stmt|;
try|try
block|{
name|manager
operator|.
name|read
argument_list|()
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|fail
argument_list|(
literal|"expected OrmException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OrmException
name|e
parameter_list|)
block|{
name|assertThat
argument_list|(
name|e
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|isEqualTo
argument_list|(
literal|"invalid value in refs/meta/version blob at "
operator|+
name|blobId
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|incrementFromMissing ()
specifier|public
name|void
name|incrementFromMissing
parameter_list|()
throws|throws
name|Exception
block|{
name|manager
operator|.
name|increment
argument_list|(
literal|123
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|manager
operator|.
name|read
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|124
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|increment ()
specifier|public
name|void
name|increment
parameter_list|()
throws|throws
name|Exception
block|{
name|tr
operator|.
name|update
argument_list|(
name|REFS_VERSION
argument_list|,
name|tr
operator|.
name|blob
argument_list|(
literal|"123"
argument_list|)
argument_list|)
expr_stmt|;
name|manager
operator|.
name|increment
argument_list|(
literal|123
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|manager
operator|.
name|read
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|124
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|incrementWrongOldVersion ()
specifier|public
name|void
name|incrementWrongOldVersion
parameter_list|()
throws|throws
name|Exception
block|{
name|tr
operator|.
name|update
argument_list|(
name|REFS_VERSION
argument_list|,
name|tr
operator|.
name|blob
argument_list|(
literal|"123"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|manager
operator|.
name|increment
argument_list|(
literal|456
argument_list|)
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|fail
argument_list|(
literal|"expected OrmException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OrmException
name|e
parameter_list|)
block|{
name|assertThat
argument_list|(
name|e
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|isEqualTo
argument_list|(
literal|"Expected old version 456 for refs/meta/version, found 123"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

