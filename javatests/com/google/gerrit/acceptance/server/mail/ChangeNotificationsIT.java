begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.server.mail
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|server
operator|.
name|mail
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|NotifyHandling
operator|.
name|ALL
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|NotifyHandling
operator|.
name|NONE
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|NotifyHandling
operator|.
name|OWNER
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|NotifyHandling
operator|.
name|OWNER_REVIEWERS
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|GeneralPreferencesInfo
operator|.
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|GeneralPreferencesInfo
operator|.
name|EmailStrategy
operator|.
name|ENABLED
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|ProjectWatches
operator|.
name|NotifyType
operator|.
name|ABANDONED_CHANGES
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|ProjectWatches
operator|.
name|NotifyType
operator|.
name|ALL_COMMENTS
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|ProjectWatches
operator|.
name|NotifyType
operator|.
name|NEW_CHANGES
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|ProjectWatches
operator|.
name|NotifyType
operator|.
name|NEW_PATCHSETS
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|ProjectWatches
operator|.
name|NotifyType
operator|.
name|SUBMITTED_CHANGES
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|SystemGroupBackend
operator|.
name|REGISTERED_USERS
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractNotificationTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|TestAccount
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|testsuite
operator|.
name|request
operator|.
name|RequestScopeOperations
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|AbandonInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|AddReviewerInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|AssigneeInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|DeleteReviewerInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|DeleteVoteInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|NotifyHandling
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|SubmitInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|ConfigInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|GeneralPreferencesInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|GeneralPreferencesInfo
operator|.
name|EmailStrategy
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|InheritableBoolean
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|ReviewerState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|SubmitType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|CommitMessageInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ProjectConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|testing
operator|.
name|Util
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|change
operator|.
name|PostReview
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|junit
operator|.
name|TestRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|ChangeNotificationsIT
specifier|public
class|class
name|ChangeNotificationsIT
extends|extends
name|AbstractNotificationTest
block|{
DECL|field|requestScopeOperations
annotation|@
name|Inject
specifier|private
name|RequestScopeOperations
name|requestScopeOperations
decl_stmt|;
comment|/*    * Set up for extra standard test accounts and permissions.    */
DECL|field|other
specifier|private
name|TestAccount
name|other
decl_stmt|;
DECL|field|extraReviewer
specifier|private
name|TestAccount
name|extraReviewer
decl_stmt|;
DECL|field|extraCcer
specifier|private
name|TestAccount
name|extraCcer
decl_stmt|;
annotation|@
name|Before
DECL|method|createExtraAccounts ()
specifier|public
name|void
name|createExtraAccounts
parameter_list|()
throws|throws
name|Exception
block|{
name|extraReviewer
operator|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"extraReviewer"
argument_list|,
literal|"extraReviewer@example.com"
argument_list|,
literal|"extraReviewer"
argument_list|)
expr_stmt|;
name|extraCcer
operator|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"extraCcer"
argument_list|,
literal|"extraCcer@example.com"
argument_list|,
literal|"extraCcer"
argument_list|)
expr_stmt|;
name|other
operator|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"other"
argument_list|,
literal|"other@example.com"
argument_list|,
literal|"other"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
DECL|method|grantPermissions ()
specifier|public
name|void
name|grantPermissions
parameter_list|()
throws|throws
name|Exception
block|{
try|try
init|(
name|ProjectConfigUpdate
name|u
init|=
name|updateProject
argument_list|(
name|project
argument_list|)
init|)
block|{
name|ProjectConfig
name|cfg
init|=
name|u
operator|.
name|getConfig
argument_list|()
decl_stmt|;
name|Util
operator|.
name|allow
argument_list|(
name|cfg
argument_list|,
name|Permission
operator|.
name|FORGE_COMMITTER
argument_list|,
name|REGISTERED_USERS
argument_list|,
literal|"refs/*"
argument_list|)
expr_stmt|;
name|Util
operator|.
name|allow
argument_list|(
name|cfg
argument_list|,
name|Permission
operator|.
name|SUBMIT
argument_list|,
name|REGISTERED_USERS
argument_list|,
literal|"refs/*"
argument_list|)
expr_stmt|;
name|Util
operator|.
name|allow
argument_list|(
name|cfg
argument_list|,
name|Permission
operator|.
name|ABANDON
argument_list|,
name|REGISTERED_USERS
argument_list|,
literal|"refs/*"
argument_list|)
expr_stmt|;
name|Util
operator|.
name|allow
argument_list|(
name|cfg
argument_list|,
name|Permission
operator|.
name|forLabel
argument_list|(
literal|"Code-Review"
argument_list|)
argument_list|,
operator|-
literal|2
argument_list|,
operator|+
literal|2
argument_list|,
name|REGISTERED_USERS
argument_list|,
literal|"refs/*"
argument_list|)
expr_stmt|;
name|u
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
block|}
comment|/*    * AbandonedSender tests.    */
annotation|@
name|Test
DECL|method|abandonReviewableChangeByOwner ()
specifier|public
name|void
name|abandonReviewableChangeByOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"abandon"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ABANDONED_CHANGES
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeByOwnerCcingSelf ()
specifier|public
name|void
name|abandonReviewableChangeByOwnerCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"abandon"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ABANDONED_CHANGES
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeByOther ()
specifier|public
name|void
name|abandonReviewableChangeByOther
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|other
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"other"
argument_list|,
literal|"other@example.com"
argument_list|,
literal|"other"
argument_list|)
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|other
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"abandon"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ABANDONED_CHANGES
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeByOtherCcingSelf ()
specifier|public
name|void
name|abandonReviewableChangeByOtherCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|other
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"other"
argument_list|,
literal|"other@example.com"
argument_list|,
literal|"other"
argument_list|)
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|other
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"abandon"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|other
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ABANDONED_CHANGES
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeNotifyOwnersReviewers ()
specifier|public
name|void
name|abandonReviewableChangeNotifyOwnersReviewers
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|OWNER_REVIEWERS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"abandon"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeNotifyOwner ()
specifier|public
name|void
name|abandonReviewableChangeNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|OWNER
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeNotifyOwnerCcingSelf ()
specifier|public
name|void
name|abandonReviewableChangeNotifyOwnerCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|,
name|OWNER
argument_list|)
expr_stmt|;
comment|// Self-CC applies *after* need for sending notification is determined.
comment|// Since there are no recipients before including the user taking action,
comment|// there should no notification sent.
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeByOtherCcingSelfNotifyOwner ()
specifier|public
name|void
name|abandonReviewableChangeByOtherCcingSelfNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|other
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"other"
argument_list|,
literal|"other@example.com"
argument_list|,
literal|"other"
argument_list|)
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|other
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|,
name|OWNER
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"abandon"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|other
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeNotifyNone ()
specifier|public
name|void
name|abandonReviewableChangeNotifyNone
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|NONE
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeNotifyNoneCcingSelf ()
specifier|public
name|void
name|abandonReviewableChangeNotifyNoneCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|,
name|NONE
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableWipChange ()
specifier|public
name|void
name|abandonReviewableWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableWipChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"abandon"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ABANDONED_CHANGES
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonWipChange ()
specifier|public
name|void
name|abandonWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonWipChangeNotifyAll ()
specifier|public
name|void
name|abandonWipChangeNotifyAll
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"abandon"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ABANDONED_CHANGES
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
DECL|method|abandon (String changeId, TestAccount by)
specifier|private
name|void
name|abandon
parameter_list|(
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|)
throws|throws
name|Exception
block|{
name|abandon
argument_list|(
name|changeId
argument_list|,
name|by
argument_list|,
name|ENABLED
argument_list|)
expr_stmt|;
block|}
DECL|method|abandon (String changeId, TestAccount by, EmailStrategy emailStrategy)
specifier|private
name|void
name|abandon
parameter_list|(
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|EmailStrategy
name|emailStrategy
parameter_list|)
throws|throws
name|Exception
block|{
name|abandon
argument_list|(
name|changeId
argument_list|,
name|by
argument_list|,
name|emailStrategy
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|abandon (String changeId, TestAccount by, @Nullable NotifyHandling notify)
specifier|private
name|void
name|abandon
parameter_list|(
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|,
annotation|@
name|Nullable
name|NotifyHandling
name|notify
parameter_list|)
throws|throws
name|Exception
block|{
name|abandon
argument_list|(
name|changeId
argument_list|,
name|by
argument_list|,
name|ENABLED
argument_list|,
name|notify
argument_list|)
expr_stmt|;
block|}
DECL|method|abandon ( String changeId, TestAccount by, EmailStrategy emailStrategy, @Nullable NotifyHandling notify)
specifier|private
name|void
name|abandon
parameter_list|(
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|EmailStrategy
name|emailStrategy
parameter_list|,
annotation|@
name|Nullable
name|NotifyHandling
name|notify
parameter_list|)
throws|throws
name|Exception
block|{
name|setEmailStrategy
argument_list|(
name|by
argument_list|,
name|emailStrategy
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|by
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|AbandonInput
name|in
init|=
operator|new
name|AbandonInput
argument_list|()
decl_stmt|;
if|if
condition|(
name|notify
operator|!=
literal|null
condition|)
block|{
name|in
operator|.
name|notify
operator|=
name|notify
expr_stmt|;
block|}
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|abandon
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
comment|/*    * AddReviewerSender tests.    */
DECL|method|addReviewerToReviewableChange (Adder adder)
specifier|private
name|void
name|addReviewerToReviewableChange
parameter_list|(
name|Adder
name|adder
parameter_list|)
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|)
expr_stmt|;
comment|// TODO(logan): Should CCs be included?
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeSingly ()
specifier|public
name|void
name|addReviewerToReviewableChangeSingly
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToReviewableChange
argument_list|(
name|singly
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeBatch ()
specifier|public
name|void
name|addReviewerToReviewableChangeBatch
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToReviewableChange
argument_list|(
name|batch
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|addReviewerToReviewableChangeByOwnerCcingSelf (Adder adder)
specifier|private
name|void
name|addReviewerToReviewableChangeByOwnerCcingSelf
parameter_list|(
name|Adder
name|adder
parameter_list|)
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// TODO(logan): Should CCs be included?
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeByOwnerCcingSelfSingly ()
specifier|public
name|void
name|addReviewerToReviewableChangeByOwnerCcingSelfSingly
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToReviewableChangeByOwnerCcingSelf
argument_list|(
name|singly
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeByOwnerCcingSelfBatch ()
specifier|public
name|void
name|addReviewerToReviewableChangeByOwnerCcingSelfBatch
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToReviewableChangeByOwnerCcingSelf
argument_list|(
name|batch
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|addReviewerToReviewableChangeByOther (Adder adder)
specifier|private
name|void
name|addReviewerToReviewableChangeByOther
parameter_list|(
name|Adder
name|adder
parameter_list|)
throws|throws
name|Exception
block|{
name|TestAccount
name|other
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"other"
argument_list|,
literal|"other@example.com"
argument_list|,
literal|"other"
argument_list|)
decl_stmt|;
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|other
argument_list|,
name|reviewer
operator|.
name|email
argument_list|)
expr_stmt|;
comment|// TODO(logan): Should CCs be included?
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeByOtherSingly ()
specifier|public
name|void
name|addReviewerToReviewableChangeByOtherSingly
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToReviewableChangeByOther
argument_list|(
name|singly
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeByOtherBatch ()
specifier|public
name|void
name|addReviewerToReviewableChangeByOtherBatch
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToReviewableChangeByOther
argument_list|(
name|batch
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|addReviewerToReviewableChangeByOtherCcingSelf (Adder adder)
specifier|private
name|void
name|addReviewerToReviewableChangeByOtherCcingSelf
parameter_list|(
name|Adder
name|adder
parameter_list|)
throws|throws
name|Exception
block|{
name|TestAccount
name|other
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"other"
argument_list|,
literal|"other@example.com"
argument_list|,
literal|"other"
argument_list|)
decl_stmt|;
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|other
argument_list|,
name|reviewer
operator|.
name|email
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// TODO(logan): Should CCs be included?
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|other
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeByOtherCcingSelfSingly ()
specifier|public
name|void
name|addReviewerToReviewableChangeByOtherCcingSelfSingly
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToReviewableChangeByOtherCcingSelf
argument_list|(
name|singly
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeByOtherCcingSelfBatch ()
specifier|public
name|void
name|addReviewerToReviewableChangeByOtherCcingSelfBatch
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToReviewableChangeByOtherCcingSelf
argument_list|(
name|batch
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|addReviewerByEmailToReviewableChange (Adder adder)
specifier|private
name|void
name|addReviewerByEmailToReviewableChange
parameter_list|(
name|Adder
name|adder
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|email
init|=
literal|"addedbyemail@example.com"
decl_stmt|;
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|email
argument_list|)
expr_stmt|;
comment|// TODO(logan): Should CCs be included?
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|email
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerByEmailToReviewableChangeSingly ()
specifier|public
name|void
name|addReviewerByEmailToReviewableChangeSingly
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerByEmailToReviewableChange
argument_list|(
name|singly
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerByEmailToReviewableChangeBatch ()
specifier|public
name|void
name|addReviewerByEmailToReviewableChangeBatch
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerByEmailToReviewableChange
argument_list|(
name|batch
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|addReviewerToWipChange (Adder adder)
specifier|private
name|void
name|addReviewerToWipChange
parameter_list|(
name|Adder
name|adder
parameter_list|)
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToWipChangeSingly ()
specifier|public
name|void
name|addReviewerToWipChangeSingly
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToWipChange
argument_list|(
name|singly
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToWipChangeBatch ()
specifier|public
name|void
name|addReviewerToWipChangeBatch
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToWipChange
argument_list|(
name|batch
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableWipChangeSingly ()
specifier|public
name|void
name|addReviewerToReviewableWipChangeSingly
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableWipChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|singly
argument_list|()
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|)
expr_stmt|;
comment|// TODO(dborowitz): In theory this should match the batch case, but we don't currently pass
comment|// enough info into AddReviewersEmail#emailReviewers to distinguish the reviewStarted case.
comment|// Complicating the emailReviewers arguments is not the answer; this needs to be rewritten.
comment|// Tolerate the difference for now.
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableWipChangeBatch ()
specifier|public
name|void
name|addReviewerToReviewableWipChangeBatch
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableWipChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|batch
argument_list|()
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|)
expr_stmt|;
comment|// For a review-started WIP change, same as in the notify=ALL case. It's not especially
comment|// important to notify just because a reviewer is added, but we do want to notify in the other
comment|// case that hits this codepath: posting an actual review.
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
block|}
DECL|method|addReviewerToWipChangeNotifyAll (Adder adder)
specifier|private
name|void
name|addReviewerToWipChangeNotifyAll
parameter_list|(
name|Adder
name|adder
parameter_list|)
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|,
name|NotifyHandling
operator|.
name|ALL
argument_list|)
expr_stmt|;
comment|// TODO(logan): Should CCs be included?
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToWipChangeNotifyAllSingly ()
specifier|public
name|void
name|addReviewerToWipChangeNotifyAllSingly
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToWipChangeNotifyAll
argument_list|(
name|singly
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToWipChangeNotifyAllBatch ()
specifier|public
name|void
name|addReviewerToWipChangeNotifyAllBatch
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToWipChangeNotifyAll
argument_list|(
name|batch
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|addReviewerToReviewableChangeNotifyOwnerReviewers (Adder adder)
specifier|private
name|void
name|addReviewerToReviewableChangeNotifyOwnerReviewers
parameter_list|(
name|Adder
name|adder
parameter_list|)
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|,
name|OWNER_REVIEWERS
argument_list|)
expr_stmt|;
comment|// TODO(logan): Should CCs be included?
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeNotifyOwnerReviewersSingly ()
specifier|public
name|void
name|addReviewerToReviewableChangeNotifyOwnerReviewersSingly
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToReviewableChangeNotifyOwnerReviewers
argument_list|(
name|singly
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeNotifyOwnerReviewersBatch ()
specifier|public
name|void
name|addReviewerToReviewableChangeNotifyOwnerReviewersBatch
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToReviewableChangeNotifyOwnerReviewers
argument_list|(
name|batch
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|addReviewerToReviewableChangeByOwnerCcingSelfNotifyOwner (Adder adder)
specifier|private
name|void
name|addReviewerToReviewableChangeByOwnerCcingSelfNotifyOwner
parameter_list|(
name|Adder
name|adder
parameter_list|)
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|,
name|OWNER
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeByOwnerCcingSelfNotifyOwnerSingly ()
specifier|public
name|void
name|addReviewerToReviewableChangeByOwnerCcingSelfNotifyOwnerSingly
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToReviewableChangeByOwnerCcingSelfNotifyOwner
argument_list|(
name|singly
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeByOwnerCcingSelfNotifyOwnerBatch ()
specifier|public
name|void
name|addReviewerToReviewableChangeByOwnerCcingSelfNotifyOwnerBatch
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToReviewableChangeByOwnerCcingSelfNotifyOwner
argument_list|(
name|batch
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|addReviewerToReviewableChangeByOwnerCcingSelfNotifyNone (Adder adder)
specifier|private
name|void
name|addReviewerToReviewableChangeByOwnerCcingSelfNotifyNone
parameter_list|(
name|Adder
name|adder
parameter_list|)
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|,
name|NONE
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeByOwnerCcingSelfNotifyNoneSingly ()
specifier|public
name|void
name|addReviewerToReviewableChangeByOwnerCcingSelfNotifyNoneSingly
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToReviewableChangeByOwnerCcingSelfNotifyNone
argument_list|(
name|singly
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeByOwnerCcingSelfNotifyNoneBatch ()
specifier|public
name|void
name|addReviewerToReviewableChangeByOwnerCcingSelfNotifyNoneBatch
parameter_list|()
throws|throws
name|Exception
block|{
name|addReviewerToReviewableChangeByOwnerCcingSelfNotifyNone
argument_list|(
name|batch
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|addNonUserReviewerByEmail (Adder adder)
specifier|private
name|void
name|addNonUserReviewerByEmail
parameter_list|(
name|Adder
name|adder
parameter_list|)
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
literal|"nonexistent@example.com"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
literal|"nonexistent@example.com"
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccerByEmail
argument_list|,
name|sc
operator|.
name|reviewerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addNonUserReviewerByEmailSingly ()
specifier|public
name|void
name|addNonUserReviewerByEmailSingly
parameter_list|()
throws|throws
name|Exception
block|{
name|addNonUserReviewerByEmail
argument_list|(
name|singly
argument_list|(
name|ReviewerState
operator|.
name|REVIEWER
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addNonUserReviewerByEmailBatch ()
specifier|public
name|void
name|addNonUserReviewerByEmailBatch
parameter_list|()
throws|throws
name|Exception
block|{
name|addNonUserReviewerByEmail
argument_list|(
name|batch
argument_list|(
name|ReviewerState
operator|.
name|REVIEWER
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|addNonUserCcByEmail (Adder adder)
specifier|private
name|void
name|addNonUserCcByEmail
parameter_list|(
name|Adder
name|adder
parameter_list|)
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
literal|"nonexistent@example.com"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
literal|"nonexistent@example.com"
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccerByEmail
argument_list|,
name|sc
operator|.
name|reviewerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addNonUserCcByEmailSingly ()
specifier|public
name|void
name|addNonUserCcByEmailSingly
parameter_list|()
throws|throws
name|Exception
block|{
name|addNonUserCcByEmail
argument_list|(
name|singly
argument_list|(
name|ReviewerState
operator|.
name|CC
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addNonUserCcByEmailBatch ()
specifier|public
name|void
name|addNonUserCcByEmailBatch
parameter_list|()
throws|throws
name|Exception
block|{
name|addNonUserCcByEmail
argument_list|(
name|batch
argument_list|(
name|ReviewerState
operator|.
name|CC
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|interface|Adder
specifier|private
interface|interface
name|Adder
block|{
DECL|method|addReviewer (String changeId, String reviewer, @Nullable NotifyHandling notify)
name|void
name|addReviewer
parameter_list|(
name|String
name|changeId
parameter_list|,
name|String
name|reviewer
parameter_list|,
annotation|@
name|Nullable
name|NotifyHandling
name|notify
parameter_list|)
throws|throws
name|Exception
function_decl|;
block|}
DECL|method|singly ()
specifier|private
name|Adder
name|singly
parameter_list|()
block|{
return|return
name|singly
argument_list|(
name|ReviewerState
operator|.
name|REVIEWER
argument_list|)
return|;
block|}
DECL|method|singly (ReviewerState reviewerState)
specifier|private
name|Adder
name|singly
parameter_list|(
name|ReviewerState
name|reviewerState
parameter_list|)
block|{
return|return
parameter_list|(
name|String
name|changeId
parameter_list|,
name|String
name|reviewer
parameter_list|,
annotation|@
name|Nullable
name|NotifyHandling
name|notify
parameter_list|)
lambda|->
block|{
name|AddReviewerInput
name|in
init|=
operator|new
name|AddReviewerInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|reviewer
operator|=
name|reviewer
expr_stmt|;
name|in
operator|.
name|state
operator|=
name|reviewerState
expr_stmt|;
if|if
condition|(
name|notify
operator|!=
literal|null
condition|)
block|{
name|in
operator|.
name|notify
operator|=
name|notify
expr_stmt|;
block|}
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|addReviewer
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
return|;
block|}
DECL|method|batch ()
specifier|private
name|Adder
name|batch
parameter_list|()
block|{
return|return
name|batch
argument_list|(
name|ReviewerState
operator|.
name|REVIEWER
argument_list|)
return|;
block|}
DECL|method|batch (ReviewerState reviewerState)
specifier|private
name|Adder
name|batch
parameter_list|(
name|ReviewerState
name|reviewerState
parameter_list|)
block|{
return|return
parameter_list|(
name|String
name|changeId
parameter_list|,
name|String
name|reviewer
parameter_list|,
annotation|@
name|Nullable
name|NotifyHandling
name|notify
parameter_list|)
lambda|->
block|{
name|ReviewInput
name|in
init|=
name|ReviewInput
operator|.
name|noScore
argument_list|()
decl_stmt|;
name|in
operator|.
name|reviewer
argument_list|(
name|reviewer
argument_list|,
name|reviewerState
argument_list|,
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|notify
operator|!=
literal|null
condition|)
block|{
name|in
operator|.
name|notify
operator|=
name|notify
expr_stmt|;
block|}
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|revision
argument_list|(
literal|"current"
argument_list|)
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
return|;
block|}
DECL|method|addReviewer (Adder adder, String changeId, TestAccount by, String reviewer)
specifier|private
name|void
name|addReviewer
parameter_list|(
name|Adder
name|adder
parameter_list|,
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|String
name|reviewer
parameter_list|)
throws|throws
name|Exception
block|{
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|changeId
argument_list|,
name|by
argument_list|,
name|reviewer
argument_list|,
name|ENABLED
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|addReviewer ( Adder adder, String changeId, TestAccount by, String reviewer, NotifyHandling notify)
specifier|private
name|void
name|addReviewer
parameter_list|(
name|Adder
name|adder
parameter_list|,
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|String
name|reviewer
parameter_list|,
name|NotifyHandling
name|notify
parameter_list|)
throws|throws
name|Exception
block|{
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|changeId
argument_list|,
name|by
argument_list|,
name|reviewer
argument_list|,
name|ENABLED
argument_list|,
name|notify
argument_list|)
expr_stmt|;
block|}
DECL|method|addReviewer ( Adder adder, String changeId, TestAccount by, String reviewer, EmailStrategy emailStrategy, @Nullable NotifyHandling notify)
specifier|private
name|void
name|addReviewer
parameter_list|(
name|Adder
name|adder
parameter_list|,
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|String
name|reviewer
parameter_list|,
name|EmailStrategy
name|emailStrategy
parameter_list|,
annotation|@
name|Nullable
name|NotifyHandling
name|notify
parameter_list|)
throws|throws
name|Exception
block|{
name|setEmailStrategy
argument_list|(
name|by
argument_list|,
name|emailStrategy
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|by
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|adder
operator|.
name|addReviewer
argument_list|(
name|changeId
argument_list|,
name|reviewer
argument_list|,
name|notify
argument_list|)
expr_stmt|;
block|}
comment|/*    * CommentSender tests.    */
annotation|@
name|Test
DECL|method|commentOnReviewableChangeByOwner ()
specifier|public
name|void
name|commentOnReviewableChangeByOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|review
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|ENABLED
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentOnReviewableChangeByReviewer ()
specifier|public
name|void
name|commentOnReviewableChangeByReviewer
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|review
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|ENABLED
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentOnReviewableChangeByOwnerCcingSelf ()
specifier|public
name|void
name|commentOnReviewableChangeByOwnerCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|review
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentOnReviewableChangeByReviewerCcingSelf ()
specifier|public
name|void
name|commentOnReviewableChangeByReviewerCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|review
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentOnReviewableChangeByOther ()
specifier|public
name|void
name|commentOnReviewableChangeByOther
parameter_list|()
throws|throws
name|Exception
block|{
name|TestAccount
name|other
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"other"
argument_list|,
literal|"other@example.com"
argument_list|,
literal|"other"
argument_list|)
decl_stmt|;
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|review
argument_list|(
name|other
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|ENABLED
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentOnReviewableChangeByOtherCcingSelf ()
specifier|public
name|void
name|commentOnReviewableChangeByOtherCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|TestAccount
name|other
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"other"
argument_list|,
literal|"other@example.com"
argument_list|,
literal|"other"
argument_list|)
decl_stmt|;
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|review
argument_list|(
name|other
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|other
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentOnReviewableChangeByOwnerNotifyOwnerReviewers ()
specifier|public
name|void
name|commentOnReviewableChangeByOwnerNotifyOwnerReviewers
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|review
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|ENABLED
argument_list|,
name|OWNER_REVIEWERS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentOnReviewableChangeByOwnerNotifyOwner ()
specifier|public
name|void
name|commentOnReviewableChangeByOwnerNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|review
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|ENABLED
argument_list|,
name|OWNER
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentOnReviewableChangeByOwnerCcingSelfNotifyOwner ()
specifier|public
name|void
name|commentOnReviewableChangeByOwnerCcingSelfNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|setEmailStrategy
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|review
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|ENABLED
argument_list|,
name|OWNER
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
comment|// TODO(logan): Why not send to owner?
block|}
annotation|@
name|Test
DECL|method|commentOnReviewableChangeByOwnerNotifyNone ()
specifier|public
name|void
name|commentOnReviewableChangeByOwnerNotifyNone
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|review
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|ENABLED
argument_list|,
name|NONE
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentOnReviewableChangeByOwnerCcingSelfNotifyNone ()
specifier|public
name|void
name|commentOnReviewableChangeByOwnerCcingSelfNotifyNone
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|setEmailStrategy
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|review
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|ENABLED
argument_list|,
name|NONE
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
comment|// TODO(logan): Why not send to owner?
block|}
annotation|@
name|Test
DECL|method|commentOnReviewableChangeByBot ()
specifier|public
name|void
name|commentOnReviewableChangeByBot
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|bot
init|=
name|sc
operator|.
name|testAccount
argument_list|(
literal|"bot"
argument_list|)
decl_stmt|;
name|review
argument_list|(
name|bot
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|ENABLED
argument_list|,
literal|null
argument_list|,
literal|"autogenerated:bot"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentOnWipChangeByOwner ()
specifier|public
name|void
name|commentOnWipChangeByOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|review
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|ENABLED
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentOnWipChangeByOwnerCcingSelf ()
specifier|public
name|void
name|commentOnWipChangeByOwnerCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|review
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentOnWipChangeByOwnerNotifyAll ()
specifier|public
name|void
name|commentOnWipChangeByOwnerNotifyAll
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|review
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|ENABLED
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentOnWipChangeByBot ()
specifier|public
name|void
name|commentOnWipChangeByBot
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|TestAccount
name|bot
init|=
name|sc
operator|.
name|testAccount
argument_list|(
literal|"bot"
argument_list|)
decl_stmt|;
name|review
argument_list|(
name|bot
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|ENABLED
argument_list|,
literal|null
argument_list|,
literal|"autogenerated:tag"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentOnReviewableWipChangeByBot ()
specifier|public
name|void
name|commentOnReviewableWipChangeByBot
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableWipChange
argument_list|()
decl_stmt|;
name|TestAccount
name|bot
init|=
name|sc
operator|.
name|testAccount
argument_list|(
literal|"bot"
argument_list|)
decl_stmt|;
name|review
argument_list|(
name|bot
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|ENABLED
argument_list|,
literal|null
argument_list|,
literal|"autogenerated:tag"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentOnReviewableWipChangeByBotNotifyAll ()
specifier|public
name|void
name|commentOnReviewableWipChangeByBotNotifyAll
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|TestAccount
name|bot
init|=
name|sc
operator|.
name|testAccount
argument_list|(
literal|"bot"
argument_list|)
decl_stmt|;
name|review
argument_list|(
name|bot
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|ENABLED
argument_list|,
name|ALL
argument_list|,
literal|"tag"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentOnReviewableWipChangeByOwner ()
specifier|public
name|void
name|commentOnReviewableWipChangeByOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableWipChange
argument_list|()
decl_stmt|;
name|review
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|ENABLED
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|noCommentAndSetWorkInProgress ()
specifier|public
name|void
name|noCommentAndSetWorkInProgress
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
name|ReviewInput
operator|.
name|noScore
argument_list|()
operator|.
name|setWorkInProgress
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|revision
argument_list|(
literal|"current"
argument_list|)
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentAndSetWorkInProgress ()
specifier|public
name|void
name|commentAndSetWorkInProgress
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
name|ReviewInput
operator|.
name|noScore
argument_list|()
operator|.
name|message
argument_list|(
literal|"ok"
argument_list|)
operator|.
name|setWorkInProgress
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|revision
argument_list|(
literal|"current"
argument_list|)
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commentOnWipChangeAndStartReview ()
specifier|public
name|void
name|commentOnWipChangeAndStartReview
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
name|ReviewInput
operator|.
name|noScore
argument_list|()
operator|.
name|message
argument_list|(
literal|"ok"
argument_list|)
operator|.
name|setWorkInProgress
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|revision
argument_list|(
literal|"current"
argument_list|)
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerOnWipChangeAndStartReview ()
specifier|public
name|void
name|addReviewerOnWipChangeAndStartReview
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
name|ReviewInput
operator|.
name|noScore
argument_list|()
operator|.
name|reviewer
argument_list|(
name|other
operator|.
name|email
argument_list|)
operator|.
name|setWorkInProgress
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|revision
argument_list|(
literal|"current"
argument_list|)
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|other
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
comment|// TODO(logan): Should CCs be included?
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|other
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|startReviewMessageNotRepeated ()
specifier|public
name|void
name|startReviewMessageNotRepeated
parameter_list|()
throws|throws
name|Exception
block|{
comment|// TODO(logan): Remove this test check once PolyGerrit workaround is rolled back.
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
name|ReviewInput
operator|.
name|noScore
argument_list|()
operator|.
name|message
argument_list|(
name|PostReview
operator|.
name|START_REVIEW_MESSAGE
argument_list|)
operator|.
name|setWorkInProgress
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|revision
argument_list|(
literal|"current"
argument_list|)
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|Truth
operator|.
name|assertThat
argument_list|(
name|sender
operator|.
name|getMessages
argument_list|()
argument_list|)
operator|.
name|isNotEmpty
argument_list|()
expr_stmt|;
name|String
name|body
init|=
name|sender
operator|.
name|getMessages
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|body
argument_list|()
decl_stmt|;
name|int
name|idx
init|=
name|body
operator|.
name|indexOf
argument_list|(
name|PostReview
operator|.
name|START_REVIEW_MESSAGE
argument_list|)
decl_stmt|;
name|Truth
operator|.
name|assertThat
argument_list|(
name|idx
argument_list|)
operator|.
name|isAtLeast
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|Truth
operator|.
name|assertThat
argument_list|(
name|body
operator|.
name|indexOf
argument_list|(
name|PostReview
operator|.
name|START_REVIEW_MESSAGE
argument_list|,
name|idx
operator|+
literal|1
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
DECL|method|review (TestAccount account, String changeId, EmailStrategy strategy)
specifier|private
name|void
name|review
parameter_list|(
name|TestAccount
name|account
parameter_list|,
name|String
name|changeId
parameter_list|,
name|EmailStrategy
name|strategy
parameter_list|)
throws|throws
name|Exception
block|{
name|review
argument_list|(
name|account
argument_list|,
name|changeId
argument_list|,
name|strategy
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|review ( TestAccount account, String changeId, EmailStrategy strategy, @Nullable NotifyHandling notify)
specifier|private
name|void
name|review
parameter_list|(
name|TestAccount
name|account
parameter_list|,
name|String
name|changeId
parameter_list|,
name|EmailStrategy
name|strategy
parameter_list|,
annotation|@
name|Nullable
name|NotifyHandling
name|notify
parameter_list|)
throws|throws
name|Exception
block|{
name|review
argument_list|(
name|account
argument_list|,
name|changeId
argument_list|,
name|strategy
argument_list|,
name|notify
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|review ( TestAccount account, String changeId, EmailStrategy strategy, @Nullable NotifyHandling notify, @Nullable String tag)
specifier|private
name|void
name|review
parameter_list|(
name|TestAccount
name|account
parameter_list|,
name|String
name|changeId
parameter_list|,
name|EmailStrategy
name|strategy
parameter_list|,
annotation|@
name|Nullable
name|NotifyHandling
name|notify
parameter_list|,
annotation|@
name|Nullable
name|String
name|tag
parameter_list|)
throws|throws
name|Exception
block|{
name|setEmailStrategy
argument_list|(
name|account
argument_list|,
name|strategy
argument_list|)
expr_stmt|;
name|ReviewInput
name|in
init|=
name|ReviewInput
operator|.
name|recommend
argument_list|()
decl_stmt|;
name|in
operator|.
name|notify
operator|=
name|notify
expr_stmt|;
name|in
operator|.
name|tag
operator|=
name|tag
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|revision
argument_list|(
literal|"current"
argument_list|)
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
comment|/*    * CreateChangeSender tests.    */
annotation|@
name|Test
DECL|method|createReviewableChange ()
specifier|public
name|void
name|createReviewableChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedPreChange
name|spc
init|=
name|stagePreChange
argument_list|(
literal|"refs/for/master"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|spc
argument_list|)
operator|.
name|to
argument_list|(
name|spc
operator|.
name|watchingProjectOwner
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_CHANGES
argument_list|,
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createWipChange ()
specifier|public
name|void
name|createWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|stagePreChange
argument_list|(
literal|"refs/for/master%wip"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createWipChangeWithWorkInProgressByDefaultForProject ()
specifier|public
name|void
name|createWipChangeWithWorkInProgressByDefaultForProject
parameter_list|()
throws|throws
name|Exception
block|{
name|setWorkInProgressByDefault
argument_list|(
name|project
argument_list|,
name|InheritableBoolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|StagedPreChange
name|spc
init|=
name|stagePreChange
argument_list|(
literal|"refs/for/master"
argument_list|)
decl_stmt|;
name|Truth
operator|.
name|assertThat
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|spc
operator|.
name|changeId
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|workInProgress
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createWipChangeWithWorkInProgressByDefaultForUser ()
specifier|public
name|void
name|createWipChangeWithWorkInProgressByDefaultForUser
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Make sure owner user is created
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
comment|// All was cleaned already
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
comment|// Toggle workInProgress flag for owner
name|GeneralPreferencesInfo
name|prefs
init|=
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|getPreferences
argument_list|()
decl_stmt|;
name|prefs
operator|.
name|workInProgressByDefault
operator|=
literal|true
expr_stmt|;
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|setPreferences
argument_list|(
name|prefs
argument_list|)
expr_stmt|;
comment|// Create another change without notification that should be wip
name|StagedPreChange
name|spc
init|=
name|stagePreChange
argument_list|(
literal|"refs/for/master"
argument_list|)
decl_stmt|;
name|Truth
operator|.
name|assertThat
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|spc
operator|.
name|changeId
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|workInProgress
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
comment|// Clean up workInProgressByDefault by owner
name|prefs
operator|=
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|getPreferences
argument_list|()
expr_stmt|;
name|Truth
operator|.
name|assertThat
argument_list|(
name|prefs
operator|.
name|workInProgressByDefault
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|prefs
operator|.
name|workInProgressByDefault
operator|=
literal|false
expr_stmt|;
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|setPreferences
argument_list|(
name|prefs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createReviewableChangeWithNotifyOwnerReviewers ()
specifier|public
name|void
name|createReviewableChangeWithNotifyOwnerReviewers
parameter_list|()
throws|throws
name|Exception
block|{
name|stagePreChange
argument_list|(
literal|"refs/for/master%notify=OWNER_REVIEWERS"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createReviewableChangeWithNotifyOwner ()
specifier|public
name|void
name|createReviewableChangeWithNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|stagePreChange
argument_list|(
literal|"refs/for/master%notify=OWNER"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createReviewableChangeWithNotifyNone ()
specifier|public
name|void
name|createReviewableChangeWithNotifyNone
parameter_list|()
throws|throws
name|Exception
block|{
name|stagePreChange
argument_list|(
literal|"refs/for/master%notify=OWNER"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createWipChangeWithNotifyAll ()
specifier|public
name|void
name|createWipChangeWithNotifyAll
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedPreChange
name|spc
init|=
name|stagePreChange
argument_list|(
literal|"refs/for/master%wip,notify=ALL"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|spc
argument_list|)
operator|.
name|to
argument_list|(
name|spc
operator|.
name|watchingProjectOwner
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_CHANGES
argument_list|,
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createReviewableChangeWithReviewersAndCcs ()
specifier|public
name|void
name|createReviewableChangeWithReviewersAndCcs
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedPreChange
name|spc
init|=
name|stagePreChange
argument_list|(
literal|"refs/for/master"
argument_list|,
name|users
lambda|->
name|ImmutableList
operator|.
name|of
argument_list|(
literal|"r="
operator|+
name|users
operator|.
name|reviewer
operator|.
name|username
argument_list|,
literal|"cc="
operator|+
name|users
operator|.
name|ccer
operator|.
name|username
argument_list|)
argument_list|)
decl_stmt|;
name|FakeEmailSenderSubject
name|subject
init|=
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|spc
argument_list|)
operator|.
name|to
argument_list|(
name|spc
operator|.
name|reviewer
argument_list|,
name|spc
operator|.
name|watchingProjectOwner
argument_list|)
decl_stmt|;
name|subject
operator|.
name|cc
argument_list|(
name|spc
operator|.
name|ccer
argument_list|)
expr_stmt|;
name|subject
operator|.
name|bcc
argument_list|(
name|NEW_CHANGES
argument_list|,
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|createReviewableChangeWithReviewersAndCcsByEmail ()
specifier|public
name|void
name|createReviewableChangeWithReviewersAndCcsByEmail
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedPreChange
name|spc
init|=
name|stagePreChange
argument_list|(
literal|"refs/for/master"
argument_list|,
name|users
lambda|->
name|ImmutableList
operator|.
name|of
argument_list|(
literal|"r=nobody1@example.com,cc=nobody2@example.com"
argument_list|)
argument_list|)
decl_stmt|;
name|spc
operator|.
name|supportReviewersByEmail
operator|=
literal|true
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|spc
argument_list|)
operator|.
name|to
argument_list|(
literal|"nobody1@example.com"
argument_list|)
operator|.
name|to
argument_list|(
name|spc
operator|.
name|watchingProjectOwner
argument_list|)
operator|.
name|cc
argument_list|(
literal|"nobody2@example.com"
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_CHANGES
argument_list|,
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
comment|/*    * DeleteReviewerSender tests.    */
annotation|@
name|Test
DECL|method|deleteReviewerFromReviewableChange ()
specifier|public
name|void
name|deleteReviewerFromReviewableChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|removeReviewer
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteReviewer"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|extraReviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|extraCcer
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteReviewerFromReviewableChangeByOwnerCcingSelf ()
specifier|public
name|void
name|deleteReviewerFromReviewableChangeByOwnerCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|setEmailStrategy
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|removeReviewer
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteReviewer"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|extraReviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|extraCcer
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteReviewerFromReviewableChangeByAdmin ()
specifier|public
name|void
name|deleteReviewerFromReviewableChangeByAdmin
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|admin
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|removeReviewer
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteReviewer"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|extraReviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|extraCcer
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteReviewerFromReviewableChangeByAdminCcingSelf ()
specifier|public
name|void
name|deleteReviewerFromReviewableChangeByAdminCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|setEmailStrategy
argument_list|(
name|admin
argument_list|,
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|admin
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|removeReviewer
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteReviewer"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|extraReviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|admin
argument_list|,
name|extraCcer
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteCcerFromReviewableChange ()
specifier|public
name|void
name|deleteCcerFromReviewableChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|removeReviewer
argument_list|(
name|sc
argument_list|,
name|extraCcer
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteReviewer"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|extraCcer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|extraReviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteReviewerFromReviewableChangeNotifyOwnerReviewers ()
specifier|public
name|void
name|deleteReviewerFromReviewableChangeNotifyOwnerReviewers
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|removeReviewer
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|,
name|NotifyHandling
operator|.
name|OWNER_REVIEWERS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteReviewer"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|extraReviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|extraCcer
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteReviewerFromReviewableChangeNotifyOwner ()
specifier|public
name|void
name|deleteReviewerFromReviewableChangeNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|removeReviewer
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|,
name|NotifyHandling
operator|.
name|OWNER
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteReviewerFromReviewableChangeByOwnerCcingSelfNotifyOwner ()
specifier|public
name|void
name|deleteReviewerFromReviewableChangeByOwnerCcingSelfNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|setEmailStrategy
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|removeReviewer
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|,
name|NotifyHandling
operator|.
name|OWNER
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteReviewer"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|extraReviewer
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteReviewerFromReviewableChangeNotifyNone ()
specifier|public
name|void
name|deleteReviewerFromReviewableChangeNotifyNone
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|removeReviewer
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|,
name|NotifyHandling
operator|.
name|NONE
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteReviewerFromReviewableChangeByOwnerCcingSelfNotifyNone ()
specifier|public
name|void
name|deleteReviewerFromReviewableChangeByOwnerCcingSelfNotifyNone
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|setEmailStrategy
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|removeReviewer
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|,
name|NotifyHandling
operator|.
name|NONE
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteReviewerFromReviewableWipChange ()
specifier|public
name|void
name|deleteReviewerFromReviewableWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableWipChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|removeReviewer
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteReviewerFromWipChange ()
specifier|public
name|void
name|deleteReviewerFromWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|removeReviewer
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteReviewerFromWipChangeNotifyAll ()
specifier|public
name|void
name|deleteReviewerFromWipChangeNotifyAll
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|removeReviewer
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|,
name|NotifyHandling
operator|.
name|ALL
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteReviewer"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|extraReviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|extraCcer
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteReviewerWithApprovalFromWipChange ()
specifier|public
name|void
name|deleteReviewerWithApprovalFromWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|recommend
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|removeReviewer
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteReviewer"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|extraReviewer
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteReviewerWithApprovalFromWipChangeNotifyOwner ()
specifier|public
name|void
name|deleteReviewerWithApprovalFromWipChangeNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|recommend
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|removeReviewer
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|,
name|NotifyHandling
operator|.
name|OWNER
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteReviewerByEmailFromWipChange ()
specifier|public
name|void
name|deleteReviewerByEmailFromWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|reviewer
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|)
operator|.
name|remove
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
DECL|method|recommend (StagedChange sc, TestAccount by)
specifier|private
name|void
name|recommend
parameter_list|(
name|StagedChange
name|sc
parameter_list|,
name|TestAccount
name|by
parameter_list|)
throws|throws
name|Exception
block|{
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|by
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|revision
argument_list|(
literal|"current"
argument_list|)
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|recommend
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|interface|Stager
specifier|private
interface|interface
name|Stager
block|{
DECL|method|stage ()
name|StagedChange
name|stage
parameter_list|()
throws|throws
name|Exception
function_decl|;
block|}
DECL|method|stageChangeWithExtraReviewer (Stager stager)
specifier|private
name|StagedChange
name|stageChangeWithExtraReviewer
parameter_list|(
name|Stager
name|stager
parameter_list|)
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stager
operator|.
name|stage
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
name|ReviewInput
operator|.
name|noScore
argument_list|()
operator|.
name|reviewer
argument_list|(
name|extraReviewer
operator|.
name|email
argument_list|)
operator|.
name|reviewer
argument_list|(
name|extraCcer
operator|.
name|email
argument_list|,
name|ReviewerState
operator|.
name|CC
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|extraReviewer
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|revision
argument_list|(
literal|"current"
argument_list|)
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
return|return
name|sc
return|;
block|}
DECL|method|stageReviewableChangeWithExtraReviewer ()
specifier|private
name|StagedChange
name|stageReviewableChangeWithExtraReviewer
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageChangeWithExtraReviewer
argument_list|(
name|this
operator|::
name|stageReviewableChange
argument_list|)
decl_stmt|;
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
return|return
name|sc
return|;
block|}
DECL|method|stageReviewableWipChangeWithExtraReviewer ()
specifier|private
name|StagedChange
name|stageReviewableWipChangeWithExtraReviewer
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|stageChangeWithExtraReviewer
argument_list|(
name|this
operator|::
name|stageReviewableWipChange
argument_list|)
return|;
block|}
DECL|method|stageWipChangeWithExtraReviewer ()
specifier|private
name|StagedChange
name|stageWipChangeWithExtraReviewer
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageChangeWithExtraReviewer
argument_list|(
name|this
operator|::
name|stageWipChange
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
return|return
name|sc
return|;
block|}
DECL|method|removeReviewer (StagedChange sc, TestAccount account)
specifier|private
name|void
name|removeReviewer
parameter_list|(
name|StagedChange
name|sc
parameter_list|,
name|TestAccount
name|account
parameter_list|)
throws|throws
name|Exception
block|{
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|reviewer
argument_list|(
name|account
operator|.
name|email
argument_list|)
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
DECL|method|removeReviewer (StagedChange sc, TestAccount account, NotifyHandling notify)
specifier|private
name|void
name|removeReviewer
parameter_list|(
name|StagedChange
name|sc
parameter_list|,
name|TestAccount
name|account
parameter_list|,
name|NotifyHandling
name|notify
parameter_list|)
throws|throws
name|Exception
block|{
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
name|DeleteReviewerInput
name|in
init|=
operator|new
name|DeleteReviewerInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|notify
operator|=
name|notify
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|reviewer
argument_list|(
name|account
operator|.
name|email
argument_list|)
operator|.
name|remove
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
comment|/*    * DeleteVoteSender tests.    */
annotation|@
name|Test
DECL|method|deleteVoteFromReviewableChange ()
specifier|public
name|void
name|deleteVoteFromReviewableChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|recommend
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|deleteVote
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteVote"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|extraReviewer
argument_list|,
name|extraCcer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteVoteFromReviewableChangeWithSelfCc ()
specifier|public
name|void
name|deleteVoteFromReviewableChangeWithSelfCc
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|recommend
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|setEmailStrategy
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|deleteVote
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteVote"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|extraReviewer
argument_list|,
name|extraCcer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteVoteFromReviewableChangeByAdmin ()
specifier|public
name|void
name|deleteVoteFromReviewableChangeByAdmin
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|recommend
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|admin
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|deleteVote
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteVote"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|extraReviewer
argument_list|,
name|extraCcer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteVoteFromReviewableChangeByAdminCcingSelf ()
specifier|public
name|void
name|deleteVoteFromReviewableChangeByAdminCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|recommend
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|setEmailStrategy
argument_list|(
name|admin
argument_list|,
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|admin
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|deleteVote
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteVote"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|admin
argument_list|,
name|extraReviewer
argument_list|,
name|extraCcer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteVoteFromReviewableChangeNotifyOwnerReviewers ()
specifier|public
name|void
name|deleteVoteFromReviewableChangeNotifyOwnerReviewers
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|recommend
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|deleteVote
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|,
name|NotifyHandling
operator|.
name|OWNER_REVIEWERS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteVote"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|extraReviewer
argument_list|,
name|extraCcer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteVoteFromReviewableChangeNotifyOwnerReviewersWithSelfCc ()
specifier|public
name|void
name|deleteVoteFromReviewableChangeNotifyOwnerReviewersWithSelfCc
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|recommend
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|setEmailStrategy
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|deleteVote
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|,
name|NotifyHandling
operator|.
name|OWNER_REVIEWERS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteVote"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|extraReviewer
argument_list|,
name|extraCcer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteVoteFromReviewableChangeNotifyOwner ()
specifier|public
name|void
name|deleteVoteFromReviewableChangeNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|recommend
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|admin
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|deleteVote
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|,
name|NotifyHandling
operator|.
name|OWNER
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteVote"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteVoteFromReviewableChangeNotifyNone ()
specifier|public
name|void
name|deleteVoteFromReviewableChangeNotifyNone
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|recommend
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|deleteVote
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|,
name|NotifyHandling
operator|.
name|NONE
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteVoteFromReviewableChangeNotifyNoneWithSelfCc ()
specifier|public
name|void
name|deleteVoteFromReviewableChangeNotifyNoneWithSelfCc
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|recommend
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|setEmailStrategy
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|deleteVote
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|,
name|NotifyHandling
operator|.
name|NONE
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteVoteFromReviewableWipChange ()
specifier|public
name|void
name|deleteVoteFromReviewableWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableWipChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|recommend
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|deleteVote
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteVote"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|extraReviewer
argument_list|,
name|extraCcer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteVoteFromWipChange ()
specifier|public
name|void
name|deleteVoteFromWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChangeWithExtraReviewer
argument_list|()
decl_stmt|;
name|recommend
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|deleteVote
argument_list|(
name|sc
argument_list|,
name|extraReviewer
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"deleteVote"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|extraReviewer
argument_list|,
name|extraCcer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
DECL|method|deleteVote (StagedChange sc, TestAccount account)
specifier|private
name|void
name|deleteVote
parameter_list|(
name|StagedChange
name|sc
parameter_list|,
name|TestAccount
name|account
parameter_list|)
throws|throws
name|Exception
block|{
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|reviewer
argument_list|(
name|account
operator|.
name|email
argument_list|)
operator|.
name|deleteVote
argument_list|(
literal|"Code-Review"
argument_list|)
expr_stmt|;
block|}
DECL|method|deleteVote (StagedChange sc, TestAccount account, NotifyHandling notify)
specifier|private
name|void
name|deleteVote
parameter_list|(
name|StagedChange
name|sc
parameter_list|,
name|TestAccount
name|account
parameter_list|,
name|NotifyHandling
name|notify
parameter_list|)
throws|throws
name|Exception
block|{
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
name|DeleteVoteInput
name|in
init|=
operator|new
name|DeleteVoteInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|label
operator|=
literal|"Code-Review"
expr_stmt|;
name|in
operator|.
name|notify
operator|=
name|notify
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|reviewer
argument_list|(
name|account
operator|.
name|email
argument_list|)
operator|.
name|deleteVote
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
comment|/*    * MergedSender tests.    */
annotation|@
name|Test
DECL|method|mergeByOwnerAllSubmitStrategies ()
specifier|public
name|void
name|mergeByOwnerAllSubmitStrategies
parameter_list|()
throws|throws
name|Exception
block|{
name|mergeByOwnerAllSubmitStrategies
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|mergeByOwnerAllSubmitStrategiesWithAdvancingBranch ()
specifier|public
name|void
name|mergeByOwnerAllSubmitStrategiesWithAdvancingBranch
parameter_list|()
throws|throws
name|Exception
block|{
name|mergeByOwnerAllSubmitStrategies
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|mergeByOwnerAllSubmitStrategies (boolean advanceBranchBeforeSubmitting)
specifier|private
name|void
name|mergeByOwnerAllSubmitStrategies
parameter_list|(
name|boolean
name|advanceBranchBeforeSubmitting
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|SubmitType
name|submitType
range|:
name|SubmitType
operator|.
name|values
argument_list|()
control|)
block|{
try|try
init|(
name|ProjectConfigUpdate
name|u
init|=
name|updateProject
argument_list|(
name|project
argument_list|)
init|)
block|{
name|u
operator|.
name|getConfig
argument_list|()
operator|.
name|getProject
argument_list|()
operator|.
name|setSubmitType
argument_list|(
name|submitType
argument_list|)
expr_stmt|;
name|u
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
name|StagedChange
name|sc
init|=
name|stageChangeReadyForMerge
argument_list|()
decl_stmt|;
name|String
name|name
init|=
name|submitType
operator|+
literal|" sender"
decl_stmt|;
if|if
condition|(
name|advanceBranchBeforeSubmitting
condition|)
block|{
if|if
condition|(
name|submitType
operator|==
name|SubmitType
operator|.
name|FAST_FORWARD_ONLY
condition|)
block|{
continue|continue;
block|}
try|try
init|(
name|Repository
name|repo
init|=
name|repoManager
operator|.
name|openRepository
argument_list|(
name|project
argument_list|)
init|)
block|{
operator|new
name|TestRepository
argument_list|<>
argument_list|(
name|repo
argument_list|)
operator|.
name|branch
argument_list|(
literal|"master"
argument_list|)
operator|.
name|commit
argument_list|()
operator|.
name|create
argument_list|()
expr_stmt|;
block|}
name|name
operator|+=
literal|" after branch has advanced"
expr_stmt|;
block|}
name|merge
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|named
argument_list|(
name|name
argument_list|)
operator|.
name|sent
argument_list|(
literal|"merged"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|,
name|SUBMITTED_CHANGES
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|named
argument_list|(
name|name
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|mergeByOwnerCcingSelf ()
specifier|public
name|void
name|mergeByOwnerCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageChangeReadyForMerge
argument_list|()
decl_stmt|;
name|merge
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"merged"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|,
name|SUBMITTED_CHANGES
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|mergeByReviewer ()
specifier|public
name|void
name|mergeByReviewer
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageChangeReadyForMerge
argument_list|()
decl_stmt|;
name|merge
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"merged"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|,
name|SUBMITTED_CHANGES
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|mergeByReviewerCcingSelf ()
specifier|public
name|void
name|mergeByReviewerCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageChangeReadyForMerge
argument_list|()
decl_stmt|;
name|merge
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"merged"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|,
name|SUBMITTED_CHANGES
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|mergeByOtherNotifyOwnerReviewers ()
specifier|public
name|void
name|mergeByOtherNotifyOwnerReviewers
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageChangeReadyForMerge
argument_list|()
decl_stmt|;
name|merge
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|other
argument_list|,
name|OWNER_REVIEWERS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"merged"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|mergeByOtherNotifyOwner ()
specifier|public
name|void
name|mergeByOtherNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageChangeReadyForMerge
argument_list|()
decl_stmt|;
name|merge
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|other
argument_list|,
name|OWNER
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"merged"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|mergeByOtherCcingSelfNotifyOwner ()
specifier|public
name|void
name|mergeByOtherCcingSelfNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageChangeReadyForMerge
argument_list|()
decl_stmt|;
name|setEmailStrategy
argument_list|(
name|other
argument_list|,
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|merge
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|other
argument_list|,
name|OWNER
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"merged"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|mergeByOtherNotifyNone ()
specifier|public
name|void
name|mergeByOtherNotifyNone
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageChangeReadyForMerge
argument_list|()
decl_stmt|;
name|merge
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|other
argument_list|,
name|NONE
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|mergeByOtherCcingSelfNotifyNone ()
specifier|public
name|void
name|mergeByOtherCcingSelfNotifyNone
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageChangeReadyForMerge
argument_list|()
decl_stmt|;
name|setEmailStrategy
argument_list|(
name|other
argument_list|,
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|merge
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|other
argument_list|,
name|NONE
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
DECL|method|merge (String changeId, TestAccount by)
specifier|private
name|void
name|merge
parameter_list|(
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|)
throws|throws
name|Exception
block|{
name|merge
argument_list|(
name|changeId
argument_list|,
name|by
argument_list|,
name|ENABLED
argument_list|)
expr_stmt|;
block|}
DECL|method|merge (String changeId, TestAccount by, EmailStrategy emailStrategy)
specifier|private
name|void
name|merge
parameter_list|(
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|EmailStrategy
name|emailStrategy
parameter_list|)
throws|throws
name|Exception
block|{
name|setEmailStrategy
argument_list|(
name|by
argument_list|,
name|emailStrategy
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|by
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|revision
argument_list|(
literal|"current"
argument_list|)
operator|.
name|submit
argument_list|()
expr_stmt|;
block|}
DECL|method|merge (String changeId, TestAccount by, NotifyHandling notify)
specifier|private
name|void
name|merge
parameter_list|(
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|NotifyHandling
name|notify
parameter_list|)
throws|throws
name|Exception
block|{
name|merge
argument_list|(
name|changeId
argument_list|,
name|by
argument_list|,
name|ENABLED
argument_list|,
name|notify
argument_list|)
expr_stmt|;
block|}
DECL|method|merge ( String changeId, TestAccount by, EmailStrategy emailStrategy, NotifyHandling notify)
specifier|private
name|void
name|merge
parameter_list|(
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|EmailStrategy
name|emailStrategy
parameter_list|,
name|NotifyHandling
name|notify
parameter_list|)
throws|throws
name|Exception
block|{
name|setEmailStrategy
argument_list|(
name|by
argument_list|,
name|emailStrategy
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|by
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|SubmitInput
name|in
init|=
operator|new
name|SubmitInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|notify
operator|=
name|notify
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|revision
argument_list|(
literal|"current"
argument_list|)
operator|.
name|submit
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
DECL|method|stageChangeReadyForMerge ()
specifier|private
name|StagedChange
name|stageChangeReadyForMerge
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|sc
operator|.
name|reviewer
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|revision
argument_list|(
literal|"current"
argument_list|)
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
return|return
name|sc
return|;
block|}
comment|/*    * ReplacePatchSetSender tests.    */
annotation|@
name|Test
DECL|method|newPatchSetByOwnerOnReviewableChange ()
specifier|public
name|void
name|newPatchSetByOwnerOnReviewableChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master"
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|newPatchSetByOtherOnReviewableChange ()
specifier|public
name|void
name|newPatchSetByOtherOnReviewableChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master"
argument_list|,
name|other
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
comment|// TODO(logan): This shouldn't be sent *from* the owner.
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|other
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|newPatchSetByOtherOnReviewableChangeOwnerSelfCc ()
specifier|public
name|void
name|newPatchSetByOtherOnReviewableChangeOwnerSelfCc
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master"
argument_list|,
name|other
argument_list|,
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
comment|// TODO(logan): This shouldn't be sent *from* the owner.
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|other
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|newPatchSetByOtherOnReviewableChangeNotifyOwnerReviewers ()
specifier|public
name|void
name|newPatchSetByOtherOnReviewableChangeNotifyOwnerReviewers
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master%notify=OWNER_REVIEWERS"
argument_list|,
name|other
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
comment|// TODO(logan): This shouldn't be sent *from* the owner.
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|to
argument_list|(
name|other
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|newPatchSetByOtherOnReviewableChangeOwnerSelfCcNotifyOwnerReviewers ()
specifier|public
name|void
name|newPatchSetByOtherOnReviewableChangeOwnerSelfCcNotifyOwnerReviewers
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master%notify=OWNER_REVIEWERS"
argument_list|,
name|other
argument_list|,
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
comment|// TODO(logan): This shouldn't be sent *from* the owner.
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|to
argument_list|(
name|other
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|newPatchSetByOtherOnReviewableChangeNotifyOwner ()
specifier|public
name|void
name|newPatchSetByOtherOnReviewableChangeNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master%notify=OWNER"
argument_list|,
name|other
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|newPatchSetByOtherOnReviewableChangeOwnerSelfCcNotifyOwner ()
specifier|public
name|void
name|newPatchSetByOtherOnReviewableChangeOwnerSelfCcNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master%notify=OWNER"
argument_list|,
name|other
argument_list|,
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
comment|// TODO(logan): This email shouldn't come from the owner, and that's why
comment|// no email is currently sent (owner isn't CCing self).
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|newPatchSetByOtherOnReviewableChangeNotifyNone ()
specifier|public
name|void
name|newPatchSetByOtherOnReviewableChangeNotifyNone
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master%notify=NONE"
argument_list|,
name|other
argument_list|)
expr_stmt|;
comment|// TODO(logan): This email shouldn't come from the owner, and that's why
comment|// no email is currently sent (owner isn't CCing self).
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|newPatchSetByOtherOnReviewableChangeOwnerSelfCcNotifyNone ()
specifier|public
name|void
name|newPatchSetByOtherOnReviewableChangeOwnerSelfCcNotifyNone
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master%notify=NONE"
argument_list|,
name|other
argument_list|,
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|newPatchSetByOwnerOnReviewableChangeToWip ()
specifier|public
name|void
name|newPatchSetByOwnerOnReviewableChangeToWip
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master%wip"
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|newPatchSetOnWipChange ()
specifier|public
name|void
name|newPatchSetOnWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master%wip"
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|newPatchSetOnWipChangeNotifyAll ()
specifier|public
name|void
name|newPatchSetOnWipChangeNotifyAll
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master%wip,notify=ALL"
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|newPatchSetOnWipChangeToReady ()
specifier|public
name|void
name|newPatchSetOnWipChangeToReady
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master%ready"
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|newPatchSetOnReviewableWipChange ()
specifier|public
name|void
name|newPatchSetOnReviewableWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableWipChange
argument_list|()
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master%wip"
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|newPatchSetOnReviewableChangeAddingReviewer ()
specifier|public
name|void
name|newPatchSetOnReviewableChangeAddingReviewer
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|newReviewer
init|=
name|sc
operator|.
name|testAccount
argument_list|(
literal|"newReviewer"
argument_list|)
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master%r="
operator|+
name|newReviewer
operator|.
name|username
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|newReviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|newPatchSetOnWipChangeAddingReviewer ()
specifier|public
name|void
name|newPatchSetOnWipChangeAddingReviewer
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|TestAccount
name|newReviewer
init|=
name|sc
operator|.
name|testAccount
argument_list|(
literal|"newReviewer"
argument_list|)
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master%r="
operator|+
name|newReviewer
operator|.
name|username
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|newPatchSetOnWipChangeAddingReviewerNotifyAll ()
specifier|public
name|void
name|newPatchSetOnWipChangeAddingReviewerNotifyAll
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|TestAccount
name|newReviewer
init|=
name|sc
operator|.
name|testAccount
argument_list|(
literal|"newReviewer"
argument_list|)
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master%notify=ALL,r="
operator|+
name|newReviewer
operator|.
name|username
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|newReviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|newPatchSetOnWipChangeSettingReady ()
specifier|public
name|void
name|newPatchSetOnWipChangeSettingReady
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|pushTo
argument_list|(
name|sc
argument_list|,
literal|"refs/for/master%ready"
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
DECL|method|pushTo (StagedChange sc, String ref, TestAccount by)
specifier|private
name|void
name|pushTo
parameter_list|(
name|StagedChange
name|sc
parameter_list|,
name|String
name|ref
parameter_list|,
name|TestAccount
name|by
parameter_list|)
throws|throws
name|Exception
block|{
name|pushTo
argument_list|(
name|sc
argument_list|,
name|ref
argument_list|,
name|by
argument_list|,
name|ENABLED
argument_list|)
expr_stmt|;
block|}
DECL|method|pushTo (StagedChange sc, String ref, TestAccount by, EmailStrategy emailStrategy)
specifier|private
name|void
name|pushTo
parameter_list|(
name|StagedChange
name|sc
parameter_list|,
name|String
name|ref
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|EmailStrategy
name|emailStrategy
parameter_list|)
throws|throws
name|Exception
block|{
name|setEmailStrategy
argument_list|(
name|by
argument_list|,
name|emailStrategy
argument_list|)
expr_stmt|;
name|pushFactory
operator|.
name|create
argument_list|(
name|by
operator|.
name|getIdent
argument_list|()
argument_list|,
name|sc
operator|.
name|repo
argument_list|,
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|to
argument_list|(
name|ref
argument_list|)
operator|.
name|assertOkStatus
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|editCommitMessageEditByOwnerOnReviewableChange ()
specifier|public
name|void
name|editCommitMessageEditByOwnerOnReviewableChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|editCommitMessage
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|editCommitMessageEditByOtherOnReviewableChange ()
specifier|public
name|void
name|editCommitMessageEditByOtherOnReviewableChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|editCommitMessage
argument_list|(
name|sc
argument_list|,
name|other
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|editCommitMessageByOtherOnReviewableChangeOwnerSelfCc ()
specifier|public
name|void
name|editCommitMessageByOtherOnReviewableChangeOwnerSelfCc
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|editCommitMessage
argument_list|(
name|sc
argument_list|,
name|other
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|other
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|editCommitMessageByOtherOnReviewableChangeNotifyOwnerReviewers ()
specifier|public
name|void
name|editCommitMessageByOtherOnReviewableChangeNotifyOwnerReviewers
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|editCommitMessage
argument_list|(
name|sc
argument_list|,
name|other
argument_list|,
name|OWNER_REVIEWERS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|editCommitMessageByOtherOnReviewableChangeOwnerSelfCcNotifyOwnerReviewers ()
specifier|public
name|void
name|editCommitMessageByOtherOnReviewableChangeOwnerSelfCcNotifyOwnerReviewers
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|editCommitMessage
argument_list|(
name|sc
argument_list|,
name|other
argument_list|,
name|OWNER_REVIEWERS
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|,
name|other
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|editCommitMessageByOtherOnReviewableChangeNotifyOwner ()
specifier|public
name|void
name|editCommitMessageByOtherOnReviewableChangeNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|editCommitMessage
argument_list|(
name|sc
argument_list|,
name|other
argument_list|,
name|OWNER
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|editCommitMessageByOtherOnReviewableChangeOwnerSelfCcNotifyOwner ()
specifier|public
name|void
name|editCommitMessageByOtherOnReviewableChangeOwnerSelfCcNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|editCommitMessage
argument_list|(
name|sc
argument_list|,
name|other
argument_list|,
name|OWNER
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|other
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|editCommitMessageByOtherOnReviewableChangeNotifyNone ()
specifier|public
name|void
name|editCommitMessageByOtherOnReviewableChangeNotifyNone
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|editCommitMessage
argument_list|(
name|sc
argument_list|,
name|other
argument_list|,
name|NONE
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|editCommitMessageByOtherOnReviewableChangeOwnerSelfCcNotifyNone ()
specifier|public
name|void
name|editCommitMessageByOtherOnReviewableChangeOwnerSelfCcNotifyNone
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|editCommitMessage
argument_list|(
name|sc
argument_list|,
name|other
argument_list|,
name|NONE
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|editCommitMessageOnWipChange ()
specifier|public
name|void
name|editCommitMessageOnWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|editCommitMessage
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|editCommitMessageByOtherOnWipChange ()
specifier|public
name|void
name|editCommitMessageByOtherOnWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|editCommitMessage
argument_list|(
name|sc
argument_list|,
name|other
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|editCommitMessageByOtherOnWipChangeSelfCc ()
specifier|public
name|void
name|editCommitMessageByOtherOnWipChangeSelfCc
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|editCommitMessage
argument_list|(
name|sc
argument_list|,
name|other
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|other
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|editCommitMessageOnWipChangeNotifyAll ()
specifier|public
name|void
name|editCommitMessageOnWipChangeNotifyAll
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|editCommitMessage
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newpatchset"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
DECL|method|editCommitMessage (StagedChange sc, TestAccount by)
specifier|private
name|void
name|editCommitMessage
parameter_list|(
name|StagedChange
name|sc
parameter_list|,
name|TestAccount
name|by
parameter_list|)
throws|throws
name|Exception
block|{
name|editCommitMessage
argument_list|(
name|sc
argument_list|,
name|by
argument_list|,
literal|null
argument_list|,
name|ENABLED
argument_list|)
expr_stmt|;
block|}
DECL|method|editCommitMessage (StagedChange sc, TestAccount by, @Nullable NotifyHandling notify)
specifier|private
name|void
name|editCommitMessage
parameter_list|(
name|StagedChange
name|sc
parameter_list|,
name|TestAccount
name|by
parameter_list|,
annotation|@
name|Nullable
name|NotifyHandling
name|notify
parameter_list|)
throws|throws
name|Exception
block|{
name|editCommitMessage
argument_list|(
name|sc
argument_list|,
name|by
argument_list|,
name|notify
argument_list|,
name|ENABLED
argument_list|)
expr_stmt|;
block|}
DECL|method|editCommitMessage (StagedChange sc, TestAccount by, EmailStrategy emailStrategy)
specifier|private
name|void
name|editCommitMessage
parameter_list|(
name|StagedChange
name|sc
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|EmailStrategy
name|emailStrategy
parameter_list|)
throws|throws
name|Exception
block|{
name|editCommitMessage
argument_list|(
name|sc
argument_list|,
name|by
argument_list|,
literal|null
argument_list|,
name|emailStrategy
argument_list|)
expr_stmt|;
block|}
DECL|method|editCommitMessage ( StagedChange sc, TestAccount by, @Nullable NotifyHandling notify, EmailStrategy emailStrategy)
specifier|private
name|void
name|editCommitMessage
parameter_list|(
name|StagedChange
name|sc
parameter_list|,
name|TestAccount
name|by
parameter_list|,
annotation|@
name|Nullable
name|NotifyHandling
name|notify
parameter_list|,
name|EmailStrategy
name|emailStrategy
parameter_list|)
throws|throws
name|Exception
block|{
name|setEmailStrategy
argument_list|(
name|by
argument_list|,
name|emailStrategy
argument_list|)
expr_stmt|;
name|CommitInfo
name|commit
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|revision
argument_list|(
literal|"current"
argument_list|)
operator|.
name|commit
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|CommitMessageInput
name|in
init|=
operator|new
name|CommitMessageInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|message
operator|=
literal|"update\n"
operator|+
name|commit
operator|.
name|message
expr_stmt|;
name|in
operator|.
name|notify
operator|=
name|notify
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|setMessage
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
comment|/*    * RestoredSender tests.    */
annotation|@
name|Test
DECL|method|restoreReviewableChange ()
specifier|public
name|void
name|restoreReviewableChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageAbandonedReviewableChange
argument_list|()
decl_stmt|;
name|restore
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"restore"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|restoreReviewableWipChange ()
specifier|public
name|void
name|restoreReviewableWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageAbandonedReviewableWipChange
argument_list|()
decl_stmt|;
name|restore
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"restore"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|restoreWipChange ()
specifier|public
name|void
name|restoreWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageAbandonedWipChange
argument_list|()
decl_stmt|;
name|restore
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"restore"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|restoreReviewableChangeByAdmin ()
specifier|public
name|void
name|restoreReviewableChangeByAdmin
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageAbandonedReviewableChange
argument_list|()
decl_stmt|;
name|restore
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|admin
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"restore"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|restoreReviewableChangeByOwnerCcingSelf ()
specifier|public
name|void
name|restoreReviewableChangeByOwnerCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageAbandonedReviewableChange
argument_list|()
decl_stmt|;
name|restore
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"restore"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|restoreReviewableChangeByAdminCcingSelf ()
specifier|public
name|void
name|restoreReviewableChangeByAdminCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageAbandonedReviewableChange
argument_list|()
decl_stmt|;
name|restore
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|admin
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"restore"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|admin
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
DECL|method|restore (String changeId, TestAccount by)
specifier|private
name|void
name|restore
parameter_list|(
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|)
throws|throws
name|Exception
block|{
name|restore
argument_list|(
name|changeId
argument_list|,
name|by
argument_list|,
name|ENABLED
argument_list|)
expr_stmt|;
block|}
DECL|method|restore (String changeId, TestAccount by, EmailStrategy emailStrategy)
specifier|private
name|void
name|restore
parameter_list|(
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|EmailStrategy
name|emailStrategy
parameter_list|)
throws|throws
name|Exception
block|{
name|setEmailStrategy
argument_list|(
name|by
argument_list|,
name|emailStrategy
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|by
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|restore
argument_list|()
expr_stmt|;
block|}
comment|/*    * RevertedSender tests.    */
annotation|@
name|Test
DECL|method|revertChangeByOwner ()
specifier|public
name|void
name|revertChangeByOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageChange
argument_list|()
decl_stmt|;
name|revert
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
comment|// email for the newly created revert change
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|watchingProjectOwner
argument_list|,
name|admin
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_CHANGES
argument_list|,
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
comment|// email for the change that is reverted
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"revert"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|admin
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|revertChangeByOwnerCcingSelf ()
specifier|public
name|void
name|revertChangeByOwnerCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageChange
argument_list|()
decl_stmt|;
name|revert
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
comment|// email for the newly created revert change
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|watchingProjectOwner
argument_list|,
name|admin
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_CHANGES
argument_list|,
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
comment|// email for the change that is reverted
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"revert"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|admin
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|revertChangeByOther ()
specifier|public
name|void
name|revertChangeByOther
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageChange
argument_list|()
decl_stmt|;
name|revert
argument_list|(
name|sc
argument_list|,
name|other
argument_list|)
expr_stmt|;
comment|// email for the newly created revert change
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|watchingProjectOwner
argument_list|,
name|admin
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_CHANGES
argument_list|,
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
comment|// email for the change that is reverted
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"revert"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|admin
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|revertChangeByOtherCcingSelf ()
specifier|public
name|void
name|revertChangeByOtherCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageChange
argument_list|()
decl_stmt|;
name|revert
argument_list|(
name|sc
argument_list|,
name|other
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
comment|// email for the newly created revert change
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|watchingProjectOwner
argument_list|,
name|admin
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccer
argument_list|,
name|other
argument_list|)
operator|.
name|bcc
argument_list|(
name|NEW_CHANGES
argument_list|,
name|NEW_PATCHSETS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
comment|// email for the change that is reverted
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"revert"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|other
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|admin
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
DECL|method|stageChange ()
specifier|private
name|StagedChange
name|stageChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|admin
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|revision
argument_list|(
literal|"current"
argument_list|)
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|revision
argument_list|(
literal|"current"
argument_list|)
operator|.
name|submit
argument_list|()
expr_stmt|;
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
return|return
name|sc
return|;
block|}
DECL|method|revert (StagedChange sc, TestAccount by)
specifier|private
name|void
name|revert
parameter_list|(
name|StagedChange
name|sc
parameter_list|,
name|TestAccount
name|by
parameter_list|)
throws|throws
name|Exception
block|{
name|revert
argument_list|(
name|sc
argument_list|,
name|by
argument_list|,
name|ENABLED
argument_list|)
expr_stmt|;
block|}
DECL|method|revert (StagedChange sc, TestAccount by, EmailStrategy emailStrategy)
specifier|private
name|void
name|revert
parameter_list|(
name|StagedChange
name|sc
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|EmailStrategy
name|emailStrategy
parameter_list|)
throws|throws
name|Exception
block|{
name|setEmailStrategy
argument_list|(
name|by
argument_list|,
name|emailStrategy
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|by
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|revert
argument_list|()
expr_stmt|;
block|}
comment|/*    * SetAssigneeSender tests.    */
annotation|@
name|Test
DECL|method|setAssigneeOnReviewableChange ()
specifier|public
name|void
name|setAssigneeOnReviewableChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|assignee
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|to
argument_list|(
name|sc
operator|.
name|assignee
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setAssigneeOnReviewableChangeByOwnerCcingSelf ()
specifier|public
name|void
name|setAssigneeOnReviewableChangeByOwnerCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|assignee
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|to
argument_list|(
name|sc
operator|.
name|assignee
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setAssigneeOnReviewableChangeByAdmin ()
specifier|public
name|void
name|setAssigneeOnReviewableChangeByAdmin
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|admin
argument_list|,
name|sc
operator|.
name|assignee
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|to
argument_list|(
name|sc
operator|.
name|assignee
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setAssigneeOnReviewableChangeByAdminCcingSelf ()
specifier|public
name|void
name|setAssigneeOnReviewableChangeByAdminCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|admin
argument_list|,
name|sc
operator|.
name|assignee
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|admin
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|to
argument_list|(
name|sc
operator|.
name|assignee
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setAssigneeToSelfOnReviewableChange ()
specifier|public
name|void
name|setAssigneeToSelfOnReviewableChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeAssigneeOnReviewableChange ()
specifier|public
name|void
name|changeAssigneeOnReviewableChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|other
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"other"
argument_list|,
literal|"other@example.com"
argument_list|,
literal|"other"
argument_list|)
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|other
argument_list|)
expr_stmt|;
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|assignee
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|to
argument_list|(
name|sc
operator|.
name|assignee
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeAssigneeToSelfOnReviewableChange ()
specifier|public
name|void
name|changeAssigneeToSelfOnReviewableChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|assignee
argument_list|)
expr_stmt|;
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setAssigneeOnReviewableWipChange ()
specifier|public
name|void
name|setAssigneeOnReviewableWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableWipChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|assignee
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|to
argument_list|(
name|sc
operator|.
name|assignee
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setAssigneeOnWipChange ()
specifier|public
name|void
name|setAssigneeOnWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|assignee
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|to
argument_list|(
name|sc
operator|.
name|assignee
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
DECL|method|assign (StagedChange sc, TestAccount by, TestAccount to)
specifier|private
name|void
name|assign
parameter_list|(
name|StagedChange
name|sc
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|TestAccount
name|to
parameter_list|)
throws|throws
name|Exception
block|{
name|assign
argument_list|(
name|sc
argument_list|,
name|by
argument_list|,
name|to
argument_list|,
name|ENABLED
argument_list|)
expr_stmt|;
block|}
DECL|method|assign (StagedChange sc, TestAccount by, TestAccount to, EmailStrategy emailStrategy)
specifier|private
name|void
name|assign
parameter_list|(
name|StagedChange
name|sc
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|TestAccount
name|to
parameter_list|,
name|EmailStrategy
name|emailStrategy
parameter_list|)
throws|throws
name|Exception
block|{
name|setEmailStrategy
argument_list|(
name|by
argument_list|,
name|emailStrategy
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|by
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|AssigneeInput
name|in
init|=
operator|new
name|AssigneeInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|assignee
operator|=
name|to
operator|.
name|email
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|setAssignee
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
comment|/*    * Start review and WIP tests.    */
annotation|@
name|Test
DECL|method|startReviewOnWipChange ()
specifier|public
name|void
name|startReviewOnWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|startReview
argument_list|(
name|sc
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|startReviewOnWipChangeCcingSelf ()
specifier|public
name|void
name|startReviewOnWipChangeCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|setEmailStrategy
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|startReview
argument_list|(
name|sc
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"comment"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setWorkInProgress ()
specifier|public
name|void
name|setWorkInProgress
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|setWorkInProgress
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|didNotSend
argument_list|()
expr_stmt|;
block|}
DECL|method|startReview (StagedChange sc)
specifier|private
name|void
name|startReview
parameter_list|(
name|StagedChange
name|sc
parameter_list|)
throws|throws
name|Exception
block|{
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|sc
operator|.
name|owner
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|setReadyForReview
argument_list|()
expr_stmt|;
block|}
DECL|method|setWorkInProgressByDefault (Project.NameKey p, InheritableBoolean v)
specifier|private
name|void
name|setWorkInProgressByDefault
parameter_list|(
name|Project
operator|.
name|NameKey
name|p
parameter_list|,
name|InheritableBoolean
name|v
parameter_list|)
throws|throws
name|Exception
block|{
name|ConfigInput
name|input
init|=
operator|new
name|ConfigInput
argument_list|()
decl_stmt|;
name|input
operator|.
name|workInProgressByDefault
operator|=
name|v
expr_stmt|;
name|gApi
operator|.
name|projects
argument_list|()
operator|.
name|name
argument_list|(
name|p
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|config
argument_list|(
name|input
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

