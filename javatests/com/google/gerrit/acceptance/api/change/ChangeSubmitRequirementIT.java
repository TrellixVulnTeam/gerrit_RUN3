begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2018 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.api.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|api
operator|.
name|change
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractDaemonTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|PushOneCommit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|SubmitRecord
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|SubmitRequirement
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|annotations
operator|.
name|Exports
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ChangeInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|SubmitRequirementInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|config
operator|.
name|FactoryModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|query
operator|.
name|change
operator|.
name|ChangeData
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|rules
operator|.
name|SubmitRule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Module
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|ChangeSubmitRequirementIT
specifier|public
class|class
name|ChangeSubmitRequirementIT
extends|extends
name|AbstractDaemonTest
block|{
DECL|field|req
specifier|private
specifier|static
specifier|final
name|SubmitRequirement
name|req
init|=
name|SubmitRequirement
operator|.
name|builder
argument_list|()
operator|.
name|setType
argument_list|(
literal|"custom_rule"
argument_list|)
operator|.
name|setFallbackText
argument_list|(
literal|"Fallback text"
argument_list|)
operator|.
name|addCustomValue
argument_list|(
literal|"key"
argument_list|,
literal|"value"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|reqInfo
specifier|private
specifier|static
specifier|final
name|SubmitRequirementInfo
name|reqInfo
init|=
operator|new
name|SubmitRequirementInfo
argument_list|(
literal|"NOT_READY"
argument_list|,
literal|"Fallback text"
argument_list|,
literal|"custom_rule"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"key"
argument_list|,
literal|"value"
argument_list|)
argument_list|)
decl_stmt|;
annotation|@
name|Override
DECL|method|createModule ()
specifier|public
name|Module
name|createModule
parameter_list|()
block|{
return|return
operator|new
name|FactoryModule
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|bind
argument_list|(
name|SubmitRule
operator|.
name|class
argument_list|)
operator|.
name|annotatedWith
argument_list|(
name|Exports
operator|.
name|named
argument_list|(
literal|"CustomSubmitRule"
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
name|CustomSubmitRule
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
annotation|@
name|Test
DECL|method|checkSubmitRequirementIsPropagated ()
specifier|public
name|void
name|checkSubmitRequirementIsPropagated
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|ChangeInfo
name|result
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|result
operator|.
name|requirements
argument_list|)
operator|.
name|containsExactly
argument_list|(
name|reqInfo
argument_list|)
expr_stmt|;
block|}
DECL|class|CustomSubmitRule
specifier|private
specifier|static
class|class
name|CustomSubmitRule
implements|implements
name|SubmitRule
block|{
annotation|@
name|Override
DECL|method|evaluate (ChangeData changeData)
specifier|public
name|Optional
argument_list|<
name|SubmitRecord
argument_list|>
name|evaluate
parameter_list|(
name|ChangeData
name|changeData
parameter_list|)
block|{
name|SubmitRecord
name|record
init|=
operator|new
name|SubmitRecord
argument_list|()
decl_stmt|;
name|record
operator|.
name|labels
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|record
operator|.
name|status
operator|=
name|SubmitRecord
operator|.
name|Status
operator|.
name|NOT_READY
expr_stmt|;
name|record
operator|.
name|requirements
operator|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|req
argument_list|)
expr_stmt|;
return|return
name|Optional
operator|.
name|of
argument_list|(
name|record
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

