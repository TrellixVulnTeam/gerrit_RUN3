begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2018 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.api.accounts
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|api
operator|.
name|accounts
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertWithMessage
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|GerritApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|AccountInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestApiException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|GerritPersonIdent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|InternalAccountUpdate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AllUsersName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|extensions
operator|.
name|events
operator|.
name|GitReferenceUpdated
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|GitRepositoryManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|meta
operator|.
name|MetaDataUpdate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|index
operator|.
name|account
operator|.
name|AccountIndexer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|query
operator|.
name|account
operator|.
name|InternalAccountQuery
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testing
operator|.
name|InMemoryTestEnvironment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|errors
operator|.
name|ConfigInvalidException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|PersonIdent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|AccountIndexerIT
specifier|public
class|class
name|AccountIndexerIT
block|{
DECL|field|testEnvironment
annotation|@
name|Rule
specifier|public
name|InMemoryTestEnvironment
name|testEnvironment
init|=
operator|new
name|InMemoryTestEnvironment
argument_list|()
decl_stmt|;
DECL|field|accountIndexer
annotation|@
name|Inject
specifier|private
name|AccountIndexer
name|accountIndexer
decl_stmt|;
DECL|field|gApi
annotation|@
name|Inject
specifier|private
name|GerritApi
name|gApi
decl_stmt|;
DECL|field|accountCache
annotation|@
name|Inject
specifier|private
name|AccountCache
name|accountCache
decl_stmt|;
DECL|field|accountQueryProvider
annotation|@
name|Inject
specifier|private
name|Provider
argument_list|<
name|InternalAccountQuery
argument_list|>
name|accountQueryProvider
decl_stmt|;
DECL|field|repoManager
annotation|@
name|Inject
specifier|private
name|GitRepositoryManager
name|repoManager
decl_stmt|;
DECL|field|allUsersName
annotation|@
name|Inject
specifier|private
name|AllUsersName
name|allUsersName
decl_stmt|;
DECL|field|serverIdent
annotation|@
name|Inject
annotation|@
name|GerritPersonIdent
specifier|protected
name|Provider
argument_list|<
name|PersonIdent
argument_list|>
name|serverIdent
decl_stmt|;
annotation|@
name|Test
DECL|method|indexingUpdatesTheIndex ()
specifier|public
name|void
name|indexingUpdatesTheIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|Account
operator|.
name|Id
name|accountId
init|=
name|createAccount
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|String
name|preferredEmail
init|=
literal|"foo@example.com"
decl_stmt|;
name|updateAccountWithoutCacheOrIndex
argument_list|(
name|accountId
argument_list|,
name|newAccountUpdate
argument_list|()
operator|.
name|setPreferredEmail
argument_list|(
name|preferredEmail
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|accountQueryProvider
operator|.
name|get
argument_list|()
operator|.
name|byPreferredEmail
argument_list|(
name|preferredEmail
argument_list|)
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|accountIndexer
operator|.
name|index
argument_list|(
name|accountId
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AccountState
argument_list|>
name|matchedAccountStates
init|=
name|accountQueryProvider
operator|.
name|get
argument_list|()
operator|.
name|byPreferredEmail
argument_list|(
name|preferredEmail
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|matchedAccountStates
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchedAccountStates
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|accountId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|indexCannotBeCorruptedByStaleCache ()
specifier|public
name|void
name|indexCannotBeCorruptedByStaleCache
parameter_list|()
throws|throws
name|Exception
block|{
name|Account
operator|.
name|Id
name|accountId
init|=
name|createAccount
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|loadAccountToCache
argument_list|(
name|accountId
argument_list|)
expr_stmt|;
name|String
name|preferredEmail
init|=
literal|"foo@example.com"
decl_stmt|;
name|updateAccountWithoutCacheOrIndex
argument_list|(
name|accountId
argument_list|,
name|newAccountUpdate
argument_list|()
operator|.
name|setPreferredEmail
argument_list|(
name|preferredEmail
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|accountQueryProvider
operator|.
name|get
argument_list|()
operator|.
name|byPreferredEmail
argument_list|(
name|preferredEmail
argument_list|)
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|accountIndexer
operator|.
name|index
argument_list|(
name|accountId
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AccountState
argument_list|>
name|matchedAccountStates
init|=
name|accountQueryProvider
operator|.
name|get
argument_list|()
operator|.
name|byPreferredEmail
argument_list|(
name|preferredEmail
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|matchedAccountStates
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchedAccountStates
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|accountId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|indexingUpdatesStaleCache ()
specifier|public
name|void
name|indexingUpdatesStaleCache
parameter_list|()
throws|throws
name|Exception
block|{
name|Account
operator|.
name|Id
name|accountId
init|=
name|createAccount
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|loadAccountToCache
argument_list|(
name|accountId
argument_list|)
expr_stmt|;
name|String
name|status
init|=
literal|"ooo"
decl_stmt|;
name|updateAccountWithoutCacheOrIndex
argument_list|(
name|accountId
argument_list|,
name|newAccountUpdate
argument_list|()
operator|.
name|setStatus
argument_list|(
name|status
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|accountCache
operator|.
name|get
argument_list|(
name|accountId
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getAccount
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
name|accountIndexer
operator|.
name|index
argument_list|(
name|accountId
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|accountCache
operator|.
name|get
argument_list|(
name|accountId
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|getAccount
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|status
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|reindexingStaleAccountUpdatesTheIndex ()
specifier|public
name|void
name|reindexingStaleAccountUpdatesTheIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|Account
operator|.
name|Id
name|accountId
init|=
name|createAccount
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|String
name|preferredEmail
init|=
literal|"foo@example.com"
decl_stmt|;
name|updateAccountWithoutCacheOrIndex
argument_list|(
name|accountId
argument_list|,
name|newAccountUpdate
argument_list|()
operator|.
name|setPreferredEmail
argument_list|(
name|preferredEmail
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|accountQueryProvider
operator|.
name|get
argument_list|()
operator|.
name|byPreferredEmail
argument_list|(
name|preferredEmail
argument_list|)
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|accountIndexer
operator|.
name|reindexIfStale
argument_list|(
name|accountId
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|AccountState
argument_list|>
name|matchedAccountStates
init|=
name|accountQueryProvider
operator|.
name|get
argument_list|()
operator|.
name|byPreferredEmail
argument_list|(
name|preferredEmail
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|matchedAccountStates
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|matchedAccountStates
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|accountId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|notStaleAccountIsNotReindexed ()
specifier|public
name|void
name|notStaleAccountIsNotReindexed
parameter_list|()
throws|throws
name|Exception
block|{
name|Account
operator|.
name|Id
name|accountId
init|=
name|createAccount
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|updateAccountWithoutCacheOrIndex
argument_list|(
name|accountId
argument_list|,
name|newAccountUpdate
argument_list|()
operator|.
name|setPreferredEmail
argument_list|(
literal|"foo@example.com"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|accountIndexer
operator|.
name|index
argument_list|(
name|accountId
argument_list|)
expr_stmt|;
name|boolean
name|reindexed
init|=
name|accountIndexer
operator|.
name|reindexIfStale
argument_list|(
name|accountId
argument_list|)
decl_stmt|;
name|assertWithMessage
argument_list|(
literal|"Account should not have been reindexed"
argument_list|)
operator|.
name|that
argument_list|(
name|reindexed
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|indexStalenessIsNotDerivedFromCacheStaleness ()
specifier|public
name|void
name|indexStalenessIsNotDerivedFromCacheStaleness
parameter_list|()
throws|throws
name|Exception
block|{
name|Account
operator|.
name|Id
name|accountId
init|=
name|createAccount
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|updateAccountWithoutCacheOrIndex
argument_list|(
name|accountId
argument_list|,
name|newAccountUpdate
argument_list|()
operator|.
name|setPreferredEmail
argument_list|(
literal|"foo@example.com"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|reloadAccountToCache
argument_list|(
name|accountId
argument_list|)
expr_stmt|;
name|boolean
name|reindexed
init|=
name|accountIndexer
operator|.
name|reindexIfStale
argument_list|(
name|accountId
argument_list|)
decl_stmt|;
name|assertWithMessage
argument_list|(
literal|"Account should have been reindexed"
argument_list|)
operator|.
name|that
argument_list|(
name|reindexed
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
block|}
DECL|method|createAccount (String name)
specifier|private
name|Account
operator|.
name|Id
name|createAccount
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|RestApiException
block|{
name|AccountInfo
name|account
init|=
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|create
argument_list|(
name|name
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
return|return
operator|new
name|Account
operator|.
name|Id
argument_list|(
name|account
operator|.
name|_accountId
argument_list|)
return|;
block|}
DECL|method|reloadAccountToCache (Account.Id accountId)
specifier|private
name|void
name|reloadAccountToCache
parameter_list|(
name|Account
operator|.
name|Id
name|accountId
parameter_list|)
block|{
name|accountCache
operator|.
name|evict
argument_list|(
name|accountId
argument_list|)
expr_stmt|;
name|loadAccountToCache
argument_list|(
name|accountId
argument_list|)
expr_stmt|;
block|}
DECL|method|loadAccountToCache (Account.Id accountId)
specifier|private
name|void
name|loadAccountToCache
parameter_list|(
name|Account
operator|.
name|Id
name|accountId
parameter_list|)
block|{
name|accountCache
operator|.
name|get
argument_list|(
name|accountId
argument_list|)
expr_stmt|;
block|}
DECL|method|newAccountUpdate ()
specifier|private
specifier|static
name|InternalAccountUpdate
operator|.
name|Builder
name|newAccountUpdate
parameter_list|()
block|{
return|return
name|InternalAccountUpdate
operator|.
name|builder
argument_list|()
return|;
block|}
DECL|method|updateAccountWithoutCacheOrIndex ( Account.Id accountId, InternalAccountUpdate accountUpdate)
specifier|private
name|void
name|updateAccountWithoutCacheOrIndex
parameter_list|(
name|Account
operator|.
name|Id
name|accountId
parameter_list|,
name|InternalAccountUpdate
name|accountUpdate
parameter_list|)
throws|throws
name|IOException
throws|,
name|ConfigInvalidException
block|{
try|try
init|(
name|Repository
name|allUsersRepo
init|=
name|repoManager
operator|.
name|openRepository
argument_list|(
name|allUsersName
argument_list|)
init|;
name|MetaDataUpdate
name|md
operator|=
operator|new
name|MetaDataUpdate
argument_list|(
name|GitReferenceUpdated
operator|.
name|DISABLED
argument_list|,
name|allUsersName
argument_list|,
name|allUsersRepo
argument_list|)
init|)
block|{
name|PersonIdent
name|ident
init|=
name|serverIdent
operator|.
name|get
argument_list|()
decl_stmt|;
name|md
operator|.
name|getCommitBuilder
argument_list|()
operator|.
name|setAuthor
argument_list|(
name|ident
argument_list|)
expr_stmt|;
name|md
operator|.
name|getCommitBuilder
argument_list|()
operator|.
name|setCommitter
argument_list|(
name|ident
argument_list|)
expr_stmt|;
name|AccountConfig
name|accountConfig
init|=
operator|new
name|AccountConfig
argument_list|(
name|accountId
argument_list|,
name|allUsersName
argument_list|,
name|allUsersRepo
argument_list|)
operator|.
name|load
argument_list|()
decl_stmt|;
name|accountConfig
operator|.
name|setAccountUpdate
argument_list|(
name|accountUpdate
argument_list|)
expr_stmt|;
name|accountConfig
operator|.
name|commit
argument_list|(
name|md
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

