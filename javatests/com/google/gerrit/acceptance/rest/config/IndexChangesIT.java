begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2019 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.rest.config
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|config
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractDaemonTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|ChangeIndexedCounter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ChangeInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|ChangeIndexedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|registration
operator|.
name|DynamicSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|registration
operator|.
name|RegistrationHandle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|restapi
operator|.
name|config
operator|.
name|IndexChanges
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|IndexChangesIT
specifier|public
class|class
name|IndexChangesIT
extends|extends
name|AbstractDaemonTest
block|{
DECL|field|changeIndexedListeners
annotation|@
name|Inject
specifier|private
name|DynamicSet
argument_list|<
name|ChangeIndexedListener
argument_list|>
name|changeIndexedListeners
decl_stmt|;
DECL|field|changeIndexedCounter
specifier|private
name|ChangeIndexedCounter
name|changeIndexedCounter
decl_stmt|;
DECL|field|changeIndexedCounterHandle
specifier|private
name|RegistrationHandle
name|changeIndexedCounterHandle
decl_stmt|;
annotation|@
name|Before
DECL|method|addChangeIndexedCounter ()
specifier|public
name|void
name|addChangeIndexedCounter
parameter_list|()
block|{
name|changeIndexedCounter
operator|=
operator|new
name|ChangeIndexedCounter
argument_list|()
expr_stmt|;
name|changeIndexedCounterHandle
operator|=
name|changeIndexedListeners
operator|.
name|add
argument_list|(
literal|"gerrit"
argument_list|,
name|changeIndexedCounter
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|removeChangeIndexedCounter ()
specifier|public
name|void
name|removeChangeIndexedCounter
parameter_list|()
block|{
if|if
condition|(
name|changeIndexedCounterHandle
operator|!=
literal|null
condition|)
block|{
name|changeIndexedCounterHandle
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|indexRequestFromNonAdminRejected ()
specifier|public
name|void
name|indexRequestFromNonAdminRejected
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|IndexChanges
operator|.
name|Input
name|in
init|=
operator|new
name|IndexChanges
operator|.
name|Input
argument_list|()
decl_stmt|;
name|in
operator|.
name|changes
operator|=
name|ImmutableSet
operator|.
name|of
argument_list|(
name|changeId
argument_list|)
expr_stmt|;
name|changeIndexedCounter
operator|.
name|clear
argument_list|()
expr_stmt|;
name|userRestSession
operator|.
name|post
argument_list|(
literal|"/config/server/index.changes"
argument_list|,
name|in
argument_list|)
operator|.
name|assertForbidden
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|changeIndexedCounter
operator|.
name|getCount
argument_list|(
name|info
argument_list|(
name|changeId
argument_list|)
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|indexVisibleChange ()
specifier|public
name|void
name|indexVisibleChange
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|IndexChanges
operator|.
name|Input
name|in
init|=
operator|new
name|IndexChanges
operator|.
name|Input
argument_list|()
decl_stmt|;
name|in
operator|.
name|changes
operator|=
name|ImmutableSet
operator|.
name|of
argument_list|(
name|changeId
argument_list|)
expr_stmt|;
name|changeIndexedCounter
operator|.
name|clear
argument_list|()
expr_stmt|;
name|adminRestSession
operator|.
name|post
argument_list|(
literal|"/config/server/index.changes"
argument_list|,
name|in
argument_list|)
operator|.
name|assertOK
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|changeIndexedCounter
operator|.
name|getCount
argument_list|(
name|info
argument_list|(
name|changeId
argument_list|)
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|indexNonVisibleChange ()
specifier|public
name|void
name|indexNonVisibleChange
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|ChangeInfo
name|changeInfo
init|=
name|info
argument_list|(
name|changeId
argument_list|)
decl_stmt|;
name|blockRead
argument_list|(
literal|"refs/heads/master"
argument_list|)
expr_stmt|;
name|IndexChanges
operator|.
name|Input
name|in
init|=
operator|new
name|IndexChanges
operator|.
name|Input
argument_list|()
decl_stmt|;
name|changeIndexedCounter
operator|.
name|clear
argument_list|()
expr_stmt|;
name|in
operator|.
name|changes
operator|=
name|ImmutableSet
operator|.
name|of
argument_list|(
name|changeId
argument_list|)
expr_stmt|;
name|adminRestSession
operator|.
name|post
argument_list|(
literal|"/config/server/index.changes"
argument_list|,
name|in
argument_list|)
operator|.
name|assertOK
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|changeIndexedCounter
operator|.
name|getCount
argument_list|(
name|changeInfo
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|indexMultipleChanges ()
specifier|public
name|void
name|indexMultipleChanges
parameter_list|()
throws|throws
name|Exception
block|{
name|ImmutableSet
operator|.
name|Builder
argument_list|<
name|String
argument_list|>
name|changeIds
init|=
name|ImmutableSet
operator|.
name|builder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|changeIds
operator|.
name|add
argument_list|(
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|IndexChanges
operator|.
name|Input
name|in
init|=
operator|new
name|IndexChanges
operator|.
name|Input
argument_list|()
decl_stmt|;
name|in
operator|.
name|changes
operator|=
name|changeIds
operator|.
name|build
argument_list|()
expr_stmt|;
name|changeIndexedCounter
operator|.
name|clear
argument_list|()
expr_stmt|;
name|adminRestSession
operator|.
name|post
argument_list|(
literal|"/config/server/index.changes"
argument_list|,
name|in
argument_list|)
operator|.
name|assertOK
argument_list|()
expr_stmt|;
for|for
control|(
name|String
name|changeId
range|:
name|in
operator|.
name|changes
control|)
block|{
name|assertThat
argument_list|(
name|changeIndexedCounter
operator|.
name|getCount
argument_list|(
name|info
argument_list|(
name|changeId
argument_list|)
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

