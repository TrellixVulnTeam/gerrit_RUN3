begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.rest.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|change
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractDaemonTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|PushOneCommit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|RestResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ChangeApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|ChangeIdIT
specifier|public
class|class
name|ChangeIdIT
extends|extends
name|AbstractDaemonTest
block|{
annotation|@
name|Test
DECL|method|projectChangeNumberReturnsChange ()
specifier|public
name|void
name|projectChangeNumberReturnsChange
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|c
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RestResponse
name|res
init|=
name|adminRestSession
operator|.
name|get
argument_list|(
name|changeDetail
argument_list|(
name|getProjectChangeNumber
argument_list|(
name|c
operator|.
name|getChangeId
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertOK
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|wrongProjectChangeNumberReturnsNotFound ()
specifier|public
name|void
name|wrongProjectChangeNumberReturnsNotFound
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|c
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RestResponse
name|res1
init|=
name|adminRestSession
operator|.
name|get
argument_list|(
name|changeDetail
argument_list|(
literal|"unknown/project~"
operator|+
name|getNumericChangeId
argument_list|(
name|c
operator|.
name|getChangeId
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|res1
operator|.
name|assertNotFound
argument_list|()
expr_stmt|;
name|RestResponse
name|res2
init|=
name|adminRestSession
operator|.
name|get
argument_list|(
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"~"
operator|+
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
name|res2
operator|.
name|assertNotFound
argument_list|()
expr_stmt|;
comment|// Try a non-numeric change number
name|RestResponse
name|res3
init|=
name|adminRestSession
operator|.
name|get
argument_list|(
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"~some-id"
argument_list|)
decl_stmt|;
name|res3
operator|.
name|assertNotFound
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeNumberReturnsChange ()
specifier|public
name|void
name|changeNumberReturnsChange
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|c
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RestResponse
name|res
init|=
name|adminRestSession
operator|.
name|get
argument_list|(
name|changeDetail
argument_list|(
name|getNumericChangeId
argument_list|(
name|c
operator|.
name|getChangeId
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertOK
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|wrongChangeNumberReturnsNotFound ()
specifier|public
name|void
name|wrongChangeNumberReturnsNotFound
parameter_list|()
throws|throws
name|Exception
block|{
name|RestResponse
name|res
init|=
name|adminRestSession
operator|.
name|get
argument_list|(
name|changeDetail
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertNotFound
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|tripletChangeIdReturnsChange ()
specifier|public
name|void
name|tripletChangeIdReturnsChange
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|c
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RestResponse
name|res
init|=
name|adminRestSession
operator|.
name|get
argument_list|(
name|changeDetail
argument_list|(
name|getTriplet
argument_list|(
name|c
operator|.
name|getChangeId
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertOK
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|wrongTripletChangeIdReturnsNotFound ()
specifier|public
name|void
name|wrongTripletChangeIdReturnsNotFound
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|c
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RestResponse
name|res1
init|=
name|adminRestSession
operator|.
name|get
argument_list|(
name|changeDetail
argument_list|(
literal|"unknown~master~"
operator|+
name|c
operator|.
name|getChangeId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|res1
operator|.
name|assertNotFound
argument_list|()
expr_stmt|;
name|RestResponse
name|res2
init|=
name|adminRestSession
operator|.
name|get
argument_list|(
name|changeDetail
argument_list|(
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"~unknown~"
operator|+
name|c
operator|.
name|getChangeId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|res2
operator|.
name|assertNotFound
argument_list|()
expr_stmt|;
name|RestResponse
name|res3
init|=
name|adminRestSession
operator|.
name|get
argument_list|(
name|changeDetail
argument_list|(
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"~master~I1234567890"
argument_list|)
argument_list|)
decl_stmt|;
name|res3
operator|.
name|assertNotFound
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeIdReturnsChange ()
specifier|public
name|void
name|changeIdReturnsChange
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|c
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RestResponse
name|res
init|=
name|adminRestSession
operator|.
name|get
argument_list|(
name|changeDetail
argument_list|(
name|c
operator|.
name|getChangeId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertOK
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|wrongChangeIdReturnsNotFound ()
specifier|public
name|void
name|wrongChangeIdReturnsNotFound
parameter_list|()
throws|throws
name|Exception
block|{
name|RestResponse
name|res
init|=
name|adminRestSession
operator|.
name|get
argument_list|(
name|changeDetail
argument_list|(
literal|"I1234567890"
argument_list|)
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertNotFound
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeNumberRedirects ()
specifier|public
name|void
name|changeNumberRedirects
parameter_list|()
throws|throws
name|Exception
block|{
comment|// This test tests a redirect that is primarily intended for the UI (though the backend doesn't
comment|// really care who the caller is). The redirect rewrites a shorthand change number URL (/123) to
comment|// it's canonical long form (/c/project/+/123).
name|int
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
name|RestResponse
name|res
init|=
name|anonymousRestSession
operator|.
name|get
argument_list|(
literal|"/"
operator|+
name|changeId
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertTemporaryRedirect
argument_list|(
literal|"/c/"
operator|+
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"/+/"
operator|+
name|changeId
operator|+
literal|"/"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeNumberRedirectsWithTrailingSlash ()
specifier|public
name|void
name|changeNumberRedirectsWithTrailingSlash
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
name|RestResponse
name|res
init|=
name|anonymousRestSession
operator|.
name|get
argument_list|(
literal|"/"
operator|+
name|changeId
operator|+
literal|"/"
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertTemporaryRedirect
argument_list|(
literal|"/c/"
operator|+
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"/+/"
operator|+
name|changeId
operator|+
literal|"/"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeNumberOverflowNotFound ()
specifier|public
name|void
name|changeNumberOverflowNotFound
parameter_list|()
throws|throws
name|Exception
block|{
name|RestResponse
name|res
init|=
name|anonymousRestSession
operator|.
name|get
argument_list|(
literal|"/9"
operator|+
name|Long
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertNotFound
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|unknownChangeNumberNotFound ()
specifier|public
name|void
name|unknownChangeNumberNotFound
parameter_list|()
throws|throws
name|Exception
block|{
name|RestResponse
name|res
init|=
name|anonymousRestSession
operator|.
name|get
argument_list|(
literal|"/10"
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertNotFound
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|hiddenChangeNotFound ()
specifier|public
name|void
name|hiddenChangeNotFound
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
operator|.
name|Id
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|setPrivate
argument_list|(
literal|true
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|RestResponse
name|res
init|=
name|anonymousRestSession
operator|.
name|get
argument_list|(
literal|"/"
operator|+
name|changeId
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertNotFound
argument_list|()
expr_stmt|;
block|}
DECL|method|changeDetail (String changeId)
specifier|private
specifier|static
name|String
name|changeDetail
parameter_list|(
name|String
name|changeId
parameter_list|)
block|{
return|return
literal|"/changes/"
operator|+
name|changeId
operator|+
literal|"/detail"
return|;
block|}
comment|/** Convert a changeId (I0...01) to project~changeNumber (project~00001) */
DECL|method|getProjectChangeNumber (String changeId)
specifier|private
name|String
name|getProjectChangeNumber
parameter_list|(
name|String
name|changeId
parameter_list|)
throws|throws
name|Exception
block|{
name|ChangeApi
name|cApi
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
decl_stmt|;
return|return
name|cApi
operator|.
name|get
argument_list|()
operator|.
name|project
operator|+
literal|"~"
operator|+
name|cApi
operator|.
name|get
argument_list|()
operator|.
name|_number
return|;
block|}
comment|/** Convert a changeId (I0...01) to a triplet (project~branch~I0...01) */
DECL|method|getTriplet (String changeId)
specifier|private
name|String
name|getTriplet
parameter_list|(
name|String
name|changeId
parameter_list|)
throws|throws
name|Exception
block|{
name|ChangeApi
name|cApi
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
decl_stmt|;
return|return
name|cApi
operator|.
name|get
argument_list|()
operator|.
name|project
operator|+
literal|"~"
operator|+
name|cApi
operator|.
name|get
argument_list|()
operator|.
name|branch
operator|+
literal|"~"
operator|+
name|changeId
return|;
block|}
comment|/** Convert a changeId (I0...01) to a numeric changeId (00001) */
DECL|method|getNumericChangeId (String changeId)
specifier|private
name|String
name|getNumericChangeId
parameter_list|(
name|String
name|changeId
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|Integer
operator|.
name|toString
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|_number
argument_list|)
return|;
block|}
block|}
end_class

end_unit

