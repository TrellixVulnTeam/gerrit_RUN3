begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2016 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.rest.account
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|account
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|testsuite
operator|.
name|project
operator|.
name|TestProjectUpdate
operator|.
name|allow
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|testsuite
operator|.
name|project
operator|.
name|TestProjectUpdate
operator|.
name|allowCapability
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|testsuite
operator|.
name|project
operator|.
name|TestProjectUpdate
operator|.
name|allowLabel
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|testsuite
operator|.
name|project
operator|.
name|TestProjectUpdate
operator|.
name|block
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|testsuite
operator|.
name|project
operator|.
name|TestProjectUpdate
operator|.
name|capabilityKey
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|ListChangesOption
operator|.
name|MESSAGES
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|SystemGroupBackend
operator|.
name|ANONYMOUS_USERS
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|SystemGroupBackend
operator|.
name|REGISTERED_USERS
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testing
operator|.
name|GerritJUnit
operator|.
name|assertThrows
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterables
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractDaemonTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|GerritConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|PushOneCommit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|RestResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|RestSession
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|TestAccount
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|testsuite
operator|.
name|project
operator|.
name|ProjectOperations
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|testsuite
operator|.
name|request
operator|.
name|RequestScopeOperations
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|GlobalCapability
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|LabelType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|entities
operator|.
name|AccountGroup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|entities
operator|.
name|ChangeMessage
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|entities
operator|.
name|Comment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|entities
operator|.
name|Patch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|entities
operator|.
name|PatchSetApproval
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|entities
operator|.
name|RobotComment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|DraftInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
operator|.
name|CommentInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
operator|.
name|DraftHandling
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
operator|.
name|RobotCommentInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|RevisionApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|SubmitInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|groups
operator|.
name|GroupInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|Side
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|AccountInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ChangeInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ChangeMessageInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|CommentInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|GroupInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|AuthException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|BadRequestException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|UnprocessableEntityException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|ApprovalsUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|ChangeMessagesUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|CommentsUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountControl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|testing
operator|.
name|TestLabels
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|query
operator|.
name|change
operator|.
name|ChangeData
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|Header
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|message
operator|.
name|BasicHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|ImpersonationIT
specifier|public
class|class
name|ImpersonationIT
extends|extends
name|AbstractDaemonTest
block|{
DECL|field|accountControlFactory
annotation|@
name|Inject
specifier|private
name|AccountControl
operator|.
name|Factory
name|accountControlFactory
decl_stmt|;
DECL|field|approvalsUtil
annotation|@
name|Inject
specifier|private
name|ApprovalsUtil
name|approvalsUtil
decl_stmt|;
DECL|field|cmUtil
annotation|@
name|Inject
specifier|private
name|ChangeMessagesUtil
name|cmUtil
decl_stmt|;
DECL|field|commentsUtil
annotation|@
name|Inject
specifier|private
name|CommentsUtil
name|commentsUtil
decl_stmt|;
DECL|field|projectOperations
annotation|@
name|Inject
specifier|private
name|ProjectOperations
name|projectOperations
decl_stmt|;
DECL|field|requestScopeOperations
annotation|@
name|Inject
specifier|private
name|RequestScopeOperations
name|requestScopeOperations
decl_stmt|;
DECL|field|anonRestSession
specifier|private
name|RestSession
name|anonRestSession
decl_stmt|;
DECL|field|admin2
specifier|private
name|TestAccount
name|admin2
decl_stmt|;
DECL|field|newGroup
specifier|private
name|GroupInfo
name|newGroup
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|anonRestSession
operator|=
operator|new
name|RestSession
argument_list|(
name|server
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|admin2
operator|=
name|accountCreator
operator|.
name|admin2
argument_list|()
expr_stmt|;
name|GroupInput
name|gi
init|=
operator|new
name|GroupInput
argument_list|()
decl_stmt|;
name|gi
operator|.
name|name
operator|=
name|name
argument_list|(
literal|"New-Group"
argument_list|)
expr_stmt|;
name|gi
operator|.
name|members
operator|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|user
operator|.
name|id
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|newGroup
operator|=
name|gApi
operator|.
name|groups
argument_list|()
operator|.
name|create
argument_list|(
name|gi
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|removeRunAs
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOf ()
specifier|public
name|void
name|voteOnBehalfOf
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RevisionApi
name|revision
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
name|ReviewInput
operator|.
name|recommend
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|message
operator|=
literal|"Message on behalf of"
expr_stmt|;
name|revision
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|PatchSetApproval
name|psa
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|r
operator|.
name|getChange
argument_list|()
operator|.
name|approvals
argument_list|()
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|psa
operator|.
name|patchSetId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|psa
operator|.
name|label
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"Code-Review"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|psa
operator|.
name|accountId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|psa
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|psa
operator|.
name|realAccountId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|admin
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|ChangeData
name|cd
init|=
name|r
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|ChangeMessage
name|m
init|=
name|Iterables
operator|.
name|getLast
argument_list|(
name|cmUtil
operator|.
name|byChange
argument_list|(
name|cd
operator|.
name|notes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|m
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|endsWith
argument_list|(
name|in
operator|.
name|message
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|m
operator|.
name|getAuthor
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|m
operator|.
name|getRealAuthor
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|admin
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOfRequiresLabel ()
specifier|public
name|void
name|voteOnBehalfOfRequiresLabel
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RevisionApi
name|revision
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|message
operator|=
literal|"Message on behalf of"
expr_stmt|;
name|AuthException
name|thrown
init|=
name|assertThrows
argument_list|(
name|AuthException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|revision
operator|.
name|review
argument_list|(
name|in
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|thrown
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|contains
argument_list|(
literal|"label required to post review on behalf of \""
operator|+
name|in
operator|.
name|onBehalfOf
operator|+
literal|'"'
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|GerritConfig
argument_list|(
name|name
operator|=
literal|"change.strictLabels"
argument_list|,
name|value
operator|=
literal|"true"
argument_list|)
DECL|method|voteOnBehalfOfInvalidLabel ()
specifier|public
name|void
name|voteOnBehalfOfInvalidLabel
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
operator|.
name|label
argument_list|(
literal|"Not-A-Label"
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|BadRequestException
name|thrown
init|=
name|assertThrows
argument_list|(
name|BadRequestException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|in
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|thrown
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|contains
argument_list|(
literal|"label \"Not-A-Label\" is not a configured label"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOfInvalidLabelIgnoredWithoutStrictLabels ()
specifier|public
name|void
name|voteOnBehalfOfInvalidLabelIgnoredWithoutStrictLabels
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
operator|.
name|label
argument_list|(
literal|"Code-Review"
argument_list|,
literal|1
argument_list|)
operator|.
name|label
argument_list|(
literal|"Not-A-Label"
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|labels
argument_list|)
operator|.
name|doesNotContainKey
argument_list|(
literal|"Not-A-Label"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOfLabelNotPermitted ()
specifier|public
name|void
name|voteOnBehalfOfLabelNotPermitted
parameter_list|()
throws|throws
name|Exception
block|{
try|try
init|(
name|ProjectConfigUpdate
name|u
init|=
name|updateProject
argument_list|(
name|project
argument_list|)
init|)
block|{
name|LabelType
name|verified
init|=
name|TestLabels
operator|.
name|verified
argument_list|()
decl_stmt|;
name|u
operator|.
name|getConfig
argument_list|()
operator|.
name|getLabelSections
argument_list|()
operator|.
name|put
argument_list|(
name|verified
operator|.
name|getName
argument_list|()
argument_list|,
name|verified
argument_list|)
expr_stmt|;
name|u
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RevisionApi
name|revision
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Verified"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|AuthException
name|thrown
init|=
name|assertThrows
argument_list|(
name|AuthException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|revision
operator|.
name|review
argument_list|(
name|in
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|thrown
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|contains
argument_list|(
literal|"not permitted to modify label \"Verified\" on behalf of \""
operator|+
name|in
operator|.
name|onBehalfOf
operator|+
literal|'"'
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOfWithComment ()
specifier|public
name|void
name|voteOnBehalfOfWithComment
parameter_list|()
throws|throws
name|Exception
block|{
name|testVoteOnBehalfOfWithComment
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOfWithCommentWritingJson ()
specifier|public
name|void
name|voteOnBehalfOfWithCommentWritingJson
parameter_list|()
throws|throws
name|Exception
block|{
name|testVoteOnBehalfOfWithComment
argument_list|()
expr_stmt|;
block|}
DECL|method|testVoteOnBehalfOfWithComment ()
specifier|private
name|void
name|testVoteOnBehalfOfWithComment
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Code-Review"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|CommentInput
name|ci
init|=
operator|new
name|CommentInput
argument_list|()
decl_stmt|;
name|ci
operator|.
name|path
operator|=
name|Patch
operator|.
name|COMMIT_MSG
expr_stmt|;
name|ci
operator|.
name|side
operator|=
name|Side
operator|.
name|REVISION
expr_stmt|;
name|ci
operator|.
name|line
operator|=
literal|1
expr_stmt|;
name|ci
operator|.
name|message
operator|=
literal|"message"
expr_stmt|;
name|in
operator|.
name|comments
operator|=
name|ImmutableMap
operator|.
name|of
argument_list|(
name|ci
operator|.
name|path
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|ci
argument_list|)
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|PatchSetApproval
name|psa
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|r
operator|.
name|getChange
argument_list|()
operator|.
name|approvals
argument_list|()
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|psa
operator|.
name|patchSetId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|psa
operator|.
name|label
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"Code-Review"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|psa
operator|.
name|accountId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|psa
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|psa
operator|.
name|realAccountId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|admin
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|ChangeData
name|cd
init|=
name|r
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|Comment
name|c
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|commentsUtil
operator|.
name|publishedByChange
argument_list|(
name|cd
operator|.
name|notes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|c
operator|.
name|message
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ci
operator|.
name|message
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|c
operator|.
name|author
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|c
operator|.
name|getRealAuthor
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|admin
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOfWithRobotComment ()
specifier|public
name|void
name|voteOnBehalfOfWithRobotComment
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Code-Review"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|RobotCommentInput
name|ci
init|=
operator|new
name|RobotCommentInput
argument_list|()
decl_stmt|;
name|ci
operator|.
name|robotId
operator|=
literal|"my-robot"
expr_stmt|;
name|ci
operator|.
name|robotRunId
operator|=
literal|"abcd1234"
expr_stmt|;
name|ci
operator|.
name|path
operator|=
name|Patch
operator|.
name|COMMIT_MSG
expr_stmt|;
name|ci
operator|.
name|side
operator|=
name|Side
operator|.
name|REVISION
expr_stmt|;
name|ci
operator|.
name|line
operator|=
literal|1
expr_stmt|;
name|ci
operator|.
name|message
operator|=
literal|"message"
expr_stmt|;
name|in
operator|.
name|robotComments
operator|=
name|ImmutableMap
operator|.
name|of
argument_list|(
name|ci
operator|.
name|path
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|ci
argument_list|)
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|ChangeData
name|cd
init|=
name|r
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|RobotComment
name|c
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|commentsUtil
operator|.
name|robotCommentsByChange
argument_list|(
name|cd
operator|.
name|notes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|c
operator|.
name|message
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ci
operator|.
name|message
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|c
operator|.
name|robotId
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ci
operator|.
name|robotId
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|c
operator|.
name|robotRunId
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ci
operator|.
name|robotRunId
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|c
operator|.
name|author
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|c
operator|.
name|getRealAuthor
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|admin
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOfCannotModifyDrafts ()
specifier|public
name|void
name|voteOnBehalfOfCannotModifyDrafts
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|user
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|DraftInput
name|di
init|=
operator|new
name|DraftInput
argument_list|()
decl_stmt|;
name|di
operator|.
name|path
operator|=
name|Patch
operator|.
name|COMMIT_MSG
expr_stmt|;
name|di
operator|.
name|side
operator|=
name|Side
operator|.
name|REVISION
expr_stmt|;
name|di
operator|.
name|line
operator|=
literal|1
expr_stmt|;
name|di
operator|.
name|message
operator|=
literal|"message"
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|createDraft
argument_list|(
name|di
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|admin
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Code-Review"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|in
operator|.
name|drafts
operator|=
name|DraftHandling
operator|.
name|PUBLISH
expr_stmt|;
name|AuthException
name|thrown
init|=
name|assertThrows
argument_list|(
name|AuthException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|in
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|thrown
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|contains
argument_list|(
literal|"not allowed to modify other user's drafts"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOfMissingUser ()
specifier|public
name|void
name|voteOnBehalfOfMissingUser
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RevisionApi
name|revision
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
literal|"doesnotexist"
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Code-Review"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|UnprocessableEntityException
name|thrown
init|=
name|assertThrows
argument_list|(
name|UnprocessableEntityException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|revision
operator|.
name|review
argument_list|(
name|in
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|thrown
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|contains
argument_list|(
literal|"not found"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|thrown
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|contains
argument_list|(
literal|"doesnotexist"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOfFailsWhenUserCannotSeeDestinationRef ()
specifier|public
name|void
name|voteOnBehalfOfFailsWhenUserCannotSeeDestinationRef
parameter_list|()
throws|throws
name|Exception
block|{
name|blockRead
argument_list|(
name|newGroup
argument_list|)
expr_stmt|;
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RevisionApi
name|revision
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Code-Review"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|UnprocessableEntityException
name|thrown
init|=
name|assertThrows
argument_list|(
name|UnprocessableEntityException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|revision
operator|.
name|review
argument_list|(
name|in
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|thrown
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|contains
argument_list|(
literal|"on_behalf_of account "
operator|+
name|user
operator|.
name|id
argument_list|()
operator|+
literal|" cannot see change"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|GerritConfig
argument_list|(
name|name
operator|=
literal|"accounts.visibility"
argument_list|,
name|value
operator|=
literal|"SAME_GROUP"
argument_list|)
annotation|@
name|Test
DECL|method|voteOnBehalfOfInvisibleUserNotAllowed ()
specifier|public
name|void
name|voteOnBehalfOfInvisibleUserNotAllowed
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|accountCreator
operator|.
name|user2
argument_list|()
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|accountControlFactory
operator|.
name|get
argument_list|()
operator|.
name|canSee
argument_list|(
name|user
operator|.
name|id
argument_list|()
argument_list|)
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RevisionApi
name|revision
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Code-Review"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|UnprocessableEntityException
name|thrown
init|=
name|assertThrows
argument_list|(
name|UnprocessableEntityException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|revision
operator|.
name|review
argument_list|(
name|in
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|thrown
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|contains
argument_list|(
literal|"not found"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|thrown
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|contains
argument_list|(
name|in
operator|.
name|onBehalfOf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|submitOnBehalfOf ()
specifier|public
name|void
name|submitOnBehalfOf
parameter_list|()
throws|throws
name|Exception
block|{
name|allowSubmitOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|String
name|changeId
init|=
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"~master~"
operator|+
name|r
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|SubmitInput
name|in
init|=
operator|new
name|SubmitInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|admin2
operator|.
name|email
argument_list|()
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|submit
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|ChangeData
name|cd
init|=
name|r
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|cd
operator|.
name|change
argument_list|()
operator|.
name|isMerged
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|PatchSetApproval
name|submitter
init|=
name|approvalsUtil
operator|.
name|getSubmitter
argument_list|(
name|cd
operator|.
name|notes
argument_list|()
argument_list|,
name|cd
operator|.
name|change
argument_list|()
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|submitter
operator|.
name|accountId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|admin2
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|submitter
operator|.
name|realAccountId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|admin
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|submitOnBehalfOfInvalidUser ()
specifier|public
name|void
name|submitOnBehalfOfInvalidUser
parameter_list|()
throws|throws
name|Exception
block|{
name|allowSubmitOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|String
name|changeId
init|=
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"~master~"
operator|+
name|r
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|SubmitInput
name|in
init|=
operator|new
name|SubmitInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
literal|"doesnotexist"
expr_stmt|;
name|UnprocessableEntityException
name|thrown
init|=
name|assertThrows
argument_list|(
name|UnprocessableEntityException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|submit
argument_list|(
name|in
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|thrown
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|contains
argument_list|(
literal|"not found"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|thrown
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|contains
argument_list|(
literal|"doesnotexist"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|submitOnBehalfOfNotPermitted ()
specifier|public
name|void
name|submitOnBehalfOfNotPermitted
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"~master~"
operator|+
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|SubmitInput
name|in
init|=
operator|new
name|SubmitInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|admin2
operator|.
name|email
argument_list|()
expr_stmt|;
name|AuthException
name|thrown
init|=
name|assertThrows
argument_list|(
name|AuthException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"~master~"
operator|+
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|submit
argument_list|(
name|in
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|thrown
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|contains
argument_list|(
literal|"submit on behalf of other users not permitted"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|submitOnBehalfOfFailsWhenUserCannotSeeDestinationRef ()
specifier|public
name|void
name|submitOnBehalfOfFailsWhenUserCannotSeeDestinationRef
parameter_list|()
throws|throws
name|Exception
block|{
name|blockRead
argument_list|(
name|newGroup
argument_list|)
expr_stmt|;
name|allowSubmitOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|String
name|changeId
init|=
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"~master~"
operator|+
name|r
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|SubmitInput
name|in
init|=
operator|new
name|SubmitInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|email
argument_list|()
expr_stmt|;
name|UnprocessableEntityException
name|thrown
init|=
name|assertThrows
argument_list|(
name|UnprocessableEntityException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|submit
argument_list|(
name|in
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|thrown
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|contains
argument_list|(
literal|"on_behalf_of account "
operator|+
name|user
operator|.
name|id
argument_list|()
operator|+
literal|" cannot see change"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|GerritConfig
argument_list|(
name|name
operator|=
literal|"accounts.visibility"
argument_list|,
name|value
operator|=
literal|"SAME_GROUP"
argument_list|)
annotation|@
name|Test
DECL|method|submitOnBehalfOfInvisibleUserNotAllowed ()
specifier|public
name|void
name|submitOnBehalfOfInvisibleUserNotAllowed
parameter_list|()
throws|throws
name|Exception
block|{
name|allowSubmitOnBehalfOf
argument_list|()
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|accountCreator
operator|.
name|user2
argument_list|()
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|accountControlFactory
operator|.
name|get
argument_list|()
operator|.
name|canSee
argument_list|(
name|user
operator|.
name|id
argument_list|()
argument_list|)
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|String
name|changeId
init|=
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"~master~"
operator|+
name|r
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|SubmitInput
name|in
init|=
operator|new
name|SubmitInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|email
argument_list|()
expr_stmt|;
name|UnprocessableEntityException
name|thrown
init|=
name|assertThrows
argument_list|(
name|UnprocessableEntityException
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|submit
argument_list|(
name|in
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|thrown
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|contains
argument_list|(
literal|"not found"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|thrown
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|contains
argument_list|(
name|in
operator|.
name|onBehalfOf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|runAsValidUser ()
specifier|public
name|void
name|runAsValidUser
parameter_list|()
throws|throws
name|Exception
block|{
name|allowRunAs
argument_list|()
expr_stmt|;
name|RestResponse
name|res
init|=
name|adminRestSession
operator|.
name|getWithHeader
argument_list|(
literal|"/accounts/self"
argument_list|,
name|runAsHeader
argument_list|(
name|user
operator|.
name|id
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertOK
argument_list|()
expr_stmt|;
name|AccountInfo
name|account
init|=
name|newGson
argument_list|()
operator|.
name|fromJson
argument_list|(
name|res
operator|.
name|getEntityContent
argument_list|()
argument_list|,
name|AccountInfo
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|account
operator|.
name|_accountId
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user
operator|.
name|id
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|GerritConfig
argument_list|(
name|name
operator|=
literal|"auth.enableRunAs"
argument_list|,
name|value
operator|=
literal|"false"
argument_list|)
annotation|@
name|Test
DECL|method|runAsDisabledByConfig ()
specifier|public
name|void
name|runAsDisabledByConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|allowRunAs
argument_list|()
expr_stmt|;
name|RestResponse
name|res
init|=
name|adminRestSession
operator|.
name|getWithHeader
argument_list|(
literal|"/changes/"
argument_list|,
name|runAsHeader
argument_list|(
name|user
operator|.
name|id
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertForbidden
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getEntityContent
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"X-Gerrit-RunAs disabled by auth.enableRunAs = false"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|runAsNotPermitted ()
specifier|public
name|void
name|runAsNotPermitted
parameter_list|()
throws|throws
name|Exception
block|{
name|RestResponse
name|res
init|=
name|adminRestSession
operator|.
name|getWithHeader
argument_list|(
literal|"/changes/"
argument_list|,
name|runAsHeader
argument_list|(
name|user
operator|.
name|id
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertForbidden
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getEntityContent
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"not permitted to use X-Gerrit-RunAs"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|runAsNeverPermittedForAnonymousUsers ()
specifier|public
name|void
name|runAsNeverPermittedForAnonymousUsers
parameter_list|()
throws|throws
name|Exception
block|{
name|allowRunAs
argument_list|()
expr_stmt|;
name|RestResponse
name|res
init|=
name|anonRestSession
operator|.
name|getWithHeader
argument_list|(
literal|"/changes/"
argument_list|,
name|runAsHeader
argument_list|(
name|user
operator|.
name|id
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertForbidden
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getEntityContent
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"not permitted to use X-Gerrit-RunAs"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|runAsInvalidUser ()
specifier|public
name|void
name|runAsInvalidUser
parameter_list|()
throws|throws
name|Exception
block|{
name|allowRunAs
argument_list|()
expr_stmt|;
name|RestResponse
name|res
init|=
name|adminRestSession
operator|.
name|getWithHeader
argument_list|(
literal|"/changes/"
argument_list|,
name|runAsHeader
argument_list|(
literal|"doesnotexist"
argument_list|)
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertForbidden
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getEntityContent
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"no account matches X-Gerrit-RunAs"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteUsingRunAsAvoidsRestrictionsOfOnBehalfOf ()
specifier|public
name|void
name|voteUsingRunAsAvoidsRestrictionsOfOnBehalfOf
parameter_list|()
throws|throws
name|Exception
block|{
name|allowRunAs
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|user
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|DraftInput
name|di
init|=
operator|new
name|DraftInput
argument_list|()
decl_stmt|;
name|di
operator|.
name|path
operator|=
name|Patch
operator|.
name|COMMIT_MSG
expr_stmt|;
name|di
operator|.
name|side
operator|=
name|Side
operator|.
name|REVISION
expr_stmt|;
name|di
operator|.
name|line
operator|=
literal|1
expr_stmt|;
name|di
operator|.
name|message
operator|=
literal|"inline comment"
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|createDraft
argument_list|(
name|di
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|admin
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
comment|// Things that aren't allowed with on_behalf_of:
comment|//  - no labels.
comment|//  - publish other user's drafts.
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|message
operator|=
literal|"message"
expr_stmt|;
name|in
operator|.
name|drafts
operator|=
name|DraftHandling
operator|.
name|PUBLISH
expr_stmt|;
name|RestResponse
name|res
init|=
name|adminRestSession
operator|.
name|postWithHeader
argument_list|(
literal|"/changes/"
operator|+
name|r
operator|.
name|getChangeId
argument_list|()
operator|+
literal|"/revisions/current/review"
argument_list|,
name|runAsHeader
argument_list|(
name|user
operator|.
name|id
argument_list|()
argument_list|)
argument_list|,
name|in
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertOK
argument_list|()
expr_stmt|;
name|ChangeMessageInfo
name|m
init|=
name|Iterables
operator|.
name|getLast
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|messages
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|m
operator|.
name|message
argument_list|)
operator|.
name|endsWith
argument_list|(
name|in
operator|.
name|message
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|m
operator|.
name|author
operator|.
name|_accountId
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user
operator|.
name|id
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|CommentInfo
name|c
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|comments
argument_list|()
operator|.
name|get
argument_list|(
name|di
operator|.
name|path
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|c
operator|.
name|author
operator|.
name|_accountId
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user
operator|.
name|id
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|c
operator|.
name|message
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|di
operator|.
name|message
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|user
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|drafts
argument_list|()
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|runAsWithOnBehalfOf ()
specifier|public
name|void
name|runAsWithOnBehalfOf
parameter_list|()
throws|throws
name|Exception
block|{
comment|// - Has the same restrictions as on_behalf_of (e.g. requires labels).
comment|// - Takes the effective user from on_behalf_of (user).
comment|// - Takes the real user from the real caller, not the intermediate
comment|//   X-Gerrit-RunAs user (user2).
name|allowRunAs
argument_list|()
expr_stmt|;
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|TestAccount
name|user2
init|=
name|accountCreator
operator|.
name|user2
argument_list|()
decl_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|message
operator|=
literal|"Message on behalf of"
expr_stmt|;
name|String
name|endpoint
init|=
literal|"/changes/"
operator|+
name|r
operator|.
name|getChangeId
argument_list|()
operator|+
literal|"/revisions/current/review"
decl_stmt|;
name|RestResponse
name|res
init|=
name|adminRestSession
operator|.
name|postWithHeader
argument_list|(
name|endpoint
argument_list|,
name|runAsHeader
argument_list|(
name|user2
operator|.
name|id
argument_list|()
argument_list|)
argument_list|,
name|in
argument_list|)
decl_stmt|;
name|res
operator|.
name|assertForbidden
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getEntityContent
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"label required to post review on behalf of \""
operator|+
name|in
operator|.
name|onBehalfOf
operator|+
literal|'"'
argument_list|)
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Code-Review"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|adminRestSession
operator|.
name|postWithHeader
argument_list|(
name|endpoint
argument_list|,
name|runAsHeader
argument_list|(
name|user2
operator|.
name|id
argument_list|()
argument_list|)
argument_list|,
name|in
argument_list|)
operator|.
name|assertOK
argument_list|()
expr_stmt|;
name|PatchSetApproval
name|psa
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|r
operator|.
name|getChange
argument_list|()
operator|.
name|approvals
argument_list|()
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|psa
operator|.
name|patchSetId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|psa
operator|.
name|label
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"Code-Review"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|psa
operator|.
name|accountId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|psa
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|psa
operator|.
name|realAccountId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|admin
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
comment|// not user2
name|ChangeData
name|cd
init|=
name|r
operator|.
name|getChange
argument_list|()
decl_stmt|;
name|ChangeMessage
name|m
init|=
name|Iterables
operator|.
name|getLast
argument_list|(
name|cmUtil
operator|.
name|byChange
argument_list|(
name|cd
operator|.
name|notes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|m
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|endsWith
argument_list|(
name|in
operator|.
name|message
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|m
operator|.
name|getAuthor
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|m
operator|.
name|getRealAuthor
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|admin
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
comment|// not user2
block|}
annotation|@
name|Test
DECL|method|changeMessageCreatedOnBehalfOfHasRealUser ()
specifier|public
name|void
name|changeMessageCreatedOnBehalfOfHasRealUser
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|message
operator|=
literal|"Message on behalf of"
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Code-Review"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|setApiUser
argument_list|(
name|accountCreator
operator|.
name|user2
argument_list|()
operator|.
name|id
argument_list|()
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|revision
argument_list|(
name|r
operator|.
name|getPatchSetId
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|ChangeInfo
name|info
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|get
argument_list|(
name|MESSAGES
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|info
operator|.
name|messages
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|ChangeMessageInfo
name|changeMessageInfo
init|=
name|Iterables
operator|.
name|getLast
argument_list|(
name|info
operator|.
name|messages
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|changeMessageInfo
operator|.
name|realAuthor
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|changeMessageInfo
operator|.
name|realAuthor
operator|.
name|_accountId
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|accountCreator
operator|.
name|user2
argument_list|()
operator|.
name|id
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|allowCodeReviewOnBehalfOf ()
specifier|private
name|void
name|allowCodeReviewOnBehalfOf
parameter_list|()
throws|throws
name|Exception
block|{
name|projectOperations
operator|.
name|project
argument_list|(
name|project
argument_list|)
operator|.
name|forUpdate
argument_list|()
operator|.
name|add
argument_list|(
name|allowLabel
argument_list|(
name|TestLabels
operator|.
name|codeReview
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|impersonation
argument_list|(
literal|true
argument_list|)
operator|.
name|ref
argument_list|(
literal|"refs/heads/*"
argument_list|)
operator|.
name|group
argument_list|(
name|REGISTERED_USERS
argument_list|)
operator|.
name|range
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
operator|.
name|update
argument_list|()
expr_stmt|;
block|}
DECL|method|allowSubmitOnBehalfOf ()
specifier|private
name|void
name|allowSubmitOnBehalfOf
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|heads
init|=
literal|"refs/heads/*"
decl_stmt|;
name|projectOperations
operator|.
name|project
argument_list|(
name|project
argument_list|)
operator|.
name|forUpdate
argument_list|()
operator|.
name|add
argument_list|(
name|allow
argument_list|(
name|Permission
operator|.
name|SUBMIT_AS
argument_list|)
operator|.
name|ref
argument_list|(
name|heads
argument_list|)
operator|.
name|group
argument_list|(
name|REGISTERED_USERS
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|allow
argument_list|(
name|Permission
operator|.
name|SUBMIT
argument_list|)
operator|.
name|ref
argument_list|(
name|heads
argument_list|)
operator|.
name|group
argument_list|(
name|REGISTERED_USERS
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
name|allowLabel
argument_list|(
name|TestLabels
operator|.
name|codeReview
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|ref
argument_list|(
name|heads
argument_list|)
operator|.
name|group
argument_list|(
name|REGISTERED_USERS
argument_list|)
operator|.
name|range
argument_list|(
operator|-
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
operator|.
name|update
argument_list|()
expr_stmt|;
block|}
DECL|method|blockRead (GroupInfo group)
specifier|private
name|void
name|blockRead
parameter_list|(
name|GroupInfo
name|group
parameter_list|)
throws|throws
name|Exception
block|{
name|projectOperations
operator|.
name|project
argument_list|(
name|project
argument_list|)
operator|.
name|forUpdate
argument_list|()
operator|.
name|add
argument_list|(
name|block
argument_list|(
name|Permission
operator|.
name|READ
argument_list|)
operator|.
name|ref
argument_list|(
literal|"refs/heads/master"
argument_list|)
operator|.
name|group
argument_list|(
name|AccountGroup
operator|.
name|uuid
argument_list|(
name|group
operator|.
name|id
argument_list|)
argument_list|)
argument_list|)
operator|.
name|update
argument_list|()
expr_stmt|;
block|}
DECL|method|allowRunAs ()
specifier|private
name|void
name|allowRunAs
parameter_list|()
throws|throws
name|Exception
block|{
name|projectOperations
operator|.
name|allProjectsForUpdate
argument_list|()
operator|.
name|add
argument_list|(
name|allowCapability
argument_list|(
name|GlobalCapability
operator|.
name|RUN_AS
argument_list|)
operator|.
name|group
argument_list|(
name|ANONYMOUS_USERS
argument_list|)
argument_list|)
operator|.
name|update
argument_list|()
expr_stmt|;
block|}
DECL|method|removeRunAs ()
specifier|private
name|void
name|removeRunAs
parameter_list|()
throws|throws
name|Exception
block|{
name|projectOperations
operator|.
name|allProjectsForUpdate
argument_list|()
operator|.
name|remove
argument_list|(
name|capabilityKey
argument_list|(
name|GlobalCapability
operator|.
name|RUN_AS
argument_list|)
operator|.
name|group
argument_list|(
name|ANONYMOUS_USERS
argument_list|)
argument_list|)
operator|.
name|update
argument_list|()
expr_stmt|;
block|}
DECL|method|runAsHeader (Object user)
specifier|private
specifier|static
name|Header
name|runAsHeader
parameter_list|(
name|Object
name|user
parameter_list|)
block|{
return|return
operator|new
name|BasicHeader
argument_list|(
literal|"X-Gerrit-RunAs"
argument_list|,
name|user
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

