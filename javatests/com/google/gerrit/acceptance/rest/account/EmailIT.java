begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.rest.account
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|account
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth8
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
operator|.
name|toSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMultimap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Multimap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractDaemonTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AcceptanceTestRequestScope
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|RestResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|testsuite
operator|.
name|request
operator|.
name|RequestScopeOperations
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|accounts
operator|.
name|EmailApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|accounts
operator|.
name|EmailInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|EmailInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|IdString
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|ResourceConflictException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|ResourceNotFoundException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|IdentifiedUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|ServerInitiated
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountsUpdate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|DefaultRealm
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|EmailExpander
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|Emails
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|Realm
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|externalids
operator|.
name|ExternalId
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|externalids
operator|.
name|ExternalIds
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AnonymousCowardName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AuthConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|CanonicalWebUrl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|EnableReverseDnsLookup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|reflect
operator|.
name|TypeToken
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|EmailIT
specifier|public
class|class
name|EmailIT
extends|extends
name|AbstractDaemonTest
block|{
DECL|field|anonymousCowardName
annotation|@
name|Inject
specifier|private
annotation|@
name|AnonymousCowardName
name|String
name|anonymousCowardName
decl_stmt|;
DECL|field|canonicalUrl
annotation|@
name|Inject
specifier|private
annotation|@
name|CanonicalWebUrl
name|Provider
argument_list|<
name|String
argument_list|>
name|canonicalUrl
decl_stmt|;
DECL|field|enableReverseDnsLookup
annotation|@
name|Inject
specifier|private
annotation|@
name|EnableReverseDnsLookup
name|boolean
name|enableReverseDnsLookup
decl_stmt|;
DECL|field|accountsUpdateProvider
annotation|@
name|Inject
specifier|private
annotation|@
name|ServerInitiated
name|Provider
argument_list|<
name|AccountsUpdate
argument_list|>
name|accountsUpdateProvider
decl_stmt|;
DECL|field|authConfig
annotation|@
name|Inject
specifier|private
name|AuthConfig
name|authConfig
decl_stmt|;
DECL|field|emailExpander
annotation|@
name|Inject
specifier|private
name|EmailExpander
name|emailExpander
decl_stmt|;
DECL|field|externalIds
annotation|@
name|Inject
specifier|private
name|ExternalIds
name|externalIds
decl_stmt|;
DECL|field|emails
annotation|@
name|Inject
specifier|private
name|Provider
argument_list|<
name|Emails
argument_list|>
name|emails
decl_stmt|;
DECL|field|requestScopeOperations
annotation|@
name|Inject
specifier|private
name|RequestScopeOperations
name|requestScopeOperations
decl_stmt|;
annotation|@
name|Test
DECL|method|addEmail ()
specifier|public
name|void
name|addEmail
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|email
init|=
literal|"foo.bar@example.com"
decl_stmt|;
name|assertThat
argument_list|(
name|getEmails
argument_list|()
argument_list|)
operator|.
name|doesNotContain
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|createEmail
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getEmails
argument_list|()
argument_list|)
operator|.
name|contains
argument_list|(
name|email
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addUrlEncodedEmail ()
specifier|public
name|void
name|addUrlEncodedEmail
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|email
init|=
literal|"foo.bar2@example.com"
decl_stmt|;
name|assertThat
argument_list|(
name|getEmails
argument_list|()
argument_list|)
operator|.
name|doesNotContain
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|createEmail
argument_list|(
name|email
operator|.
name|replace
argument_list|(
literal|"@"
argument_list|,
literal|"%40"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getEmails
argument_list|()
argument_list|)
operator|.
name|contains
argument_list|(
name|email
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addEmailWithLeadingAndTrailingWhitespace ()
specifier|public
name|void
name|addEmailWithLeadingAndTrailingWhitespace
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|email
init|=
literal|"foo.bar3@example.com"
decl_stmt|;
name|assertThat
argument_list|(
name|getEmails
argument_list|()
argument_list|)
operator|.
name|doesNotContain
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|createEmail
argument_list|(
name|IdString
operator|.
name|fromDecoded
argument_list|(
literal|" "
operator|+
name|email
operator|+
literal|" "
argument_list|)
operator|.
name|encoded
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getEmails
argument_list|()
argument_list|)
operator|.
name|contains
argument_list|(
name|email
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteEmail ()
specifier|public
name|void
name|deleteEmail
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|email
init|=
literal|"foo.baz@example.com"
decl_stmt|;
name|assertThat
argument_list|(
name|getEmails
argument_list|()
argument_list|)
operator|.
name|doesNotContain
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|createEmail
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getEmails
argument_list|()
argument_list|)
operator|.
name|contains
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|RestResponse
name|r
init|=
name|adminRestSession
operator|.
name|delete
argument_list|(
literal|"/accounts/self/emails/"
operator|+
name|email
argument_list|)
decl_stmt|;
name|r
operator|.
name|assertNoContent
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|getEmails
argument_list|()
argument_list|)
operator|.
name|doesNotContain
argument_list|(
name|email
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteUrlEncodedEmail ()
specifier|public
name|void
name|deleteUrlEncodedEmail
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|email
init|=
literal|"foo.baz2@example.com"
decl_stmt|;
name|assertThat
argument_list|(
name|getEmails
argument_list|()
argument_list|)
operator|.
name|doesNotContain
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|createEmail
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getEmails
argument_list|()
argument_list|)
operator|.
name|contains
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|RestResponse
name|r
init|=
name|adminRestSession
operator|.
name|delete
argument_list|(
literal|"/accounts/self/emails/"
operator|+
name|email
operator|.
name|replace
argument_list|(
literal|"@"
argument_list|,
literal|"%40"
argument_list|)
argument_list|)
decl_stmt|;
name|r
operator|.
name|assertNoContent
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|getEmails
argument_list|()
argument_list|)
operator|.
name|doesNotContain
argument_list|(
name|email
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setPreferredEmailToEmailOfMailToExternalId ()
specifier|public
name|void
name|setPreferredEmailToEmailOfMailToExternalId
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|email
init|=
literal|"foo@example.com"
decl_stmt|;
name|createEmail
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|isNotEqualTo
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|resetCurrentApiUser
argument_list|()
expr_stmt|;
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|email
argument_list|(
name|email
argument_list|)
operator|.
name|setPreferred
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|email
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setPreferredEmailToEmailOfExternalExternalId ()
specifier|public
name|void
name|setPreferredEmailToEmailOfExternalExternalId
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|email
init|=
literal|"foo@example.com"
decl_stmt|;
name|accountsUpdateProvider
operator|.
name|get
argument_list|()
operator|.
name|update
argument_list|(
literal|"Add External ID"
argument_list|,
name|admin
operator|.
name|id
argument_list|,
name|u
lambda|->
name|u
operator|.
name|addExternalId
argument_list|(
name|ExternalId
operator|.
name|createWithEmail
argument_list|(
name|ExternalId
operator|.
name|SCHEME_EXTERNAL
argument_list|,
literal|"foo"
argument_list|,
name|admin
operator|.
name|id
argument_list|,
name|email
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|isNotEqualTo
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|resetCurrentApiUser
argument_list|()
expr_stmt|;
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|email
argument_list|(
name|email
argument_list|)
operator|.
name|setPreferred
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|email
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setPreferredEmailToNonExistingEmail ()
specifier|public
name|void
name|setPreferredEmailToNonExistingEmail
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|email
init|=
literal|"non-existing@example.com"
decl_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|ResourceNotFoundException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"Not found: "
operator|+
name|email
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|email
argument_list|(
name|email
argument_list|)
operator|.
name|setPreferred
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setPreferredEmailToEmailOfOtherAccount ()
specifier|public
name|void
name|setPreferredEmailToEmailOfOtherAccount
parameter_list|()
throws|throws
name|Exception
block|{
name|exception
operator|.
name|expect
argument_list|(
name|ResourceNotFoundException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"Not found: "
operator|+
name|user
operator|.
name|email
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|email
argument_list|(
name|user
operator|.
name|email
argument_list|)
operator|.
name|setPreferred
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setPreferredEmailWithOtherCase ()
specifier|public
name|void
name|setPreferredEmailWithOtherCase
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|email
init|=
literal|"foo@example.com"
decl_stmt|;
name|createEmail
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|isNotEqualTo
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|requestScopeOperations
operator|.
name|resetCurrentApiUser
argument_list|()
expr_stmt|;
name|String
name|emailOtherCase
init|=
name|email
operator|.
name|toUpperCase
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|email
argument_list|(
name|emailOtherCase
argument_list|)
operator|.
name|setPreferred
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|email
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setPreferredEmailToEmailFromCustomRealmThatDoesntExistAsExternalId ()
specifier|public
name|void
name|setPreferredEmailToEmailFromCustomRealmThatDoesntExistAsExternalId
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|email
init|=
literal|"foo@example.com"
decl_stmt|;
name|ExternalId
operator|.
name|Key
name|mailtoExtIdKey
init|=
name|ExternalId
operator|.
name|Key
operator|.
name|create
argument_list|(
name|ExternalId
operator|.
name|SCHEME_MAILTO
argument_list|,
name|email
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|externalIds
operator|.
name|get
argument_list|(
name|mailtoExtIdKey
argument_list|)
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|isNotEqualTo
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|Context
name|oldCtx
init|=
name|createContextWithCustomRealm
argument_list|(
operator|new
name|RealmWithAdditionalEmails
argument_list|(
name|admin
operator|.
name|id
argument_list|,
name|email
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|email
argument_list|(
name|email
argument_list|)
operator|.
name|setPreferred
argument_list|()
expr_stmt|;
name|Optional
argument_list|<
name|ExternalId
argument_list|>
name|mailtoExtId
init|=
name|externalIds
operator|.
name|get
argument_list|(
name|mailtoExtIdKey
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|mailtoExtId
argument_list|)
operator|.
name|isPresent
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|mailtoExtId
operator|.
name|get
argument_list|()
operator|.
name|accountId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|admin
operator|.
name|id
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|email
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|atrScope
operator|.
name|set
argument_list|(
name|oldCtx
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|setPreferredEmailToEmailFromCustomRealmThatBelongsToOtherAccount ()
specifier|public
name|void
name|setPreferredEmailToEmailFromCustomRealmThatBelongsToOtherAccount
parameter_list|()
throws|throws
name|Exception
block|{
name|ExternalId
name|mailToExtId
init|=
name|ExternalId
operator|.
name|createEmail
argument_list|(
name|user
operator|.
name|id
argument_list|,
name|user
operator|.
name|email
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|externalIds
operator|.
name|get
argument_list|(
name|mailToExtId
operator|.
name|key
argument_list|()
argument_list|)
argument_list|)
operator|.
name|isPresent
argument_list|()
expr_stmt|;
name|Context
name|oldCtx
init|=
name|createContextWithCustomRealm
argument_list|(
operator|new
name|RealmWithAdditionalEmails
argument_list|(
name|admin
operator|.
name|id
argument_list|,
name|user
operator|.
name|email
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|exception
operator|.
name|expect
argument_list|(
name|ResourceConflictException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"email in use by another account"
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|email
argument_list|(
name|user
operator|.
name|email
argument_list|)
operator|.
name|setPreferred
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|atrScope
operator|.
name|set
argument_list|(
name|oldCtx
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|emailApi ()
specifier|public
name|void
name|emailApi
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|email
init|=
literal|"foo@example.com"
decl_stmt|;
name|assertThat
argument_list|(
name|getEmails
argument_list|()
argument_list|)
operator|.
name|doesNotContain
argument_list|(
name|email
argument_list|)
expr_stmt|;
comment|// Create email
name|EmailInput
name|emailInput
init|=
operator|new
name|EmailInput
argument_list|()
decl_stmt|;
name|emailInput
operator|.
name|email
operator|=
name|email
expr_stmt|;
name|emailInput
operator|.
name|noConfirmation
operator|=
literal|true
expr_stmt|;
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|createEmail
argument_list|(
name|emailInput
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getEmails
argument_list|()
argument_list|)
operator|.
name|contains
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|isNotEqualTo
argument_list|(
name|email
argument_list|)
expr_stmt|;
comment|// Get email
name|requestScopeOperations
operator|.
name|resetCurrentApiUser
argument_list|()
expr_stmt|;
name|EmailApi
name|emailApi
init|=
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|email
argument_list|(
name|email
argument_list|)
decl_stmt|;
name|EmailInfo
name|emailInfo
init|=
name|emailApi
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|emailInfo
operator|.
name|email
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|emailInfo
operator|.
name|preferred
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|emailInfo
operator|.
name|pendingConfirmation
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
comment|// Set as preferred email
name|emailApi
operator|.
name|setPreferred
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|email
argument_list|)
expr_stmt|;
comment|// Get email again (now it's the preferred email)
name|requestScopeOperations
operator|.
name|resetCurrentApiUser
argument_list|()
expr_stmt|;
name|emailApi
operator|=
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|email
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|emailInfo
operator|=
name|emailApi
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|emailInfo
operator|.
name|email
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|emailInfo
operator|.
name|preferred
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|emailInfo
operator|.
name|pendingConfirmation
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
comment|// Delete email
name|emailApi
operator|.
name|delete
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|getEmails
argument_list|()
argument_list|)
operator|.
name|doesNotContain
argument_list|(
name|email
argument_list|)
expr_stmt|;
comment|// Now the email is no longer found
name|requestScopeOperations
operator|.
name|resetCurrentApiUser
argument_list|()
expr_stmt|;
name|emailApi
operator|=
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|self
argument_list|()
operator|.
name|email
argument_list|(
name|email
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|ResourceNotFoundException
operator|.
name|class
argument_list|)
expr_stmt|;
name|emailApi
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
DECL|method|getEmails ()
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|getEmails
parameter_list|()
throws|throws
name|Exception
block|{
name|RestResponse
name|r
init|=
name|adminRestSession
operator|.
name|get
argument_list|(
literal|"/accounts/self/emails"
argument_list|)
decl_stmt|;
name|r
operator|.
name|assertOK
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|EmailInfo
argument_list|>
name|emails
init|=
name|newGson
argument_list|()
operator|.
name|fromJson
argument_list|(
name|r
operator|.
name|getReader
argument_list|()
argument_list|,
operator|new
name|TypeToken
argument_list|<
name|List
argument_list|<
name|EmailInfo
argument_list|>
argument_list|>
argument_list|()
block|{}
operator|.
name|getType
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|emails
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|e
lambda|->
name|e
operator|.
name|email
argument_list|)
operator|.
name|collect
argument_list|(
name|toSet
argument_list|()
argument_list|)
return|;
block|}
DECL|method|createEmail (String email)
specifier|private
name|void
name|createEmail
parameter_list|(
name|String
name|email
parameter_list|)
throws|throws
name|Exception
block|{
name|EmailInput
name|input
init|=
operator|new
name|EmailInput
argument_list|()
decl_stmt|;
name|input
operator|.
name|noConfirmation
operator|=
literal|true
expr_stmt|;
name|RestResponse
name|r
init|=
name|adminRestSession
operator|.
name|put
argument_list|(
literal|"/accounts/self/emails/"
operator|+
name|email
argument_list|,
name|input
argument_list|)
decl_stmt|;
name|r
operator|.
name|assertCreated
argument_list|()
expr_stmt|;
block|}
DECL|method|createContextWithCustomRealm (Realm realm)
specifier|private
name|Context
name|createContextWithCustomRealm
parameter_list|(
name|Realm
name|realm
parameter_list|)
block|{
name|IdentifiedUser
operator|.
name|GenericFactory
name|userFactory
init|=
operator|new
name|IdentifiedUser
operator|.
name|GenericFactory
argument_list|(
name|authConfig
argument_list|,
name|realm
argument_list|,
name|anonymousCowardName
argument_list|,
name|canonicalUrl
argument_list|,
name|enableReverseDnsLookup
argument_list|,
name|accountCache
argument_list|,
name|groupBackend
argument_list|)
decl_stmt|;
return|return
name|atrScope
operator|.
name|set
argument_list|(
name|atrScope
operator|.
name|newContext
argument_list|(
literal|null
argument_list|,
name|userFactory
operator|.
name|create
argument_list|(
name|admin
operator|.
name|id
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
DECL|class|RealmWithAdditionalEmails
specifier|private
class|class
name|RealmWithAdditionalEmails
extends|extends
name|DefaultRealm
block|{
DECL|field|additionalEmails
specifier|private
specifier|final
name|Multimap
argument_list|<
name|Account
operator|.
name|Id
argument_list|,
name|String
argument_list|>
name|additionalEmails
decl_stmt|;
DECL|method|RealmWithAdditionalEmails (Account.Id accountId, String email)
specifier|public
name|RealmWithAdditionalEmails
parameter_list|(
name|Account
operator|.
name|Id
name|accountId
parameter_list|,
name|String
name|email
parameter_list|)
block|{
name|this
argument_list|(
name|ImmutableMultimap
operator|.
name|of
argument_list|(
name|accountId
argument_list|,
name|email
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|RealmWithAdditionalEmails (Multimap<Account.Id, String> additionalEmails)
specifier|public
name|RealmWithAdditionalEmails
parameter_list|(
name|Multimap
argument_list|<
name|Account
operator|.
name|Id
argument_list|,
name|String
argument_list|>
name|additionalEmails
parameter_list|)
block|{
name|super
argument_list|(
name|emailExpander
argument_list|,
name|emails
argument_list|,
name|authConfig
argument_list|)
expr_stmt|;
name|this
operator|.
name|additionalEmails
operator|=
name|additionalEmails
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|hasEmailAddress (IdentifiedUser user, String email)
specifier|public
name|boolean
name|hasEmailAddress
parameter_list|(
name|IdentifiedUser
name|user
parameter_list|,
name|String
name|email
parameter_list|)
block|{
if|if
condition|(
name|additionalEmails
operator|.
name|containsEntry
argument_list|(
name|user
operator|.
name|getAccountId
argument_list|()
argument_list|,
name|email
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
name|super
operator|.
name|hasEmailAddress
argument_list|(
name|user
argument_list|,
name|email
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

