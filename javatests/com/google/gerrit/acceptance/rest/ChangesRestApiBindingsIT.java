begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2018 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.rest
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|TruthJUnit
operator|.
name|assume
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|AbstractRestApiBindingsTest
operator|.
name|Method
operator|.
name|GET
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpStatus
operator|.
name|SC_NOT_FOUND
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Tests for checking the bindings of the changes REST API.  *  *<p>These tests only verify that the change REST endpoints are correctly bound, they do no test  * the functionality of the change REST endpoints (for details see JavaDoc on {@link  * AbstractRestApiBindingsTest}).  */
end_comment

begin_class
DECL|class|ChangesRestApiBindingsIT
specifier|public
class|class
name|ChangesRestApiBindingsIT
extends|extends
name|AbstractRestApiBindingsTest
block|{
comment|/**    * Change REST endpoints to be tested, each URL contains a placeholder for the change identifier.    */
DECL|field|CHANGE_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|CHANGE_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/detail"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/topic"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/topic"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s/topic"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/in"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/hashtags"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/hashtags"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/comments"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/robotcomments"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/drafts"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/assignee"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/past_assignees"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/assignee"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s/assignee"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/private"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/private.delete"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s/private"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/wip"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/ready"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/ignore"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/unignore"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/reviewed"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/unreviewed"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/messages"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/message"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/merge"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/abandon"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/move"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/rebase"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/restore"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/revert"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/pure_revert"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/submit"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/submitted_together"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/index"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/check"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/check"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/reviewers"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/reviewers"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/suggest_reviewers"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|builder
argument_list|(
name|GET
argument_list|,
literal|"/changes/%s/revisions"
argument_list|)
comment|// GET /changes/<change-id>/revisions is not implemented
operator|.
name|expectedResponseCode
argument_list|(
name|SC_NOT_FOUND
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/edit"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/edit:rebase"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/edit:message"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/edit:message"
argument_list|)
argument_list|,
comment|// Publish edit and create a new edit
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/edit:publish"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/edit/a.txt"
argument_list|)
argument_list|,
comment|// Deletion of change edit and change must be tested last
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s/edit"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Change REST endpoints to be tested with NoteDb, each URL contains a placeholder for the change    * identifier.    */
DECL|field|CHANGE_ENDPOINTS_NOTEDB
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|CHANGE_ENDPOINTS_NOTEDB
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/rebuild.notedb"
argument_list|)
argument_list|)
decl_stmt|;
comment|// TODO(ekempin): Add tests for REST endpoints of changes child collections
annotation|@
name|Test
DECL|method|changeEndpoints ()
specifier|public
name|void
name|changeEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|edit
argument_list|()
operator|.
name|create
argument_list|()
expr_stmt|;
name|execute
argument_list|(
name|CHANGE_ENDPOINTS
argument_list|,
name|changeId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeEndpointsNoteDb ()
specifier|public
name|void
name|changeEndpointsNoteDb
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|execute
argument_list|(
name|CHANGE_ENDPOINTS_NOTEDB
argument_list|,
name|changeId
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

