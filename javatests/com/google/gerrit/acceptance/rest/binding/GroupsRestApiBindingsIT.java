begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2018 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.rest.binding
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|binding
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractDaemonTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|util
operator|.
name|RestApiCallHelper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|util
operator|.
name|RestCall
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Tests for checking the bindings of the groups REST API.  *  *<p>These tests only verify that the group REST endpoints are correctly bound, they do no test the  * functionality of the group REST endpoints.  */
end_comment

begin_class
DECL|class|GroupsRestApiBindingsIT
specifier|public
class|class
name|GroupsRestApiBindingsIT
extends|extends
name|AbstractDaemonTest
block|{
comment|/**    * Group REST endpoints to be tested, each URL contains a placeholder for the group identifier.    */
DECL|field|GROUP_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|GROUP_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|get
argument_list|(
literal|"/groups/%s"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/groups/%s"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/groups/%s/detail"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/groups/%s/name"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/groups/%s/name"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/groups/%s/description"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/groups/%s/description"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/groups/%s/description"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/groups/%s/owner"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/groups/%s/owner"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/groups/%s/options"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/groups/%s/options"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/groups/%s/members"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/groups/%s/members.add"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/groups/%s/members.delete"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/groups/%s/groups"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/groups/%s/groups.add"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/groups/%s/groups.delete"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/groups/%s/log.audit"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/groups/%s/index"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/groups/%s/members"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/groups/%s/groups"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Member REST endpoints to be tested, each URL contains placeholders for the group identifier and    * the member identifier.    */
DECL|field|MEMBER_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|MEMBER_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|get
argument_list|(
literal|"/groups/%s/members/%s"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/groups/%s/members/%s"
argument_list|)
argument_list|,
comment|// Member deletion must be tested last
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/groups/%s/members/%s"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Subgroup REST endpoints to be tested, each URL contains placeholders for the group identifier    * and the subgroup identifier.    */
DECL|field|SUBGROUP_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|SUBGROUP_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|get
argument_list|(
literal|"/groups/%s/groups/%s"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/groups/%s/groups/%s"
argument_list|)
argument_list|,
comment|// Subgroup deletion must be tested last
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/groups/%s/groups/%s"
argument_list|)
argument_list|)
decl_stmt|;
annotation|@
name|Test
DECL|method|groupEndpoints ()
specifier|public
name|void
name|groupEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|group
init|=
name|gApi
operator|.
name|groups
argument_list|()
operator|.
name|create
argument_list|(
literal|"test-group"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|name
decl_stmt|;
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|GROUP_ENDPOINTS
argument_list|,
name|group
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|memberEndpoints ()
specifier|public
name|void
name|memberEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|group
init|=
name|gApi
operator|.
name|groups
argument_list|()
operator|.
name|create
argument_list|(
literal|"test-group"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|name
decl_stmt|;
name|gApi
operator|.
name|groups
argument_list|()
operator|.
name|id
argument_list|(
name|group
argument_list|)
operator|.
name|addMembers
argument_list|(
name|admin
operator|.
name|email
argument_list|)
expr_stmt|;
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|MEMBER_ENDPOINTS
argument_list|,
name|group
argument_list|,
name|admin
operator|.
name|email
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|subgroupEndpoints ()
specifier|public
name|void
name|subgroupEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|group
init|=
name|gApi
operator|.
name|groups
argument_list|()
operator|.
name|create
argument_list|(
literal|"test-group"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|name
decl_stmt|;
name|String
name|subgroup
init|=
name|gApi
operator|.
name|groups
argument_list|()
operator|.
name|create
argument_list|(
literal|"test-subgroup"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|name
decl_stmt|;
name|gApi
operator|.
name|groups
argument_list|()
operator|.
name|id
argument_list|(
name|group
argument_list|)
operator|.
name|addGroups
argument_list|(
name|subgroup
argument_list|)
expr_stmt|;
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|SUBGROUP_ENDPOINTS
argument_list|,
name|group
argument_list|,
name|subgroup
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

