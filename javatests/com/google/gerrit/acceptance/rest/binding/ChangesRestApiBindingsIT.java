begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2018 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.rest.binding
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|binding
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|TruthJUnit
operator|.
name|assume
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|util
operator|.
name|RestCall
operator|.
name|Method
operator|.
name|GET
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|testing
operator|.
name|RobotCommentInfoSubject
operator|.
name|assertThatList
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
operator|.
name|toList
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpStatus
operator|.
name|SC_NOT_FOUND
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterables
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractDaemonTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|util
operator|.
name|RestApiCallHelper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|util
operator|.
name|RestCall
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|AddReviewerInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|DraftInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
operator|.
name|DraftHandling
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
operator|.
name|RobotCommentInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|Comment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|Side
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|CommentInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|FixReplacementInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|FixSuggestionInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|RobotCommentInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Patch
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Tests for checking the bindings of the changes REST API.  *  *<p>These tests only verify that the change REST endpoints are correctly bound, they do no test  * the functionality of the change REST endpoints.  */
end_comment

begin_class
DECL|class|ChangesRestApiBindingsIT
specifier|public
class|class
name|ChangesRestApiBindingsIT
extends|extends
name|AbstractDaemonTest
block|{
comment|/**    * Change REST endpoints to be tested, each URL contains a placeholder for the change identifier.    */
DECL|field|CHANGE_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|CHANGE_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/detail"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/topic"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/topic"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s/topic"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/in"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/hashtags"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/comments"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/robotcomments"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/drafts"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/assignee"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/past_assignees"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/assignee"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s/assignee"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/private"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/private.delete"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s/private"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/wip"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/ready"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/ignore"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/unignore"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/reviewed"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/unreviewed"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/messages"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/message"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/merge"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/abandon"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/move"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/rebase"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/restore"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/revert"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/pure_revert"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/submit"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/submitted_together"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/index"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/check"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/check"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/reviewers"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/reviewers"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/suggest_reviewers"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|builder
argument_list|(
name|GET
argument_list|,
literal|"/changes/%s/revisions"
argument_list|)
comment|// GET /changes/<change-id>/revisions is not implemented
operator|.
name|expectedResponseCode
argument_list|(
name|SC_NOT_FOUND
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/edit"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/edit"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/edit:rebase"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/edit:message"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/edit:message"
argument_list|)
argument_list|,
comment|// Publish edit and create a new edit
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/edit:publish"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/edit/a.txt"
argument_list|)
argument_list|,
comment|// Deletion of change edit and change must be tested last
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s/edit"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Change REST endpoints to be tested with NoteDb, each URL contains a placeholder for the change    * identifier.    */
DECL|field|CHANGE_ENDPOINTS_NOTEDB
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|CHANGE_ENDPOINTS_NOTEDB
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/hashtags"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/rebuild.notedb"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Reviewer REST endpoints to be tested, each URL contains placeholders for the change identifier    * and the reviewer identifier.    */
DECL|field|REVIEWER_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|REVIEWER_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/reviewers/%s"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/reviewers/%s/votes"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/reviewers/%s/delete"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s/reviewers/%s"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Vote REST endpoints to be tested, each URL contains placeholders for the change identifier, the    * reviewer identifier and the label identifier.    */
DECL|field|VOTE_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|VOTE_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/reviewers/%s/votes/%s/delete"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s/reviewers/%s/votes/%s"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Revision REST endpoints to be tested, each URL contains placeholders for the change identifier    * and the revision identifier.    */
DECL|field|REVISION_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|REVISION_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/actions"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/revisions/%s/cherrypick"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/commit"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/mergeable"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/related"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/review"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/revisions/%s/review"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/preview_submit"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/revisions/%s/submit"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/submit_type"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/revisions/%s/test.submit_rule"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/revisions/%s/test.submit_type"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/revisions/%s/rebase"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/description"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/revisions/%s/description"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/patch"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/archive"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/mergelist"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/reviewers"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/drafts"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/revisions/%s/drafts"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/comments"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/robotcomments"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|builder
argument_list|(
name|GET
argument_list|,
literal|"/changes/%s/revisions/%s/fixes"
argument_list|)
comment|// GET /changes/<change>/revisions/<revision>/fixes is not implemented
operator|.
name|expectedResponseCode
argument_list|(
name|SC_NOT_FOUND
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/files"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Revision reviewer REST endpoints to be tested, each URL contains placeholders for the change    * identifier, the revision identifier and the reviewer identifier.    */
DECL|field|REVISION_REVIEWER_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|REVISION_REVIEWER_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/reviewers/%s"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/reviewers/%s/votes"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/revisions/%s/reviewers/%s/delete"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s/revisions/%s/reviewers/%s"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Revision vote REST endpoints to be tested, each URL contains placeholders for the change    * identifier, the revision identifier, the reviewer identifier and the label identifier.    */
DECL|field|REVISION_VOTE_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|REVISION_VOTE_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/revisions/%s/reviewers/%s/votes/%s/delete"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s/revisions/%s/reviewers/%s/votes/%s"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Draft comment REST endpoints to be tested, each URL contains placeholders for the change    * identifier, the revision identifier and the draft comment identifier.    */
DECL|field|DRAFT_COMMENT_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|DRAFT_COMMENT_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/drafts/%s"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/revisions/%s/drafts/%s"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s/revisions/%s/drafts/%s"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Comment REST endpoints to be tested, each URL contains placeholders for the change identifier,    * the revision identifier and the comment identifier.    */
DECL|field|COMMENT_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|COMMENT_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/comments/%s"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s/revisions/%s/comments/%s"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/revisions/%s/comments/%s/delete"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Robot comment REST endpoints to be tested, each URL contains placeholders for the change    * identifier, the revision identifier and the robot comment identifier.    */
DECL|field|ROBOT_COMMENT_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|ROBOT_COMMENT_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/robotcomments/%s"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Fix REST endpoints to be tested, each URL contains placeholders for the change identifier, the    * revision identifier and the fix identifier.    */
DECL|field|FIX_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|FIX_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|post
argument_list|(
literal|"/changes/%s/revisions/%s/fixes/%s/apply"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Revision file REST endpoints to be tested, each URL contains placeholders for the change    * identifier, the revision identifier and the file identifier.    */
DECL|field|REVISION_FILE_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|REVISION_FILE_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/revisions/%s/files/%s/reviewed"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s/revisions/%s/files/%s/reviewed"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/files/%s/content"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/files/%s/download"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/files/%s/diff"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/revisions/%s/files/%s/blame"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Change message REST endpoints to be tested, each URL contains placeholders for the change    * identifier and the change message identifier.    */
DECL|field|CHANGE_MESSAGE_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|CHANGE_MESSAGE_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/messages/%s"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Change edit REST endpoints that create an edit to be tested, each URL contains placeholders for    * the change identifier and the change edit identifier.    */
DECL|field|CHANGE_EDIT_CREATE_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|CHANGE_EDIT_CREATE_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
comment|// Create change edit by editing an existing file.
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/edit/%s"
argument_list|)
argument_list|,
comment|// Create change edit by deleting an existing file.
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s/edit/%s"
argument_list|)
argument_list|)
decl_stmt|;
comment|/**    * Change edit REST endpoints to be tested, each URL contains placeholders for the change    * identifier and the change edit identifier.    */
DECL|field|CHANGE_EDIT_ENDPOINTS
specifier|private
specifier|static
specifier|final
name|ImmutableList
argument_list|<
name|RestCall
argument_list|>
name|CHANGE_EDIT_ENDPOINTS
init|=
name|ImmutableList
operator|.
name|of
argument_list|(
comment|// Calls on existing change edit.
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/edit/%s"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|put
argument_list|(
literal|"/changes/%s/edit/%s"
argument_list|)
argument_list|,
name|RestCall
operator|.
name|get
argument_list|(
literal|"/changes/%s/edit/%s/meta"
argument_list|)
argument_list|,
comment|// Delete content of a file in an existing change edit.
name|RestCall
operator|.
name|delete
argument_list|(
literal|"/changes/%s/edit/%s"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|FILENAME
specifier|private
specifier|static
specifier|final
name|String
name|FILENAME
init|=
literal|"test.txt"
decl_stmt|;
annotation|@
name|Test
DECL|method|changeEndpoints ()
specifier|public
name|void
name|changeEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|edit
argument_list|()
operator|.
name|create
argument_list|()
expr_stmt|;
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|CHANGE_ENDPOINTS
argument_list|,
name|changeId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeEndpointsNoteDb ()
specifier|public
name|void
name|changeEndpointsNoteDb
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|CHANGE_ENDPOINTS_NOTEDB
argument_list|,
name|changeId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|reviewerEndpoints ()
specifier|public
name|void
name|reviewerEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|AddReviewerInput
name|addReviewerInput
init|=
operator|new
name|AddReviewerInput
argument_list|()
decl_stmt|;
name|addReviewerInput
operator|.
name|reviewer
operator|=
name|user
operator|.
name|email
expr_stmt|;
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|REVIEWER_ENDPOINTS
argument_list|,
parameter_list|()
lambda|->
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|addReviewer
argument_list|(
name|addReviewerInput
argument_list|)
argument_list|,
name|changeId
argument_list|,
name|addReviewerInput
operator|.
name|reviewer
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteEndpoints ()
specifier|public
name|void
name|voteEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|VOTE_ENDPOINTS
argument_list|,
parameter_list|()
lambda|->
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
argument_list|,
name|changeId
argument_list|,
name|admin
operator|.
name|email
argument_list|,
literal|"Code-Review"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|revisionEndpoints ()
specifier|public
name|void
name|revisionEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|REVISION_ENDPOINTS
argument_list|,
name|changeId
argument_list|,
literal|"current"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|revisionReviewerEndpoints ()
specifier|public
name|void
name|revisionReviewerEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|AddReviewerInput
name|addReviewerInput
init|=
operator|new
name|AddReviewerInput
argument_list|()
decl_stmt|;
name|addReviewerInput
operator|.
name|reviewer
operator|=
name|user
operator|.
name|email
expr_stmt|;
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|REVISION_REVIEWER_ENDPOINTS
argument_list|,
parameter_list|()
lambda|->
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|addReviewer
argument_list|(
name|addReviewerInput
argument_list|)
argument_list|,
name|changeId
argument_list|,
literal|"current"
argument_list|,
name|addReviewerInput
operator|.
name|reviewer
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|revisionVoteEndpoints ()
specifier|public
name|void
name|revisionVoteEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|REVISION_VOTE_ENDPOINTS
argument_list|,
parameter_list|()
lambda|->
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
argument_list|,
name|changeId
argument_list|,
literal|"current"
argument_list|,
name|admin
operator|.
name|email
argument_list|,
literal|"Code-Review"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|draftCommentEndpoints ()
specifier|public
name|void
name|draftCommentEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
for|for
control|(
name|RestCall
name|restCall
range|:
name|DRAFT_COMMENT_ENDPOINTS
control|)
block|{
name|DraftInput
name|draftInput
init|=
operator|new
name|DraftInput
argument_list|()
decl_stmt|;
name|draftInput
operator|.
name|path
operator|=
name|Patch
operator|.
name|COMMIT_MSG
expr_stmt|;
name|draftInput
operator|.
name|side
operator|=
name|Side
operator|.
name|REVISION
expr_stmt|;
name|draftInput
operator|.
name|line
operator|=
literal|1
expr_stmt|;
name|draftInput
operator|.
name|message
operator|=
literal|"draft comment"
expr_stmt|;
name|CommentInfo
name|draftInfo
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|createDraft
argument_list|(
name|draftInput
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|restCall
argument_list|,
name|changeId
argument_list|,
literal|"current"
argument_list|,
name|draftInfo
operator|.
name|id
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|commentEndpoints ()
specifier|public
name|void
name|commentEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
for|for
control|(
name|RestCall
name|restCall
range|:
name|COMMENT_ENDPOINTS
control|)
block|{
name|DraftInput
name|draftInput
init|=
operator|new
name|DraftInput
argument_list|()
decl_stmt|;
name|draftInput
operator|.
name|path
operator|=
name|Patch
operator|.
name|COMMIT_MSG
expr_stmt|;
name|draftInput
operator|.
name|side
operator|=
name|Side
operator|.
name|REVISION
expr_stmt|;
name|draftInput
operator|.
name|line
operator|=
literal|1
expr_stmt|;
name|draftInput
operator|.
name|message
operator|=
literal|"draft comment"
expr_stmt|;
name|CommentInfo
name|commentInfo
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|createDraft
argument_list|(
name|draftInput
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|ReviewInput
name|reviewInput
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|reviewInput
operator|.
name|drafts
operator|=
name|DraftHandling
operator|.
name|PUBLISH
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|reviewInput
argument_list|)
expr_stmt|;
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|restCall
argument_list|,
name|changeId
argument_list|,
literal|"current"
argument_list|,
name|commentInfo
operator|.
name|id
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|robotCommentEndpoints ()
specifier|public
name|void
name|robotCommentEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|RobotCommentInput
name|robotCommentInput
init|=
operator|new
name|RobotCommentInput
argument_list|()
decl_stmt|;
name|robotCommentInput
operator|.
name|robotId
operator|=
literal|"happyRobot"
expr_stmt|;
name|robotCommentInput
operator|.
name|robotRunId
operator|=
literal|"1"
expr_stmt|;
name|robotCommentInput
operator|.
name|line
operator|=
literal|1
expr_stmt|;
name|robotCommentInput
operator|.
name|message
operator|=
literal|"nit: trailing whitespace"
expr_stmt|;
name|robotCommentInput
operator|.
name|path
operator|=
name|Patch
operator|.
name|COMMIT_MSG
expr_stmt|;
name|ReviewInput
name|reviewInput
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|reviewInput
operator|.
name|robotComments
operator|=
name|Collections
operator|.
name|singletonMap
argument_list|(
name|robotCommentInput
operator|.
name|path
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|robotCommentInput
argument_list|)
argument_list|)
expr_stmt|;
name|reviewInput
operator|.
name|message
operator|=
literal|"robot comment test"
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|reviewInput
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|RobotCommentInfo
argument_list|>
name|robotCommentInfos
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|robotCommentsAsList
argument_list|()
decl_stmt|;
name|RobotCommentInfo
name|robotCommentInfo
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|robotCommentInfos
argument_list|)
decl_stmt|;
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|ROBOT_COMMENT_ENDPOINTS
argument_list|,
name|changeId
argument_list|,
literal|"current"
argument_list|,
name|robotCommentInfo
operator|.
name|id
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|fixEndpoints ()
specifier|public
name|void
name|fixEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|String
name|changeId
init|=
name|createChange
argument_list|(
literal|"Subject"
argument_list|,
name|FILENAME
argument_list|,
literal|"content"
argument_list|)
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|RobotCommentInput
name|robotCommentInput
init|=
operator|new
name|RobotCommentInput
argument_list|()
decl_stmt|;
name|robotCommentInput
operator|.
name|robotId
operator|=
literal|"happyRobot"
expr_stmt|;
name|robotCommentInput
operator|.
name|robotRunId
operator|=
literal|"1"
expr_stmt|;
name|robotCommentInput
operator|.
name|line
operator|=
literal|1
expr_stmt|;
name|robotCommentInput
operator|.
name|message
operator|=
literal|"nit: trailing whitespace"
expr_stmt|;
name|robotCommentInput
operator|.
name|path
operator|=
name|FILENAME
expr_stmt|;
name|FixReplacementInfo
name|fixReplacementInfo
init|=
operator|new
name|FixReplacementInfo
argument_list|()
decl_stmt|;
name|fixReplacementInfo
operator|.
name|path
operator|=
name|FILENAME
expr_stmt|;
name|fixReplacementInfo
operator|.
name|replacement
operator|=
literal|"some replacement code"
expr_stmt|;
name|fixReplacementInfo
operator|.
name|range
operator|=
name|createRange
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|FixSuggestionInfo
name|fixSuggestionInfo
init|=
operator|new
name|FixSuggestionInfo
argument_list|()
decl_stmt|;
name|fixSuggestionInfo
operator|.
name|fixId
operator|=
literal|"An ID which must be overwritten."
expr_stmt|;
name|fixSuggestionInfo
operator|.
name|description
operator|=
literal|"A description for a suggested fix."
expr_stmt|;
name|fixSuggestionInfo
operator|.
name|replacements
operator|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|fixReplacementInfo
argument_list|)
expr_stmt|;
name|robotCommentInput
operator|.
name|fixSuggestions
operator|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|fixSuggestionInfo
argument_list|)
expr_stmt|;
name|ReviewInput
name|reviewInput
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|reviewInput
operator|.
name|robotComments
operator|=
name|Collections
operator|.
name|singletonMap
argument_list|(
name|robotCommentInput
operator|.
name|path
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|robotCommentInput
argument_list|)
argument_list|)
expr_stmt|;
name|reviewInput
operator|.
name|message
operator|=
literal|"robot comment test"
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|reviewInput
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|RobotCommentInfo
argument_list|>
name|robotCommentInfos
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|robotCommentsAsList
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|fixIds
init|=
name|getFixIds
argument_list|(
name|robotCommentInfos
argument_list|)
decl_stmt|;
name|String
name|fixId
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|fixIds
argument_list|)
decl_stmt|;
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|FIX_ENDPOINTS
argument_list|,
name|changeId
argument_list|,
literal|"current"
argument_list|,
name|fixId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|revisionFileEndpoints ()
specifier|public
name|void
name|revisionFileEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|(
literal|"Subject"
argument_list|,
name|FILENAME
argument_list|,
literal|"content"
argument_list|)
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|REVISION_FILE_ENDPOINTS
argument_list|,
name|changeId
argument_list|,
literal|"current"
argument_list|,
name|FILENAME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeMessageEndpoints ()
specifier|public
name|void
name|changeMessageEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
comment|// A change message is created on change creation.
name|String
name|changeMessageId
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|messages
argument_list|()
argument_list|)
operator|.
name|id
decl_stmt|;
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|CHANGE_MESSAGE_ENDPOINTS
argument_list|,
name|changeId
argument_list|,
name|changeMessageId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeEditCreateEndpoints ()
specifier|public
name|void
name|changeEditCreateEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|(
literal|"Subject"
argument_list|,
name|FILENAME
argument_list|,
literal|"content"
argument_list|)
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
comment|// Each of the REST calls creates the change edit newly.
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|CHANGE_EDIT_CREATE_ENDPOINTS
argument_list|,
parameter_list|()
lambda|->
name|adminRestSession
operator|.
name|delete
argument_list|(
literal|"/changes/"
operator|+
name|changeId
operator|+
literal|"/edit"
argument_list|)
argument_list|,
name|changeId
argument_list|,
name|FILENAME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeEditEndpoints ()
specifier|public
name|void
name|changeEditEndpoints
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|(
literal|"Subject"
argument_list|,
name|FILENAME
argument_list|,
literal|"content"
argument_list|)
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|edit
argument_list|()
operator|.
name|create
argument_list|()
expr_stmt|;
name|RestApiCallHelper
operator|.
name|execute
argument_list|(
name|adminRestSession
argument_list|,
name|CHANGE_EDIT_ENDPOINTS
argument_list|,
name|changeId
argument_list|,
name|FILENAME
argument_list|)
expr_stmt|;
block|}
DECL|method|createRange ( int startLine, int startCharacter, int endLine, int endCharacter)
specifier|private
specifier|static
name|Comment
operator|.
name|Range
name|createRange
parameter_list|(
name|int
name|startLine
parameter_list|,
name|int
name|startCharacter
parameter_list|,
name|int
name|endLine
parameter_list|,
name|int
name|endCharacter
parameter_list|)
block|{
name|Comment
operator|.
name|Range
name|range
init|=
operator|new
name|Comment
operator|.
name|Range
argument_list|()
decl_stmt|;
name|range
operator|.
name|startLine
operator|=
name|startLine
expr_stmt|;
name|range
operator|.
name|startCharacter
operator|=
name|startCharacter
expr_stmt|;
name|range
operator|.
name|endLine
operator|=
name|endLine
expr_stmt|;
name|range
operator|.
name|endCharacter
operator|=
name|endCharacter
expr_stmt|;
return|return
name|range
return|;
block|}
DECL|method|getFixIds (List<RobotCommentInfo> robotComments)
specifier|private
specifier|static
name|List
argument_list|<
name|String
argument_list|>
name|getFixIds
parameter_list|(
name|List
argument_list|<
name|RobotCommentInfo
argument_list|>
name|robotComments
parameter_list|)
block|{
name|assertThatList
argument_list|(
name|robotComments
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
return|return
name|robotComments
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|robotCommentInfo
lambda|->
name|robotCommentInfo
operator|.
name|fixSuggestions
argument_list|)
operator|.
name|filter
argument_list|(
name|Objects
operator|::
name|nonNull
argument_list|)
operator|.
name|flatMap
argument_list|(
name|List
operator|::
name|stream
argument_list|)
operator|.
name|map
argument_list|(
name|fixSuggestionInfo
lambda|->
name|fixSuggestionInfo
operator|.
name|fixId
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

