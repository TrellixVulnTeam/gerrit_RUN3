begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2018 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.elasticsearch
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|elasticsearch
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testing
operator|.
name|GerritJUnit
operator|.
name|assertThrows
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|ElasticVersionTest
specifier|public
class|class
name|ElasticVersionTest
block|{
annotation|@
name|Test
DECL|method|supportedVersion ()
specifier|public
name|void
name|supportedVersion
parameter_list|()
throws|throws
name|Exception
block|{
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"5.6.0"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V5_6
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"5.6.11"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V5_6
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"6.2.0"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V6_2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"6.2.4"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V6_2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"6.3.0"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V6_3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"6.3.2"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V6_3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"6.4.0"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V6_4
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"6.4.1"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V6_4
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"6.5.0"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V6_5
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"6.5.1"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V6_5
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"6.6.0"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V6_6
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"6.6.1"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V6_6
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"6.7.0"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V6_7
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"6.7.1"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V6_7
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"6.8.0"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V6_8
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"6.8.1"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V6_8
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"7.0.0"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V7_0
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"7.0.1"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V7_0
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"7.1.0"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V7_1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"7.1.1"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V7_1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"7.2.0"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V7_2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"7.2.1"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V7_2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"7.3.0"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V7_3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"7.3.1"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ElasticVersion
operator|.
name|V7_3
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|unsupportedVersion ()
specifier|public
name|void
name|unsupportedVersion
parameter_list|()
throws|throws
name|Exception
block|{
name|ElasticVersion
operator|.
name|UnsupportedVersion
name|thrown
init|=
name|assertThrows
argument_list|(
name|ElasticVersion
operator|.
name|UnsupportedVersion
operator|.
name|class
argument_list|,
parameter_list|()
lambda|->
name|ElasticVersion
operator|.
name|forVersion
argument_list|(
literal|"4.0.0"
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|thrown
argument_list|)
operator|.
name|hasMessageThat
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Unsupported version: [4.0.0]. Supported versions: "
operator|+
name|ElasticVersion
operator|.
name|supportedVersions
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|atLeastMinorVersion ()
specifier|public
name|void
name|atLeastMinorVersion
parameter_list|()
throws|throws
name|Exception
block|{
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V5_6
operator|.
name|isAtLeastMinorVersion
argument_list|(
name|ElasticVersion
operator|.
name|V6_7
argument_list|)
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_2
operator|.
name|isAtLeastMinorVersion
argument_list|(
name|ElasticVersion
operator|.
name|V6_7
argument_list|)
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_3
operator|.
name|isAtLeastMinorVersion
argument_list|(
name|ElasticVersion
operator|.
name|V6_7
argument_list|)
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_4
operator|.
name|isAtLeastMinorVersion
argument_list|(
name|ElasticVersion
operator|.
name|V6_7
argument_list|)
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_5
operator|.
name|isAtLeastMinorVersion
argument_list|(
name|ElasticVersion
operator|.
name|V6_7
argument_list|)
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_6
operator|.
name|isAtLeastMinorVersion
argument_list|(
name|ElasticVersion
operator|.
name|V6_7
argument_list|)
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_7
operator|.
name|isAtLeastMinorVersion
argument_list|(
name|ElasticVersion
operator|.
name|V6_7
argument_list|)
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_8
operator|.
name|isAtLeastMinorVersion
argument_list|(
name|ElasticVersion
operator|.
name|V6_8
argument_list|)
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V7_0
operator|.
name|isAtLeastMinorVersion
argument_list|(
name|ElasticVersion
operator|.
name|V6_7
argument_list|)
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V7_1
operator|.
name|isAtLeastMinorVersion
argument_list|(
name|ElasticVersion
operator|.
name|V6_7
argument_list|)
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V7_2
operator|.
name|isAtLeastMinorVersion
argument_list|(
name|ElasticVersion
operator|.
name|V6_7
argument_list|)
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V7_3
operator|.
name|isAtLeastMinorVersion
argument_list|(
name|ElasticVersion
operator|.
name|V6_7
argument_list|)
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|version6OrLater ()
specifier|public
name|void
name|version6OrLater
parameter_list|()
throws|throws
name|Exception
block|{
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V5_6
operator|.
name|isV6OrLater
argument_list|()
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_2
operator|.
name|isV6OrLater
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_3
operator|.
name|isV6OrLater
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_4
operator|.
name|isV6OrLater
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_5
operator|.
name|isV6OrLater
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_6
operator|.
name|isV6OrLater
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_7
operator|.
name|isV6OrLater
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_8
operator|.
name|isV6OrLater
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V7_0
operator|.
name|isV6OrLater
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V7_1
operator|.
name|isV6OrLater
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V7_2
operator|.
name|isV6OrLater
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V7_3
operator|.
name|isV6OrLater
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|version7OrLater ()
specifier|public
name|void
name|version7OrLater
parameter_list|()
throws|throws
name|Exception
block|{
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V5_6
operator|.
name|isV7OrLater
argument_list|()
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_2
operator|.
name|isV7OrLater
argument_list|()
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_3
operator|.
name|isV7OrLater
argument_list|()
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_4
operator|.
name|isV7OrLater
argument_list|()
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_5
operator|.
name|isV7OrLater
argument_list|()
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_6
operator|.
name|isV7OrLater
argument_list|()
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_7
operator|.
name|isV7OrLater
argument_list|()
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V6_8
operator|.
name|isV7OrLater
argument_list|()
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V7_0
operator|.
name|isV7OrLater
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V7_1
operator|.
name|isV7OrLater
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V7_2
operator|.
name|isV7OrLater
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ElasticVersion
operator|.
name|V7_3
operator|.
name|isV7OrLater
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

