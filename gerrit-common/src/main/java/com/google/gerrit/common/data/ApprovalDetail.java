begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2008 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.common.data
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|ApprovalCategory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|PatchSetApproval
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_class
DECL|class|ApprovalDetail
specifier|public
class|class
name|ApprovalDetail
block|{
DECL|field|SORT
specifier|public
specifier|static
specifier|final
name|Comparator
argument_list|<
name|ApprovalDetail
argument_list|>
name|SORT
init|=
operator|new
name|Comparator
argument_list|<
name|ApprovalDetail
argument_list|>
argument_list|()
block|{
specifier|public
name|int
name|compare
parameter_list|(
specifier|final
name|ApprovalDetail
name|o1
parameter_list|,
specifier|final
name|ApprovalDetail
name|o2
parameter_list|)
block|{
name|int
name|cmp
decl_stmt|;
name|cmp
operator|=
name|o2
operator|.
name|hasNonZero
operator|-
name|o1
operator|.
name|hasNonZero
expr_stmt|;
if|if
condition|(
name|cmp
operator|!=
literal|0
condition|)
return|return
name|cmp
return|;
return|return
name|o1
operator|.
name|sortOrder
operator|.
name|compareTo
argument_list|(
name|o2
operator|.
name|sortOrder
argument_list|)
return|;
block|}
block|}
decl_stmt|;
DECL|field|EG_0
specifier|static
specifier|final
name|Timestamp
name|EG_0
init|=
operator|new
name|Timestamp
argument_list|(
literal|0
argument_list|)
decl_stmt|;
DECL|field|EG_D
specifier|static
specifier|final
name|Timestamp
name|EG_D
init|=
operator|new
name|Timestamp
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
DECL|field|account
specifier|protected
name|Account
operator|.
name|Id
name|account
decl_stmt|;
DECL|field|approvals
specifier|protected
name|List
argument_list|<
name|PatchSetApproval
argument_list|>
name|approvals
decl_stmt|;
DECL|field|canRemove
specifier|protected
name|boolean
name|canRemove
decl_stmt|;
DECL|field|approved
specifier|private
specifier|transient
name|Set
argument_list|<
name|String
argument_list|>
name|approved
decl_stmt|;
DECL|field|rejected
specifier|private
specifier|transient
name|Set
argument_list|<
name|String
argument_list|>
name|rejected
decl_stmt|;
DECL|field|hasNonZero
specifier|private
specifier|transient
name|int
name|hasNonZero
decl_stmt|;
DECL|field|sortOrder
specifier|private
specifier|transient
name|Timestamp
name|sortOrder
init|=
name|EG_D
decl_stmt|;
DECL|method|ApprovalDetail ()
specifier|protected
name|ApprovalDetail
parameter_list|()
block|{   }
DECL|method|ApprovalDetail (final Account.Id id)
specifier|public
name|ApprovalDetail
parameter_list|(
specifier|final
name|Account
operator|.
name|Id
name|id
parameter_list|)
block|{
name|account
operator|=
name|id
expr_stmt|;
name|approvals
operator|=
operator|new
name|ArrayList
argument_list|<
name|PatchSetApproval
argument_list|>
argument_list|()
expr_stmt|;
block|}
DECL|method|getAccount ()
specifier|public
name|Account
operator|.
name|Id
name|getAccount
parameter_list|()
block|{
return|return
name|account
return|;
block|}
DECL|method|canRemove ()
specifier|public
name|boolean
name|canRemove
parameter_list|()
block|{
return|return
name|canRemove
return|;
block|}
DECL|method|setCanRemove (boolean removeable)
specifier|public
name|void
name|setCanRemove
parameter_list|(
name|boolean
name|removeable
parameter_list|)
block|{
name|canRemove
operator|=
name|removeable
expr_stmt|;
block|}
DECL|method|getPatchSetApprovals ()
specifier|public
name|List
argument_list|<
name|PatchSetApproval
argument_list|>
name|getPatchSetApprovals
parameter_list|()
block|{
return|return
name|approvals
return|;
block|}
DECL|method|getPatchSetApproval (ApprovalCategory.Id category)
specifier|public
name|PatchSetApproval
name|getPatchSetApproval
parameter_list|(
name|ApprovalCategory
operator|.
name|Id
name|category
parameter_list|)
block|{
for|for
control|(
name|PatchSetApproval
name|psa
range|:
name|approvals
control|)
block|{
if|if
condition|(
name|psa
operator|.
name|getCategoryId
argument_list|()
operator|.
name|equals
argument_list|(
name|category
argument_list|)
condition|)
block|{
return|return
name|psa
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
DECL|method|sortFirst ()
specifier|public
name|void
name|sortFirst
parameter_list|()
block|{
name|hasNonZero
operator|=
literal|1
expr_stmt|;
name|sortOrder
operator|=
name|ApprovalDetail
operator|.
name|EG_0
expr_stmt|;
block|}
DECL|method|add (final PatchSetApproval ca)
specifier|public
name|void
name|add
parameter_list|(
specifier|final
name|PatchSetApproval
name|ca
parameter_list|)
block|{
name|approvals
operator|.
name|add
argument_list|(
name|ca
argument_list|)
expr_stmt|;
specifier|final
name|Timestamp
name|g
init|=
name|ca
operator|.
name|getGranted
argument_list|()
decl_stmt|;
if|if
condition|(
name|g
operator|!=
literal|null
operator|&&
name|g
operator|.
name|compareTo
argument_list|(
name|sortOrder
argument_list|)
operator|<
literal|0
condition|)
block|{
name|sortOrder
operator|=
name|g
expr_stmt|;
block|}
if|if
condition|(
name|ca
operator|.
name|getValue
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|hasNonZero
operator|=
literal|1
expr_stmt|;
block|}
block|}
DECL|method|approved (String label)
specifier|public
name|void
name|approved
parameter_list|(
name|String
name|label
parameter_list|)
block|{
if|if
condition|(
name|approved
operator|==
literal|null
condition|)
block|{
name|approved
operator|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|approved
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
block|}
DECL|method|rejected (String label)
specifier|public
name|void
name|rejected
parameter_list|(
name|String
name|label
parameter_list|)
block|{
if|if
condition|(
name|rejected
operator|==
literal|null
condition|)
block|{
name|rejected
operator|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|rejected
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
block|}
DECL|method|isApproved (String label)
specifier|public
name|boolean
name|isApproved
parameter_list|(
name|String
name|label
parameter_list|)
block|{
return|return
name|approved
operator|!=
literal|null
operator|&&
name|approved
operator|.
name|contains
argument_list|(
name|label
argument_list|)
return|;
block|}
DECL|method|isRejected (String label)
specifier|public
name|boolean
name|isRejected
parameter_list|(
name|String
name|label
parameter_list|)
block|{
return|return
name|rejected
operator|!=
literal|null
operator|&&
name|rejected
operator|.
name|contains
argument_list|(
name|label
argument_list|)
return|;
block|}
block|}
end_class

end_unit

