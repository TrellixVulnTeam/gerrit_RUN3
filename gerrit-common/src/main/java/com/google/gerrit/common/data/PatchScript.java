begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2009 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.common.data
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|prettify
operator|.
name|client
operator|.
name|ClientSideFormatter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|prettify
operator|.
name|common
operator|.
name|EditList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|prettify
operator|.
name|common
operator|.
name|PrettyFormatter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|prettify
operator|.
name|common
operator|.
name|SparseFileContent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|prettify
operator|.
name|common
operator|.
name|SparseHtmlFile
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|AccountDiffPreference
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|Patch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|AccountDiffPreference
operator|.
name|Whitespace
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|Patch
operator|.
name|ChangeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|diff
operator|.
name|Edit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
DECL|class|PatchScript
specifier|public
class|class
name|PatchScript
block|{
DECL|enum|DisplayMethod
specifier|public
specifier|static
enum|enum
name|DisplayMethod
block|{
DECL|enumConstant|NONE
DECL|enumConstant|DIFF
DECL|enumConstant|IMG
name|NONE
block|,
name|DIFF
block|,
name|IMG
block|}
DECL|enum|FileMode
specifier|public
specifier|static
enum|enum
name|FileMode
block|{
DECL|enumConstant|FILE
DECL|enumConstant|SYMLINK
DECL|enumConstant|GITLINK
name|FILE
block|,
name|SYMLINK
block|,
name|GITLINK
block|}
DECL|field|changeId
specifier|protected
name|Change
operator|.
name|Key
name|changeId
decl_stmt|;
DECL|field|changeType
specifier|protected
name|ChangeType
name|changeType
decl_stmt|;
DECL|field|oldName
specifier|protected
name|String
name|oldName
decl_stmt|;
DECL|field|newName
specifier|protected
name|String
name|newName
decl_stmt|;
DECL|field|oldMode
specifier|protected
name|FileMode
name|oldMode
decl_stmt|;
DECL|field|newMode
specifier|protected
name|FileMode
name|newMode
decl_stmt|;
DECL|field|header
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|header
decl_stmt|;
DECL|field|diffPrefs
specifier|protected
name|AccountDiffPreference
name|diffPrefs
decl_stmt|;
DECL|field|a
specifier|protected
name|SparseFileContent
name|a
decl_stmt|;
DECL|field|b
specifier|protected
name|SparseFileContent
name|b
decl_stmt|;
DECL|field|edits
specifier|protected
name|List
argument_list|<
name|Edit
argument_list|>
name|edits
decl_stmt|;
DECL|field|displayMethodA
specifier|protected
name|DisplayMethod
name|displayMethodA
decl_stmt|;
DECL|field|displayMethodB
specifier|protected
name|DisplayMethod
name|displayMethodB
decl_stmt|;
DECL|field|comments
specifier|protected
name|CommentDetail
name|comments
decl_stmt|;
DECL|field|history
specifier|protected
name|List
argument_list|<
name|Patch
argument_list|>
name|history
decl_stmt|;
DECL|field|hugeFile
specifier|protected
name|boolean
name|hugeFile
decl_stmt|;
DECL|field|intralineDifference
specifier|protected
name|boolean
name|intralineDifference
decl_stmt|;
DECL|field|intralineFailure
specifier|protected
name|boolean
name|intralineFailure
decl_stmt|;
DECL|method|PatchScript (final Change.Key ck, final ChangeType ct, final String on, final String nn, final FileMode om, final FileMode nm, final List<String> h, final AccountDiffPreference dp, final SparseFileContent ca, final SparseFileContent cb, final List<Edit> e, final DisplayMethod ma, final DisplayMethod mb, final CommentDetail cd, final List<Patch> hist, final boolean hf, final boolean id, final boolean idf)
specifier|public
name|PatchScript
parameter_list|(
specifier|final
name|Change
operator|.
name|Key
name|ck
parameter_list|,
specifier|final
name|ChangeType
name|ct
parameter_list|,
specifier|final
name|String
name|on
parameter_list|,
specifier|final
name|String
name|nn
parameter_list|,
specifier|final
name|FileMode
name|om
parameter_list|,
specifier|final
name|FileMode
name|nm
parameter_list|,
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|h
parameter_list|,
specifier|final
name|AccountDiffPreference
name|dp
parameter_list|,
specifier|final
name|SparseFileContent
name|ca
parameter_list|,
specifier|final
name|SparseFileContent
name|cb
parameter_list|,
specifier|final
name|List
argument_list|<
name|Edit
argument_list|>
name|e
parameter_list|,
specifier|final
name|DisplayMethod
name|ma
parameter_list|,
specifier|final
name|DisplayMethod
name|mb
parameter_list|,
specifier|final
name|CommentDetail
name|cd
parameter_list|,
specifier|final
name|List
argument_list|<
name|Patch
argument_list|>
name|hist
parameter_list|,
specifier|final
name|boolean
name|hf
parameter_list|,
specifier|final
name|boolean
name|id
parameter_list|,
specifier|final
name|boolean
name|idf
parameter_list|)
block|{
name|changeId
operator|=
name|ck
expr_stmt|;
name|changeType
operator|=
name|ct
expr_stmt|;
name|oldName
operator|=
name|on
expr_stmt|;
name|newName
operator|=
name|nn
expr_stmt|;
name|oldMode
operator|=
name|om
expr_stmt|;
name|newMode
operator|=
name|nm
expr_stmt|;
name|header
operator|=
name|h
expr_stmt|;
name|diffPrefs
operator|=
name|dp
expr_stmt|;
name|a
operator|=
name|ca
expr_stmt|;
name|b
operator|=
name|cb
expr_stmt|;
name|edits
operator|=
name|e
expr_stmt|;
name|displayMethodA
operator|=
name|ma
expr_stmt|;
name|displayMethodB
operator|=
name|mb
expr_stmt|;
name|comments
operator|=
name|cd
expr_stmt|;
name|history
operator|=
name|hist
expr_stmt|;
name|hugeFile
operator|=
name|hf
expr_stmt|;
name|intralineDifference
operator|=
name|id
expr_stmt|;
name|intralineFailure
operator|=
name|idf
expr_stmt|;
block|}
DECL|method|PatchScript ()
specifier|protected
name|PatchScript
parameter_list|()
block|{   }
DECL|method|getChangeId ()
specifier|public
name|Change
operator|.
name|Key
name|getChangeId
parameter_list|()
block|{
return|return
name|changeId
return|;
block|}
DECL|method|getDisplayMethodA ()
specifier|public
name|DisplayMethod
name|getDisplayMethodA
parameter_list|()
block|{
return|return
name|displayMethodA
return|;
block|}
DECL|method|getDisplayMethodB ()
specifier|public
name|DisplayMethod
name|getDisplayMethodB
parameter_list|()
block|{
return|return
name|displayMethodB
return|;
block|}
DECL|method|getFileModeA ()
specifier|public
name|FileMode
name|getFileModeA
parameter_list|()
block|{
return|return
name|oldMode
return|;
block|}
DECL|method|getFileModeB ()
specifier|public
name|FileMode
name|getFileModeB
parameter_list|()
block|{
return|return
name|newMode
return|;
block|}
DECL|method|getPatchHeader ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getPatchHeader
parameter_list|()
block|{
return|return
name|header
return|;
block|}
DECL|method|getChangeType ()
specifier|public
name|ChangeType
name|getChangeType
parameter_list|()
block|{
return|return
name|changeType
return|;
block|}
DECL|method|getOldName ()
specifier|public
name|String
name|getOldName
parameter_list|()
block|{
return|return
name|oldName
return|;
block|}
DECL|method|getNewName ()
specifier|public
name|String
name|getNewName
parameter_list|()
block|{
return|return
name|newName
return|;
block|}
DECL|method|getCommentDetail ()
specifier|public
name|CommentDetail
name|getCommentDetail
parameter_list|()
block|{
return|return
name|comments
return|;
block|}
DECL|method|getHistory ()
specifier|public
name|List
argument_list|<
name|Patch
argument_list|>
name|getHistory
parameter_list|()
block|{
return|return
name|history
return|;
block|}
DECL|method|getDiffPrefs ()
specifier|public
name|AccountDiffPreference
name|getDiffPrefs
parameter_list|()
block|{
return|return
name|diffPrefs
return|;
block|}
DECL|method|setDiffPrefs (AccountDiffPreference dp)
specifier|public
name|void
name|setDiffPrefs
parameter_list|(
name|AccountDiffPreference
name|dp
parameter_list|)
block|{
name|diffPrefs
operator|=
name|dp
expr_stmt|;
block|}
DECL|method|isHugeFile ()
specifier|public
name|boolean
name|isHugeFile
parameter_list|()
block|{
return|return
name|hugeFile
return|;
block|}
DECL|method|isIgnoreWhitespace ()
specifier|public
name|boolean
name|isIgnoreWhitespace
parameter_list|()
block|{
return|return
name|diffPrefs
operator|.
name|getIgnoreWhitespace
argument_list|()
operator|!=
name|Whitespace
operator|.
name|IGNORE_NONE
return|;
block|}
DECL|method|hasIntralineDifference ()
specifier|public
name|boolean
name|hasIntralineDifference
parameter_list|()
block|{
return|return
name|intralineDifference
return|;
block|}
DECL|method|hasIntralineFailure ()
specifier|public
name|boolean
name|hasIntralineFailure
parameter_list|()
block|{
return|return
name|intralineFailure
return|;
block|}
DECL|method|isExpandAllComments ()
specifier|public
name|boolean
name|isExpandAllComments
parameter_list|()
block|{
return|return
name|diffPrefs
operator|.
name|isExpandAllComments
argument_list|()
return|;
block|}
DECL|method|getA ()
specifier|public
name|SparseFileContent
name|getA
parameter_list|()
block|{
return|return
name|a
return|;
block|}
DECL|method|getB ()
specifier|public
name|SparseFileContent
name|getB
parameter_list|()
block|{
return|return
name|b
return|;
block|}
DECL|method|getSparseHtmlFileA ()
specifier|public
name|SparseHtmlFile
name|getSparseHtmlFileA
parameter_list|()
block|{
name|AccountDiffPreference
name|dp
init|=
operator|new
name|AccountDiffPreference
argument_list|(
name|diffPrefs
argument_list|)
decl_stmt|;
name|dp
operator|.
name|setShowWhitespaceErrors
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|PrettyFormatter
name|f
init|=
name|ClientSideFormatter
operator|.
name|FACTORY
operator|.
name|get
argument_list|()
decl_stmt|;
name|f
operator|.
name|setDiffPrefs
argument_list|(
name|dp
argument_list|)
expr_stmt|;
name|f
operator|.
name|setFileName
argument_list|(
name|a
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setEditFilter
argument_list|(
name|PrettyFormatter
operator|.
name|A
argument_list|)
expr_stmt|;
name|f
operator|.
name|setEditList
argument_list|(
name|edits
argument_list|)
expr_stmt|;
name|f
operator|.
name|format
argument_list|(
name|a
argument_list|)
expr_stmt|;
return|return
name|f
return|;
block|}
DECL|method|getSparseHtmlFileB ()
specifier|public
name|SparseHtmlFile
name|getSparseHtmlFileB
parameter_list|()
block|{
name|AccountDiffPreference
name|dp
init|=
operator|new
name|AccountDiffPreference
argument_list|(
name|diffPrefs
argument_list|)
decl_stmt|;
name|PrettyFormatter
name|f
init|=
name|ClientSideFormatter
operator|.
name|FACTORY
operator|.
name|get
argument_list|()
decl_stmt|;
name|f
operator|.
name|setDiffPrefs
argument_list|(
name|dp
argument_list|)
expr_stmt|;
name|f
operator|.
name|setFileName
argument_list|(
name|b
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|setEditFilter
argument_list|(
name|PrettyFormatter
operator|.
name|B
argument_list|)
expr_stmt|;
name|f
operator|.
name|setEditList
argument_list|(
name|edits
argument_list|)
expr_stmt|;
if|if
condition|(
name|dp
operator|.
name|isSyntaxHighlighting
argument_list|()
operator|&&
name|a
operator|.
name|isWholeFile
argument_list|()
operator|&&
operator|!
name|b
operator|.
name|isWholeFile
argument_list|()
condition|)
block|{
name|f
operator|.
name|format
argument_list|(
name|b
operator|.
name|apply
argument_list|(
name|a
argument_list|,
name|edits
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|f
operator|.
name|format
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
return|return
name|f
return|;
block|}
DECL|method|getEdits ()
specifier|public
name|List
argument_list|<
name|Edit
argument_list|>
name|getEdits
parameter_list|()
block|{
return|return
name|edits
return|;
block|}
DECL|method|getHunks ()
specifier|public
name|Iterable
argument_list|<
name|EditList
operator|.
name|Hunk
argument_list|>
name|getHunks
parameter_list|()
block|{
name|int
name|ctx
init|=
name|diffPrefs
operator|.
name|getContext
argument_list|()
decl_stmt|;
if|if
condition|(
name|ctx
operator|==
name|AccountDiffPreference
operator|.
name|WHOLE_FILE_CONTEXT
condition|)
block|{
name|ctx
operator|=
name|Math
operator|.
name|max
argument_list|(
name|a
operator|.
name|size
argument_list|()
argument_list|,
name|b
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|EditList
argument_list|(
name|edits
argument_list|,
name|ctx
argument_list|,
name|a
operator|.
name|size
argument_list|()
argument_list|,
name|b
operator|.
name|size
argument_list|()
argument_list|)
operator|.
name|getHunks
argument_list|()
return|;
block|}
block|}
end_class

end_unit

