begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2018 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.testutil
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|audit
operator|.
name|AuditEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|audit
operator|.
name|AuditService
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|audit
operator|.
name|GroupMemberAuditListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|registration
operator|.
name|DynamicSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountGroupById
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountGroupMember
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|AbstractModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
annotation|@
name|Singleton
DECL|class|FakeAuditService
specifier|public
class|class
name|FakeAuditService
implements|implements
name|AuditService
block|{
DECL|field|groupMemberAuditListeners
specifier|private
specifier|final
name|DynamicSet
argument_list|<
name|GroupMemberAuditListener
argument_list|>
name|groupMemberAuditListeners
decl_stmt|;
DECL|class|Module
specifier|public
specifier|static
class|class
name|Module
extends|extends
name|AbstractModule
block|{
annotation|@
name|Override
DECL|method|configure ()
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|DynamicSet
operator|.
name|setOf
argument_list|(
name|binder
argument_list|()
argument_list|,
name|GroupMemberAuditListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|AuditService
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|FakeAuditService
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Inject
DECL|method|FakeAuditService (DynamicSet<GroupMemberAuditListener> groupMemberAuditListeners)
specifier|public
name|FakeAuditService
parameter_list|(
name|DynamicSet
argument_list|<
name|GroupMemberAuditListener
argument_list|>
name|groupMemberAuditListeners
parameter_list|)
block|{
name|this
operator|.
name|groupMemberAuditListeners
operator|=
name|groupMemberAuditListeners
expr_stmt|;
block|}
DECL|field|auditEvents
specifier|public
name|List
argument_list|<
name|AuditEvent
argument_list|>
name|auditEvents
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|clearEvents ()
specifier|public
name|void
name|clearEvents
parameter_list|()
block|{
name|auditEvents
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|dispatch (AuditEvent action)
specifier|public
name|void
name|dispatch
parameter_list|(
name|AuditEvent
name|action
parameter_list|)
block|{
name|auditEvents
operator|.
name|add
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|dispatchAddAccountsToGroup (Account.Id actor, Collection<AccountGroupMember> added)
specifier|public
name|void
name|dispatchAddAccountsToGroup
parameter_list|(
name|Account
operator|.
name|Id
name|actor
parameter_list|,
name|Collection
argument_list|<
name|AccountGroupMember
argument_list|>
name|added
parameter_list|)
block|{
for|for
control|(
name|GroupMemberAuditListener
name|auditListener
range|:
name|groupMemberAuditListeners
control|)
block|{
name|auditListener
operator|.
name|onAddAccountsToGroup
argument_list|(
name|actor
argument_list|,
name|added
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|dispatchDeleteAccountsFromGroup ( Account.Id actor, Collection<AccountGroupMember> removed)
specifier|public
name|void
name|dispatchDeleteAccountsFromGroup
parameter_list|(
name|Account
operator|.
name|Id
name|actor
parameter_list|,
name|Collection
argument_list|<
name|AccountGroupMember
argument_list|>
name|removed
parameter_list|)
block|{
for|for
control|(
name|GroupMemberAuditListener
name|auditListener
range|:
name|groupMemberAuditListeners
control|)
block|{
name|auditListener
operator|.
name|onDeleteAccountsFromGroup
argument_list|(
name|actor
argument_list|,
name|removed
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|dispatchAddGroupsToGroup (Account.Id actor, Collection<AccountGroupById> added)
specifier|public
name|void
name|dispatchAddGroupsToGroup
parameter_list|(
name|Account
operator|.
name|Id
name|actor
parameter_list|,
name|Collection
argument_list|<
name|AccountGroupById
argument_list|>
name|added
parameter_list|)
block|{
for|for
control|(
name|GroupMemberAuditListener
name|auditListener
range|:
name|groupMemberAuditListeners
control|)
block|{
name|auditListener
operator|.
name|onAddGroupsToGroup
argument_list|(
name|actor
argument_list|,
name|added
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|dispatchDeleteGroupsFromGroup ( Account.Id actor, Collection<AccountGroupById> removed)
specifier|public
name|void
name|dispatchDeleteGroupsFromGroup
parameter_list|(
name|Account
operator|.
name|Id
name|actor
parameter_list|,
name|Collection
argument_list|<
name|AccountGroupById
argument_list|>
name|removed
parameter_list|)
block|{
for|for
control|(
name|GroupMemberAuditListener
name|auditListener
range|:
name|groupMemberAuditListeners
control|)
block|{
name|auditListener
operator|.
name|onDeleteGroupsFromGroup
argument_list|(
name|actor
argument_list|,
name|removed
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

