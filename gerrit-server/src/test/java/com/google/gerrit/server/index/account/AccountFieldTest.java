begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.index.account
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|index
operator|.
name|account
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
operator|.
name|UTF_8
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
operator|.
name|toList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterables
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Streams
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|TimeUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|RefNames
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|externalids
operator|.
name|ExternalId
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AllUsersName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AllUsersNameProvider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|GerritBaseTests
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|AccountFieldTest
specifier|public
class|class
name|AccountFieldTest
extends|extends
name|GerritBaseTests
block|{
annotation|@
name|Test
DECL|method|refStateFieldValues ()
specifier|public
name|void
name|refStateFieldValues
parameter_list|()
throws|throws
name|Exception
block|{
name|AllUsersName
name|allUsersName
init|=
operator|new
name|AllUsersName
argument_list|(
name|AllUsersNameProvider
operator|.
name|DEFAULT
argument_list|)
decl_stmt|;
name|Account
name|account
init|=
operator|new
name|Account
argument_list|(
operator|new
name|Account
operator|.
name|Id
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|metaId
init|=
literal|"0e39795bb25dc914118224995c53c5c36923a461"
decl_stmt|;
name|account
operator|.
name|setMetaId
argument_list|(
name|metaId
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|values
init|=
name|toStrings
argument_list|(
name|AccountField
operator|.
name|REF_STATE
operator|.
name|get
argument_list|(
operator|new
name|AccountState
argument_list|(
name|allUsersName
argument_list|,
name|account
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|()
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|()
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|values
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|String
name|expectedValue
init|=
name|allUsersName
operator|.
name|get
argument_list|()
operator|+
literal|":"
operator|+
name|RefNames
operator|.
name|refsUsers
argument_list|(
name|account
operator|.
name|getId
argument_list|()
argument_list|)
operator|+
literal|":"
operator|+
name|metaId
decl_stmt|;
name|assertThat
argument_list|(
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|values
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|expectedValue
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|externalIdStateFieldValues ()
specifier|public
name|void
name|externalIdStateFieldValues
parameter_list|()
throws|throws
name|Exception
block|{
name|Account
operator|.
name|Id
name|id
init|=
operator|new
name|Account
operator|.
name|Id
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Account
name|account
init|=
operator|new
name|Account
argument_list|(
name|id
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|)
decl_stmt|;
name|ExternalId
name|extId1
init|=
name|ExternalId
operator|.
name|create
argument_list|(
name|ExternalId
operator|.
name|Key
operator|.
name|create
argument_list|(
name|ExternalId
operator|.
name|SCHEME_MAILTO
argument_list|,
literal|"foo.bar@example.com"
argument_list|)
argument_list|,
name|id
argument_list|,
literal|"foo.bar@example.com"
argument_list|,
literal|null
argument_list|,
name|ObjectId
operator|.
name|fromString
argument_list|(
literal|"1b9a0cf038ea38a0ab08617c39aa8e28413a27ca"
argument_list|)
argument_list|)
decl_stmt|;
name|ExternalId
name|extId2
init|=
name|ExternalId
operator|.
name|create
argument_list|(
name|ExternalId
operator|.
name|Key
operator|.
name|create
argument_list|(
name|ExternalId
operator|.
name|SCHEME_USERNAME
argument_list|,
literal|"foo"
argument_list|)
argument_list|,
name|id
argument_list|,
literal|null
argument_list|,
literal|"secret"
argument_list|,
name|ObjectId
operator|.
name|fromString
argument_list|(
literal|"5b3a73dc9a668a5b89b5f049225261e3e3291d1a"
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|values
init|=
name|toStrings
argument_list|(
name|AccountField
operator|.
name|EXTERNAL_ID_STATE
operator|.
name|get
argument_list|(
operator|new
name|AccountState
argument_list|(
literal|null
argument_list|,
name|account
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|()
argument_list|,
name|ImmutableSet
operator|.
name|of
argument_list|(
name|extId1
argument_list|,
name|extId2
argument_list|)
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|()
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|expectedValue1
init|=
name|extId1
operator|.
name|key
argument_list|()
operator|.
name|sha1
argument_list|()
operator|.
name|name
argument_list|()
operator|+
literal|":"
operator|+
name|extId1
operator|.
name|blobId
argument_list|()
operator|.
name|name
argument_list|()
decl_stmt|;
name|String
name|expectedValue2
init|=
name|extId2
operator|.
name|key
argument_list|()
operator|.
name|sha1
argument_list|()
operator|.
name|name
argument_list|()
operator|+
literal|":"
operator|+
name|extId2
operator|.
name|blobId
argument_list|()
operator|.
name|name
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|values
argument_list|)
operator|.
name|containsExactly
argument_list|(
name|expectedValue1
argument_list|,
name|expectedValue2
argument_list|)
expr_stmt|;
block|}
DECL|method|toStrings (Iterable<byte[]> values)
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|toStrings
parameter_list|(
name|Iterable
argument_list|<
name|byte
index|[]
argument_list|>
name|values
parameter_list|)
block|{
return|return
name|Streams
operator|.
name|stream
argument_list|(
name|values
argument_list|)
operator|.
name|map
argument_list|(
name|v
lambda|->
operator|new
name|String
argument_list|(
name|v
argument_list|,
name|UTF_8
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

