begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2016 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.events
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|events
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Supplier
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Suppliers
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|data
operator|.
name|AccountAttribute
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|data
operator|.
name|RefUpdateAttribute
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|Gson
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|GsonBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|EventDeserializerTest
specifier|public
class|class
name|EventDeserializerTest
block|{
annotation|@
name|Test
DECL|method|refUpdatedEvent ()
specifier|public
name|void
name|refUpdatedEvent
parameter_list|()
block|{
name|RefUpdatedEvent
name|refUpdatedEvent
init|=
operator|new
name|RefUpdatedEvent
argument_list|()
decl_stmt|;
name|RefUpdateAttribute
name|refUpdatedAttribute
init|=
operator|new
name|RefUpdateAttribute
argument_list|()
decl_stmt|;
name|refUpdatedAttribute
operator|.
name|refName
operator|=
literal|"refs/heads/master"
expr_stmt|;
name|refUpdatedEvent
operator|.
name|refUpdate
operator|=
name|createSupplier
argument_list|(
name|refUpdatedAttribute
argument_list|)
expr_stmt|;
name|AccountAttribute
name|accountAttribute
init|=
operator|new
name|AccountAttribute
argument_list|()
decl_stmt|;
name|accountAttribute
operator|.
name|email
operator|=
literal|"some.user@domain.com"
expr_stmt|;
name|refUpdatedEvent
operator|.
name|submitter
operator|=
name|createSupplier
argument_list|(
name|accountAttribute
argument_list|)
expr_stmt|;
name|Gson
name|gsonSerializer
init|=
operator|new
name|GsonBuilder
argument_list|()
operator|.
name|registerTypeAdapter
argument_list|(
name|Supplier
operator|.
name|class
argument_list|,
operator|new
name|SupplierSerializer
argument_list|()
argument_list|)
operator|.
name|create
argument_list|()
decl_stmt|;
name|String
name|serializedEvent
init|=
name|gsonSerializer
operator|.
name|toJson
argument_list|(
name|refUpdatedEvent
argument_list|)
decl_stmt|;
name|Gson
name|gsonDeserializer
init|=
operator|new
name|GsonBuilder
argument_list|()
operator|.
name|registerTypeAdapter
argument_list|(
name|Event
operator|.
name|class
argument_list|,
operator|new
name|EventDeserializer
argument_list|()
argument_list|)
operator|.
name|registerTypeAdapter
argument_list|(
name|Supplier
operator|.
name|class
argument_list|,
operator|new
name|SupplierDeserializer
argument_list|()
argument_list|)
operator|.
name|create
argument_list|()
decl_stmt|;
name|RefUpdatedEvent
name|e
init|=
operator|(
name|RefUpdatedEvent
operator|)
name|gsonDeserializer
operator|.
name|fromJson
argument_list|(
name|serializedEvent
argument_list|,
name|Event
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|e
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|e
operator|.
name|refUpdate
argument_list|)
operator|.
name|isInstanceOf
argument_list|(
name|Supplier
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|e
operator|.
name|refUpdate
operator|.
name|get
argument_list|()
operator|.
name|refName
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|refUpdatedAttribute
operator|.
name|refName
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|e
operator|.
name|submitter
argument_list|)
operator|.
name|isInstanceOf
argument_list|(
name|Supplier
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|e
operator|.
name|submitter
operator|.
name|get
argument_list|()
operator|.
name|email
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|accountAttribute
operator|.
name|email
argument_list|)
expr_stmt|;
block|}
DECL|method|createSupplier (final T value)
specifier|private
parameter_list|<
name|T
parameter_list|>
name|Supplier
argument_list|<
name|T
argument_list|>
name|createSupplier
parameter_list|(
specifier|final
name|T
name|value
parameter_list|)
block|{
return|return
name|Suppliers
operator|.
name|memoize
argument_list|(
operator|new
name|Supplier
argument_list|<
name|T
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|T
name|get
parameter_list|()
block|{
return|return
name|value
return|;
block|}
block|}
argument_list|)
return|;
block|}
block|}
end_class

end_unit

