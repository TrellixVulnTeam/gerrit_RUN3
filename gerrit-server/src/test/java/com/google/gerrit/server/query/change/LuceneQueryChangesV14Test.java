begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2015 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.query.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|query
operator|.
name|change
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
operator|.
name|MILLISECONDS
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
operator|.
name|MINUTES
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AuthRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|InMemoryModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|InMemoryRepositoryManager
operator|.
name|Repo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Guice
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Injector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|junit
operator|.
name|TestRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|LuceneQueryChangesV14Test
specifier|public
class|class
name|LuceneQueryChangesV14Test
extends|extends
name|LuceneQueryChangesTest
block|{
annotation|@
name|Override
DECL|method|createInjector ()
specifier|protected
name|Injector
name|createInjector
parameter_list|()
block|{
name|Config
name|luceneConfig
init|=
operator|new
name|Config
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|InMemoryModule
operator|.
name|setDefaults
argument_list|(
name|luceneConfig
argument_list|)
expr_stmt|;
comment|// Latest version with a Lucene 4 index.
name|luceneConfig
operator|.
name|setInt
argument_list|(
literal|"index"
argument_list|,
literal|"lucene"
argument_list|,
literal|"testVersion"
argument_list|,
literal|14
argument_list|)
expr_stmt|;
return|return
name|Guice
operator|.
name|createInjector
argument_list|(
operator|new
name|InMemoryModule
argument_list|(
name|luceneConfig
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|byCommentBy ()
specifier|public
name|void
name|byCommentBy
parameter_list|()
block|{
comment|// Ignore.
block|}
annotation|@
name|Override
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|byFrom ()
specifier|public
name|void
name|byFrom
parameter_list|()
block|{
comment|// Ignore.
block|}
annotation|@
name|Override
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|byTopic ()
specifier|public
name|void
name|byTopic
parameter_list|()
block|{
comment|// Ignore.
block|}
annotation|@
name|Override
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|reviewedBy ()
specifier|public
name|void
name|reviewedBy
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Ignore.
block|}
annotation|@
name|Override
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|prepopulatedFields ()
specifier|public
name|void
name|prepopulatedFields
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Ignore.
block|}
annotation|@
name|Override
annotation|@
name|Ignore
annotation|@
name|Test
DECL|method|prepopulateOnlyRequestedFields ()
specifier|public
name|void
name|prepopulateOnlyRequestedFields
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Ignore.
block|}
annotation|@
name|Test
DECL|method|isReviewed ()
specifier|public
name|void
name|isReviewed
parameter_list|()
throws|throws
name|Exception
block|{
name|clockStepMs
operator|=
name|MILLISECONDS
operator|.
name|convert
argument_list|(
literal|2
argument_list|,
name|MINUTES
argument_list|)
expr_stmt|;
name|TestRepository
argument_list|<
name|Repo
argument_list|>
name|repo
init|=
name|createProject
argument_list|(
literal|"repo"
argument_list|)
decl_stmt|;
name|Change
name|change1
init|=
name|insert
argument_list|(
name|newChange
argument_list|(
name|repo
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
decl_stmt|;
name|Change
name|change2
init|=
name|insert
argument_list|(
name|newChange
argument_list|(
name|repo
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
decl_stmt|;
name|Change
name|change3
init|=
name|insert
argument_list|(
name|newChange
argument_list|(
name|repo
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|change1
operator|.
name|getId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
operator|new
name|ReviewInput
argument_list|()
operator|.
name|message
argument_list|(
literal|"comment"
argument_list|)
argument_list|)
expr_stmt|;
name|Account
operator|.
name|Id
name|user2
init|=
name|accountManager
operator|.
name|authenticate
argument_list|(
name|AuthRequest
operator|.
name|forUser
argument_list|(
literal|"anotheruser"
argument_list|)
argument_list|)
operator|.
name|getAccountId
argument_list|()
decl_stmt|;
name|requestContext
operator|.
name|setContext
argument_list|(
name|newRequestContext
argument_list|(
name|user2
argument_list|)
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|change2
operator|.
name|getId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|recommend
argument_list|()
argument_list|)
expr_stmt|;
name|PatchSet
operator|.
name|Id
name|ps3_1
init|=
name|change3
operator|.
name|currentPatchSetId
argument_list|()
decl_stmt|;
name|change3
operator|=
name|newPatchSet
argument_list|(
name|repo
argument_list|,
name|change3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|change3
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
operator|.
name|isNotEqualTo
argument_list|(
name|ps3_1
argument_list|)
expr_stmt|;
comment|// Nonzero score on previous patch set does not count.
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|change3
operator|.
name|getId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|revision
argument_list|(
name|ps3_1
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|recommend
argument_list|()
argument_list|)
expr_stmt|;
name|assertQuery
argument_list|(
literal|"is:reviewed"
argument_list|,
name|change2
argument_list|)
expr_stmt|;
name|assertQuery
argument_list|(
literal|"-is:reviewed"
argument_list|,
name|change3
argument_list|,
name|change1
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

