begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|change
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Scopes
operator|.
name|SINGLETON
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|createMock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|expect
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|expectLastCall
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|replay
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|MoreObjects
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|TimeUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|Side
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|AccountInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|CommentInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|registration
operator|.
name|DynamicMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|IdString
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|ResourceNotFoundException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestReadView
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestView
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|CommentRange
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Patch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchLineComment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchLineComment
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|RevId
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|server
operator|.
name|PatchLineCommentAccess
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|server
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|CurrentUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|GerritPersonIdent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|IdentifiedUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|PatchLineCommentsUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountLoader
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|CapabilityControl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|FakeRealm
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|GroupBackend
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|Realm
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AllUsersNameProvider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AnonymousCowardName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AnonymousCowardNameProvider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|CanonicalWebUrl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|DisableReverseDnsLookup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|GerritServerConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|extensions
operator|.
name|events
operator|.
name|GitReferenceUpdated
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|GitModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|GitRepositoryManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|SystemGroupBackend
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ChangeUpdate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|NotesMigration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ChangeControl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ProjectCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|ConfigSuite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|FakeAccountCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|InMemoryRepositoryManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|TestChanges
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|ListResultSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|ResultSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|AbstractModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Guice
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Injector
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provides
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|TypeLiteral
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|util
operator|.
name|Providers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|IAnswer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|PersonIdent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TimeZone
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|ConfigSuite
operator|.
name|class
argument_list|)
DECL|class|CommentsTest
specifier|public
class|class
name|CommentsTest
block|{
DECL|field|TZ
specifier|private
specifier|static
specifier|final
name|TimeZone
name|TZ
init|=
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"America/Los_Angeles"
argument_list|)
decl_stmt|;
annotation|@
name|ConfigSuite
operator|.
name|Parameter
DECL|field|config
specifier|public
name|Config
name|config
decl_stmt|;
annotation|@
name|ConfigSuite
operator|.
name|Config
DECL|method|noteDbEnabled ()
specifier|public
specifier|static
annotation|@
name|GerritServerConfig
name|Config
name|noteDbEnabled
parameter_list|()
block|{
return|return
name|NotesMigration
operator|.
name|allEnabledConfig
argument_list|()
return|;
block|}
DECL|field|injector
specifier|private
name|Injector
name|injector
decl_stmt|;
DECL|field|db
specifier|private
name|ReviewDb
name|db
decl_stmt|;
DECL|field|project
specifier|private
name|Project
operator|.
name|NameKey
name|project
decl_stmt|;
DECL|field|revRes1
specifier|private
name|RevisionResource
name|revRes1
decl_stmt|;
DECL|field|revRes2
specifier|private
name|RevisionResource
name|revRes2
decl_stmt|;
DECL|field|plc1
specifier|private
name|PatchLineComment
name|plc1
decl_stmt|;
DECL|field|plc2
specifier|private
name|PatchLineComment
name|plc2
decl_stmt|;
DECL|field|plc3
specifier|private
name|PatchLineComment
name|plc3
decl_stmt|;
DECL|field|plc4
specifier|private
name|PatchLineComment
name|plc4
decl_stmt|;
DECL|field|plc5
specifier|private
name|PatchLineComment
name|plc5
decl_stmt|;
DECL|field|changeOwner
specifier|private
name|IdentifiedUser
name|changeOwner
decl_stmt|;
DECL|field|allUsers
annotation|@
name|Inject
specifier|private
name|AllUsersNameProvider
name|allUsers
decl_stmt|;
DECL|field|comments
annotation|@
name|Inject
specifier|private
name|Comments
name|comments
decl_stmt|;
DECL|field|drafts
annotation|@
name|Inject
specifier|private
name|DraftComments
name|drafts
decl_stmt|;
DECL|field|getComment
annotation|@
name|Inject
specifier|private
name|GetComment
name|getComment
decl_stmt|;
DECL|field|userFactory
annotation|@
name|Inject
specifier|private
name|IdentifiedUser
operator|.
name|GenericFactory
name|userFactory
decl_stmt|;
DECL|field|repoManager
annotation|@
name|Inject
specifier|private
name|InMemoryRepositoryManager
name|repoManager
decl_stmt|;
DECL|field|migration
annotation|@
name|Inject
specifier|private
name|NotesMigration
name|migration
decl_stmt|;
DECL|field|plcUtil
annotation|@
name|Inject
specifier|private
name|PatchLineCommentsUtil
name|plcUtil
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|final
name|DynamicMap
argument_list|<
name|RestView
argument_list|<
name|CommentResource
argument_list|>
argument_list|>
name|commentViews
init|=
name|createMock
argument_list|(
name|DynamicMap
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|TypeLiteral
argument_list|<
name|DynamicMap
argument_list|<
name|RestView
argument_list|<
name|CommentResource
argument_list|>
argument_list|>
argument_list|>
name|commentViewsType
init|=
operator|new
name|TypeLiteral
argument_list|<
name|DynamicMap
argument_list|<
name|RestView
argument_list|<
name|CommentResource
argument_list|>
argument_list|>
argument_list|>
argument_list|()
block|{}
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|final
name|DynamicMap
argument_list|<
name|RestView
argument_list|<
name|DraftCommentResource
argument_list|>
argument_list|>
name|draftViews
init|=
name|createMock
argument_list|(
name|DynamicMap
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|TypeLiteral
argument_list|<
name|DynamicMap
argument_list|<
name|RestView
argument_list|<
name|DraftCommentResource
argument_list|>
argument_list|>
argument_list|>
name|draftViewsType
init|=
operator|new
name|TypeLiteral
argument_list|<
name|DynamicMap
argument_list|<
name|RestView
argument_list|<
name|DraftCommentResource
argument_list|>
argument_list|>
argument_list|>
argument_list|()
block|{}
decl_stmt|;
specifier|final
name|AccountLoader
operator|.
name|Factory
name|alf
init|=
name|createMock
argument_list|(
name|AccountLoader
operator|.
name|Factory
operator|.
name|class
argument_list|)
decl_stmt|;
name|db
operator|=
name|createMock
argument_list|(
name|ReviewDb
operator|.
name|class
argument_list|)
expr_stmt|;
specifier|final
name|FakeAccountCache
name|accountCache
init|=
operator|new
name|FakeAccountCache
argument_list|()
decl_stmt|;
specifier|final
name|PersonIdent
name|serverIdent
init|=
operator|new
name|PersonIdent
argument_list|(
literal|"Gerrit Server"
argument_list|,
literal|"noreply@gerrit.com"
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|,
name|TZ
argument_list|)
decl_stmt|;
name|project
operator|=
operator|new
name|Project
operator|.
name|NameKey
argument_list|(
literal|"test-project"
argument_list|)
expr_stmt|;
name|Account
name|co
init|=
operator|new
name|Account
argument_list|(
operator|new
name|Account
operator|.
name|Id
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|)
decl_stmt|;
name|co
operator|.
name|setFullName
argument_list|(
literal|"Change Owner"
argument_list|)
expr_stmt|;
name|co
operator|.
name|setPreferredEmail
argument_list|(
literal|"change@owner.com"
argument_list|)
expr_stmt|;
name|accountCache
operator|.
name|put
argument_list|(
name|co
argument_list|)
expr_stmt|;
specifier|final
name|Account
operator|.
name|Id
name|ownerId
init|=
name|co
operator|.
name|getId
argument_list|()
decl_stmt|;
name|Account
name|ou
init|=
operator|new
name|Account
argument_list|(
operator|new
name|Account
operator|.
name|Id
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|)
decl_stmt|;
name|ou
operator|.
name|setFullName
argument_list|(
literal|"Other Account"
argument_list|)
expr_stmt|;
name|ou
operator|.
name|setPreferredEmail
argument_list|(
literal|"other@account.com"
argument_list|)
expr_stmt|;
name|accountCache
operator|.
name|put
argument_list|(
name|ou
argument_list|)
expr_stmt|;
name|Account
operator|.
name|Id
name|otherUserId
init|=
name|ou
operator|.
name|getId
argument_list|()
decl_stmt|;
name|AbstractModule
name|mod
init|=
operator|new
name|AbstractModule
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|void
name|configure
parameter_list|()
block|{
name|bind
argument_list|(
name|commentViewsType
argument_list|)
operator|.
name|toInstance
argument_list|(
name|commentViews
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|draftViewsType
argument_list|)
operator|.
name|toInstance
argument_list|(
name|draftViews
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|AccountLoader
operator|.
name|Factory
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|alf
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|ReviewDb
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|Realm
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|FakeRealm
operator|.
name|class
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|Config
operator|.
name|class
argument_list|)
operator|.
name|annotatedWith
argument_list|(
name|GerritServerConfig
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|ProjectCache
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|Providers
operator|.
expr|<
name|ProjectCache
operator|>
name|of
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|install
argument_list|(
operator|new
name|GitModule
argument_list|()
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|GitRepositoryManager
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|InMemoryRepositoryManager
operator|.
name|class
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|InMemoryRepositoryManager
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
operator|new
name|InMemoryRepositoryManager
argument_list|()
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|CapabilityControl
operator|.
name|Factory
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|Providers
operator|.
expr|<
name|CapabilityControl
operator|.
name|Factory
operator|>
name|of
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|.
name|annotatedWith
argument_list|(
name|AnonymousCowardName
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|AnonymousCowardNameProvider
operator|.
name|class
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|.
name|annotatedWith
argument_list|(
name|CanonicalWebUrl
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
literal|"http://localhost:8080/"
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|Boolean
operator|.
name|class
argument_list|)
operator|.
name|annotatedWith
argument_list|(
name|DisableReverseDnsLookup
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|Boolean
operator|.
name|FALSE
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|GroupBackend
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|SystemGroupBackend
operator|.
name|class
argument_list|)
operator|.
name|in
argument_list|(
name|SINGLETON
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|AccountCache
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|accountCache
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|GitReferenceUpdated
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|GitReferenceUpdated
operator|.
name|DISABLED
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|PersonIdent
operator|.
name|class
argument_list|)
operator|.
name|annotatedWith
argument_list|(
name|GerritPersonIdent
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|serverIdent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Provides
annotation|@
name|Singleton
name|CurrentUser
name|getCurrentUser
parameter_list|(
name|IdentifiedUser
operator|.
name|GenericFactory
name|userFactory
parameter_list|)
block|{
return|return
name|userFactory
operator|.
name|create
argument_list|(
name|ownerId
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|injector
operator|=
name|Guice
operator|.
name|createInjector
argument_list|(
name|mod
argument_list|)
expr_stmt|;
name|injector
operator|.
name|injectMembers
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|repoManager
operator|.
name|createRepository
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|changeOwner
operator|=
name|userFactory
operator|.
name|create
argument_list|(
name|ownerId
argument_list|)
expr_stmt|;
name|IdentifiedUser
name|otherUser
init|=
name|userFactory
operator|.
name|create
argument_list|(
name|otherUserId
argument_list|)
decl_stmt|;
name|AccountLoader
name|accountLoader
init|=
name|createMock
argument_list|(
name|AccountLoader
operator|.
name|class
argument_list|)
decl_stmt|;
name|accountLoader
operator|.
name|fill
argument_list|()
expr_stmt|;
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|expect
argument_list|(
name|accountLoader
operator|.
name|get
argument_list|(
name|ownerId
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|new
name|AccountInfo
argument_list|(
name|ownerId
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|expect
argument_list|(
name|accountLoader
operator|.
name|get
argument_list|(
name|otherUserId
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|new
name|AccountInfo
argument_list|(
name|otherUserId
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|expect
argument_list|(
name|alf
operator|.
name|create
argument_list|(
literal|true
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|accountLoader
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|replay
argument_list|(
name|accountLoader
argument_list|,
name|alf
argument_list|)
expr_stmt|;
name|repoManager
operator|.
name|createRepository
argument_list|(
name|allUsers
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|PatchLineCommentAccess
name|plca
init|=
name|createMock
argument_list|(
name|PatchLineCommentAccess
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|db
operator|.
name|patchComments
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|plca
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|Change
name|change
init|=
name|newChange
argument_list|()
decl_stmt|;
name|PatchSet
operator|.
name|Id
name|psId1
init|=
operator|new
name|PatchSet
operator|.
name|Id
argument_list|(
name|change
operator|.
name|getId
argument_list|()
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|PatchSet
name|ps1
init|=
operator|new
name|PatchSet
argument_list|(
name|psId1
argument_list|)
decl_stmt|;
name|PatchSet
operator|.
name|Id
name|psId2
init|=
operator|new
name|PatchSet
operator|.
name|Id
argument_list|(
name|change
operator|.
name|getId
argument_list|()
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|PatchSet
name|ps2
init|=
operator|new
name|PatchSet
argument_list|(
name|psId2
argument_list|)
decl_stmt|;
name|long
name|timeBase
init|=
name|TimeUtil
operator|.
name|roundToSecond
argument_list|(
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|)
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|plc1
operator|=
name|newPatchLineComment
argument_list|(
name|psId1
argument_list|,
literal|"Comment1"
argument_list|,
literal|null
argument_list|,
literal|"FileOne.txt"
argument_list|,
name|Side
operator|.
name|REVISION
argument_list|,
literal|3
argument_list|,
name|ownerId
argument_list|,
name|timeBase
argument_list|,
literal|"First Comment"
argument_list|,
operator|new
name|CommentRange
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|plc1
operator|.
name|setRevId
argument_list|(
operator|new
name|RevId
argument_list|(
literal|"ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCD"
argument_list|)
argument_list|)
expr_stmt|;
name|plc2
operator|=
name|newPatchLineComment
argument_list|(
name|psId1
argument_list|,
literal|"Comment2"
argument_list|,
literal|"Comment1"
argument_list|,
literal|"FileOne.txt"
argument_list|,
name|Side
operator|.
name|REVISION
argument_list|,
literal|3
argument_list|,
name|otherUserId
argument_list|,
name|timeBase
operator|+
literal|1000
argument_list|,
literal|"Reply to First Comment"
argument_list|,
operator|new
name|CommentRange
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|plc2
operator|.
name|setRevId
argument_list|(
operator|new
name|RevId
argument_list|(
literal|"ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCD"
argument_list|)
argument_list|)
expr_stmt|;
name|plc3
operator|=
name|newPatchLineComment
argument_list|(
name|psId1
argument_list|,
literal|"Comment3"
argument_list|,
literal|"Comment1"
argument_list|,
literal|"FileOne.txt"
argument_list|,
name|Side
operator|.
name|PARENT
argument_list|,
literal|3
argument_list|,
name|ownerId
argument_list|,
name|timeBase
operator|+
literal|2000
argument_list|,
literal|"First Parent Comment"
argument_list|,
operator|new
name|CommentRange
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|plc3
operator|.
name|setRevId
argument_list|(
operator|new
name|RevId
argument_list|(
literal|"CDEFCDEFCDEFCDEFCDEFCDEFCDEFCDEFCDEFCDEF"
argument_list|)
argument_list|)
expr_stmt|;
name|plc4
operator|=
name|newPatchLineComment
argument_list|(
name|psId2
argument_list|,
literal|"Comment4"
argument_list|,
literal|null
argument_list|,
literal|"FileOne.txt"
argument_list|,
name|Side
operator|.
name|REVISION
argument_list|,
literal|3
argument_list|,
name|ownerId
argument_list|,
name|timeBase
operator|+
literal|3000
argument_list|,
literal|"Second Comment"
argument_list|,
operator|new
name|CommentRange
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|,
name|Status
operator|.
name|DRAFT
argument_list|)
expr_stmt|;
name|plc4
operator|.
name|setRevId
argument_list|(
operator|new
name|RevId
argument_list|(
literal|"BCDEBCDEBCDEBCDEBCDEBCDEBCDEBCDEBCDEBCDE"
argument_list|)
argument_list|)
expr_stmt|;
name|plc5
operator|=
name|newPatchLineComment
argument_list|(
name|psId2
argument_list|,
literal|"Comment5"
argument_list|,
literal|null
argument_list|,
literal|"FileOne.txt"
argument_list|,
name|Side
operator|.
name|REVISION
argument_list|,
literal|5
argument_list|,
name|ownerId
argument_list|,
name|timeBase
operator|+
literal|4000
argument_list|,
literal|"Third Comment"
argument_list|,
operator|new
name|CommentRange
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|)
argument_list|,
name|Status
operator|.
name|DRAFT
argument_list|)
expr_stmt|;
name|plc5
operator|.
name|setRevId
argument_list|(
operator|new
name|RevId
argument_list|(
literal|"BCDEBCDEBCDEBCDEBCDEBCDEBCDEBCDEBCDEBCDE"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|PatchLineComment
argument_list|>
name|commentsByOwner
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|commentsByOwner
operator|.
name|add
argument_list|(
name|plc1
argument_list|)
expr_stmt|;
name|commentsByOwner
operator|.
name|add
argument_list|(
name|plc3
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|PatchLineComment
argument_list|>
name|commentsByReviewer
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|commentsByReviewer
operator|.
name|add
argument_list|(
name|plc2
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|PatchLineComment
argument_list|>
name|drafts
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|drafts
operator|.
name|add
argument_list|(
name|plc4
argument_list|)
expr_stmt|;
name|drafts
operator|.
name|add
argument_list|(
name|plc5
argument_list|)
expr_stmt|;
name|plca
operator|.
name|upsert
argument_list|(
name|commentsByOwner
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|plca
operator|.
name|upsert
argument_list|(
name|commentsByReviewer
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|plca
operator|.
name|upsert
argument_list|(
name|drafts
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|expect
argument_list|(
name|plca
operator|.
name|publishedByPatchSet
argument_list|(
name|psId1
argument_list|)
argument_list|)
operator|.
name|andAnswer
argument_list|(
name|results
argument_list|(
name|plc1
argument_list|,
name|plc2
argument_list|,
name|plc3
argument_list|)
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|expect
argument_list|(
name|plca
operator|.
name|publishedByPatchSet
argument_list|(
name|psId2
argument_list|)
argument_list|)
operator|.
name|andAnswer
argument_list|(
name|results
argument_list|()
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|expect
argument_list|(
name|plca
operator|.
name|draftByPatchSetAuthor
argument_list|(
name|psId1
argument_list|,
name|ownerId
argument_list|)
argument_list|)
operator|.
name|andAnswer
argument_list|(
name|results
argument_list|()
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|expect
argument_list|(
name|plca
operator|.
name|draftByPatchSetAuthor
argument_list|(
name|psId2
argument_list|,
name|ownerId
argument_list|)
argument_list|)
operator|.
name|andAnswer
argument_list|(
name|results
argument_list|(
name|plc4
argument_list|,
name|plc5
argument_list|)
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|expect
argument_list|(
name|plca
operator|.
name|byChange
argument_list|(
name|change
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
operator|.
name|andAnswer
argument_list|(
name|results
argument_list|(
name|plc1
argument_list|,
name|plc2
argument_list|,
name|plc3
argument_list|,
name|plc4
argument_list|,
name|plc5
argument_list|)
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|replay
argument_list|(
name|db
argument_list|,
name|plca
argument_list|)
expr_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|change
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|psId1
argument_list|)
expr_stmt|;
name|plcUtil
operator|.
name|upsertComments
argument_list|(
name|db
argument_list|,
name|update
argument_list|,
name|commentsByOwner
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|change
argument_list|,
name|otherUser
argument_list|)
expr_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|psId1
argument_list|)
expr_stmt|;
name|plcUtil
operator|.
name|upsertComments
argument_list|(
name|db
argument_list|,
name|update
argument_list|,
name|commentsByReviewer
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|change
argument_list|,
name|changeOwner
argument_list|)
expr_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|psId2
argument_list|)
expr_stmt|;
name|plcUtil
operator|.
name|upsertComments
argument_list|(
name|db
argument_list|,
name|update
argument_list|,
name|drafts
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeControl
name|ctl
init|=
name|stubChangeControl
argument_list|(
name|change
argument_list|)
decl_stmt|;
name|revRes1
operator|=
operator|new
name|RevisionResource
argument_list|(
operator|new
name|ChangeResource
argument_list|(
name|ctl
argument_list|,
literal|null
argument_list|)
argument_list|,
name|ps1
argument_list|)
expr_stmt|;
name|revRes2
operator|=
operator|new
name|RevisionResource
argument_list|(
operator|new
name|ChangeResource
argument_list|(
name|ctl
argument_list|,
literal|null
argument_list|)
argument_list|,
name|ps2
argument_list|)
expr_stmt|;
block|}
DECL|method|stubChangeControl (Change c)
specifier|private
name|ChangeControl
name|stubChangeControl
parameter_list|(
name|Change
name|c
parameter_list|)
throws|throws
name|OrmException
block|{
return|return
name|TestChanges
operator|.
name|stubChangeControl
argument_list|(
name|repoManager
argument_list|,
name|migration
argument_list|,
name|c
argument_list|,
name|allUsers
argument_list|,
name|changeOwner
argument_list|)
return|;
block|}
DECL|method|newChange ()
specifier|private
name|Change
name|newChange
parameter_list|()
block|{
return|return
name|TestChanges
operator|.
name|newChange
argument_list|(
name|project
argument_list|,
name|changeOwner
operator|.
name|getAccountId
argument_list|()
argument_list|)
return|;
block|}
DECL|method|newUpdate (Change c, final IdentifiedUser user)
specifier|private
name|ChangeUpdate
name|newUpdate
parameter_list|(
name|Change
name|c
parameter_list|,
specifier|final
name|IdentifiedUser
name|user
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|TestChanges
operator|.
name|newUpdate
argument_list|(
name|injector
argument_list|,
name|repoManager
argument_list|,
name|migration
argument_list|,
name|c
argument_list|,
name|allUsers
argument_list|,
name|user
argument_list|)
return|;
block|}
annotation|@
name|Test
DECL|method|testListComments ()
specifier|public
name|void
name|testListComments
parameter_list|()
throws|throws
name|Exception
block|{
comment|// test ListComments for patch set 1
name|assertListComments
argument_list|(
name|revRes1
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"FileOne.txt"
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|plc3
argument_list|,
name|plc1
argument_list|,
name|plc2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// test ListComments for patch set 2
name|assertListComments
argument_list|(
name|revRes2
argument_list|,
name|Collections
operator|.
expr|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|PatchLineComment
argument_list|>
operator|>
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetComment ()
specifier|public
name|void
name|testGetComment
parameter_list|()
throws|throws
name|Exception
block|{
comment|// test GetComment for existing comment
name|assertGetComment
argument_list|(
name|revRes1
argument_list|,
name|plc1
argument_list|,
name|plc1
operator|.
name|getKey
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
comment|// test GetComment for non-existent comment
name|assertGetComment
argument_list|(
name|revRes1
argument_list|,
literal|null
argument_list|,
literal|"BadComment"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testListDrafts ()
specifier|public
name|void
name|testListDrafts
parameter_list|()
throws|throws
name|Exception
block|{
comment|// test ListDrafts for patch set 1
name|assertListDrafts
argument_list|(
name|revRes1
argument_list|,
name|Collections
operator|.
expr|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|PatchLineComment
argument_list|>
operator|>
name|emptyMap
argument_list|()
argument_list|)
expr_stmt|;
comment|// test ListDrafts for patch set 2
name|assertListDrafts
argument_list|(
name|revRes2
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"FileOne.txt"
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|plc4
argument_list|,
name|plc5
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPatchLineCommentsUtilByCommentStatus ()
specifier|public
name|void
name|testPatchLineCommentsUtilByCommentStatus
parameter_list|()
throws|throws
name|OrmException
block|{
name|List
argument_list|<
name|PatchLineComment
argument_list|>
name|publishedActual
init|=
name|plcUtil
operator|.
name|publishedByChange
argument_list|(
name|db
argument_list|,
name|revRes2
operator|.
name|getNotes
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|PatchLineComment
argument_list|>
name|draftActual
init|=
name|plcUtil
operator|.
name|draftByChange
argument_list|(
name|db
argument_list|,
name|revRes2
operator|.
name|getNotes
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|PatchLineComment
argument_list|>
name|publishedExpected
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|plc1
argument_list|,
name|plc2
argument_list|,
name|plc3
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|PatchLineComment
argument_list|>
name|draftExpected
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|plc4
argument_list|,
name|plc5
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|publishedExpected
operator|.
name|size
argument_list|()
argument_list|,
name|publishedActual
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|draftExpected
operator|.
name|size
argument_list|()
argument_list|,
name|draftActual
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|publishedExpected
argument_list|,
name|publishedActual
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|draftExpected
argument_list|,
name|draftActual
argument_list|)
expr_stmt|;
block|}
DECL|method|results ( final PatchLineComment... comments)
specifier|private
specifier|static
name|IAnswer
argument_list|<
name|ResultSet
argument_list|<
name|PatchLineComment
argument_list|>
argument_list|>
name|results
parameter_list|(
specifier|final
name|PatchLineComment
modifier|...
name|comments
parameter_list|)
block|{
return|return
operator|new
name|IAnswer
argument_list|<
name|ResultSet
argument_list|<
name|PatchLineComment
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ResultSet
argument_list|<
name|PatchLineComment
argument_list|>
name|answer
parameter_list|()
throws|throws
name|Throwable
block|{
return|return
operator|new
name|ListResultSet
argument_list|<>
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
name|comments
argument_list|)
argument_list|)
return|;
block|}
block|}
return|;
block|}
DECL|method|assertGetComment (RevisionResource res, PatchLineComment expected, String uuid)
specifier|private
name|void
name|assertGetComment
parameter_list|(
name|RevisionResource
name|res
parameter_list|,
name|PatchLineComment
name|expected
parameter_list|,
name|String
name|uuid
parameter_list|)
throws|throws
name|Exception
block|{
try|try
block|{
name|CommentResource
name|commentRes
init|=
name|comments
operator|.
name|parse
argument_list|(
name|res
argument_list|,
name|IdString
operator|.
name|fromUrl
argument_list|(
name|uuid
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|expected
operator|==
literal|null
condition|)
block|{
name|fail
argument_list|(
literal|"Expected no comment"
argument_list|)
expr_stmt|;
block|}
name|CommentInfo
name|actual
init|=
name|getComment
operator|.
name|apply
argument_list|(
name|commentRes
argument_list|)
decl_stmt|;
name|assertComment
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ResourceNotFoundException
name|e
parameter_list|)
block|{
if|if
condition|(
name|expected
operator|!=
literal|null
condition|)
block|{
name|fail
argument_list|(
literal|"Expected to find comment"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|assertListComments (RevisionResource res, Map<String, ArrayList<PatchLineComment>> expected)
specifier|private
name|void
name|assertListComments
parameter_list|(
name|RevisionResource
name|res
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|PatchLineComment
argument_list|>
argument_list|>
name|expected
parameter_list|)
throws|throws
name|Exception
block|{
name|RestReadView
argument_list|<
name|RevisionResource
argument_list|>
name|listView
init|=
operator|(
name|RestReadView
argument_list|<
name|RevisionResource
argument_list|>
operator|)
name|comments
operator|.
name|list
argument_list|()
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|CommentInfo
argument_list|>
argument_list|>
name|actual
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|CommentInfo
argument_list|>
argument_list|>
operator|)
name|listView
operator|.
name|apply
argument_list|(
name|res
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|actual
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|size
argument_list|()
argument_list|,
name|actual
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|keySet
argument_list|()
argument_list|,
name|actual
operator|.
name|keySet
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|PatchLineComment
argument_list|>
argument_list|>
name|entry
range|:
name|expected
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|List
argument_list|<
name|PatchLineComment
argument_list|>
name|expectedComments
init|=
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|CommentInfo
argument_list|>
name|actualComments
init|=
name|actual
operator|.
name|get
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|actualComments
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedComments
operator|.
name|size
argument_list|()
argument_list|,
name|actualComments
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|expectedComments
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|assertComment
argument_list|(
name|expectedComments
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|actualComments
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|assertListDrafts (RevisionResource res, Map<String, ArrayList<PatchLineComment>> expected)
specifier|private
name|void
name|assertListDrafts
parameter_list|(
name|RevisionResource
name|res
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|PatchLineComment
argument_list|>
argument_list|>
name|expected
parameter_list|)
throws|throws
name|Exception
block|{
name|RestReadView
argument_list|<
name|RevisionResource
argument_list|>
name|listView
init|=
operator|(
name|RestReadView
argument_list|<
name|RevisionResource
argument_list|>
operator|)
name|drafts
operator|.
name|list
argument_list|()
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|CommentInfo
argument_list|>
argument_list|>
name|actual
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|CommentInfo
argument_list|>
argument_list|>
operator|)
name|listView
operator|.
name|apply
argument_list|(
name|res
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|actual
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|size
argument_list|()
argument_list|,
name|actual
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|keySet
argument_list|()
argument_list|,
name|actual
operator|.
name|keySet
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|PatchLineComment
argument_list|>
argument_list|>
name|entry
range|:
name|expected
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|List
argument_list|<
name|PatchLineComment
argument_list|>
name|expectedComments
init|=
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|CommentInfo
argument_list|>
name|actualComments
init|=
name|actual
operator|.
name|get
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|actualComments
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedComments
operator|.
name|size
argument_list|()
argument_list|,
name|actualComments
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|expectedComments
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|assertComment
argument_list|(
name|expectedComments
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|actualComments
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|assertComment (PatchLineComment plc, CommentInfo ci, boolean isPublished)
specifier|private
specifier|static
name|void
name|assertComment
parameter_list|(
name|PatchLineComment
name|plc
parameter_list|,
name|CommentInfo
name|ci
parameter_list|,
name|boolean
name|isPublished
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|plc
operator|.
name|getKey
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
name|ci
operator|.
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|plc
operator|.
name|getParentUuid
argument_list|()
argument_list|,
name|ci
operator|.
name|inReplyTo
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|plc
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ci
operator|.
name|message
argument_list|)
expr_stmt|;
if|if
condition|(
name|isPublished
condition|)
block|{
name|assertNotNull
argument_list|(
name|ci
operator|.
name|author
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|plc
operator|.
name|getAuthor
argument_list|()
argument_list|,
operator|new
name|Account
operator|.
name|Id
argument_list|(
name|ci
operator|.
name|author
operator|.
name|_accountId
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|plc
operator|.
name|getLine
argument_list|()
argument_list|,
operator|(
name|int
operator|)
name|ci
operator|.
name|line
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|plc
operator|.
name|getSide
argument_list|()
operator|==
literal|0
condition|?
name|Side
operator|.
name|PARENT
else|:
name|Side
operator|.
name|REVISION
argument_list|,
name|MoreObjects
operator|.
name|firstNonNull
argument_list|(
name|ci
operator|.
name|side
argument_list|,
name|Side
operator|.
name|REVISION
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TimeUtil
operator|.
name|roundToSecond
argument_list|(
name|plc
operator|.
name|getWrittenOn
argument_list|()
argument_list|)
argument_list|,
name|TimeUtil
operator|.
name|roundToSecond
argument_list|(
name|ci
operator|.
name|updated
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|plc
operator|.
name|getWrittenOn
argument_list|()
argument_list|,
name|ci
operator|.
name|updated
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|plc
operator|.
name|getRange
argument_list|()
operator|.
name|getStartLine
argument_list|()
argument_list|,
name|ci
operator|.
name|range
operator|.
name|startLine
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|plc
operator|.
name|getRange
argument_list|()
operator|.
name|getStartCharacter
argument_list|()
argument_list|,
name|ci
operator|.
name|range
operator|.
name|startCharacter
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|plc
operator|.
name|getRange
argument_list|()
operator|.
name|getEndLine
argument_list|()
argument_list|,
name|ci
operator|.
name|range
operator|.
name|endLine
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|plc
operator|.
name|getRange
argument_list|()
operator|.
name|getEndCharacter
argument_list|()
argument_list|,
name|ci
operator|.
name|range
operator|.
name|endCharacter
argument_list|)
expr_stmt|;
block|}
DECL|method|newPatchLineComment (PatchSet.Id psId, String uuid, String inReplyToUuid, String filename, Side side, int line, Account.Id authorId, long millis, String message, CommentRange range, PatchLineComment.Status status)
specifier|private
specifier|static
name|PatchLineComment
name|newPatchLineComment
parameter_list|(
name|PatchSet
operator|.
name|Id
name|psId
parameter_list|,
name|String
name|uuid
parameter_list|,
name|String
name|inReplyToUuid
parameter_list|,
name|String
name|filename
parameter_list|,
name|Side
name|side
parameter_list|,
name|int
name|line
parameter_list|,
name|Account
operator|.
name|Id
name|authorId
parameter_list|,
name|long
name|millis
parameter_list|,
name|String
name|message
parameter_list|,
name|CommentRange
name|range
parameter_list|,
name|PatchLineComment
operator|.
name|Status
name|status
parameter_list|)
block|{
name|Patch
operator|.
name|Key
name|p
init|=
operator|new
name|Patch
operator|.
name|Key
argument_list|(
name|psId
argument_list|,
name|filename
argument_list|)
decl_stmt|;
name|PatchLineComment
operator|.
name|Key
name|id
init|=
operator|new
name|PatchLineComment
operator|.
name|Key
argument_list|(
name|p
argument_list|,
name|uuid
argument_list|)
decl_stmt|;
name|PatchLineComment
name|plc
init|=
operator|new
name|PatchLineComment
argument_list|(
name|id
argument_list|,
name|line
argument_list|,
name|authorId
argument_list|,
name|inReplyToUuid
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|)
decl_stmt|;
name|plc
operator|.
name|setMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|plc
operator|.
name|setRange
argument_list|(
name|range
argument_list|)
expr_stmt|;
name|plc
operator|.
name|setSide
argument_list|(
name|side
operator|==
name|Side
operator|.
name|PARENT
condition|?
operator|(
name|short
operator|)
literal|0
else|:
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|plc
operator|.
name|setStatus
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|plc
operator|.
name|setWrittenOn
argument_list|(
operator|new
name|Timestamp
argument_list|(
name|millis
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|plc
return|;
block|}
DECL|method|newPatchLineComment (PatchSet.Id psId, String uuid, String inReplyToUuid, String filename, Side side, int line, Account.Id authorId, long millis, String message, CommentRange range)
specifier|private
specifier|static
name|PatchLineComment
name|newPatchLineComment
parameter_list|(
name|PatchSet
operator|.
name|Id
name|psId
parameter_list|,
name|String
name|uuid
parameter_list|,
name|String
name|inReplyToUuid
parameter_list|,
name|String
name|filename
parameter_list|,
name|Side
name|side
parameter_list|,
name|int
name|line
parameter_list|,
name|Account
operator|.
name|Id
name|authorId
parameter_list|,
name|long
name|millis
parameter_list|,
name|String
name|message
parameter_list|,
name|CommentRange
name|range
parameter_list|)
block|{
return|return
name|newPatchLineComment
argument_list|(
name|psId
argument_list|,
name|uuid
argument_list|,
name|inReplyToUuid
argument_list|,
name|filename
argument_list|,
name|side
argument_list|,
name|line
argument_list|,
name|authorId
argument_list|,
name|millis
argument_list|,
name|message
argument_list|,
name|range
argument_list|,
name|Status
operator|.
name|PUBLISHED
argument_list|)
return|;
block|}
block|}
end_class

end_unit

