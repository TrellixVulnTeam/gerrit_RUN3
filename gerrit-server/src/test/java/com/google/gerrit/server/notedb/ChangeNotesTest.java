begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.notedb
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ReviewerState
operator|.
name|CC
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ReviewerState
operator|.
name|REVIEWER
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|TestChanges
operator|.
name|incrementPatchSet
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Scopes
operator|.
name|SINGLETON
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
operator|.
name|UTF_8
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
operator|.
name|MILLISECONDS
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
operator|.
name|SECONDS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSetMultimap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterables
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|LinkedListMultimap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ListMultimap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Multimap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|SubmitRecord
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|ChangeMessage
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|CommentRange
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Patch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchLineComment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchLineComment
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSetApproval
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|RevId
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|GerritPersonIdent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|IdentifiedUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|CapabilityControl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|GroupBackend
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|Realm
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AnonymousCowardName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AnonymousCowardNameProvider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|CanonicalWebUrl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|FactoryModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|GerritServerConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|extensions
operator|.
name|events
operator|.
name|GitReferenceUpdated
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|GitModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|GitRepositoryManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|VersionedMetaData
operator|.
name|BatchMetaDataUpdate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|SystemGroupBackend
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|CommentsInNotesUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ProjectCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|util
operator|.
name|TimeUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|TestChanges
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|FakeAccountCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|FakeRealm
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|InMemoryRepositoryManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|KeyUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|StandardKeyEncoder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Guice
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Injector
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|util
operator|.
name|Providers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|internal
operator|.
name|storage
operator|.
name|dfs
operator|.
name|InMemoryRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|CommitBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|PersonIdent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|notes
operator|.
name|Note
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevCommit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevWalk
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTimeUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTimeUtils
operator|.
name|MillisProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TimeZone
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicLong
import|;
end_import

begin_class
DECL|class|ChangeNotesTest
specifier|public
class|class
name|ChangeNotesTest
block|{
DECL|field|TZ
specifier|private
specifier|static
specifier|final
name|TimeZone
name|TZ
init|=
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"America/Los_Angeles"
argument_list|)
decl_stmt|;
DECL|field|serverIdent
specifier|private
name|PersonIdent
name|serverIdent
decl_stmt|;
DECL|field|project
specifier|private
name|Project
operator|.
name|NameKey
name|project
decl_stmt|;
DECL|field|repoManager
specifier|private
name|InMemoryRepositoryManager
name|repoManager
decl_stmt|;
DECL|field|repo
specifier|private
name|InMemoryRepository
name|repo
decl_stmt|;
DECL|field|accountCache
specifier|private
name|FakeAccountCache
name|accountCache
decl_stmt|;
DECL|field|changeOwner
specifier|private
name|IdentifiedUser
name|changeOwner
decl_stmt|;
DECL|field|otherUser
specifier|private
name|IdentifiedUser
name|otherUser
decl_stmt|;
DECL|field|injector
specifier|private
name|Injector
name|injector
decl_stmt|;
DECL|field|systemTimeZone
specifier|private
name|String
name|systemTimeZone
decl_stmt|;
DECL|field|clockStepMs
specifier|private
specifier|volatile
name|long
name|clockStepMs
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|setTimeForTesting
argument_list|()
expr_stmt|;
name|KeyUtil
operator|.
name|setEncoderImpl
argument_list|(
operator|new
name|StandardKeyEncoder
argument_list|()
argument_list|)
expr_stmt|;
name|serverIdent
operator|=
operator|new
name|PersonIdent
argument_list|(
literal|"Gerrit Server"
argument_list|,
literal|"noreply@gerrit.com"
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|,
name|TZ
argument_list|)
expr_stmt|;
name|project
operator|=
operator|new
name|Project
operator|.
name|NameKey
argument_list|(
literal|"test-project"
argument_list|)
expr_stmt|;
name|repoManager
operator|=
operator|new
name|InMemoryRepositoryManager
argument_list|()
expr_stmt|;
name|repo
operator|=
name|repoManager
operator|.
name|createRepository
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|accountCache
operator|=
operator|new
name|FakeAccountCache
argument_list|()
expr_stmt|;
name|Account
name|co
init|=
operator|new
name|Account
argument_list|(
operator|new
name|Account
operator|.
name|Id
argument_list|(
literal|1
argument_list|)
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|)
decl_stmt|;
name|co
operator|.
name|setFullName
argument_list|(
literal|"Change Owner"
argument_list|)
expr_stmt|;
name|co
operator|.
name|setPreferredEmail
argument_list|(
literal|"change@owner.com"
argument_list|)
expr_stmt|;
name|accountCache
operator|.
name|put
argument_list|(
name|co
argument_list|)
expr_stmt|;
name|Account
name|ou
init|=
operator|new
name|Account
argument_list|(
operator|new
name|Account
operator|.
name|Id
argument_list|(
literal|2
argument_list|)
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|)
decl_stmt|;
name|ou
operator|.
name|setFullName
argument_list|(
literal|"Other Account"
argument_list|)
expr_stmt|;
name|ou
operator|.
name|setPreferredEmail
argument_list|(
literal|"other@account.com"
argument_list|)
expr_stmt|;
name|accountCache
operator|.
name|put
argument_list|(
name|ou
argument_list|)
expr_stmt|;
name|injector
operator|=
name|Guice
operator|.
name|createInjector
argument_list|(
operator|new
name|FactoryModule
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|()
block|{
name|install
argument_list|(
operator|new
name|GitModule
argument_list|()
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|NotesMigration
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|NotesMigration
operator|.
name|allEnabled
argument_list|()
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|GitRepositoryManager
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|repoManager
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|ProjectCache
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|Providers
operator|.
expr|<
name|ProjectCache
operator|>
name|of
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|CapabilityControl
operator|.
name|Factory
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|Providers
operator|.
expr|<
name|CapabilityControl
operator|.
name|Factory
operator|>
name|of
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|Config
operator|.
name|class
argument_list|)
operator|.
name|annotatedWith
argument_list|(
name|GerritServerConfig
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
operator|new
name|Config
argument_list|()
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|.
name|annotatedWith
argument_list|(
name|AnonymousCowardName
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|AnonymousCowardNameProvider
operator|.
name|class
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|String
operator|.
name|class
argument_list|)
operator|.
name|annotatedWith
argument_list|(
name|CanonicalWebUrl
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
literal|"http://localhost:8080/"
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|Realm
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|FakeRealm
operator|.
name|class
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|GroupBackend
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|SystemGroupBackend
operator|.
name|class
argument_list|)
operator|.
name|in
argument_list|(
name|SINGLETON
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|AccountCache
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|accountCache
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|PersonIdent
operator|.
name|class
argument_list|)
operator|.
name|annotatedWith
argument_list|(
name|GerritPersonIdent
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|serverIdent
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|GitReferenceUpdated
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|GitReferenceUpdated
operator|.
name|DISABLED
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|IdentifiedUser
operator|.
name|GenericFactory
name|userFactory
init|=
name|injector
operator|.
name|getInstance
argument_list|(
name|IdentifiedUser
operator|.
name|GenericFactory
operator|.
name|class
argument_list|)
decl_stmt|;
name|changeOwner
operator|=
name|userFactory
operator|.
name|create
argument_list|(
name|co
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|otherUser
operator|=
name|userFactory
operator|.
name|create
argument_list|(
name|ou
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|setTimeForTesting ()
specifier|private
name|void
name|setTimeForTesting
parameter_list|()
block|{
name|systemTimeZone
operator|=
name|System
operator|.
name|setProperty
argument_list|(
literal|"user.timezone"
argument_list|,
literal|"US/Eastern"
argument_list|)
expr_stmt|;
name|clockStepMs
operator|=
name|MILLISECONDS
operator|.
name|convert
argument_list|(
literal|1
argument_list|,
name|SECONDS
argument_list|)
expr_stmt|;
specifier|final
name|AtomicLong
name|clockMs
init|=
operator|new
name|AtomicLong
argument_list|(
operator|new
name|DateTime
argument_list|(
literal|2009
argument_list|,
literal|9
argument_list|,
literal|30
argument_list|,
literal|17
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|getMillis
argument_list|()
argument_list|)
decl_stmt|;
name|DateTimeUtils
operator|.
name|setCurrentMillisProvider
argument_list|(
operator|new
name|MillisProvider
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|long
name|getMillis
parameter_list|()
block|{
return|return
name|clockMs
operator|.
name|getAndAdd
argument_list|(
name|clockStepMs
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|resetTime ()
specifier|public
name|void
name|resetTime
parameter_list|()
block|{
name|DateTimeUtils
operator|.
name|setCurrentMillisSystem
argument_list|()
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"user.timezone"
argument_list|,
name|systemTimeZone
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|approvalsCommitFormatSimple ()
specifier|public
name|void
name|approvalsCommitFormatSimple
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|putApproval
argument_list|(
literal|"Verified"
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|update
operator|.
name|putApproval
argument_list|(
literal|"Code-Review"
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
expr_stmt|;
name|update
operator|.
name|putReviewer
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|REVIEWER
argument_list|)
expr_stmt|;
name|update
operator|.
name|putReviewer
argument_list|(
name|otherUser
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|CC
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"refs/changes/01/1/meta"
argument_list|,
name|update
operator|.
name|getRefName
argument_list|()
argument_list|)
expr_stmt|;
name|RevWalk
name|walk
init|=
operator|new
name|RevWalk
argument_list|(
name|repo
argument_list|)
decl_stmt|;
try|try
block|{
name|RevCommit
name|commit
init|=
name|walk
operator|.
name|parseCommit
argument_list|(
name|update
operator|.
name|getRevision
argument_list|()
argument_list|)
decl_stmt|;
name|walk
operator|.
name|parseBody
argument_list|(
name|commit
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Update patch set 1\n"
operator|+
literal|"\n"
operator|+
literal|"Patch-set: 1\n"
operator|+
literal|"Reviewer: Change Owner<1@gerrit>\n"
operator|+
literal|"CC: Other Account<2@gerrit>\n"
operator|+
literal|"Label: Code-Review=-1\n"
operator|+
literal|"Label: Verified=+1\n"
argument_list|,
name|commit
operator|.
name|getFullMessage
argument_list|()
argument_list|)
expr_stmt|;
name|PersonIdent
name|author
init|=
name|commit
operator|.
name|getAuthorIdent
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Change Owner"
argument_list|,
name|author
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1@gerrit"
argument_list|,
name|author
operator|.
name|getEmailAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Date
argument_list|(
name|c
operator|.
name|getCreatedOn
argument_list|()
operator|.
name|getTime
argument_list|()
operator|+
literal|1000
argument_list|)
argument_list|,
name|author
operator|.
name|getWhen
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"GMT-7:00"
argument_list|)
argument_list|,
name|author
operator|.
name|getTimeZone
argument_list|()
argument_list|)
expr_stmt|;
name|PersonIdent
name|committer
init|=
name|commit
operator|.
name|getCommitterIdent
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Gerrit Server"
argument_list|,
name|committer
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"noreply@gerrit.com"
argument_list|,
name|committer
operator|.
name|getEmailAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|author
operator|.
name|getWhen
argument_list|()
argument_list|,
name|committer
operator|.
name|getWhen
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|author
operator|.
name|getTimeZone
argument_list|()
argument_list|,
name|committer
operator|.
name|getTimeZone
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|walk
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|changeMessageCommitFormatSimple ()
specifier|public
name|void
name|changeMessageCommitFormatSimple
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|setChangeMessage
argument_list|(
literal|"Just a little code change.\n"
operator|+
literal|"How about a new line"
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"refs/changes/01/1/meta"
argument_list|,
name|update
operator|.
name|getRefName
argument_list|()
argument_list|)
expr_stmt|;
name|RevWalk
name|walk
init|=
operator|new
name|RevWalk
argument_list|(
name|repo
argument_list|)
decl_stmt|;
try|try
block|{
name|RevCommit
name|commit
init|=
name|walk
operator|.
name|parseCommit
argument_list|(
name|update
operator|.
name|getRevision
argument_list|()
argument_list|)
decl_stmt|;
name|walk
operator|.
name|parseBody
argument_list|(
name|commit
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Update patch set 1\n"
operator|+
literal|"\n"
operator|+
literal|"Just a little code change.\n"
operator|+
literal|"How about a new line\n"
operator|+
literal|"\n"
operator|+
literal|"Patch-set: 1\n"
argument_list|,
name|commit
operator|.
name|getFullMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|walk
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|approvalTombstoneCommitFormat ()
specifier|public
name|void
name|approvalTombstoneCommitFormat
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|removeApproval
argument_list|(
literal|"Code-Review"
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|RevWalk
name|walk
init|=
operator|new
name|RevWalk
argument_list|(
name|repo
argument_list|)
decl_stmt|;
try|try
block|{
name|RevCommit
name|commit
init|=
name|walk
operator|.
name|parseCommit
argument_list|(
name|update
operator|.
name|getRevision
argument_list|()
argument_list|)
decl_stmt|;
name|walk
operator|.
name|parseBody
argument_list|(
name|commit
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Update patch set 1\n"
operator|+
literal|"\n"
operator|+
literal|"Patch-set: 1\n"
operator|+
literal|"Label: -Code-Review\n"
argument_list|,
name|commit
operator|.
name|getFullMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|walk
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|submitCommitFormat ()
specifier|public
name|void
name|submitCommitFormat
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|setSubject
argument_list|(
literal|"Submit patch set 1"
argument_list|)
expr_stmt|;
name|update
operator|.
name|submit
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|(
name|submitRecord
argument_list|(
literal|"NOT_READY"
argument_list|,
literal|null
argument_list|,
name|submitLabel
argument_list|(
literal|"Verified"
argument_list|,
literal|"OK"
argument_list|,
name|changeOwner
operator|.
name|getAccountId
argument_list|()
argument_list|)
argument_list|,
name|submitLabel
argument_list|(
literal|"Code-Review"
argument_list|,
literal|"NEED"
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|,
name|submitRecord
argument_list|(
literal|"NOT_READY"
argument_list|,
literal|null
argument_list|,
name|submitLabel
argument_list|(
literal|"Verified"
argument_list|,
literal|"OK"
argument_list|,
name|changeOwner
operator|.
name|getAccountId
argument_list|()
argument_list|)
argument_list|,
name|submitLabel
argument_list|(
literal|"Alternative-Code-Review"
argument_list|,
literal|"NEED"
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|RevWalk
name|walk
init|=
operator|new
name|RevWalk
argument_list|(
name|repo
argument_list|)
decl_stmt|;
try|try
block|{
name|RevCommit
name|commit
init|=
name|walk
operator|.
name|parseCommit
argument_list|(
name|update
operator|.
name|getRevision
argument_list|()
argument_list|)
decl_stmt|;
name|walk
operator|.
name|parseBody
argument_list|(
name|commit
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Submit patch set 1\n"
operator|+
literal|"\n"
operator|+
literal|"Patch-set: 1\n"
operator|+
literal|"Status: submitted\n"
operator|+
literal|"Submitted-with: NOT_READY\n"
operator|+
literal|"Submitted-with: OK: Verified: Change Owner<1@gerrit>\n"
operator|+
literal|"Submitted-with: NEED: Code-Review\n"
operator|+
literal|"Submitted-with: NOT_READY\n"
operator|+
literal|"Submitted-with: OK: Verified: Change Owner<1@gerrit>\n"
operator|+
literal|"Submitted-with: NEED: Alternative-Code-Review\n"
argument_list|,
name|commit
operator|.
name|getFullMessage
argument_list|()
argument_list|)
expr_stmt|;
name|PersonIdent
name|author
init|=
name|commit
operator|.
name|getAuthorIdent
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Change Owner"
argument_list|,
name|author
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1@gerrit"
argument_list|,
name|author
operator|.
name|getEmailAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Date
argument_list|(
name|c
operator|.
name|getCreatedOn
argument_list|()
operator|.
name|getTime
argument_list|()
operator|+
literal|1000
argument_list|)
argument_list|,
name|author
operator|.
name|getWhen
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"GMT-7:00"
argument_list|)
argument_list|,
name|author
operator|.
name|getTimeZone
argument_list|()
argument_list|)
expr_stmt|;
name|PersonIdent
name|committer
init|=
name|commit
operator|.
name|getCommitterIdent
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Gerrit Server"
argument_list|,
name|committer
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"noreply@gerrit.com"
argument_list|,
name|committer
operator|.
name|getEmailAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|author
operator|.
name|getWhen
argument_list|()
argument_list|,
name|committer
operator|.
name|getWhen
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|author
operator|.
name|getTimeZone
argument_list|()
argument_list|,
name|committer
operator|.
name|getTimeZone
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|walk
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|submitWithErrorMessage ()
specifier|public
name|void
name|submitWithErrorMessage
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|setSubject
argument_list|(
literal|"Submit patch set 1"
argument_list|)
expr_stmt|;
name|update
operator|.
name|submit
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|(
name|submitRecord
argument_list|(
literal|"RULE_ERROR"
argument_list|,
literal|"Problem with patch set:\n1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|RevWalk
name|walk
init|=
operator|new
name|RevWalk
argument_list|(
name|repo
argument_list|)
decl_stmt|;
try|try
block|{
name|RevCommit
name|commit
init|=
name|walk
operator|.
name|parseCommit
argument_list|(
name|update
operator|.
name|getRevision
argument_list|()
argument_list|)
decl_stmt|;
name|walk
operator|.
name|parseBody
argument_list|(
name|commit
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Submit patch set 1\n"
operator|+
literal|"\n"
operator|+
literal|"Patch-set: 1\n"
operator|+
literal|"Status: submitted\n"
operator|+
literal|"Submitted-with: RULE_ERROR Problem with patch set: 1\n"
argument_list|,
name|commit
operator|.
name|getFullMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|walk
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|approvalsOnePatchSet ()
specifier|public
name|void
name|approvalsOnePatchSet
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|putApproval
argument_list|(
literal|"Verified"
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|update
operator|.
name|putApproval
argument_list|(
literal|"Code-Review"
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|notes
operator|.
name|getApprovals
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|PatchSetApproval
argument_list|>
name|psas
init|=
name|notes
operator|.
name|getApprovals
argument_list|()
operator|.
name|get
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|psas
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPatchSetId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAccountId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Code-Review"
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|truncate
argument_list|(
name|after
argument_list|(
name|c
argument_list|,
literal|1000
argument_list|)
argument_list|)
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getGranted
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getPatchSetId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAccountId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Verified"
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|psas
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getGranted
argument_list|()
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getGranted
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|approvalsMultiplePatchSets ()
specifier|public
name|void
name|approvalsMultiplePatchSets
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|putApproval
argument_list|(
literal|"Code-Review"
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|PatchSet
operator|.
name|Id
name|ps1
init|=
name|c
operator|.
name|currentPatchSetId
argument_list|()
decl_stmt|;
name|incrementPatchSet
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
expr_stmt|;
name|update
operator|.
name|putApproval
argument_list|(
literal|"Code-Review"
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|PatchSet
operator|.
name|Id
name|ps2
init|=
name|c
operator|.
name|currentPatchSetId
argument_list|()
decl_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|ListMultimap
argument_list|<
name|PatchSet
operator|.
name|Id
argument_list|,
name|PatchSetApproval
argument_list|>
name|psas
init|=
name|notes
operator|.
name|getApprovals
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|notes
operator|.
name|getApprovals
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|PatchSetApproval
name|psa1
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|psas
operator|.
name|get
argument_list|(
name|ps1
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ps1
argument_list|,
name|psa1
operator|.
name|getPatchSetId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|psa1
operator|.
name|getAccountId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Code-Review"
argument_list|,
name|psa1
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|,
name|psa1
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|truncate
argument_list|(
name|after
argument_list|(
name|c
argument_list|,
literal|1000
argument_list|)
argument_list|)
argument_list|,
name|psa1
operator|.
name|getGranted
argument_list|()
argument_list|)
expr_stmt|;
name|PatchSetApproval
name|psa2
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|psas
operator|.
name|get
argument_list|(
name|ps2
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ps2
argument_list|,
name|psa2
operator|.
name|getPatchSetId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|psa2
operator|.
name|getAccountId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Code-Review"
argument_list|,
name|psa2
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
name|short
operator|)
operator|+
literal|1
argument_list|,
name|psa2
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|truncate
argument_list|(
name|after
argument_list|(
name|c
argument_list|,
literal|2000
argument_list|)
argument_list|)
argument_list|,
name|psa2
operator|.
name|getGranted
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|approvalsMultipleApprovals ()
specifier|public
name|void
name|approvalsMultipleApprovals
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|putApproval
argument_list|(
literal|"Code-Review"
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|PatchSetApproval
name|psa
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|notes
operator|.
name|getApprovals
argument_list|()
operator|.
name|get
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Code-Review"
argument_list|,
name|psa
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|,
name|psa
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
expr_stmt|;
name|update
operator|.
name|putApproval
argument_list|(
literal|"Code-Review"
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|notes
operator|=
name|newNotes
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|psa
operator|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|notes
operator|.
name|getApprovals
argument_list|()
operator|.
name|get
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Code-Review"
argument_list|,
name|psa
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|,
name|psa
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|approvalsMultipleUsers ()
specifier|public
name|void
name|approvalsMultipleUsers
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|putApproval
argument_list|(
literal|"Code-Review"
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
expr_stmt|;
name|update
operator|.
name|putApproval
argument_list|(
literal|"Code-Review"
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|notes
operator|.
name|getApprovals
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|PatchSetApproval
argument_list|>
name|psas
init|=
name|notes
operator|.
name|getApprovals
argument_list|()
operator|.
name|get
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|psas
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPatchSetId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAccountId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Code-Review"
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|truncate
argument_list|(
name|after
argument_list|(
name|c
argument_list|,
literal|1000
argument_list|)
argument_list|)
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getGranted
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getPatchSetId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAccountId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Code-Review"
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|truncate
argument_list|(
name|after
argument_list|(
name|c
argument_list|,
literal|2000
argument_list|)
argument_list|)
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getGranted
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|approvalsTombstone ()
specifier|public
name|void
name|approvalsTombstone
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|putApproval
argument_list|(
literal|"Not-For-Long"
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|PatchSetApproval
name|psa
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|notes
operator|.
name|getApprovals
argument_list|()
operator|.
name|get
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|psa
operator|.
name|getAccountId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Not-For-Long"
argument_list|,
name|psa
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|,
name|psa
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
expr_stmt|;
name|update
operator|.
name|removeApproval
argument_list|(
literal|"Not-For-Long"
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|notes
operator|=
name|newNotes
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|notes
operator|.
name|getApprovals
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|multipleReviewers ()
specifier|public
name|void
name|multipleReviewers
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|putReviewer
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|REVIEWER
argument_list|)
expr_stmt|;
name|update
operator|.
name|putReviewer
argument_list|(
name|otherUser
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|REVIEWER
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ImmutableSetMultimap
operator|.
name|of
argument_list|(
name|REVIEWER
argument_list|,
operator|new
name|Account
operator|.
name|Id
argument_list|(
literal|1
argument_list|)
argument_list|,
name|REVIEWER
argument_list|,
operator|new
name|Account
operator|.
name|Id
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|,
name|notes
operator|.
name|getReviewers
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|reviewerTypes ()
specifier|public
name|void
name|reviewerTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|putReviewer
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|REVIEWER
argument_list|)
expr_stmt|;
name|update
operator|.
name|putReviewer
argument_list|(
name|otherUser
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|CC
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ImmutableSetMultimap
operator|.
name|of
argument_list|(
name|REVIEWER
argument_list|,
operator|new
name|Account
operator|.
name|Id
argument_list|(
literal|1
argument_list|)
argument_list|,
name|CC
argument_list|,
operator|new
name|Account
operator|.
name|Id
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|,
name|notes
operator|.
name|getReviewers
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|oneReviewerMultipleTypes ()
specifier|public
name|void
name|oneReviewerMultipleTypes
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|putReviewer
argument_list|(
name|otherUser
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|REVIEWER
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ImmutableSetMultimap
operator|.
name|of
argument_list|(
name|REVIEWER
argument_list|,
operator|new
name|Account
operator|.
name|Id
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|,
name|notes
operator|.
name|getReviewers
argument_list|()
argument_list|)
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
expr_stmt|;
name|update
operator|.
name|putReviewer
argument_list|(
name|otherUser
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|CC
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|notes
operator|=
name|newNotes
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ImmutableSetMultimap
operator|.
name|of
argument_list|(
name|CC
argument_list|,
operator|new
name|Account
operator|.
name|Id
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|,
name|notes
operator|.
name|getReviewers
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|removeReviewer ()
specifier|public
name|void
name|removeReviewer
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|putReviewer
argument_list|(
name|otherUser
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|REVIEWER
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
expr_stmt|;
name|update
operator|.
name|putApproval
argument_list|(
literal|"Code-Review"
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
expr_stmt|;
name|update
operator|.
name|putApproval
argument_list|(
literal|"Code-Review"
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|PatchSetApproval
argument_list|>
name|psas
init|=
name|notes
operator|.
name|getApprovals
argument_list|()
operator|.
name|get
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|psas
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAccountId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|otherUser
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAccountId
argument_list|()
argument_list|)
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
expr_stmt|;
name|update
operator|.
name|removeReviewer
argument_list|(
name|otherUser
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|notes
operator|=
name|newNotes
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|psas
operator|=
name|notes
operator|.
name|getApprovals
argument_list|()
operator|.
name|get
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|psas
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAccountId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|submitRecords ()
specifier|public
name|void
name|submitRecords
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|setSubject
argument_list|(
literal|"Submit patch set 1"
argument_list|)
expr_stmt|;
name|update
operator|.
name|submit
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|(
name|submitRecord
argument_list|(
literal|"NOT_READY"
argument_list|,
literal|null
argument_list|,
name|submitLabel
argument_list|(
literal|"Verified"
argument_list|,
literal|"OK"
argument_list|,
name|changeOwner
operator|.
name|getAccountId
argument_list|()
argument_list|)
argument_list|,
name|submitLabel
argument_list|(
literal|"Code-Review"
argument_list|,
literal|"NEED"
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|,
name|submitRecord
argument_list|(
literal|"NOT_READY"
argument_list|,
literal|null
argument_list|,
name|submitLabel
argument_list|(
literal|"Verified"
argument_list|,
literal|"OK"
argument_list|,
name|changeOwner
operator|.
name|getAccountId
argument_list|()
argument_list|)
argument_list|,
name|submitLabel
argument_list|(
literal|"Alternative-Code-Review"
argument_list|,
literal|"NEED"
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|SubmitRecord
argument_list|>
name|recs
init|=
name|notes
operator|.
name|getSubmitRecords
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|recs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|submitRecord
argument_list|(
literal|"NOT_READY"
argument_list|,
literal|null
argument_list|,
name|submitLabel
argument_list|(
literal|"Verified"
argument_list|,
literal|"OK"
argument_list|,
name|changeOwner
operator|.
name|getAccountId
argument_list|()
argument_list|)
argument_list|,
name|submitLabel
argument_list|(
literal|"Code-Review"
argument_list|,
literal|"NEED"
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|,
name|recs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|submitRecord
argument_list|(
literal|"NOT_READY"
argument_list|,
literal|null
argument_list|,
name|submitLabel
argument_list|(
literal|"Verified"
argument_list|,
literal|"OK"
argument_list|,
name|changeOwner
operator|.
name|getAccountId
argument_list|()
argument_list|)
argument_list|,
name|submitLabel
argument_list|(
literal|"Alternative-Code-Review"
argument_list|,
literal|"NEED"
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|,
name|recs
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|latestSubmitRecordsOnly ()
specifier|public
name|void
name|latestSubmitRecordsOnly
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|setSubject
argument_list|(
literal|"Submit patch set 1"
argument_list|)
expr_stmt|;
name|update
operator|.
name|submit
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|(
name|submitRecord
argument_list|(
literal|"OK"
argument_list|,
literal|null
argument_list|,
name|submitLabel
argument_list|(
literal|"Code-Review"
argument_list|,
literal|"OK"
argument_list|,
name|otherUser
operator|.
name|getAccountId
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|incrementPatchSet
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
expr_stmt|;
name|update
operator|.
name|setSubject
argument_list|(
literal|"Submit patch set 2"
argument_list|)
expr_stmt|;
name|update
operator|.
name|submit
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|(
name|submitRecord
argument_list|(
literal|"OK"
argument_list|,
literal|null
argument_list|,
name|submitLabel
argument_list|(
literal|"Code-Review"
argument_list|,
literal|"OK"
argument_list|,
name|changeOwner
operator|.
name|getAccountId
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|submitRecord
argument_list|(
literal|"OK"
argument_list|,
literal|null
argument_list|,
name|submitLabel
argument_list|(
literal|"Code-Review"
argument_list|,
literal|"OK"
argument_list|,
name|changeOwner
operator|.
name|getAccountId
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|notes
operator|.
name|getSubmitRecords
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|multipleUpdatesInBatch ()
specifier|public
name|void
name|multipleUpdatesInBatch
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update1
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update1
operator|.
name|putApproval
argument_list|(
literal|"Verified"
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|ChangeUpdate
name|update2
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
decl_stmt|;
name|update2
operator|.
name|putApproval
argument_list|(
literal|"Code-Review"
argument_list|,
operator|(
name|short
operator|)
literal|2
argument_list|)
expr_stmt|;
name|BatchMetaDataUpdate
name|batch
init|=
name|update1
operator|.
name|openUpdate
argument_list|()
decl_stmt|;
try|try
block|{
name|batch
operator|.
name|write
argument_list|(
name|update1
argument_list|,
operator|new
name|CommitBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|batch
operator|.
name|write
argument_list|(
name|update2
argument_list|,
operator|new
name|CommitBuilder
argument_list|()
argument_list|)
expr_stmt|;
name|batch
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|batch
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|PatchSetApproval
argument_list|>
name|psas
init|=
name|notes
operator|.
name|getApprovals
argument_list|()
operator|.
name|get
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|psas
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAccountId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Verified"
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|otherUser
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAccountId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Code-Review"
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|,
name|psas
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeMessageOnePatchSet ()
specifier|public
name|void
name|changeMessageOnePatchSet
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|putReviewer
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|REVIEWER
argument_list|)
expr_stmt|;
name|update
operator|.
name|setChangeMessage
argument_list|(
literal|"Just a little code change.\n"
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|PatchSet
operator|.
name|Id
name|ps1
init|=
name|c
operator|.
name|currentPatchSetId
argument_list|()
decl_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|ListMultimap
argument_list|<
name|PatchSet
operator|.
name|Id
argument_list|,
name|ChangeMessage
argument_list|>
name|changeMessages
init|=
name|notes
operator|.
name|getChangeMessages
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|changeMessages
operator|.
name|keySet
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ChangeMessage
name|cm
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|changeMessages
operator|.
name|get
argument_list|(
name|ps1
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Just a little code change.\n"
argument_list|,
name|cm
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|cm
operator|.
name|getAuthor
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ps1
argument_list|,
name|cm
operator|.
name|getPatchSetId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeMessagesMultiplePatchSets ()
specifier|public
name|void
name|changeMessagesMultiplePatchSets
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|putReviewer
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|REVIEWER
argument_list|)
expr_stmt|;
name|update
operator|.
name|setChangeMessage
argument_list|(
literal|"This is the change message for the first PS."
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|PatchSet
operator|.
name|Id
name|ps1
init|=
name|c
operator|.
name|currentPatchSetId
argument_list|()
decl_stmt|;
name|incrementPatchSet
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
expr_stmt|;
name|update
operator|.
name|setChangeMessage
argument_list|(
literal|"This is the change message for the second PS."
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|PatchSet
operator|.
name|Id
name|ps2
init|=
name|c
operator|.
name|currentPatchSetId
argument_list|()
decl_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|ListMultimap
argument_list|<
name|PatchSet
operator|.
name|Id
argument_list|,
name|ChangeMessage
argument_list|>
name|changeMessages
init|=
name|notes
operator|.
name|getChangeMessages
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|changeMessages
operator|.
name|keySet
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ChangeMessage
name|cm1
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|changeMessages
operator|.
name|get
argument_list|(
name|ps1
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"This is the change message for the first PS."
argument_list|,
name|cm1
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|cm1
operator|.
name|getAuthor
argument_list|()
argument_list|)
expr_stmt|;
name|ChangeMessage
name|cm2
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|changeMessages
operator|.
name|get
argument_list|(
name|ps2
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ps1
argument_list|,
name|cm1
operator|.
name|getPatchSetId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"This is the change message for the second PS."
argument_list|,
name|cm2
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|cm2
operator|.
name|getAuthor
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ps2
argument_list|,
name|cm2
operator|.
name|getPatchSetId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|noChangeMessage ()
specifier|public
name|void
name|noChangeMessage
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|putReviewer
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|REVIEWER
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|RevWalk
name|walk
init|=
operator|new
name|RevWalk
argument_list|(
name|repo
argument_list|)
decl_stmt|;
try|try
block|{
name|RevCommit
name|commit
init|=
name|walk
operator|.
name|parseCommit
argument_list|(
name|update
operator|.
name|getRevision
argument_list|()
argument_list|)
decl_stmt|;
name|walk
operator|.
name|parseBody
argument_list|(
name|commit
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Update patch set 1\n"
operator|+
literal|"\n"
operator|+
literal|"Patch-set: 1\n"
operator|+
literal|"Reviewer: Change Owner<1@gerrit>\n"
argument_list|,
name|commit
operator|.
name|getFullMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|walk
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|ListMultimap
argument_list|<
name|PatchSet
operator|.
name|Id
argument_list|,
name|ChangeMessage
argument_list|>
name|changeMessages
init|=
name|notes
operator|.
name|getChangeMessages
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|changeMessages
operator|.
name|keySet
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeMessageWithTrailingDoubleNewline ()
specifier|public
name|void
name|changeMessageWithTrailingDoubleNewline
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|setChangeMessage
argument_list|(
literal|"Testing trailing double newline\n"
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|PatchSet
operator|.
name|Id
name|ps1
init|=
name|c
operator|.
name|currentPatchSetId
argument_list|()
decl_stmt|;
name|RevWalk
name|walk
init|=
operator|new
name|RevWalk
argument_list|(
name|repo
argument_list|)
decl_stmt|;
try|try
block|{
name|RevCommit
name|commit
init|=
name|walk
operator|.
name|parseCommit
argument_list|(
name|update
operator|.
name|getRevision
argument_list|()
argument_list|)
decl_stmt|;
name|walk
operator|.
name|parseBody
argument_list|(
name|commit
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Update patch set 1\n"
operator|+
literal|"\n"
operator|+
literal|"Testing trailing double newline\n"
operator|+
literal|"\n"
operator|+
literal|"\n"
operator|+
literal|"\n"
operator|+
literal|"Patch-set: 1\n"
argument_list|,
name|commit
operator|.
name|getFullMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|walk
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|ListMultimap
argument_list|<
name|PatchSet
operator|.
name|Id
argument_list|,
name|ChangeMessage
argument_list|>
name|changeMessages
init|=
name|notes
operator|.
name|getChangeMessages
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|changeMessages
operator|.
name|keySet
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ChangeMessage
name|cm1
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|changeMessages
operator|.
name|get
argument_list|(
name|ps1
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Testing trailing double newline\n"
operator|+
literal|"\n"
argument_list|,
name|cm1
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|cm1
operator|.
name|getAuthor
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeMessageWithMultipleParagraphs ()
specifier|public
name|void
name|changeMessageWithMultipleParagraphs
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|setChangeMessage
argument_list|(
literal|"Testing paragraph 1\n"
operator|+
literal|"\n"
operator|+
literal|"Testing paragraph 2\n"
operator|+
literal|"\n"
operator|+
literal|"Testing paragraph 3"
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|PatchSet
operator|.
name|Id
name|ps1
init|=
name|c
operator|.
name|currentPatchSetId
argument_list|()
decl_stmt|;
name|RevWalk
name|walk
init|=
operator|new
name|RevWalk
argument_list|(
name|repo
argument_list|)
decl_stmt|;
try|try
block|{
name|RevCommit
name|commit
init|=
name|walk
operator|.
name|parseCommit
argument_list|(
name|update
operator|.
name|getRevision
argument_list|()
argument_list|)
decl_stmt|;
name|walk
operator|.
name|parseBody
argument_list|(
name|commit
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Update patch set 1\n"
operator|+
literal|"\n"
operator|+
literal|"Testing paragraph 1\n"
operator|+
literal|"\n"
operator|+
literal|"Testing paragraph 2\n"
operator|+
literal|"\n"
operator|+
literal|"Testing paragraph 3\n"
operator|+
literal|"\n"
operator|+
literal|"Patch-set: 1\n"
argument_list|,
name|commit
operator|.
name|getFullMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|walk
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|ListMultimap
argument_list|<
name|PatchSet
operator|.
name|Id
argument_list|,
name|ChangeMessage
argument_list|>
name|changeMessages
init|=
name|notes
operator|.
name|getChangeMessages
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|changeMessages
operator|.
name|keySet
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ChangeMessage
name|cm1
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|changeMessages
operator|.
name|get
argument_list|(
name|ps1
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Testing paragraph 1\n"
operator|+
literal|"\n"
operator|+
literal|"Testing paragraph 2\n"
operator|+
literal|"\n"
operator|+
literal|"Testing paragraph 3"
argument_list|,
name|cm1
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|cm1
operator|.
name|getAuthor
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeMessageMultipleInOnePatchSet ()
specifier|public
name|void
name|changeMessageMultipleInOnePatchSet
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
decl_stmt|;
name|update
operator|.
name|putReviewer
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|REVIEWER
argument_list|)
expr_stmt|;
name|update
operator|.
name|setChangeMessage
argument_list|(
literal|"First change message.\n"
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|PatchSet
operator|.
name|Id
name|ps1
init|=
name|c
operator|.
name|currentPatchSetId
argument_list|()
decl_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|changeOwner
argument_list|)
expr_stmt|;
name|update
operator|.
name|putReviewer
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|REVIEWER
argument_list|)
expr_stmt|;
name|update
operator|.
name|setChangeMessage
argument_list|(
literal|"Second change message.\n"
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|ListMultimap
argument_list|<
name|PatchSet
operator|.
name|Id
argument_list|,
name|ChangeMessage
argument_list|>
name|changeMessages
init|=
name|notes
operator|.
name|getChangeMessages
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|changeMessages
operator|.
name|keySet
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ChangeMessage
argument_list|>
name|cm
init|=
name|changeMessages
operator|.
name|get
argument_list|(
name|ps1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|cm
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"First change message.\n"
argument_list|,
name|cm
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|cm
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getAuthor
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ps1
argument_list|,
name|cm
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPatchSetId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Second change message.\n"
argument_list|,
name|cm
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|changeOwner
operator|.
name|getAccount
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|,
name|cm
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getAuthor
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ps1
argument_list|,
name|cm
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getPatchSetId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|patchLineCommentNotesFormatSide1 ()
specifier|public
name|void
name|patchLineCommentNotesFormatSide1
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
decl_stmt|;
name|String
name|uuid
init|=
literal|"uuid"
decl_stmt|;
name|String
name|message1
init|=
literal|"comment 1"
decl_stmt|;
name|String
name|message2
init|=
literal|"comment 2"
decl_stmt|;
name|String
name|message3
init|=
literal|"comment 3"
decl_stmt|;
name|CommentRange
name|range1
init|=
operator|new
name|CommentRange
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|Timestamp
name|time1
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|Timestamp
name|time2
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|Timestamp
name|time3
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|PatchSet
operator|.
name|Id
name|psId
init|=
name|c
operator|.
name|currentPatchSetId
argument_list|()
decl_stmt|;
name|PatchLineComment
name|comment1
init|=
name|newPublishedPatchLineComment
argument_list|(
name|psId
argument_list|,
literal|"file1"
argument_list|,
name|uuid
argument_list|,
name|range1
argument_list|,
name|range1
operator|.
name|getEndLine
argument_list|()
argument_list|,
name|otherUser
argument_list|,
literal|null
argument_list|,
name|time1
argument_list|,
name|message1
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|,
literal|"abcd1234abcd1234abcd1234abcd1234abcd1234"
argument_list|)
decl_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|psId
argument_list|)
expr_stmt|;
name|update
operator|.
name|putComment
argument_list|(
name|comment1
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
expr_stmt|;
name|CommentRange
name|range2
init|=
operator|new
name|CommentRange
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|PatchLineComment
name|comment2
init|=
name|newPublishedPatchLineComment
argument_list|(
name|psId
argument_list|,
literal|"file1"
argument_list|,
name|uuid
argument_list|,
name|range2
argument_list|,
name|range2
operator|.
name|getEndLine
argument_list|()
argument_list|,
name|otherUser
argument_list|,
literal|null
argument_list|,
name|time2
argument_list|,
name|message2
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|,
literal|"abcd1234abcd1234abcd1234abcd1234abcd1234"
argument_list|)
decl_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|psId
argument_list|)
expr_stmt|;
name|update
operator|.
name|putComment
argument_list|(
name|comment2
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
expr_stmt|;
name|CommentRange
name|range3
init|=
operator|new
name|CommentRange
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|PatchLineComment
name|comment3
init|=
name|newPublishedPatchLineComment
argument_list|(
name|psId
argument_list|,
literal|"file2"
argument_list|,
name|uuid
argument_list|,
name|range3
argument_list|,
name|range3
operator|.
name|getEndLine
argument_list|()
argument_list|,
name|otherUser
argument_list|,
literal|null
argument_list|,
name|time3
argument_list|,
name|message3
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|,
literal|"abcd1234abcd1234abcd1234abcd1234abcd1234"
argument_list|)
decl_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|psId
argument_list|)
expr_stmt|;
name|update
operator|.
name|putComment
argument_list|(
name|comment3
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|RevWalk
name|walk
init|=
operator|new
name|RevWalk
argument_list|(
name|repo
argument_list|)
decl_stmt|;
name|ArrayList
argument_list|<
name|Note
argument_list|>
name|notesInTree
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|notes
operator|.
name|getNoteMap
argument_list|()
operator|.
name|iterator
argument_list|()
argument_list|)
decl_stmt|;
name|Note
name|note
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|notesInTree
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|walk
operator|.
name|getObjectReader
argument_list|()
operator|.
name|open
argument_list|(
name|note
operator|.
name|getData
argument_list|()
argument_list|,
name|Constants
operator|.
name|OBJ_BLOB
argument_list|)
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|String
name|noteString
init|=
operator|new
name|String
argument_list|(
name|bytes
argument_list|,
name|UTF_8
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Patch-set: 1\n"
operator|+
literal|"Revision: abcd1234abcd1234abcd1234abcd1234abcd1234\n"
operator|+
literal|"File: file1\n"
operator|+
literal|"\n"
operator|+
literal|"1:1-2:1\n"
operator|+
name|CommentsInNotesUtil
operator|.
name|formatTime
argument_list|(
name|serverIdent
argument_list|,
name|time1
argument_list|)
operator|+
literal|"\n"
operator|+
literal|"Author: Other Account<2@gerrit>\n"
operator|+
literal|"UUID: uuid\n"
operator|+
literal|"Bytes: 9\n"
operator|+
literal|"comment 1\n"
operator|+
literal|"\n"
operator|+
literal|"2:1-3:1\n"
operator|+
name|CommentsInNotesUtil
operator|.
name|formatTime
argument_list|(
name|serverIdent
argument_list|,
name|time2
argument_list|)
operator|+
literal|"\n"
operator|+
literal|"Author: Other Account<2@gerrit>\n"
operator|+
literal|"UUID: uuid\n"
operator|+
literal|"Bytes: 9\n"
operator|+
literal|"comment 2\n"
operator|+
literal|"\n"
operator|+
literal|"File: file2\n"
operator|+
literal|"\n"
operator|+
literal|"3:1-4:1\n"
operator|+
name|CommentsInNotesUtil
operator|.
name|formatTime
argument_list|(
name|serverIdent
argument_list|,
name|time3
argument_list|)
operator|+
literal|"\n"
operator|+
literal|"Author: Other Account<2@gerrit>\n"
operator|+
literal|"UUID: uuid\n"
operator|+
literal|"Bytes: 9\n"
operator|+
literal|"comment 3\n"
operator|+
literal|"\n"
argument_list|,
name|noteString
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|patchLineCommentNotesFormatSide0 ()
specifier|public
name|void
name|patchLineCommentNotesFormatSide0
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
decl_stmt|;
name|String
name|uuid
init|=
literal|"uuid"
decl_stmt|;
name|String
name|message1
init|=
literal|"comment 1"
decl_stmt|;
name|String
name|message2
init|=
literal|"comment 2"
decl_stmt|;
name|CommentRange
name|range1
init|=
operator|new
name|CommentRange
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|Timestamp
name|time1
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|Timestamp
name|time2
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|PatchSet
operator|.
name|Id
name|psId
init|=
name|c
operator|.
name|currentPatchSetId
argument_list|()
decl_stmt|;
name|PatchLineComment
name|comment1
init|=
name|newPublishedPatchLineComment
argument_list|(
name|psId
argument_list|,
literal|"file1"
argument_list|,
name|uuid
argument_list|,
name|range1
argument_list|,
name|range1
operator|.
name|getEndLine
argument_list|()
argument_list|,
name|otherUser
argument_list|,
literal|null
argument_list|,
name|time1
argument_list|,
name|message1
argument_list|,
operator|(
name|short
operator|)
literal|0
argument_list|,
literal|"abcd1234abcd1234abcd1234abcd1234abcd1234"
argument_list|)
decl_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|psId
argument_list|)
expr_stmt|;
name|update
operator|.
name|putComment
argument_list|(
name|comment1
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
expr_stmt|;
name|CommentRange
name|range2
init|=
operator|new
name|CommentRange
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|PatchLineComment
name|comment2
init|=
name|newPublishedPatchLineComment
argument_list|(
name|psId
argument_list|,
literal|"file1"
argument_list|,
name|uuid
argument_list|,
name|range2
argument_list|,
name|range2
operator|.
name|getEndLine
argument_list|()
argument_list|,
name|otherUser
argument_list|,
literal|null
argument_list|,
name|time2
argument_list|,
name|message2
argument_list|,
operator|(
name|short
operator|)
literal|0
argument_list|,
literal|"abcd1234abcd1234abcd1234abcd1234abcd1234"
argument_list|)
decl_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|psId
argument_list|)
expr_stmt|;
name|update
operator|.
name|putComment
argument_list|(
name|comment2
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|RevWalk
name|walk
init|=
operator|new
name|RevWalk
argument_list|(
name|repo
argument_list|)
decl_stmt|;
name|ArrayList
argument_list|<
name|Note
argument_list|>
name|notesInTree
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|notes
operator|.
name|getNoteMap
argument_list|()
operator|.
name|iterator
argument_list|()
argument_list|)
decl_stmt|;
name|Note
name|note
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|notesInTree
argument_list|)
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|walk
operator|.
name|getObjectReader
argument_list|()
operator|.
name|open
argument_list|(
name|note
operator|.
name|getData
argument_list|()
argument_list|,
name|Constants
operator|.
name|OBJ_BLOB
argument_list|)
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|String
name|noteString
init|=
operator|new
name|String
argument_list|(
name|bytes
argument_list|,
name|UTF_8
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Base-for-patch-set: 1\n"
operator|+
literal|"Revision: abcd1234abcd1234abcd1234abcd1234abcd1234\n"
operator|+
literal|"File: file1\n"
operator|+
literal|"\n"
operator|+
literal|"1:1-2:1\n"
operator|+
name|CommentsInNotesUtil
operator|.
name|formatTime
argument_list|(
name|serverIdent
argument_list|,
name|time1
argument_list|)
operator|+
literal|"\n"
operator|+
literal|"Author: Other Account<2@gerrit>\n"
operator|+
literal|"UUID: uuid\n"
operator|+
literal|"Bytes: 9\n"
operator|+
literal|"comment 1\n"
operator|+
literal|"\n"
operator|+
literal|"2:1-3:1\n"
operator|+
name|CommentsInNotesUtil
operator|.
name|formatTime
argument_list|(
name|serverIdent
argument_list|,
name|time2
argument_list|)
operator|+
literal|"\n"
operator|+
literal|"Author: Other Account<2@gerrit>\n"
operator|+
literal|"UUID: uuid\n"
operator|+
literal|"Bytes: 9\n"
operator|+
literal|"comment 2\n"
operator|+
literal|"\n"
argument_list|,
name|noteString
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|patchLineCommentMultipleOnePatchsetOneFileBothSides ()
specifier|public
name|void
name|patchLineCommentMultipleOnePatchsetOneFileBothSides
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
decl_stmt|;
name|String
name|uuid
init|=
literal|"uuid"
decl_stmt|;
name|String
name|messageForBase
init|=
literal|"comment for base"
decl_stmt|;
name|String
name|messageForPS
init|=
literal|"comment for ps"
decl_stmt|;
name|CommentRange
name|range
init|=
operator|new
name|CommentRange
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|Timestamp
name|now
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|PatchSet
operator|.
name|Id
name|psId
init|=
name|c
operator|.
name|currentPatchSetId
argument_list|()
decl_stmt|;
name|PatchLineComment
name|commentForBase
init|=
name|newPublishedPatchLineComment
argument_list|(
name|psId
argument_list|,
literal|"filename"
argument_list|,
name|uuid
argument_list|,
name|range
argument_list|,
name|range
operator|.
name|getEndLine
argument_list|()
argument_list|,
name|otherUser
argument_list|,
literal|null
argument_list|,
name|now
argument_list|,
name|messageForBase
argument_list|,
operator|(
name|short
operator|)
literal|0
argument_list|,
literal|"abcd1234abcd1234abcd1234abcd1234abcd1234"
argument_list|)
decl_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|psId
argument_list|)
expr_stmt|;
name|update
operator|.
name|putComment
argument_list|(
name|commentForBase
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
expr_stmt|;
name|PatchLineComment
name|commentForPS
init|=
name|newPublishedPatchLineComment
argument_list|(
name|psId
argument_list|,
literal|"filename"
argument_list|,
name|uuid
argument_list|,
name|range
argument_list|,
name|range
operator|.
name|getEndLine
argument_list|()
argument_list|,
name|otherUser
argument_list|,
literal|null
argument_list|,
name|now
argument_list|,
name|messageForPS
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|,
literal|"abcd4567abcd4567abcd4567abcd4567abcd4567"
argument_list|)
decl_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|psId
argument_list|)
expr_stmt|;
name|update
operator|.
name|putComment
argument_list|(
name|commentForPS
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|Multimap
argument_list|<
name|PatchSet
operator|.
name|Id
argument_list|,
name|PatchLineComment
argument_list|>
name|commentsForBase
init|=
name|notes
operator|.
name|getBaseComments
argument_list|()
decl_stmt|;
name|Multimap
argument_list|<
name|PatchSet
operator|.
name|Id
argument_list|,
name|PatchLineComment
argument_list|>
name|commentsForPS
init|=
name|notes
operator|.
name|getPatchSetComments
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|commentsForBase
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|commentsForPS
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|commentForBase
argument_list|,
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|commentsForBase
operator|.
name|get
argument_list|(
name|psId
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|commentForPS
argument_list|,
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|commentsForPS
operator|.
name|get
argument_list|(
name|psId
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|patchLineCommentMultipleOnePatchsetOneFile ()
specifier|public
name|void
name|patchLineCommentMultipleOnePatchsetOneFile
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|String
name|uuid
init|=
literal|"uuid"
decl_stmt|;
name|CommentRange
name|range
init|=
operator|new
name|CommentRange
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|PatchSet
operator|.
name|Id
name|psId
init|=
name|c
operator|.
name|currentPatchSetId
argument_list|()
decl_stmt|;
name|String
name|filename
init|=
literal|"filename"
decl_stmt|;
name|short
name|side
init|=
operator|(
name|short
operator|)
literal|1
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
decl_stmt|;
name|Timestamp
name|timeForComment1
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|Timestamp
name|timeForComment2
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|PatchLineComment
name|comment1
init|=
name|newPublishedPatchLineComment
argument_list|(
name|psId
argument_list|,
name|filename
argument_list|,
name|uuid
argument_list|,
name|range
argument_list|,
name|range
operator|.
name|getEndLine
argument_list|()
argument_list|,
name|otherUser
argument_list|,
literal|null
argument_list|,
name|timeForComment1
argument_list|,
literal|"comment 1"
argument_list|,
name|side
argument_list|,
literal|"abcd1234abcd1234abcd1234abcd1234abcd1234"
argument_list|)
decl_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|psId
argument_list|)
expr_stmt|;
name|update
operator|.
name|putComment
argument_list|(
name|comment1
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
expr_stmt|;
name|PatchLineComment
name|comment2
init|=
name|newPublishedPatchLineComment
argument_list|(
name|psId
argument_list|,
name|filename
argument_list|,
name|uuid
argument_list|,
name|range
argument_list|,
name|range
operator|.
name|getEndLine
argument_list|()
argument_list|,
name|otherUser
argument_list|,
literal|null
argument_list|,
name|timeForComment2
argument_list|,
literal|"comment 2"
argument_list|,
name|side
argument_list|,
literal|"abcd1234abcd1234abcd1234abcd1234abcd1234"
argument_list|)
decl_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|psId
argument_list|)
expr_stmt|;
name|update
operator|.
name|putComment
argument_list|(
name|comment2
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|Multimap
argument_list|<
name|PatchSet
operator|.
name|Id
argument_list|,
name|PatchLineComment
argument_list|>
name|commentsForBase
init|=
name|notes
operator|.
name|getBaseComments
argument_list|()
decl_stmt|;
name|Multimap
argument_list|<
name|PatchSet
operator|.
name|Id
argument_list|,
name|PatchLineComment
argument_list|>
name|commentsForPS
init|=
name|notes
operator|.
name|getPatchSetComments
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|commentsForBase
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|commentsForPS
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|ImmutableList
argument_list|<
name|PatchLineComment
argument_list|>
name|commentsForThisPS
init|=
operator|(
name|ImmutableList
argument_list|<
name|PatchLineComment
argument_list|>
operator|)
name|commentsForPS
operator|.
name|get
argument_list|(
name|psId
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|commentsForThisPS
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|PatchLineComment
name|commentFromNotes1
init|=
name|commentsForThisPS
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|PatchLineComment
name|commentFromNotes2
init|=
name|commentsForThisPS
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|comment1
argument_list|,
name|commentFromNotes1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|comment2
argument_list|,
name|commentFromNotes2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|patchLineCommentMultipleOnePatchsetMultipleFiles ()
specifier|public
name|void
name|patchLineCommentMultipleOnePatchsetMultipleFiles
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|String
name|uuid
init|=
literal|"uuid"
decl_stmt|;
name|CommentRange
name|range
init|=
operator|new
name|CommentRange
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|PatchSet
operator|.
name|Id
name|psId
init|=
name|c
operator|.
name|currentPatchSetId
argument_list|()
decl_stmt|;
name|String
name|filename1
init|=
literal|"filename1"
decl_stmt|;
name|String
name|filename2
init|=
literal|"filename2"
decl_stmt|;
name|short
name|side
init|=
operator|(
name|short
operator|)
literal|1
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
decl_stmt|;
name|Timestamp
name|now
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|PatchLineComment
name|comment1
init|=
name|newPublishedPatchLineComment
argument_list|(
name|psId
argument_list|,
name|filename1
argument_list|,
name|uuid
argument_list|,
name|range
argument_list|,
name|range
operator|.
name|getEndLine
argument_list|()
argument_list|,
name|otherUser
argument_list|,
literal|null
argument_list|,
name|now
argument_list|,
literal|"comment 1"
argument_list|,
name|side
argument_list|,
literal|"abcd1234abcd1234abcd1234abcd1234abcd1234"
argument_list|)
decl_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|psId
argument_list|)
expr_stmt|;
name|update
operator|.
name|putComment
argument_list|(
name|comment1
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
expr_stmt|;
name|PatchLineComment
name|comment2
init|=
name|newPublishedPatchLineComment
argument_list|(
name|psId
argument_list|,
name|filename2
argument_list|,
name|uuid
argument_list|,
name|range
argument_list|,
name|range
operator|.
name|getEndLine
argument_list|()
argument_list|,
name|otherUser
argument_list|,
literal|null
argument_list|,
name|now
argument_list|,
literal|"comment 2"
argument_list|,
name|side
argument_list|,
literal|"abcd1234abcd1234abcd1234abcd1234abcd1234"
argument_list|)
decl_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|psId
argument_list|)
expr_stmt|;
name|update
operator|.
name|putComment
argument_list|(
name|comment2
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|Multimap
argument_list|<
name|PatchSet
operator|.
name|Id
argument_list|,
name|PatchLineComment
argument_list|>
name|commentsForBase
init|=
name|notes
operator|.
name|getBaseComments
argument_list|()
decl_stmt|;
name|Multimap
argument_list|<
name|PatchSet
operator|.
name|Id
argument_list|,
name|PatchLineComment
argument_list|>
name|commentsForPS
init|=
name|notes
operator|.
name|getPatchSetComments
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|commentsForBase
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|commentsForPS
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|ImmutableList
argument_list|<
name|PatchLineComment
argument_list|>
name|commentsForThisPS
init|=
operator|(
name|ImmutableList
argument_list|<
name|PatchLineComment
argument_list|>
operator|)
name|commentsForPS
operator|.
name|get
argument_list|(
name|psId
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|commentsForThisPS
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|PatchLineComment
name|commentFromNotes1
init|=
name|commentsForThisPS
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|PatchLineComment
name|commentFromNotes2
init|=
name|commentsForThisPS
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|comment1
argument_list|,
name|commentFromNotes1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|comment2
argument_list|,
name|commentFromNotes2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|patchLineCommentMultiplePatchsets ()
specifier|public
name|void
name|patchLineCommentMultiplePatchsets
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|newChange
argument_list|()
decl_stmt|;
name|String
name|uuid
init|=
literal|"uuid"
decl_stmt|;
name|CommentRange
name|range
init|=
operator|new
name|CommentRange
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|PatchSet
operator|.
name|Id
name|ps1
init|=
name|c
operator|.
name|currentPatchSetId
argument_list|()
decl_stmt|;
name|String
name|filename
init|=
literal|"filename1"
decl_stmt|;
name|short
name|side
init|=
operator|(
name|short
operator|)
literal|1
decl_stmt|;
name|ChangeUpdate
name|update
init|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
decl_stmt|;
name|Timestamp
name|now
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|PatchLineComment
name|comment1
init|=
name|newPublishedPatchLineComment
argument_list|(
name|ps1
argument_list|,
name|filename
argument_list|,
name|uuid
argument_list|,
name|range
argument_list|,
name|range
operator|.
name|getEndLine
argument_list|()
argument_list|,
name|otherUser
argument_list|,
literal|null
argument_list|,
name|now
argument_list|,
literal|"comment on ps1"
argument_list|,
name|side
argument_list|,
literal|"abcd1234abcd1234abcd1234abcd1234abcd1234"
argument_list|)
decl_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|ps1
argument_list|)
expr_stmt|;
name|update
operator|.
name|putComment
argument_list|(
name|comment1
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|incrementPatchSet
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|PatchSet
operator|.
name|Id
name|ps2
init|=
name|c
operator|.
name|currentPatchSetId
argument_list|()
decl_stmt|;
name|update
operator|=
name|newUpdate
argument_list|(
name|c
argument_list|,
name|otherUser
argument_list|)
expr_stmt|;
name|now
operator|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
expr_stmt|;
name|PatchLineComment
name|comment2
init|=
name|newPublishedPatchLineComment
argument_list|(
name|ps2
argument_list|,
name|filename
argument_list|,
name|uuid
argument_list|,
name|range
argument_list|,
name|range
operator|.
name|getEndLine
argument_list|()
argument_list|,
name|otherUser
argument_list|,
literal|null
argument_list|,
name|now
argument_list|,
literal|"comment on ps2"
argument_list|,
name|side
argument_list|,
literal|"abcd4567abcd4567abcd4567abcd4567abcd4567"
argument_list|)
decl_stmt|;
name|update
operator|.
name|setPatchSetId
argument_list|(
name|ps2
argument_list|)
expr_stmt|;
name|update
operator|.
name|putComment
argument_list|(
name|comment2
argument_list|)
expr_stmt|;
name|update
operator|.
name|commit
argument_list|()
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|newNotes
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|LinkedListMultimap
argument_list|<
name|PatchSet
operator|.
name|Id
argument_list|,
name|PatchLineComment
argument_list|>
name|commentsForBase
init|=
name|LinkedListMultimap
operator|.
name|create
argument_list|(
name|notes
operator|.
name|getBaseComments
argument_list|()
argument_list|)
decl_stmt|;
name|LinkedListMultimap
argument_list|<
name|PatchSet
operator|.
name|Id
argument_list|,
name|PatchLineComment
argument_list|>
name|commentsForPS
init|=
name|LinkedListMultimap
operator|.
name|create
argument_list|(
name|notes
operator|.
name|getPatchSetComments
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|commentsForBase
operator|.
name|keys
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|commentsForPS
operator|.
name|values
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|PatchLineComment
argument_list|>
name|commentsForPS1
init|=
name|commentsForPS
operator|.
name|get
argument_list|(
name|ps1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|commentsForPS1
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|PatchLineComment
name|commentFromPs1
init|=
name|commentsForPS1
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|PatchLineComment
argument_list|>
name|commentsForPS2
init|=
name|commentsForPS
operator|.
name|get
argument_list|(
name|ps2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|commentsForPS2
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|PatchLineComment
name|commentFromPs2
init|=
name|commentsForPS2
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|comment1
argument_list|,
name|commentFromPs1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|comment2
argument_list|,
name|commentFromPs2
argument_list|)
expr_stmt|;
block|}
DECL|method|newChange ()
specifier|private
name|Change
name|newChange
parameter_list|()
block|{
return|return
name|TestChanges
operator|.
name|newChange
argument_list|(
name|project
argument_list|,
name|changeOwner
argument_list|)
return|;
block|}
DECL|method|newPublishedPatchLineComment (PatchSet.Id psId, String filename, String UUID, CommentRange range, int line, IdentifiedUser commenter, String parentUUID, Timestamp t, String message, short side, String commitSHA1)
specifier|private
name|PatchLineComment
name|newPublishedPatchLineComment
parameter_list|(
name|PatchSet
operator|.
name|Id
name|psId
parameter_list|,
name|String
name|filename
parameter_list|,
name|String
name|UUID
parameter_list|,
name|CommentRange
name|range
parameter_list|,
name|int
name|line
parameter_list|,
name|IdentifiedUser
name|commenter
parameter_list|,
name|String
name|parentUUID
parameter_list|,
name|Timestamp
name|t
parameter_list|,
name|String
name|message
parameter_list|,
name|short
name|side
parameter_list|,
name|String
name|commitSHA1
parameter_list|)
block|{
return|return
name|newPatchLineComment
argument_list|(
name|psId
argument_list|,
name|filename
argument_list|,
name|UUID
argument_list|,
name|range
argument_list|,
name|line
argument_list|,
name|commenter
argument_list|,
name|parentUUID
argument_list|,
name|t
argument_list|,
name|message
argument_list|,
name|side
argument_list|,
name|commitSHA1
argument_list|,
name|Status
operator|.
name|PUBLISHED
argument_list|)
return|;
block|}
DECL|method|newPatchLineComment (PatchSet.Id psId, String filename, String UUID, CommentRange range, int line, IdentifiedUser commenter, String parentUUID, Timestamp t, String message, short side, String commitSHA1, Status status)
specifier|private
name|PatchLineComment
name|newPatchLineComment
parameter_list|(
name|PatchSet
operator|.
name|Id
name|psId
parameter_list|,
name|String
name|filename
parameter_list|,
name|String
name|UUID
parameter_list|,
name|CommentRange
name|range
parameter_list|,
name|int
name|line
parameter_list|,
name|IdentifiedUser
name|commenter
parameter_list|,
name|String
name|parentUUID
parameter_list|,
name|Timestamp
name|t
parameter_list|,
name|String
name|message
parameter_list|,
name|short
name|side
parameter_list|,
name|String
name|commitSHA1
parameter_list|,
name|Status
name|status
parameter_list|)
block|{
name|PatchLineComment
name|comment
init|=
operator|new
name|PatchLineComment
argument_list|(
operator|new
name|PatchLineComment
operator|.
name|Key
argument_list|(
operator|new
name|Patch
operator|.
name|Key
argument_list|(
name|psId
argument_list|,
name|filename
argument_list|)
argument_list|,
name|UUID
argument_list|)
argument_list|,
name|line
argument_list|,
name|commenter
operator|.
name|getAccountId
argument_list|()
argument_list|,
name|parentUUID
argument_list|,
name|t
argument_list|)
decl_stmt|;
name|comment
operator|.
name|setSide
argument_list|(
name|side
argument_list|)
expr_stmt|;
name|comment
operator|.
name|setMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|comment
operator|.
name|setRange
argument_list|(
name|range
argument_list|)
expr_stmt|;
name|comment
operator|.
name|setRevId
argument_list|(
operator|new
name|RevId
argument_list|(
name|commitSHA1
argument_list|)
argument_list|)
expr_stmt|;
name|comment
operator|.
name|setStatus
argument_list|(
name|status
argument_list|)
expr_stmt|;
return|return
name|comment
return|;
block|}
DECL|method|newUpdate (Change c, IdentifiedUser user)
specifier|private
name|ChangeUpdate
name|newUpdate
parameter_list|(
name|Change
name|c
parameter_list|,
name|IdentifiedUser
name|user
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|TestChanges
operator|.
name|newUpdate
argument_list|(
name|injector
argument_list|,
name|repoManager
argument_list|,
name|c
argument_list|,
name|user
argument_list|)
return|;
block|}
DECL|method|newNotes (Change c)
specifier|private
name|ChangeNotes
name|newNotes
parameter_list|(
name|Change
name|c
parameter_list|)
throws|throws
name|OrmException
block|{
return|return
operator|new
name|ChangeNotes
argument_list|(
name|repoManager
argument_list|,
name|c
argument_list|)
operator|.
name|load
argument_list|()
return|;
block|}
DECL|method|truncate (Timestamp ts)
specifier|private
specifier|static
name|Timestamp
name|truncate
parameter_list|(
name|Timestamp
name|ts
parameter_list|)
block|{
return|return
operator|new
name|Timestamp
argument_list|(
operator|(
name|ts
operator|.
name|getTime
argument_list|()
operator|/
literal|1000
operator|)
operator|*
literal|1000
argument_list|)
return|;
block|}
DECL|method|after (Change c, long millis)
specifier|private
specifier|static
name|Timestamp
name|after
parameter_list|(
name|Change
name|c
parameter_list|,
name|long
name|millis
parameter_list|)
block|{
return|return
operator|new
name|Timestamp
argument_list|(
name|c
operator|.
name|getCreatedOn
argument_list|()
operator|.
name|getTime
argument_list|()
operator|+
name|millis
argument_list|)
return|;
block|}
DECL|method|submitRecord (String status, String errorMessage, SubmitRecord.Label... labels)
specifier|private
specifier|static
name|SubmitRecord
name|submitRecord
parameter_list|(
name|String
name|status
parameter_list|,
name|String
name|errorMessage
parameter_list|,
name|SubmitRecord
operator|.
name|Label
modifier|...
name|labels
parameter_list|)
block|{
name|SubmitRecord
name|rec
init|=
operator|new
name|SubmitRecord
argument_list|()
decl_stmt|;
name|rec
operator|.
name|status
operator|=
name|SubmitRecord
operator|.
name|Status
operator|.
name|valueOf
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|rec
operator|.
name|errorMessage
operator|=
name|errorMessage
expr_stmt|;
if|if
condition|(
name|labels
operator|.
name|length
operator|>
literal|0
condition|)
block|{
name|rec
operator|.
name|labels
operator|=
name|ImmutableList
operator|.
name|copyOf
argument_list|(
name|labels
argument_list|)
expr_stmt|;
block|}
return|return
name|rec
return|;
block|}
DECL|method|submitLabel (String name, String status, Account.Id appliedBy)
specifier|private
specifier|static
name|SubmitRecord
operator|.
name|Label
name|submitLabel
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|status
parameter_list|,
name|Account
operator|.
name|Id
name|appliedBy
parameter_list|)
block|{
name|SubmitRecord
operator|.
name|Label
name|label
init|=
operator|new
name|SubmitRecord
operator|.
name|Label
argument_list|()
decl_stmt|;
name|label
operator|.
name|label
operator|=
name|name
expr_stmt|;
name|label
operator|.
name|status
operator|=
name|SubmitRecord
operator|.
name|Label
operator|.
name|Status
operator|.
name|valueOf
argument_list|(
name|status
argument_list|)
expr_stmt|;
name|label
operator|.
name|appliedBy
operator|=
name|appliedBy
expr_stmt|;
return|return
name|label
return|;
block|}
block|}
end_class

end_unit

