begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2010 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.common
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Sets
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ThreadFactoryBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|ContributorAgreement
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|LabelType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|LabelTypes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|LifecycleListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|registration
operator|.
name|DynamicSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|lifecycle
operator|.
name|LifecycleModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Branch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|server
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|CurrentUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AnonymousCowardName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|GerritServerConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|SitePaths
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|data
operator|.
name|ApprovalAttribute
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|events
operator|.
name|ChangeAbandonedEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|events
operator|.
name|ChangeMergedEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|events
operator|.
name|ChangeRestoredEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|events
operator|.
name|CommentAddedEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|events
operator|.
name|DraftPublishedEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|events
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|events
operator|.
name|EventFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|events
operator|.
name|HashtagsChangedEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|events
operator|.
name|MergeFailedEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|events
operator|.
name|PatchSetCreatedEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|events
operator|.
name|RefUpdatedEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|events
operator|.
name|ReviewerAddedEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|events
operator|.
name|TopicChangedEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|GitRepositoryManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|WorkQueue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ProjectCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ProjectControl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ProjectState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|RefUpdate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Callable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|FutureTask
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeoutException
import|;
end_import

begin_comment
comment|/** Spawns local executables when a hook action occurs. */
end_comment

begin_class
annotation|@
name|Singleton
DECL|class|ChangeHookRunner
specifier|public
class|class
name|ChangeHookRunner
implements|implements
name|ChangeHooks
implements|,
name|EventDispatcher
implements|,
name|EventSource
implements|,
name|LifecycleListener
block|{
comment|/** A logger for this class. */
DECL|field|log
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ChangeHookRunner
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|class|Module
specifier|public
specifier|static
class|class
name|Module
extends|extends
name|LifecycleModule
block|{
annotation|@
name|Override
DECL|method|configure ()
specifier|protected
name|void
name|configure
parameter_list|()
block|{
name|bind
argument_list|(
name|ChangeHookRunner
operator|.
name|class
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|ChangeHooks
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ChangeHookRunner
operator|.
name|class
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|EventDispatcher
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ChangeHookRunner
operator|.
name|class
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|EventSource
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ChangeHookRunner
operator|.
name|class
argument_list|)
expr_stmt|;
name|listener
argument_list|()
operator|.
name|to
argument_list|(
name|ChangeHookRunner
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|EventListenerHolder
specifier|private
specifier|static
class|class
name|EventListenerHolder
block|{
DECL|field|listener
specifier|final
name|EventListener
name|listener
decl_stmt|;
DECL|field|user
specifier|final
name|CurrentUser
name|user
decl_stmt|;
DECL|method|EventListenerHolder (EventListener l, CurrentUser u)
name|EventListenerHolder
parameter_list|(
name|EventListener
name|l
parameter_list|,
name|CurrentUser
name|u
parameter_list|)
block|{
name|listener
operator|=
name|l
expr_stmt|;
name|user
operator|=
name|u
expr_stmt|;
block|}
block|}
comment|/** Container class used to hold the return code and output of script hook execution */
DECL|class|HookResult
specifier|public
specifier|static
class|class
name|HookResult
block|{
DECL|field|exitValue
specifier|private
name|int
name|exitValue
init|=
operator|-
literal|1
decl_stmt|;
DECL|field|output
specifier|private
name|String
name|output
decl_stmt|;
DECL|field|executionError
specifier|private
name|String
name|executionError
decl_stmt|;
DECL|method|HookResult (int exitValue, String output)
specifier|private
name|HookResult
parameter_list|(
name|int
name|exitValue
parameter_list|,
name|String
name|output
parameter_list|)
block|{
name|this
operator|.
name|exitValue
operator|=
name|exitValue
expr_stmt|;
name|this
operator|.
name|output
operator|=
name|output
expr_stmt|;
block|}
DECL|method|HookResult (String output, String executionError)
specifier|private
name|HookResult
parameter_list|(
name|String
name|output
parameter_list|,
name|String
name|executionError
parameter_list|)
block|{
name|this
operator|.
name|output
operator|=
name|output
expr_stmt|;
name|this
operator|.
name|executionError
operator|=
name|executionError
expr_stmt|;
block|}
DECL|method|getExitValue ()
specifier|public
name|int
name|getExitValue
parameter_list|()
block|{
return|return
name|exitValue
return|;
block|}
DECL|method|setExitValue (int exitValue)
specifier|public
name|void
name|setExitValue
parameter_list|(
name|int
name|exitValue
parameter_list|)
block|{
name|this
operator|.
name|exitValue
operator|=
name|exitValue
expr_stmt|;
block|}
DECL|method|getOutput ()
specifier|public
name|String
name|getOutput
parameter_list|()
block|{
return|return
name|output
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|output
operator|!=
literal|null
operator|&&
name|output
operator|.
name|length
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|output
argument_list|)
expr_stmt|;
if|if
condition|(
name|executionError
operator|!=
literal|null
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|" - "
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|executionError
operator|!=
literal|null
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|executionError
argument_list|)
expr_stmt|;
block|}
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
comment|/** Listeners to receive changes as they happen (limited by visibility      *  of holder's user). */
DECL|field|listeners
specifier|private
specifier|final
name|Map
argument_list|<
name|EventListener
argument_list|,
name|EventListenerHolder
argument_list|>
name|listeners
init|=
operator|new
name|ConcurrentHashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|/** Listeners to receive all changes as they happen. */
DECL|field|unrestrictedListeners
specifier|private
specifier|final
name|DynamicSet
argument_list|<
name|EventListener
argument_list|>
name|unrestrictedListeners
decl_stmt|;
comment|/** Path of the new patchset hook. */
DECL|field|patchsetCreatedHook
specifier|private
specifier|final
name|Path
name|patchsetCreatedHook
decl_stmt|;
comment|/** Path of the draft published hook. */
DECL|field|draftPublishedHook
specifier|private
specifier|final
name|Path
name|draftPublishedHook
decl_stmt|;
comment|/** Path of the new comments hook. */
DECL|field|commentAddedHook
specifier|private
specifier|final
name|Path
name|commentAddedHook
decl_stmt|;
comment|/** Path of the change merged hook. */
DECL|field|changeMergedHook
specifier|private
specifier|final
name|Path
name|changeMergedHook
decl_stmt|;
comment|/** Path of the merge failed hook. */
DECL|field|mergeFailedHook
specifier|private
specifier|final
name|Path
name|mergeFailedHook
decl_stmt|;
comment|/** Path of the change abandoned hook. */
DECL|field|changeAbandonedHook
specifier|private
specifier|final
name|Path
name|changeAbandonedHook
decl_stmt|;
comment|/** Path of the change restored hook. */
DECL|field|changeRestoredHook
specifier|private
specifier|final
name|Path
name|changeRestoredHook
decl_stmt|;
comment|/** Path of the ref updated hook. */
DECL|field|refUpdatedHook
specifier|private
specifier|final
name|Path
name|refUpdatedHook
decl_stmt|;
comment|/** Path of the reviewer added hook. */
DECL|field|reviewerAddedHook
specifier|private
specifier|final
name|Path
name|reviewerAddedHook
decl_stmt|;
comment|/** Path of the topic changed hook. */
DECL|field|topicChangedHook
specifier|private
specifier|final
name|Path
name|topicChangedHook
decl_stmt|;
comment|/** Path of the cla signed hook. */
DECL|field|claSignedHook
specifier|private
specifier|final
name|Path
name|claSignedHook
decl_stmt|;
comment|/** Path of the update hook. */
DECL|field|refUpdateHook
specifier|private
specifier|final
name|Path
name|refUpdateHook
decl_stmt|;
comment|/** Path of the hashtags changed hook */
DECL|field|hashtagsChangedHook
specifier|private
specifier|final
name|Path
name|hashtagsChangedHook
decl_stmt|;
DECL|field|anonymousCowardName
specifier|private
specifier|final
name|String
name|anonymousCowardName
decl_stmt|;
comment|/** Repository Manager. */
DECL|field|repoManager
specifier|private
specifier|final
name|GitRepositoryManager
name|repoManager
decl_stmt|;
comment|/** Queue of hooks that need to run. */
DECL|field|hookQueue
specifier|private
specifier|final
name|WorkQueue
operator|.
name|Executor
name|hookQueue
decl_stmt|;
DECL|field|projectCache
specifier|private
specifier|final
name|ProjectCache
name|projectCache
decl_stmt|;
DECL|field|accountCache
specifier|private
specifier|final
name|AccountCache
name|accountCache
decl_stmt|;
DECL|field|eventFactory
specifier|private
specifier|final
name|EventFactory
name|eventFactory
decl_stmt|;
DECL|field|sitePaths
specifier|private
specifier|final
name|SitePaths
name|sitePaths
decl_stmt|;
comment|/** Thread pool used to monitor sync hooks */
DECL|field|syncHookThreadPool
specifier|private
specifier|final
name|ExecutorService
name|syncHookThreadPool
decl_stmt|;
comment|/** Timeout value for synchronous hooks */
DECL|field|syncHookTimeout
specifier|private
specifier|final
name|int
name|syncHookTimeout
decl_stmt|;
comment|/**      * Create a new ChangeHookRunner.      *      * @param queue Queue to use when processing hooks.      * @param repoManager The repository manager.      * @param config Config file to use.      * @param sitePath The sitepath of this gerrit install.      * @param projectCache the project cache instance for the server.      */
annotation|@
name|Inject
DECL|method|ChangeHookRunner (WorkQueue queue, GitRepositoryManager repoManager, @GerritServerConfig Config config, @AnonymousCowardName String anonymousCowardName, SitePaths sitePath, ProjectCache projectCache, AccountCache accountCache, EventFactory eventFactory, DynamicSet<EventListener> unrestrictedListeners)
specifier|public
name|ChangeHookRunner
parameter_list|(
name|WorkQueue
name|queue
parameter_list|,
name|GitRepositoryManager
name|repoManager
parameter_list|,
annotation|@
name|GerritServerConfig
name|Config
name|config
parameter_list|,
annotation|@
name|AnonymousCowardName
name|String
name|anonymousCowardName
parameter_list|,
name|SitePaths
name|sitePath
parameter_list|,
name|ProjectCache
name|projectCache
parameter_list|,
name|AccountCache
name|accountCache
parameter_list|,
name|EventFactory
name|eventFactory
parameter_list|,
name|DynamicSet
argument_list|<
name|EventListener
argument_list|>
name|unrestrictedListeners
parameter_list|)
block|{
name|this
operator|.
name|anonymousCowardName
operator|=
name|anonymousCowardName
expr_stmt|;
name|this
operator|.
name|repoManager
operator|=
name|repoManager
expr_stmt|;
name|this
operator|.
name|hookQueue
operator|=
name|queue
operator|.
name|createQueue
argument_list|(
literal|1
argument_list|,
literal|"hook"
argument_list|)
expr_stmt|;
name|this
operator|.
name|projectCache
operator|=
name|projectCache
expr_stmt|;
name|this
operator|.
name|accountCache
operator|=
name|accountCache
expr_stmt|;
name|this
operator|.
name|eventFactory
operator|=
name|eventFactory
expr_stmt|;
name|this
operator|.
name|sitePaths
operator|=
name|sitePath
expr_stmt|;
name|this
operator|.
name|unrestrictedListeners
operator|=
name|unrestrictedListeners
expr_stmt|;
name|Path
name|hooksPath
decl_stmt|;
name|String
name|hooksPathConfig
init|=
name|config
operator|.
name|getString
argument_list|(
literal|"hooks"
argument_list|,
literal|null
argument_list|,
literal|"path"
argument_list|)
decl_stmt|;
if|if
condition|(
name|hooksPathConfig
operator|!=
literal|null
condition|)
block|{
name|hooksPath
operator|=
name|Paths
operator|.
name|get
argument_list|(
name|hooksPathConfig
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|hooksPath
operator|=
name|sitePath
operator|.
name|hooks_dir
expr_stmt|;
block|}
comment|// When adding a new hook, make sure to check that the setting name
comment|// canonicalizes correctly in hook() below.
name|patchsetCreatedHook
operator|=
name|hook
argument_list|(
name|config
argument_list|,
name|hooksPath
argument_list|,
literal|"patchset-created"
argument_list|)
expr_stmt|;
name|draftPublishedHook
operator|=
name|hook
argument_list|(
name|config
argument_list|,
name|hooksPath
argument_list|,
literal|"draft-published"
argument_list|)
expr_stmt|;
name|commentAddedHook
operator|=
name|hook
argument_list|(
name|config
argument_list|,
name|hooksPath
argument_list|,
literal|"comment-added"
argument_list|)
expr_stmt|;
name|changeMergedHook
operator|=
name|hook
argument_list|(
name|config
argument_list|,
name|hooksPath
argument_list|,
literal|"change-merged"
argument_list|)
expr_stmt|;
name|mergeFailedHook
operator|=
name|hook
argument_list|(
name|config
argument_list|,
name|hooksPath
argument_list|,
literal|"merge-failed"
argument_list|)
expr_stmt|;
name|changeAbandonedHook
operator|=
name|hook
argument_list|(
name|config
argument_list|,
name|hooksPath
argument_list|,
literal|"change-abandoned"
argument_list|)
expr_stmt|;
name|changeRestoredHook
operator|=
name|hook
argument_list|(
name|config
argument_list|,
name|hooksPath
argument_list|,
literal|"change-restored"
argument_list|)
expr_stmt|;
name|refUpdatedHook
operator|=
name|hook
argument_list|(
name|config
argument_list|,
name|hooksPath
argument_list|,
literal|"ref-updated"
argument_list|)
expr_stmt|;
name|reviewerAddedHook
operator|=
name|hook
argument_list|(
name|config
argument_list|,
name|hooksPath
argument_list|,
literal|"reviewer-added"
argument_list|)
expr_stmt|;
name|topicChangedHook
operator|=
name|hook
argument_list|(
name|config
argument_list|,
name|hooksPath
argument_list|,
literal|"topic-changed"
argument_list|)
expr_stmt|;
name|claSignedHook
operator|=
name|hook
argument_list|(
name|config
argument_list|,
name|hooksPath
argument_list|,
literal|"cla-signed"
argument_list|)
expr_stmt|;
name|refUpdateHook
operator|=
name|hook
argument_list|(
name|config
argument_list|,
name|hooksPath
argument_list|,
literal|"ref-update"
argument_list|)
expr_stmt|;
name|hashtagsChangedHook
operator|=
name|hook
argument_list|(
name|config
argument_list|,
name|hooksPath
argument_list|,
literal|"hashtags-changed"
argument_list|)
expr_stmt|;
name|syncHookTimeout
operator|=
name|config
operator|.
name|getInt
argument_list|(
literal|"hooks"
argument_list|,
literal|"syncHookTimeout"
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|syncHookThreadPool
operator|=
name|Executors
operator|.
name|newCachedThreadPool
argument_list|(
operator|new
name|ThreadFactoryBuilder
argument_list|()
operator|.
name|setNameFormat
argument_list|(
literal|"SyncHook-%d"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|hook (Config config, Path path, String name)
specifier|private
specifier|static
name|Path
name|hook
parameter_list|(
name|Config
name|config
parameter_list|,
name|Path
name|path
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|String
name|setting
init|=
name|name
operator|.
name|replace
argument_list|(
literal|"-"
argument_list|,
literal|""
argument_list|)
operator|+
literal|"hook"
decl_stmt|;
name|String
name|value
init|=
name|config
operator|.
name|getString
argument_list|(
literal|"hooks"
argument_list|,
literal|null
argument_list|,
name|setting
argument_list|)
decl_stmt|;
return|return
name|path
operator|.
name|resolve
argument_list|(
name|value
operator|!=
literal|null
condition|?
name|value
else|:
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|addEventListener (EventListener listener, CurrentUser user)
specifier|public
name|void
name|addEventListener
parameter_list|(
name|EventListener
name|listener
parameter_list|,
name|CurrentUser
name|user
parameter_list|)
block|{
name|listeners
operator|.
name|put
argument_list|(
name|listener
argument_list|,
operator|new
name|EventListenerHolder
argument_list|(
name|listener
argument_list|,
name|user
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|removeEventListener (EventListener listener)
specifier|public
name|void
name|removeEventListener
parameter_list|(
name|EventListener
name|listener
parameter_list|)
block|{
name|listeners
operator|.
name|remove
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
comment|/**      * Get the Repository for the given project name, or null on error.      *      * @param name Project to get repo for,      * @return Repository or null.      */
DECL|method|openRepository (Project.NameKey name)
specifier|private
name|Repository
name|openRepository
parameter_list|(
name|Project
operator|.
name|NameKey
name|name
parameter_list|)
block|{
try|try
block|{
return|return
name|repoManager
operator|.
name|openRepository
argument_list|(
name|name
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|err
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"Cannot open repository "
operator|+
name|name
operator|.
name|get
argument_list|()
argument_list|,
name|err
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
DECL|method|addArg (List<String> args, String name, String value)
specifier|private
name|void
name|addArg
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|args
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
name|args
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Fire the update hook      *      */
annotation|@
name|Override
DECL|method|doRefUpdateHook (Project project, String refname, Account uploader, ObjectId oldId, ObjectId newId)
specifier|public
name|HookResult
name|doRefUpdateHook
parameter_list|(
name|Project
name|project
parameter_list|,
name|String
name|refname
parameter_list|,
name|Account
name|uploader
parameter_list|,
name|ObjectId
name|oldId
parameter_list|,
name|ObjectId
name|newId
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--project"
argument_list|,
name|project
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--refname"
argument_list|,
name|refname
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--uploader"
argument_list|,
name|getDisplayName
argument_list|(
name|uploader
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--oldrev"
argument_list|,
name|oldId
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--newrev"
argument_list|,
name|newId
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|runSyncHook
argument_list|(
name|project
operator|.
name|getNameKey
argument_list|()
argument_list|,
name|refUpdateHook
argument_list|,
name|args
argument_list|)
return|;
block|}
comment|/**      * Fire the Patchset Created Hook.      *      * @param change The change itself.      * @param patchSet The Patchset that was created.      * @throws OrmException      */
annotation|@
name|Override
DECL|method|doPatchsetCreatedHook (Change change, PatchSet patchSet, ReviewDb db)
specifier|public
name|void
name|doPatchsetCreatedHook
parameter_list|(
name|Change
name|change
parameter_list|,
name|PatchSet
name|patchSet
parameter_list|,
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
name|PatchSetCreatedEvent
name|event
init|=
operator|new
name|PatchSetCreatedEvent
argument_list|()
decl_stmt|;
name|AccountState
name|uploader
init|=
name|accountCache
operator|.
name|get
argument_list|(
name|patchSet
operator|.
name|getUploader
argument_list|()
argument_list|)
decl_stmt|;
name|AccountState
name|owner
init|=
name|accountCache
operator|.
name|get
argument_list|(
name|change
operator|.
name|getOwner
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|eventFactory
operator|.
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|eventFactory
operator|.
name|asPatchSetAttribute
argument_list|(
name|patchSet
argument_list|)
expr_stmt|;
name|event
operator|.
name|uploader
operator|=
name|eventFactory
operator|.
name|asAccountAttribute
argument_list|(
name|uploader
operator|.
name|getAccount
argument_list|()
argument_list|)
expr_stmt|;
name|fireEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|,
name|db
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change"
argument_list|,
name|event
operator|.
name|change
operator|.
name|id
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--is-draft"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|patchSet
operator|.
name|isDraft
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--kind"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|event
operator|.
name|patchSet
operator|.
name|kind
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-url"
argument_list|,
name|event
operator|.
name|change
operator|.
name|url
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-owner"
argument_list|,
name|getDisplayName
argument_list|(
name|owner
operator|.
name|getAccount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--project"
argument_list|,
name|event
operator|.
name|change
operator|.
name|project
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--branch"
argument_list|,
name|event
operator|.
name|change
operator|.
name|branch
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--topic"
argument_list|,
name|event
operator|.
name|change
operator|.
name|topic
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--uploader"
argument_list|,
name|getDisplayName
argument_list|(
name|uploader
operator|.
name|getAccount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--commit"
argument_list|,
name|event
operator|.
name|patchSet
operator|.
name|revision
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--patchset"
argument_list|,
name|event
operator|.
name|patchSet
operator|.
name|number
argument_list|)
expr_stmt|;
name|runHook
argument_list|(
name|change
operator|.
name|getProject
argument_list|()
argument_list|,
name|patchsetCreatedHook
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doDraftPublishedHook (Change change, PatchSet patchSet, ReviewDb db)
specifier|public
name|void
name|doDraftPublishedHook
parameter_list|(
name|Change
name|change
parameter_list|,
name|PatchSet
name|patchSet
parameter_list|,
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
name|DraftPublishedEvent
name|event
init|=
operator|new
name|DraftPublishedEvent
argument_list|()
decl_stmt|;
name|AccountState
name|uploader
init|=
name|accountCache
operator|.
name|get
argument_list|(
name|patchSet
operator|.
name|getUploader
argument_list|()
argument_list|)
decl_stmt|;
name|AccountState
name|owner
init|=
name|accountCache
operator|.
name|get
argument_list|(
name|change
operator|.
name|getOwner
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|eventFactory
operator|.
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|eventFactory
operator|.
name|asPatchSetAttribute
argument_list|(
name|patchSet
argument_list|)
expr_stmt|;
name|event
operator|.
name|uploader
operator|=
name|eventFactory
operator|.
name|asAccountAttribute
argument_list|(
name|uploader
operator|.
name|getAccount
argument_list|()
argument_list|)
expr_stmt|;
name|fireEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|,
name|db
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change"
argument_list|,
name|event
operator|.
name|change
operator|.
name|id
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-url"
argument_list|,
name|event
operator|.
name|change
operator|.
name|url
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-owner"
argument_list|,
name|getDisplayName
argument_list|(
name|owner
operator|.
name|getAccount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--project"
argument_list|,
name|event
operator|.
name|change
operator|.
name|project
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--branch"
argument_list|,
name|event
operator|.
name|change
operator|.
name|branch
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--topic"
argument_list|,
name|event
operator|.
name|change
operator|.
name|topic
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--uploader"
argument_list|,
name|getDisplayName
argument_list|(
name|uploader
operator|.
name|getAccount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--commit"
argument_list|,
name|event
operator|.
name|patchSet
operator|.
name|revision
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--patchset"
argument_list|,
name|event
operator|.
name|patchSet
operator|.
name|number
argument_list|)
expr_stmt|;
name|runHook
argument_list|(
name|change
operator|.
name|getProject
argument_list|()
argument_list|,
name|draftPublishedHook
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doCommentAddedHook (Change change, Account account, PatchSet patchSet, String comment, Map<String, Short> approvals, ReviewDb db)
specifier|public
name|void
name|doCommentAddedHook
parameter_list|(
name|Change
name|change
parameter_list|,
name|Account
name|account
parameter_list|,
name|PatchSet
name|patchSet
parameter_list|,
name|String
name|comment
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Short
argument_list|>
name|approvals
parameter_list|,
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
name|CommentAddedEvent
name|event
init|=
operator|new
name|CommentAddedEvent
argument_list|()
decl_stmt|;
name|AccountState
name|owner
init|=
name|accountCache
operator|.
name|get
argument_list|(
name|change
operator|.
name|getOwner
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|eventFactory
operator|.
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|event
operator|.
name|author
operator|=
name|eventFactory
operator|.
name|asAccountAttribute
argument_list|(
name|account
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|eventFactory
operator|.
name|asPatchSetAttribute
argument_list|(
name|patchSet
argument_list|)
expr_stmt|;
name|event
operator|.
name|comment
operator|=
name|comment
expr_stmt|;
name|LabelTypes
name|labelTypes
init|=
name|projectCache
operator|.
name|get
argument_list|(
name|change
operator|.
name|getProject
argument_list|()
argument_list|)
operator|.
name|getLabelTypes
argument_list|()
decl_stmt|;
if|if
condition|(
name|approvals
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|event
operator|.
name|approvals
operator|=
operator|new
name|ApprovalAttribute
index|[
name|approvals
operator|.
name|size
argument_list|()
index|]
expr_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Short
argument_list|>
name|approval
range|:
name|approvals
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|event
operator|.
name|approvals
index|[
name|i
operator|++
index|]
operator|=
name|getApprovalAttribute
argument_list|(
name|labelTypes
argument_list|,
name|approval
argument_list|)
expr_stmt|;
block|}
block|}
name|fireEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|,
name|db
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change"
argument_list|,
name|event
operator|.
name|change
operator|.
name|id
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--is-draft"
argument_list|,
name|patchSet
operator|.
name|isDraft
argument_list|()
condition|?
literal|"true"
else|:
literal|"false"
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-url"
argument_list|,
name|event
operator|.
name|change
operator|.
name|url
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-owner"
argument_list|,
name|getDisplayName
argument_list|(
name|owner
operator|.
name|getAccount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--project"
argument_list|,
name|event
operator|.
name|change
operator|.
name|project
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--branch"
argument_list|,
name|event
operator|.
name|change
operator|.
name|branch
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--topic"
argument_list|,
name|event
operator|.
name|change
operator|.
name|topic
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--author"
argument_list|,
name|getDisplayName
argument_list|(
name|account
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--commit"
argument_list|,
name|event
operator|.
name|patchSet
operator|.
name|revision
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--comment"
argument_list|,
name|comment
operator|==
literal|null
condition|?
literal|""
else|:
name|comment
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Short
argument_list|>
name|approval
range|:
name|approvals
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|LabelType
name|lt
init|=
name|labelTypes
operator|.
name|byLabel
argument_list|(
name|approval
operator|.
name|getKey
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|lt
operator|!=
literal|null
condition|)
block|{
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--"
operator|+
name|lt
operator|.
name|getName
argument_list|()
argument_list|,
name|Short
operator|.
name|toString
argument_list|(
name|approval
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|runHook
argument_list|(
name|change
operator|.
name|getProject
argument_list|()
argument_list|,
name|commentAddedHook
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doChangeMergedHook (Change change, Account account, PatchSet patchSet, ReviewDb db, String mergeResultRev)
specifier|public
name|void
name|doChangeMergedHook
parameter_list|(
name|Change
name|change
parameter_list|,
name|Account
name|account
parameter_list|,
name|PatchSet
name|patchSet
parameter_list|,
name|ReviewDb
name|db
parameter_list|,
name|String
name|mergeResultRev
parameter_list|)
throws|throws
name|OrmException
block|{
name|ChangeMergedEvent
name|event
init|=
operator|new
name|ChangeMergedEvent
argument_list|()
decl_stmt|;
name|AccountState
name|owner
init|=
name|accountCache
operator|.
name|get
argument_list|(
name|change
operator|.
name|getOwner
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|eventFactory
operator|.
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|event
operator|.
name|submitter
operator|=
name|eventFactory
operator|.
name|asAccountAttribute
argument_list|(
name|account
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|eventFactory
operator|.
name|asPatchSetAttribute
argument_list|(
name|patchSet
argument_list|)
expr_stmt|;
name|event
operator|.
name|newRev
operator|=
name|mergeResultRev
expr_stmt|;
name|fireEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|,
name|db
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change"
argument_list|,
name|event
operator|.
name|change
operator|.
name|id
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-url"
argument_list|,
name|event
operator|.
name|change
operator|.
name|url
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-owner"
argument_list|,
name|getDisplayName
argument_list|(
name|owner
operator|.
name|getAccount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--project"
argument_list|,
name|event
operator|.
name|change
operator|.
name|project
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--branch"
argument_list|,
name|event
operator|.
name|change
operator|.
name|branch
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--topic"
argument_list|,
name|event
operator|.
name|change
operator|.
name|topic
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--submitter"
argument_list|,
name|getDisplayName
argument_list|(
name|account
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--commit"
argument_list|,
name|event
operator|.
name|patchSet
operator|.
name|revision
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--newrev"
argument_list|,
name|mergeResultRev
argument_list|)
expr_stmt|;
name|runHook
argument_list|(
name|change
operator|.
name|getProject
argument_list|()
argument_list|,
name|changeMergedHook
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doMergeFailedHook (Change change, Account account, PatchSet patchSet, String reason, ReviewDb db)
specifier|public
name|void
name|doMergeFailedHook
parameter_list|(
name|Change
name|change
parameter_list|,
name|Account
name|account
parameter_list|,
name|PatchSet
name|patchSet
parameter_list|,
name|String
name|reason
parameter_list|,
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
name|MergeFailedEvent
name|event
init|=
operator|new
name|MergeFailedEvent
argument_list|()
decl_stmt|;
name|AccountState
name|owner
init|=
name|accountCache
operator|.
name|get
argument_list|(
name|change
operator|.
name|getOwner
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|eventFactory
operator|.
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|event
operator|.
name|submitter
operator|=
name|eventFactory
operator|.
name|asAccountAttribute
argument_list|(
name|account
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|eventFactory
operator|.
name|asPatchSetAttribute
argument_list|(
name|patchSet
argument_list|)
expr_stmt|;
name|event
operator|.
name|reason
operator|=
name|reason
expr_stmt|;
name|fireEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|,
name|db
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change"
argument_list|,
name|event
operator|.
name|change
operator|.
name|id
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-url"
argument_list|,
name|event
operator|.
name|change
operator|.
name|url
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-owner"
argument_list|,
name|getDisplayName
argument_list|(
name|owner
operator|.
name|getAccount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--project"
argument_list|,
name|event
operator|.
name|change
operator|.
name|project
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--branch"
argument_list|,
name|event
operator|.
name|change
operator|.
name|branch
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--topic"
argument_list|,
name|event
operator|.
name|change
operator|.
name|topic
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--submitter"
argument_list|,
name|getDisplayName
argument_list|(
name|account
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--commit"
argument_list|,
name|event
operator|.
name|patchSet
operator|.
name|revision
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--reason"
argument_list|,
name|reason
operator|==
literal|null
condition|?
literal|""
else|:
name|reason
argument_list|)
expr_stmt|;
name|runHook
argument_list|(
name|change
operator|.
name|getProject
argument_list|()
argument_list|,
name|mergeFailedHook
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doChangeAbandonedHook (Change change, Account account, PatchSet patchSet, String reason, ReviewDb db)
specifier|public
name|void
name|doChangeAbandonedHook
parameter_list|(
name|Change
name|change
parameter_list|,
name|Account
name|account
parameter_list|,
name|PatchSet
name|patchSet
parameter_list|,
name|String
name|reason
parameter_list|,
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
name|ChangeAbandonedEvent
name|event
init|=
operator|new
name|ChangeAbandonedEvent
argument_list|()
decl_stmt|;
name|AccountState
name|owner
init|=
name|accountCache
operator|.
name|get
argument_list|(
name|change
operator|.
name|getOwner
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|eventFactory
operator|.
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|event
operator|.
name|abandoner
operator|=
name|eventFactory
operator|.
name|asAccountAttribute
argument_list|(
name|account
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|eventFactory
operator|.
name|asPatchSetAttribute
argument_list|(
name|patchSet
argument_list|)
expr_stmt|;
name|event
operator|.
name|reason
operator|=
name|reason
expr_stmt|;
name|fireEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|,
name|db
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change"
argument_list|,
name|event
operator|.
name|change
operator|.
name|id
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-url"
argument_list|,
name|event
operator|.
name|change
operator|.
name|url
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-owner"
argument_list|,
name|getDisplayName
argument_list|(
name|owner
operator|.
name|getAccount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--project"
argument_list|,
name|event
operator|.
name|change
operator|.
name|project
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--branch"
argument_list|,
name|event
operator|.
name|change
operator|.
name|branch
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--topic"
argument_list|,
name|event
operator|.
name|change
operator|.
name|topic
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--abandoner"
argument_list|,
name|getDisplayName
argument_list|(
name|account
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--commit"
argument_list|,
name|event
operator|.
name|patchSet
operator|.
name|revision
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--reason"
argument_list|,
name|reason
operator|==
literal|null
condition|?
literal|""
else|:
name|reason
argument_list|)
expr_stmt|;
name|runHook
argument_list|(
name|change
operator|.
name|getProject
argument_list|()
argument_list|,
name|changeAbandonedHook
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doChangeRestoredHook (Change change, Account account, PatchSet patchSet, String reason, ReviewDb db)
specifier|public
name|void
name|doChangeRestoredHook
parameter_list|(
name|Change
name|change
parameter_list|,
name|Account
name|account
parameter_list|,
name|PatchSet
name|patchSet
parameter_list|,
name|String
name|reason
parameter_list|,
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
name|ChangeRestoredEvent
name|event
init|=
operator|new
name|ChangeRestoredEvent
argument_list|()
decl_stmt|;
name|AccountState
name|owner
init|=
name|accountCache
operator|.
name|get
argument_list|(
name|change
operator|.
name|getOwner
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|eventFactory
operator|.
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|event
operator|.
name|restorer
operator|=
name|eventFactory
operator|.
name|asAccountAttribute
argument_list|(
name|account
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|eventFactory
operator|.
name|asPatchSetAttribute
argument_list|(
name|patchSet
argument_list|)
expr_stmt|;
name|event
operator|.
name|reason
operator|=
name|reason
expr_stmt|;
name|fireEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|,
name|db
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change"
argument_list|,
name|event
operator|.
name|change
operator|.
name|id
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-url"
argument_list|,
name|event
operator|.
name|change
operator|.
name|url
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-owner"
argument_list|,
name|getDisplayName
argument_list|(
name|owner
operator|.
name|getAccount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--project"
argument_list|,
name|event
operator|.
name|change
operator|.
name|project
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--branch"
argument_list|,
name|event
operator|.
name|change
operator|.
name|branch
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--topic"
argument_list|,
name|event
operator|.
name|change
operator|.
name|topic
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--restorer"
argument_list|,
name|getDisplayName
argument_list|(
name|account
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--commit"
argument_list|,
name|event
operator|.
name|patchSet
operator|.
name|revision
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--reason"
argument_list|,
name|reason
operator|==
literal|null
condition|?
literal|""
else|:
name|reason
argument_list|)
expr_stmt|;
name|runHook
argument_list|(
name|change
operator|.
name|getProject
argument_list|()
argument_list|,
name|changeRestoredHook
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doRefUpdatedHook (Branch.NameKey refName, RefUpdate refUpdate, Account account)
specifier|public
name|void
name|doRefUpdatedHook
parameter_list|(
name|Branch
operator|.
name|NameKey
name|refName
parameter_list|,
name|RefUpdate
name|refUpdate
parameter_list|,
name|Account
name|account
parameter_list|)
block|{
name|doRefUpdatedHook
argument_list|(
name|refName
argument_list|,
name|refUpdate
operator|.
name|getOldObjectId
argument_list|()
argument_list|,
name|refUpdate
operator|.
name|getNewObjectId
argument_list|()
argument_list|,
name|account
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doRefUpdatedHook (Branch.NameKey refName, ObjectId oldId, ObjectId newId, Account account)
specifier|public
name|void
name|doRefUpdatedHook
parameter_list|(
name|Branch
operator|.
name|NameKey
name|refName
parameter_list|,
name|ObjectId
name|oldId
parameter_list|,
name|ObjectId
name|newId
parameter_list|,
name|Account
name|account
parameter_list|)
block|{
name|RefUpdatedEvent
name|event
init|=
operator|new
name|RefUpdatedEvent
argument_list|()
decl_stmt|;
if|if
condition|(
name|account
operator|!=
literal|null
condition|)
block|{
name|event
operator|.
name|submitter
operator|=
name|eventFactory
operator|.
name|asAccountAttribute
argument_list|(
name|account
argument_list|)
expr_stmt|;
block|}
name|event
operator|.
name|refUpdate
operator|=
name|eventFactory
operator|.
name|asRefUpdateAttribute
argument_list|(
name|oldId
argument_list|,
name|newId
argument_list|,
name|refName
argument_list|)
expr_stmt|;
name|fireEvent
argument_list|(
name|refName
argument_list|,
name|event
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--oldrev"
argument_list|,
name|event
operator|.
name|refUpdate
operator|.
name|oldRev
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--newrev"
argument_list|,
name|event
operator|.
name|refUpdate
operator|.
name|newRev
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--refname"
argument_list|,
name|event
operator|.
name|refUpdate
operator|.
name|refName
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--project"
argument_list|,
name|event
operator|.
name|refUpdate
operator|.
name|project
argument_list|)
expr_stmt|;
if|if
condition|(
name|account
operator|!=
literal|null
condition|)
block|{
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--submitter"
argument_list|,
name|getDisplayName
argument_list|(
name|account
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|runHook
argument_list|(
name|refName
operator|.
name|getParentKey
argument_list|()
argument_list|,
name|refUpdatedHook
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doReviewerAddedHook (Change change, Account account, PatchSet patchSet, ReviewDb db)
specifier|public
name|void
name|doReviewerAddedHook
parameter_list|(
name|Change
name|change
parameter_list|,
name|Account
name|account
parameter_list|,
name|PatchSet
name|patchSet
parameter_list|,
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
name|ReviewerAddedEvent
name|event
init|=
operator|new
name|ReviewerAddedEvent
argument_list|()
decl_stmt|;
name|AccountState
name|owner
init|=
name|accountCache
operator|.
name|get
argument_list|(
name|change
operator|.
name|getOwner
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|eventFactory
operator|.
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|event
operator|.
name|patchSet
operator|=
name|eventFactory
operator|.
name|asPatchSetAttribute
argument_list|(
name|patchSet
argument_list|)
expr_stmt|;
name|event
operator|.
name|reviewer
operator|=
name|eventFactory
operator|.
name|asAccountAttribute
argument_list|(
name|account
argument_list|)
expr_stmt|;
name|fireEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|,
name|db
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change"
argument_list|,
name|event
operator|.
name|change
operator|.
name|id
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-url"
argument_list|,
name|event
operator|.
name|change
operator|.
name|url
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-owner"
argument_list|,
name|getDisplayName
argument_list|(
name|owner
operator|.
name|getAccount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--project"
argument_list|,
name|event
operator|.
name|change
operator|.
name|project
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--branch"
argument_list|,
name|event
operator|.
name|change
operator|.
name|branch
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--reviewer"
argument_list|,
name|getDisplayName
argument_list|(
name|account
argument_list|)
argument_list|)
expr_stmt|;
name|runHook
argument_list|(
name|change
operator|.
name|getProject
argument_list|()
argument_list|,
name|reviewerAddedHook
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doTopicChangedHook (Change change, Account account, String oldTopic, ReviewDb db)
specifier|public
name|void
name|doTopicChangedHook
parameter_list|(
name|Change
name|change
parameter_list|,
name|Account
name|account
parameter_list|,
name|String
name|oldTopic
parameter_list|,
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
name|TopicChangedEvent
name|event
init|=
operator|new
name|TopicChangedEvent
argument_list|()
decl_stmt|;
name|AccountState
name|owner
init|=
name|accountCache
operator|.
name|get
argument_list|(
name|change
operator|.
name|getOwner
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|eventFactory
operator|.
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|event
operator|.
name|changer
operator|=
name|eventFactory
operator|.
name|asAccountAttribute
argument_list|(
name|account
argument_list|)
expr_stmt|;
name|event
operator|.
name|oldTopic
operator|=
name|oldTopic
expr_stmt|;
name|fireEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|,
name|db
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change"
argument_list|,
name|event
operator|.
name|change
operator|.
name|id
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-owner"
argument_list|,
name|getDisplayName
argument_list|(
name|owner
operator|.
name|getAccount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--project"
argument_list|,
name|event
operator|.
name|change
operator|.
name|project
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--branch"
argument_list|,
name|event
operator|.
name|change
operator|.
name|branch
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--changer"
argument_list|,
name|getDisplayName
argument_list|(
name|account
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--old-topic"
argument_list|,
name|oldTopic
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--new-topic"
argument_list|,
name|event
operator|.
name|change
operator|.
name|topic
argument_list|)
expr_stmt|;
name|runHook
argument_list|(
name|change
operator|.
name|getProject
argument_list|()
argument_list|,
name|topicChangedHook
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
DECL|method|hashtagArray (Set<String> hashtags)
name|String
index|[]
name|hashtagArray
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|hashtags
parameter_list|)
block|{
if|if
condition|(
name|hashtags
operator|!=
literal|null
operator|&&
name|hashtags
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
return|return
name|Sets
operator|.
name|newHashSet
argument_list|(
name|hashtags
argument_list|)
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|hashtags
operator|.
name|size
argument_list|()
index|]
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|doHashtagsChangedHook (Change change, Account account, Set<String> added, Set<String> removed, Set<String> hashtags, ReviewDb db)
specifier|public
name|void
name|doHashtagsChangedHook
parameter_list|(
name|Change
name|change
parameter_list|,
name|Account
name|account
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|added
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|removed
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|hashtags
parameter_list|,
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
name|HashtagsChangedEvent
name|event
init|=
operator|new
name|HashtagsChangedEvent
argument_list|()
decl_stmt|;
name|AccountState
name|owner
init|=
name|accountCache
operator|.
name|get
argument_list|(
name|change
operator|.
name|getOwner
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|change
operator|=
name|eventFactory
operator|.
name|asChangeAttribute
argument_list|(
name|change
argument_list|)
expr_stmt|;
name|event
operator|.
name|editor
operator|=
name|eventFactory
operator|.
name|asAccountAttribute
argument_list|(
name|account
argument_list|)
expr_stmt|;
name|event
operator|.
name|hashtags
operator|=
name|hashtagArray
argument_list|(
name|hashtags
argument_list|)
expr_stmt|;
name|event
operator|.
name|added
operator|=
name|hashtagArray
argument_list|(
name|added
argument_list|)
expr_stmt|;
name|event
operator|.
name|removed
operator|=
name|hashtagArray
argument_list|(
name|removed
argument_list|)
expr_stmt|;
name|fireEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|,
name|db
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change"
argument_list|,
name|event
operator|.
name|change
operator|.
name|id
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--change-owner"
argument_list|,
name|getDisplayName
argument_list|(
name|owner
operator|.
name|getAccount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--project"
argument_list|,
name|event
operator|.
name|change
operator|.
name|project
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--branch"
argument_list|,
name|event
operator|.
name|change
operator|.
name|branch
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--editor"
argument_list|,
name|getDisplayName
argument_list|(
name|account
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|hashtags
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|String
name|hashtag
range|:
name|hashtags
control|)
block|{
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--hashtag"
argument_list|,
name|hashtag
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|added
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|String
name|hashtag
range|:
name|added
control|)
block|{
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--added"
argument_list|,
name|hashtag
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|removed
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|String
name|hashtag
range|:
name|removed
control|)
block|{
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--removed"
argument_list|,
name|hashtag
argument_list|)
expr_stmt|;
block|}
block|}
name|runHook
argument_list|(
name|change
operator|.
name|getProject
argument_list|()
argument_list|,
name|hashtagsChangedHook
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doClaSignupHook (Account account, ContributorAgreement cla)
specifier|public
name|void
name|doClaSignupHook
parameter_list|(
name|Account
name|account
parameter_list|,
name|ContributorAgreement
name|cla
parameter_list|)
block|{
if|if
condition|(
name|account
operator|!=
literal|null
condition|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--submitter"
argument_list|,
name|getDisplayName
argument_list|(
name|account
argument_list|)
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--user-id"
argument_list|,
name|account
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|addArg
argument_list|(
name|args
argument_list|,
literal|"--cla-name"
argument_list|,
name|cla
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|runHook
argument_list|(
name|claSignedHook
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|postEvent (Change change, Event event, ReviewDb db)
specifier|public
name|void
name|postEvent
parameter_list|(
name|Change
name|change
parameter_list|,
name|Event
name|event
parameter_list|,
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
name|fireEvent
argument_list|(
name|change
argument_list|,
name|event
argument_list|,
name|db
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|postEvent (Branch.NameKey branchName, Event event)
specifier|public
name|void
name|postEvent
parameter_list|(
name|Branch
operator|.
name|NameKey
name|branchName
parameter_list|,
name|Event
name|event
parameter_list|)
block|{
name|fireEvent
argument_list|(
name|branchName
argument_list|,
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|fireEventForUnrestrictedListeners (Event event)
specifier|private
name|void
name|fireEventForUnrestrictedListeners
parameter_list|(
name|Event
name|event
parameter_list|)
block|{
for|for
control|(
name|EventListener
name|listener
range|:
name|unrestrictedListeners
control|)
block|{
name|listener
operator|.
name|onEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|fireEvent (Change change, Event event, ReviewDb db)
specifier|private
name|void
name|fireEvent
parameter_list|(
name|Change
name|change
parameter_list|,
name|Event
name|event
parameter_list|,
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
for|for
control|(
name|EventListenerHolder
name|holder
range|:
name|listeners
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|isVisibleTo
argument_list|(
name|change
argument_list|,
name|holder
operator|.
name|user
argument_list|,
name|db
argument_list|)
condition|)
block|{
name|holder
operator|.
name|listener
operator|.
name|onEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
name|fireEventForUnrestrictedListeners
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|fireEvent (Branch.NameKey branchName, Event event)
specifier|private
name|void
name|fireEvent
parameter_list|(
name|Branch
operator|.
name|NameKey
name|branchName
parameter_list|,
name|Event
name|event
parameter_list|)
block|{
for|for
control|(
name|EventListenerHolder
name|holder
range|:
name|listeners
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|isVisibleTo
argument_list|(
name|branchName
argument_list|,
name|holder
operator|.
name|user
argument_list|)
condition|)
block|{
name|holder
operator|.
name|listener
operator|.
name|onEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
name|fireEventForUnrestrictedListeners
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
DECL|method|isVisibleTo (Change change, CurrentUser user, ReviewDb db)
specifier|private
name|boolean
name|isVisibleTo
parameter_list|(
name|Change
name|change
parameter_list|,
name|CurrentUser
name|user
parameter_list|,
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
name|ProjectState
name|pe
init|=
name|projectCache
operator|.
name|get
argument_list|(
name|change
operator|.
name|getProject
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|pe
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
name|ProjectControl
name|pc
init|=
name|pe
operator|.
name|controlFor
argument_list|(
name|user
argument_list|)
decl_stmt|;
return|return
name|pc
operator|.
name|controlFor
argument_list|(
name|change
argument_list|)
operator|.
name|isVisible
argument_list|(
name|db
argument_list|)
return|;
block|}
DECL|method|isVisibleTo (Branch.NameKey branchName, CurrentUser user)
specifier|private
name|boolean
name|isVisibleTo
parameter_list|(
name|Branch
operator|.
name|NameKey
name|branchName
parameter_list|,
name|CurrentUser
name|user
parameter_list|)
block|{
name|ProjectState
name|pe
init|=
name|projectCache
operator|.
name|get
argument_list|(
name|branchName
operator|.
name|getParentKey
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|pe
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
name|ProjectControl
name|pc
init|=
name|pe
operator|.
name|controlFor
argument_list|(
name|user
argument_list|)
decl_stmt|;
return|return
name|pc
operator|.
name|controlForRef
argument_list|(
name|branchName
argument_list|)
operator|.
name|isVisible
argument_list|()
return|;
block|}
comment|/**      * Create an ApprovalAttribute for the given approval suitable for serialization to JSON.      * @param approval      * @return object suitable for serialization to JSON      */
DECL|method|getApprovalAttribute (LabelTypes labelTypes, Entry<String, Short> approval)
specifier|private
name|ApprovalAttribute
name|getApprovalAttribute
parameter_list|(
name|LabelTypes
name|labelTypes
parameter_list|,
name|Entry
argument_list|<
name|String
argument_list|,
name|Short
argument_list|>
name|approval
parameter_list|)
block|{
name|ApprovalAttribute
name|a
init|=
operator|new
name|ApprovalAttribute
argument_list|()
decl_stmt|;
name|a
operator|.
name|type
operator|=
name|approval
operator|.
name|getKey
argument_list|()
expr_stmt|;
name|LabelType
name|lt
init|=
name|labelTypes
operator|.
name|byLabel
argument_list|(
name|approval
operator|.
name|getKey
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|lt
operator|!=
literal|null
condition|)
block|{
name|a
operator|.
name|description
operator|=
name|lt
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
name|a
operator|.
name|value
operator|=
name|Short
operator|.
name|toString
argument_list|(
name|approval
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|a
return|;
block|}
comment|/**      * Get the display name for the given account.      *      * @param account Account to get name for.      * @return Name for this account.      */
DECL|method|getDisplayName (Account account)
specifier|private
name|String
name|getDisplayName
parameter_list|(
name|Account
name|account
parameter_list|)
block|{
if|if
condition|(
name|account
operator|!=
literal|null
condition|)
block|{
name|String
name|result
init|=
operator|(
name|account
operator|.
name|getFullName
argument_list|()
operator|==
literal|null
operator|)
condition|?
name|anonymousCowardName
else|:
name|account
operator|.
name|getFullName
argument_list|()
decl_stmt|;
if|if
condition|(
name|account
operator|.
name|getPreferredEmail
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|result
operator|+=
literal|" ("
operator|+
name|account
operator|.
name|getPreferredEmail
argument_list|()
operator|+
literal|")"
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
return|return
name|anonymousCowardName
return|;
block|}
comment|/**    * Run a hook.    *    * @param project used to open repository to run the hook for.    * @param hook the hook to execute.    * @param args Arguments to use to run the hook.    */
DECL|method|runHook (Project.NameKey project, Path hook, List<String> args)
specifier|private
specifier|synchronized
name|void
name|runHook
parameter_list|(
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|Path
name|hook
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|args
parameter_list|)
block|{
if|if
condition|(
name|project
operator|!=
literal|null
operator|&&
name|Files
operator|.
name|exists
argument_list|(
name|hook
argument_list|)
condition|)
block|{
name|hookQueue
operator|.
name|execute
argument_list|(
operator|new
name|AsyncHookTask
argument_list|(
name|project
argument_list|,
name|hook
argument_list|,
name|args
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|runHook (Path hook, List<String> args)
specifier|private
specifier|synchronized
name|void
name|runHook
parameter_list|(
name|Path
name|hook
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|args
parameter_list|)
block|{
if|if
condition|(
name|Files
operator|.
name|exists
argument_list|(
name|hook
argument_list|)
condition|)
block|{
name|hookQueue
operator|.
name|execute
argument_list|(
operator|new
name|AsyncHookTask
argument_list|(
literal|null
argument_list|,
name|hook
argument_list|,
name|args
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|runSyncHook (Project.NameKey project, Path hook, List<String> args)
specifier|private
name|HookResult
name|runSyncHook
parameter_list|(
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|Path
name|hook
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|args
parameter_list|)
block|{
if|if
condition|(
operator|!
name|Files
operator|.
name|exists
argument_list|(
name|hook
argument_list|)
condition|)
block|{
return|return
literal|null
return|;
block|}
name|SyncHookTask
name|syncHook
init|=
operator|new
name|SyncHookTask
argument_list|(
name|project
argument_list|,
name|hook
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|FutureTask
argument_list|<
name|HookResult
argument_list|>
name|task
init|=
operator|new
name|FutureTask
argument_list|<>
argument_list|(
name|syncHook
argument_list|)
decl_stmt|;
name|syncHookThreadPool
operator|.
name|execute
argument_list|(
name|task
argument_list|)
expr_stmt|;
name|String
name|message
decl_stmt|;
try|try
block|{
return|return
name|task
operator|.
name|get
argument_list|(
name|syncHookTimeout
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TimeoutException
name|e
parameter_list|)
block|{
name|message
operator|=
literal|"Synchronous hook timed out "
operator|+
name|hook
operator|.
name|toAbsolutePath
argument_list|()
expr_stmt|;
name|log
operator|.
name|error
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|message
operator|=
literal|"Error running hook "
operator|+
name|hook
operator|.
name|toAbsolutePath
argument_list|()
expr_stmt|;
name|log
operator|.
name|error
argument_list|(
name|message
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
name|task
operator|.
name|cancel
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|syncHook
operator|.
name|cancel
argument_list|()
expr_stmt|;
return|return
operator|new
name|HookResult
argument_list|(
name|syncHook
operator|.
name|getOutput
argument_list|()
argument_list|,
name|message
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|start ()
specifier|public
name|void
name|start
parameter_list|()
block|{   }
annotation|@
name|Override
DECL|method|stop ()
specifier|public
name|void
name|stop
parameter_list|()
block|{
name|syncHookThreadPool
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|boolean
name|isTerminated
decl_stmt|;
do|do
block|{
try|try
block|{
name|isTerminated
operator|=
name|syncHookThreadPool
operator|.
name|awaitTermination
argument_list|(
literal|10
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|ie
parameter_list|)
block|{
name|isTerminated
operator|=
literal|false
expr_stmt|;
block|}
block|}
do|while
condition|(
operator|!
name|isTerminated
condition|)
do|;
block|}
DECL|class|HookTask
specifier|private
class|class
name|HookTask
block|{
DECL|field|project
specifier|private
specifier|final
name|Project
operator|.
name|NameKey
name|project
decl_stmt|;
DECL|field|hook
specifier|private
specifier|final
name|Path
name|hook
decl_stmt|;
DECL|field|args
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|args
decl_stmt|;
DECL|field|output
specifier|private
name|StringWriter
name|output
decl_stmt|;
DECL|field|ps
specifier|private
name|Process
name|ps
decl_stmt|;
DECL|method|HookTask (Project.NameKey project, Path hook, List<String> args)
specifier|protected
name|HookTask
parameter_list|(
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|Path
name|hook
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|args
parameter_list|)
block|{
name|this
operator|.
name|project
operator|=
name|project
expr_stmt|;
name|this
operator|.
name|hook
operator|=
name|hook
expr_stmt|;
name|this
operator|.
name|args
operator|=
name|args
expr_stmt|;
block|}
DECL|method|getOutput ()
specifier|public
name|String
name|getOutput
parameter_list|()
block|{
return|return
name|output
operator|!=
literal|null
condition|?
name|output
operator|.
name|toString
argument_list|()
else|:
literal|null
return|;
block|}
DECL|method|runHook ()
specifier|protected
name|HookResult
name|runHook
parameter_list|()
block|{
name|Repository
name|repo
init|=
literal|null
decl_stmt|;
name|HookResult
name|result
init|=
literal|null
decl_stmt|;
try|try
block|{
name|List
argument_list|<
name|String
argument_list|>
name|argv
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|1
operator|+
name|args
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|argv
operator|.
name|add
argument_list|(
name|hook
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|argv
operator|.
name|addAll
argument_list|(
name|args
argument_list|)
expr_stmt|;
name|ProcessBuilder
name|pb
init|=
operator|new
name|ProcessBuilder
argument_list|(
name|argv
argument_list|)
decl_stmt|;
name|pb
operator|.
name|redirectErrorStream
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|project
operator|!=
literal|null
condition|)
block|{
name|repo
operator|=
name|openRepository
argument_list|(
name|project
argument_list|)
expr_stmt|;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|env
init|=
name|pb
operator|.
name|environment
argument_list|()
decl_stmt|;
name|env
operator|.
name|put
argument_list|(
literal|"GERRIT_SITE"
argument_list|,
name|sitePaths
operator|.
name|site_path
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|repo
operator|!=
literal|null
condition|)
block|{
name|pb
operator|.
name|directory
argument_list|(
name|repo
operator|.
name|getDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|env
operator|.
name|put
argument_list|(
literal|"GIT_DIR"
argument_list|,
name|repo
operator|.
name|getDirectory
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ps
operator|=
name|pb
operator|.
name|start
argument_list|()
expr_stmt|;
name|ps
operator|.
name|getOutputStream
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
name|InputStream
name|is
init|=
name|ps
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
name|String
name|output
init|=
literal|null
decl_stmt|;
try|try
block|{
name|output
operator|=
name|readOutput
argument_list|(
name|is
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
try|try
block|{
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|closeErr
parameter_list|)
block|{           }
name|ps
operator|.
name|waitFor
argument_list|()
expr_stmt|;
name|result
operator|=
operator|new
name|HookResult
argument_list|(
name|ps
operator|.
name|exitValue
argument_list|()
argument_list|,
name|output
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|iex
parameter_list|)
block|{
comment|// InterruptedExeception - timeout or cancel
block|}
catch|catch
parameter_list|(
name|Throwable
name|err
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Error running hook "
operator|+
name|hook
operator|.
name|toAbsolutePath
argument_list|()
argument_list|,
name|err
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|repo
operator|!=
literal|null
condition|)
block|{
name|repo
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
block|{
name|int
name|exitValue
init|=
name|result
operator|.
name|getExitValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|exitValue
operator|==
literal|0
condition|)
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"hook["
operator|+
name|getName
argument_list|()
operator|+
literal|"] exitValue:"
operator|+
name|exitValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|log
operator|.
name|info
argument_list|(
literal|"hook["
operator|+
name|getName
argument_list|()
operator|+
literal|"] exitValue:"
operator|+
name|exitValue
argument_list|)
expr_stmt|;
block|}
name|BufferedReader
name|br
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|StringReader
argument_list|(
name|result
operator|.
name|getOutput
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|String
name|line
decl_stmt|;
while|while
condition|(
operator|(
name|line
operator|=
name|br
operator|.
name|readLine
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"hook["
operator|+
name|getName
argument_list|()
operator|+
literal|"] output: "
operator|+
name|line
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|iox
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Error writing hook output"
argument_list|,
name|iox
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|result
return|;
block|}
DECL|method|readOutput (InputStream is)
specifier|private
name|String
name|readOutput
parameter_list|(
name|InputStream
name|is
parameter_list|)
throws|throws
name|IOException
block|{
name|output
operator|=
operator|new
name|StringWriter
argument_list|()
expr_stmt|;
name|InputStreamReader
name|input
init|=
operator|new
name|InputStreamReader
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|char
index|[]
name|buffer
init|=
operator|new
name|char
index|[
literal|4096
index|]
decl_stmt|;
name|int
name|n
decl_stmt|;
while|while
condition|(
operator|(
name|n
operator|=
name|input
operator|.
name|read
argument_list|(
name|buffer
argument_list|)
operator|)
operator|!=
operator|-
literal|1
condition|)
block|{
name|output
operator|.
name|write
argument_list|(
name|buffer
argument_list|,
literal|0
argument_list|,
name|n
argument_list|)
expr_stmt|;
block|}
return|return
name|output
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|getName ()
specifier|protected
name|String
name|getName
parameter_list|()
block|{
return|return
name|hook
operator|.
name|getFileName
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"hook "
operator|+
name|hook
operator|.
name|getFileName
argument_list|()
return|;
block|}
DECL|method|cancel ()
specifier|public
name|void
name|cancel
parameter_list|()
block|{
name|ps
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
block|}
comment|/** Callable type used to run synchronous hooks */
DECL|class|SyncHookTask
specifier|private
specifier|final
class|class
name|SyncHookTask
extends|extends
name|HookTask
implements|implements
name|Callable
argument_list|<
name|HookResult
argument_list|>
block|{
DECL|method|SyncHookTask (Project.NameKey project, Path hook, List<String> args)
specifier|private
name|SyncHookTask
parameter_list|(
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|Path
name|hook
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|args
parameter_list|)
block|{
name|super
argument_list|(
name|project
argument_list|,
name|hook
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|call ()
specifier|public
name|HookResult
name|call
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|super
operator|.
name|runHook
argument_list|()
return|;
block|}
block|}
comment|/** Runnable type used to run asynchronous hooks */
DECL|class|AsyncHookTask
specifier|private
specifier|final
class|class
name|AsyncHookTask
extends|extends
name|HookTask
implements|implements
name|Runnable
block|{
DECL|method|AsyncHookTask (Project.NameKey project, Path hook, List<String> args)
specifier|private
name|AsyncHookTask
parameter_list|(
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|Path
name|hook
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|args
parameter_list|)
block|{
name|super
argument_list|(
name|project
argument_list|,
name|hook
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|run ()
specifier|public
name|void
name|run
parameter_list|()
block|{
name|super
operator|.
name|runHook
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

