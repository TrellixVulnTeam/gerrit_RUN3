begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2015 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.common
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|RefNames
operator|.
name|REFS_CHANGES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Constants
operator|.
name|R_HEADS
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|ChangeHookRunner
operator|.
name|HookResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|AccountInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ApprovalInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ChangeInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|RevisionInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|AgreementSignupListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|ChangeAbandonedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|ChangeMergedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|ChangeRestoredListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|CommentAddedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|DraftPublishedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|GitReferenceUpdatedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|HashtagsEditedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|NewProjectCreatedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|ReviewerAddedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|ReviewerDeletedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|RevisionCreatedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|TopicEditedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|registration
operator|.
name|DynamicSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|lifecycle
operator|.
name|LifecycleModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Branch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|server
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|IdentifiedUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|PatchSetUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|events
operator|.
name|CommitReceivedEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|validators
operator|.
name|CommitValidationException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|validators
operator|.
name|CommitValidationListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|validators
operator|.
name|CommitValidationMessage
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ChangeNotes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|NoSuchChangeException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_class
annotation|@
name|Singleton
DECL|class|ChangeHookApiListener
specifier|public
class|class
name|ChangeHookApiListener
implements|implements
name|AgreementSignupListener
implements|,
name|ChangeAbandonedListener
implements|,
name|ChangeMergedListener
implements|,
name|ChangeRestoredListener
implements|,
name|CommentAddedListener
implements|,
name|DraftPublishedListener
implements|,
name|GitReferenceUpdatedListener
implements|,
name|HashtagsEditedListener
implements|,
name|NewProjectCreatedListener
implements|,
name|ReviewerAddedListener
implements|,
name|ReviewerDeletedListener
implements|,
name|RevisionCreatedListener
implements|,
name|TopicEditedListener
block|{
comment|/** A logger for this class. */
DECL|field|log
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ChangeHookApiListener
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|class|Module
specifier|public
specifier|static
class|class
name|Module
extends|extends
name|LifecycleModule
block|{
annotation|@
name|Override
DECL|method|configure ()
specifier|protected
name|void
name|configure
parameter_list|()
block|{
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|AgreementSignupListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ChangeHookApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|ChangeAbandonedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ChangeHookApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|ChangeMergedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ChangeHookApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|ChangeRestoredListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ChangeHookApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|CommentAddedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ChangeHookApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|DraftPublishedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ChangeHookApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|GitReferenceUpdatedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ChangeHookApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|HashtagsEditedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ChangeHookApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|NewProjectCreatedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ChangeHookApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|ReviewerAddedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ChangeHookApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|ReviewerDeletedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ChangeHookApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|RevisionCreatedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ChangeHookApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|TopicEditedListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ChangeHookApiListener
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|CommitValidationListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ChangeHookValidator
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
comment|/** Reject commits that don't pass user-supplied ref-update hook. */
DECL|class|ChangeHookValidator
specifier|public
specifier|static
class|class
name|ChangeHookValidator
implements|implements
name|CommitValidationListener
block|{
DECL|field|hooks
specifier|private
specifier|final
name|ChangeHooks
name|hooks
decl_stmt|;
annotation|@
name|Inject
DECL|method|ChangeHookValidator (ChangeHooks hooks)
specifier|public
name|ChangeHookValidator
parameter_list|(
name|ChangeHooks
name|hooks
parameter_list|)
block|{
name|this
operator|.
name|hooks
operator|=
name|hooks
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onCommitReceived ( CommitReceivedEvent receiveEvent)
specifier|public
name|List
argument_list|<
name|CommitValidationMessage
argument_list|>
name|onCommitReceived
parameter_list|(
name|CommitReceivedEvent
name|receiveEvent
parameter_list|)
throws|throws
name|CommitValidationException
block|{
name|IdentifiedUser
name|user
init|=
name|receiveEvent
operator|.
name|user
decl_stmt|;
name|String
name|refname
init|=
name|receiveEvent
operator|.
name|refName
decl_stmt|;
name|ObjectId
name|old
init|=
name|ObjectId
operator|.
name|zeroId
argument_list|()
decl_stmt|;
if|if
condition|(
name|receiveEvent
operator|.
name|commit
operator|.
name|getParentCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|old
operator|=
name|receiveEvent
operator|.
name|commit
operator|.
name|getParent
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|receiveEvent
operator|.
name|command
operator|.
name|getRefName
argument_list|()
operator|.
name|startsWith
argument_list|(
name|REFS_CHANGES
argument_list|)
condition|)
block|{
comment|/*         * If the ref-update hook tries to distinguish behavior between pushes to         * refs/heads/... and refs/for/..., make sure we send it the correct         * refname.         * Also, if this is targetting refs/for/, make sure we behave the same as         * what a push to refs/for/ would behave; in particular, setting oldrev         * to 0000000000000000000000000000000000000000.         */
name|refname
operator|=
name|refname
operator|.
name|replace
argument_list|(
name|R_HEADS
argument_list|,
literal|"refs/for/refs/heads/"
argument_list|)
expr_stmt|;
name|old
operator|=
name|ObjectId
operator|.
name|zeroId
argument_list|()
expr_stmt|;
block|}
name|HookResult
name|result
init|=
name|hooks
operator|.
name|doRefUpdateHook
argument_list|(
name|receiveEvent
operator|.
name|project
argument_list|,
name|refname
argument_list|,
name|user
operator|.
name|getAccount
argument_list|()
argument_list|,
name|old
argument_list|,
name|receiveEvent
operator|.
name|commit
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
operator|&&
name|result
operator|.
name|getExitValue
argument_list|()
operator|!=
literal|0
condition|)
block|{
throw|throw
operator|new
name|CommitValidationException
argument_list|(
name|result
operator|.
name|toString
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
throw|;
block|}
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
block|}
DECL|field|db
specifier|private
specifier|final
name|Provider
argument_list|<
name|ReviewDb
argument_list|>
name|db
decl_stmt|;
DECL|field|accounts
specifier|private
specifier|final
name|AccountCache
name|accounts
decl_stmt|;
DECL|field|hooks
specifier|private
specifier|final
name|ChangeHooks
name|hooks
decl_stmt|;
DECL|field|psUtil
specifier|private
specifier|final
name|PatchSetUtil
name|psUtil
decl_stmt|;
DECL|field|changeNotesFactory
specifier|private
specifier|final
name|ChangeNotes
operator|.
name|Factory
name|changeNotesFactory
decl_stmt|;
annotation|@
name|Inject
DECL|method|ChangeHookApiListener ( Provider<ReviewDb> db, AccountCache accounts, ChangeHooks hooks, PatchSetUtil psUtil, ChangeNotes.Factory changeNotesFactory)
specifier|public
name|ChangeHookApiListener
parameter_list|(
name|Provider
argument_list|<
name|ReviewDb
argument_list|>
name|db
parameter_list|,
name|AccountCache
name|accounts
parameter_list|,
name|ChangeHooks
name|hooks
parameter_list|,
name|PatchSetUtil
name|psUtil
parameter_list|,
name|ChangeNotes
operator|.
name|Factory
name|changeNotesFactory
parameter_list|)
block|{
name|this
operator|.
name|db
operator|=
name|db
expr_stmt|;
name|this
operator|.
name|accounts
operator|=
name|accounts
expr_stmt|;
name|this
operator|.
name|hooks
operator|=
name|hooks
expr_stmt|;
name|this
operator|.
name|psUtil
operator|=
name|psUtil
expr_stmt|;
name|this
operator|.
name|changeNotesFactory
operator|=
name|changeNotesFactory
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onNewProjectCreated (NewProjectCreatedListener.Event ev)
specifier|public
name|void
name|onNewProjectCreated
parameter_list|(
name|NewProjectCreatedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
name|hooks
operator|.
name|doProjectCreatedHook
argument_list|(
operator|new
name|Project
operator|.
name|NameKey
argument_list|(
name|ev
operator|.
name|getProjectName
argument_list|()
argument_list|)
argument_list|,
name|ev
operator|.
name|getHeadName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onRevisionCreated (RevisionCreatedListener.Event ev)
specifier|public
name|void
name|onRevisionCreated
parameter_list|(
name|RevisionCreatedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|hooks
operator|.
name|doPatchsetCreatedHook
argument_list|(
name|notes
operator|.
name|getChange
argument_list|()
argument_list|,
name|getPatchSet
argument_list|(
name|notes
argument_list|,
name|ev
operator|.
name|getRevision
argument_list|()
argument_list|)
argument_list|,
name|db
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OrmException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"PatchsetCreated hook failed to run "
operator|+
name|ev
operator|.
name|getChange
argument_list|()
operator|.
name|_number
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onDraftPublished (DraftPublishedListener.Event ev)
specifier|public
name|void
name|onDraftPublished
parameter_list|(
name|DraftPublishedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|hooks
operator|.
name|doDraftPublishedHook
argument_list|(
name|notes
operator|.
name|getChange
argument_list|()
argument_list|,
name|getPatchSet
argument_list|(
name|notes
argument_list|,
name|ev
operator|.
name|getRevision
argument_list|()
argument_list|)
argument_list|,
name|db
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OrmException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"DraftPublished hook failed to run "
operator|+
name|ev
operator|.
name|getChange
argument_list|()
operator|.
name|_number
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onCommentAdded (CommentAddedListener.Event ev)
specifier|public
name|void
name|onCommentAdded
parameter_list|(
name|CommentAddedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Short
argument_list|>
name|approvals
init|=
name|convertApprovalsMap
argument_list|(
name|ev
operator|.
name|getApprovals
argument_list|()
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Short
argument_list|>
name|oldApprovals
init|=
name|convertApprovalsMap
argument_list|(
name|ev
operator|.
name|getOldApprovals
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|hooks
operator|.
name|doCommentAddedHook
argument_list|(
name|notes
operator|.
name|getChange
argument_list|()
argument_list|,
name|getAccount
argument_list|(
name|ev
operator|.
name|getAuthor
argument_list|()
argument_list|)
argument_list|,
name|getPatchSet
argument_list|(
name|notes
argument_list|,
name|ev
operator|.
name|getRevision
argument_list|()
argument_list|)
argument_list|,
name|ev
operator|.
name|getComment
argument_list|()
argument_list|,
name|approvals
argument_list|,
name|oldApprovals
argument_list|,
name|db
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OrmException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"CommentAdded hook failed to fun"
operator|+
name|ev
operator|.
name|getChange
argument_list|()
operator|.
name|_number
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onChangeMerged (ChangeMergedListener.Event ev)
specifier|public
name|void
name|onChangeMerged
parameter_list|(
name|ChangeMergedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|hooks
operator|.
name|doChangeMergedHook
argument_list|(
name|notes
operator|.
name|getChange
argument_list|()
argument_list|,
name|getAccount
argument_list|(
name|ev
operator|.
name|getMerger
argument_list|()
argument_list|)
argument_list|,
name|getPatchSet
argument_list|(
name|notes
argument_list|,
name|ev
operator|.
name|getRevision
argument_list|()
argument_list|)
argument_list|,
name|db
operator|.
name|get
argument_list|()
argument_list|,
name|ev
operator|.
name|getNewRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OrmException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"ChangeMerged hook failed to run "
operator|+
name|ev
operator|.
name|getChange
argument_list|()
operator|.
name|_number
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onChangeAbandoned (ChangeAbandonedListener.Event ev)
specifier|public
name|void
name|onChangeAbandoned
parameter_list|(
name|ChangeAbandonedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|hooks
operator|.
name|doChangeAbandonedHook
argument_list|(
name|notes
operator|.
name|getChange
argument_list|()
argument_list|,
name|getAccount
argument_list|(
name|ev
operator|.
name|getAbandoner
argument_list|()
argument_list|)
argument_list|,
name|getPatchSet
argument_list|(
name|notes
argument_list|,
name|ev
operator|.
name|getRevision
argument_list|()
argument_list|)
argument_list|,
name|ev
operator|.
name|getReason
argument_list|()
argument_list|,
name|db
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OrmException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"ChangeAbandoned hook failed to run "
operator|+
name|ev
operator|.
name|getChange
argument_list|()
operator|.
name|_number
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onChangeRestored (ChangeRestoredListener.Event ev)
specifier|public
name|void
name|onChangeRestored
parameter_list|(
name|ChangeRestoredListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|hooks
operator|.
name|doChangeRestoredHook
argument_list|(
name|notes
operator|.
name|getChange
argument_list|()
argument_list|,
name|getAccount
argument_list|(
name|ev
operator|.
name|getRestorer
argument_list|()
argument_list|)
argument_list|,
name|getPatchSet
argument_list|(
name|notes
argument_list|,
name|ev
operator|.
name|getRevision
argument_list|()
argument_list|)
argument_list|,
name|ev
operator|.
name|getReason
argument_list|()
argument_list|,
name|db
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OrmException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"ChangeRestored hook failed to run "
operator|+
name|ev
operator|.
name|getChange
argument_list|()
operator|.
name|_number
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onGitReferenceUpdated (GitReferenceUpdatedListener.Event ev)
specifier|public
name|void
name|onGitReferenceUpdated
parameter_list|(
name|GitReferenceUpdatedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
name|hooks
operator|.
name|doRefUpdatedHook
argument_list|(
operator|new
name|Branch
operator|.
name|NameKey
argument_list|(
name|ev
operator|.
name|getProjectName
argument_list|()
argument_list|,
name|ev
operator|.
name|getRefName
argument_list|()
argument_list|)
argument_list|,
name|ObjectId
operator|.
name|fromString
argument_list|(
name|ev
operator|.
name|getOldObjectId
argument_list|()
argument_list|)
argument_list|,
name|ObjectId
operator|.
name|fromString
argument_list|(
name|ev
operator|.
name|getNewObjectId
argument_list|()
argument_list|)
argument_list|,
name|getAccount
argument_list|(
name|ev
operator|.
name|getUpdater
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onReviewerAdded (ReviewerAddedListener.Event ev)
specifier|public
name|void
name|onReviewerAdded
parameter_list|(
name|ReviewerAddedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|hooks
operator|.
name|doReviewerAddedHook
argument_list|(
name|notes
operator|.
name|getChange
argument_list|()
argument_list|,
name|getAccount
argument_list|(
name|ev
operator|.
name|getReviewer
argument_list|()
argument_list|)
argument_list|,
name|psUtil
operator|.
name|current
argument_list|(
name|db
operator|.
name|get
argument_list|()
argument_list|,
name|notes
argument_list|)
argument_list|,
name|db
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OrmException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"ReviewerAdded hook failed to run "
operator|+
name|ev
operator|.
name|getChange
argument_list|()
operator|.
name|_number
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onReviewerDeleted (ReviewerDeletedListener.Event ev)
specifier|public
name|void
name|onReviewerDeleted
parameter_list|(
name|ReviewerDeletedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|ChangeNotes
name|notes
init|=
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
decl_stmt|;
name|hooks
operator|.
name|doReviewerDeletedHook
argument_list|(
name|notes
operator|.
name|getChange
argument_list|()
argument_list|,
name|getAccount
argument_list|(
name|ev
operator|.
name|getReviewer
argument_list|()
argument_list|)
argument_list|,
name|psUtil
operator|.
name|current
argument_list|(
name|db
operator|.
name|get
argument_list|()
argument_list|,
name|notes
argument_list|)
argument_list|,
name|ev
operator|.
name|getComment
argument_list|()
argument_list|,
name|convertApprovalsMap
argument_list|(
name|ev
operator|.
name|getNewApprovals
argument_list|()
argument_list|)
argument_list|,
name|convertApprovalsMap
argument_list|(
name|ev
operator|.
name|getOldApprovals
argument_list|()
argument_list|)
argument_list|,
name|db
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OrmException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"ReviewerDeleted hook failed to run "
operator|+
name|ev
operator|.
name|getChange
argument_list|()
operator|.
name|_number
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onTopicEdited (TopicEditedListener.Event ev)
specifier|public
name|void
name|onTopicEdited
parameter_list|(
name|TopicEditedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|hooks
operator|.
name|doTopicChangedHook
argument_list|(
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
operator|.
name|getChange
argument_list|()
argument_list|,
name|getAccount
argument_list|(
name|ev
operator|.
name|getEditor
argument_list|()
argument_list|)
argument_list|,
name|ev
operator|.
name|getOldTopic
argument_list|()
argument_list|,
name|db
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OrmException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"TopicChanged hook failed to run "
operator|+
name|ev
operator|.
name|getChange
argument_list|()
operator|.
name|_number
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onHashtagsEdited (HashtagsEditedListener.Event ev)
specifier|public
name|void
name|onHashtagsEdited
parameter_list|(
name|HashtagsEditedListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
try|try
block|{
name|hooks
operator|.
name|doHashtagsChangedHook
argument_list|(
name|getNotes
argument_list|(
name|ev
operator|.
name|getChange
argument_list|()
argument_list|)
operator|.
name|getChange
argument_list|()
argument_list|,
name|getAccount
argument_list|(
name|ev
operator|.
name|getEditor
argument_list|()
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|ev
operator|.
name|getAddedHashtags
argument_list|()
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|ev
operator|.
name|getRemovedHashtags
argument_list|()
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|ev
operator|.
name|getHashtags
argument_list|()
argument_list|)
argument_list|,
name|db
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OrmException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"HashtagsChanged hook failed to run "
operator|+
name|ev
operator|.
name|getChange
argument_list|()
operator|.
name|_number
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onAgreementSignup (AgreementSignupListener.Event ev)
specifier|public
name|void
name|onAgreementSignup
parameter_list|(
name|AgreementSignupListener
operator|.
name|Event
name|ev
parameter_list|)
block|{
name|hooks
operator|.
name|doClaSignupHook
argument_list|(
name|getAccount
argument_list|(
name|ev
operator|.
name|getAccount
argument_list|()
argument_list|)
argument_list|,
name|ev
operator|.
name|getAgreementName
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getNotes (ChangeInfo info)
specifier|private
name|ChangeNotes
name|getNotes
parameter_list|(
name|ChangeInfo
name|info
parameter_list|)
throws|throws
name|OrmException
block|{
try|try
block|{
return|return
name|changeNotesFactory
operator|.
name|createChecked
argument_list|(
operator|new
name|Change
operator|.
name|Id
argument_list|(
name|info
operator|.
name|_number
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|NoSuchChangeException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|OrmException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
DECL|method|getPatchSet (ChangeNotes notes, RevisionInfo info)
specifier|private
name|PatchSet
name|getPatchSet
parameter_list|(
name|ChangeNotes
name|notes
parameter_list|,
name|RevisionInfo
name|info
parameter_list|)
throws|throws
name|OrmException
block|{
return|return
name|psUtil
operator|.
name|get
argument_list|(
name|db
operator|.
name|get
argument_list|()
argument_list|,
name|notes
argument_list|,
name|PatchSet
operator|.
name|Id
operator|.
name|fromRef
argument_list|(
name|info
operator|.
name|ref
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getAccount (AccountInfo info)
specifier|private
name|Account
name|getAccount
parameter_list|(
name|AccountInfo
name|info
parameter_list|)
block|{
if|if
condition|(
name|info
operator|!=
literal|null
condition|)
block|{
name|AccountState
name|account
init|=
name|accounts
operator|.
name|get
argument_list|(
operator|new
name|Account
operator|.
name|Id
argument_list|(
name|info
operator|.
name|_accountId
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|account
operator|!=
literal|null
condition|)
block|{
return|return
name|account
operator|.
name|getAccount
argument_list|()
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
DECL|method|convertApprovalsMap ( Map<String, ApprovalInfo> approvals)
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|Short
argument_list|>
name|convertApprovalsMap
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|ApprovalInfo
argument_list|>
name|approvals
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Short
argument_list|>
name|result
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|ApprovalInfo
argument_list|>
name|e
range|:
name|approvals
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|Short
name|value
init|=
name|e
operator|.
name|getValue
argument_list|()
operator|.
name|value
operator|==
literal|null
condition|?
literal|null
else|:
name|e
operator|.
name|getValue
argument_list|()
operator|.
name|value
operator|.
name|shortValue
argument_list|()
decl_stmt|;
name|result
operator|.
name|put
argument_list|(
name|e
operator|.
name|getKey
argument_list|()
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

