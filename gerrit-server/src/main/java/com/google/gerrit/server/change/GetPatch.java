begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|change
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Charsets
operator|.
name|UTF_8
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|ResourceConflictException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|ResourceNotFoundException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestReadView
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|GerritPersonIdent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|GitRepositoryManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|diff
operator|.
name|DiffFormatter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|PersonIdent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevCommit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevWalk
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_class
DECL|class|GetPatch
specifier|public
class|class
name|GetPatch
implements|implements
name|RestReadView
argument_list|<
name|RevisionResource
argument_list|>
block|{
DECL|field|repoManager
specifier|private
specifier|final
name|GitRepositoryManager
name|repoManager
decl_stmt|;
DECL|field|df
specifier|private
specifier|final
name|SimpleDateFormat
name|df
decl_stmt|;
annotation|@
name|Inject
DECL|method|GetPatch (@erritPersonIdent final PersonIdent gerritIdent, GitRepositoryManager repoManager)
name|GetPatch
parameter_list|(
annotation|@
name|GerritPersonIdent
specifier|final
name|PersonIdent
name|gerritIdent
parameter_list|,
name|GitRepositoryManager
name|repoManager
parameter_list|)
block|{
name|this
operator|.
name|repoManager
operator|=
name|repoManager
expr_stmt|;
name|this
operator|.
name|df
operator|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"EEE, dd MMM yyyy HH:mm:ss Z"
argument_list|,
name|Locale
operator|.
name|US
argument_list|)
expr_stmt|;
name|this
operator|.
name|df
operator|.
name|setCalendar
argument_list|(
name|Calendar
operator|.
name|getInstance
argument_list|(
name|gerritIdent
operator|.
name|getTimeZone
argument_list|()
argument_list|,
name|Locale
operator|.
name|US
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|apply (RevisionResource rsrc)
specifier|public
name|String
name|apply
parameter_list|(
name|RevisionResource
name|rsrc
parameter_list|)
throws|throws
name|ResourceNotFoundException
throws|,
name|ResourceConflictException
block|{
name|Project
operator|.
name|NameKey
name|project
init|=
name|rsrc
operator|.
name|getControl
argument_list|()
operator|.
name|getProject
argument_list|()
operator|.
name|getNameKey
argument_list|()
decl_stmt|;
try|try
block|{
name|Repository
name|repo
init|=
name|repoManager
operator|.
name|openRepository
argument_list|(
name|project
argument_list|)
decl_stmt|;
try|try
block|{
name|RevWalk
name|rw
init|=
operator|new
name|RevWalk
argument_list|(
name|repo
argument_list|)
decl_stmt|;
try|try
block|{
name|RevCommit
name|commit
init|=
name|rw
operator|.
name|parseCommit
argument_list|(
name|ObjectId
operator|.
name|fromString
argument_list|(
name|rsrc
operator|.
name|getPatchSet
argument_list|()
operator|.
name|getRevision
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|RevCommit
index|[]
name|parents
init|=
name|commit
operator|.
name|getParents
argument_list|()
decl_stmt|;
if|if
condition|(
name|parents
operator|.
name|length
operator|>
literal|1
condition|)
block|{
throw|throw
operator|new
name|ResourceConflictException
argument_list|(
literal|"Revision has more than 1 parent."
argument_list|)
throw|;
block|}
elseif|else
if|if
condition|(
name|parents
operator|.
name|length
operator|==
literal|0
condition|)
block|{
throw|throw
operator|new
name|ResourceConflictException
argument_list|(
literal|"Revision has no parent."
argument_list|)
throw|;
block|}
name|rw
operator|.
name|parseBody
argument_list|(
name|parents
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|StringBuilder
name|b
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|appendHeader
argument_list|(
name|b
argument_list|,
name|commit
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|DiffFormatter
name|f
init|=
operator|new
name|DiffFormatter
argument_list|(
name|out
argument_list|)
decl_stmt|;
name|f
operator|.
name|setRepository
argument_list|(
name|repo
argument_list|)
expr_stmt|;
name|f
operator|.
name|format
argument_list|(
name|parents
index|[
literal|0
index|]
operator|.
name|getTree
argument_list|()
argument_list|,
name|commit
operator|.
name|getTree
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|flush
argument_list|()
expr_stmt|;
name|b
operator|.
name|append
argument_list|(
name|out
operator|.
name|toString
argument_list|(
name|UTF_8
operator|.
name|name
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|b
operator|.
name|toString
argument_list|()
return|;
block|}
finally|finally
block|{
name|rw
operator|.
name|release
argument_list|()
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|repo
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ResourceNotFoundException
argument_list|()
throw|;
block|}
block|}
DECL|method|appendHeader (StringBuilder b, RevCommit commit)
specifier|private
name|void
name|appendHeader
parameter_list|(
name|StringBuilder
name|b
parameter_list|,
name|RevCommit
name|commit
parameter_list|)
block|{
name|PersonIdent
name|author
init|=
name|commit
operator|.
name|getAuthorIdent
argument_list|()
decl_stmt|;
name|b
operator|.
name|append
argument_list|(
literal|"From "
argument_list|)
operator|.
name|append
argument_list|(
name|commit
operator|.
name|getId
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
operator|.
name|append
argument_list|(
name|df
operator|.
name|format
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
name|b
operator|.
name|append
argument_list|(
literal|"From: "
argument_list|)
operator|.
name|append
argument_list|(
name|author
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"<"
argument_list|)
operator|.
name|append
argument_list|(
name|author
operator|.
name|getEmailAddress
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|">\n"
argument_list|)
expr_stmt|;
name|b
operator|.
name|append
argument_list|(
literal|"Date: "
argument_list|)
operator|.
name|append
argument_list|(
name|df
operator|.
name|format
argument_list|(
name|author
operator|.
name|getWhen
argument_list|()
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
name|b
operator|.
name|append
argument_list|(
literal|"Subject: [PATCH] "
argument_list|)
operator|.
name|append
argument_list|(
name|commit
operator|.
name|getShortMessage
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|message
init|=
name|commit
operator|.
name|getFullMessage
argument_list|()
operator|.
name|substring
argument_list|(
name|commit
operator|.
name|getShortMessage
argument_list|()
operator|.
name|length
argument_list|()
argument_list|)
decl_stmt|;
name|b
operator|.
name|append
argument_list|(
name|message
argument_list|)
operator|.
name|append
argument_list|(
literal|"\n\n"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

