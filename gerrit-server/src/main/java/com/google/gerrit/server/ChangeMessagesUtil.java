begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2014 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkNotNull
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
operator|.
name|checkState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|ChangeMessage
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|server
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ChangeNotes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ChangeUpdate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|NotesMigration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|update
operator|.
name|BatchUpdate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_comment
comment|/**  * Utility functions to manipulate ChangeMessages.  *  *<p>These methods either query for and update ChangeMessages in the NoteDb or ReviewDb, depending  * on the state of the NotesMigration.  */
end_comment

begin_class
annotation|@
name|Singleton
DECL|class|ChangeMessagesUtil
specifier|public
class|class
name|ChangeMessagesUtil
block|{
DECL|field|TAG_ABANDON
specifier|public
specifier|static
specifier|final
name|String
name|TAG_ABANDON
init|=
literal|"autogenerated:gerrit:abandon"
decl_stmt|;
DECL|field|TAG_CHERRY_PICK_CHANGE
specifier|public
specifier|static
specifier|final
name|String
name|TAG_CHERRY_PICK_CHANGE
init|=
literal|"autogenerated:gerrit:cherryPickChange"
decl_stmt|;
DECL|field|TAG_DELETE_ASSIGNEE
specifier|public
specifier|static
specifier|final
name|String
name|TAG_DELETE_ASSIGNEE
init|=
literal|"autogenerated:gerrit:deleteAssignee"
decl_stmt|;
DECL|field|TAG_DELETE_REVIEWER
specifier|public
specifier|static
specifier|final
name|String
name|TAG_DELETE_REVIEWER
init|=
literal|"autogenerated:gerrit:deleteReviewer"
decl_stmt|;
DECL|field|TAG_DELETE_VOTE
specifier|public
specifier|static
specifier|final
name|String
name|TAG_DELETE_VOTE
init|=
literal|"autogenerated:gerrit:deleteVote"
decl_stmt|;
DECL|field|TAG_MERGED
specifier|public
specifier|static
specifier|final
name|String
name|TAG_MERGED
init|=
literal|"autogenerated:gerrit:merged"
decl_stmt|;
DECL|field|TAG_MOVE
specifier|public
specifier|static
specifier|final
name|String
name|TAG_MOVE
init|=
literal|"autogenerated:gerrit:move"
decl_stmt|;
DECL|field|TAG_RESTORE
specifier|public
specifier|static
specifier|final
name|String
name|TAG_RESTORE
init|=
literal|"autogenerated:gerrit:restore"
decl_stmt|;
DECL|field|TAG_REVERT
specifier|public
specifier|static
specifier|final
name|String
name|TAG_REVERT
init|=
literal|"autogenerated:gerrit:revert"
decl_stmt|;
DECL|field|TAG_SET_ASSIGNEE
specifier|public
specifier|static
specifier|final
name|String
name|TAG_SET_ASSIGNEE
init|=
literal|"autogenerated:gerrit:setAssignee"
decl_stmt|;
DECL|field|TAG_SET_DESCRIPTION
specifier|public
specifier|static
specifier|final
name|String
name|TAG_SET_DESCRIPTION
init|=
literal|"autogenerated:gerrit:setPsDescription"
decl_stmt|;
DECL|field|TAG_SET_HASHTAGS
specifier|public
specifier|static
specifier|final
name|String
name|TAG_SET_HASHTAGS
init|=
literal|"autogenerated:gerrit:setHashtag"
decl_stmt|;
DECL|field|TAG_SET_TOPIC
specifier|public
specifier|static
specifier|final
name|String
name|TAG_SET_TOPIC
init|=
literal|"autogenerated:gerrit:setTopic"
decl_stmt|;
DECL|field|TAG_UPLOADED_PATCH_SET
specifier|public
specifier|static
specifier|final
name|String
name|TAG_UPLOADED_PATCH_SET
init|=
literal|"autogenerated:gerrit:newPatchSet"
decl_stmt|;
DECL|method|newMessage ( BatchUpdate.ChangeContext ctx, String body, @Nullable String tag)
specifier|public
specifier|static
name|ChangeMessage
name|newMessage
parameter_list|(
name|BatchUpdate
operator|.
name|ChangeContext
name|ctx
parameter_list|,
name|String
name|body
parameter_list|,
annotation|@
name|Nullable
name|String
name|tag
parameter_list|)
block|{
return|return
name|newMessage
argument_list|(
name|ctx
operator|.
name|getChange
argument_list|()
operator|.
name|currentPatchSetId
argument_list|()
argument_list|,
name|ctx
operator|.
name|getUser
argument_list|()
argument_list|,
name|ctx
operator|.
name|getWhen
argument_list|()
argument_list|,
name|body
argument_list|,
name|tag
argument_list|)
return|;
block|}
DECL|method|newMessage ( PatchSet.Id psId, CurrentUser user, Timestamp when, String body, @Nullable String tag)
specifier|public
specifier|static
name|ChangeMessage
name|newMessage
parameter_list|(
name|PatchSet
operator|.
name|Id
name|psId
parameter_list|,
name|CurrentUser
name|user
parameter_list|,
name|Timestamp
name|when
parameter_list|,
name|String
name|body
parameter_list|,
annotation|@
name|Nullable
name|String
name|tag
parameter_list|)
block|{
name|checkNotNull
argument_list|(
name|psId
argument_list|)
expr_stmt|;
name|Account
operator|.
name|Id
name|accountId
init|=
name|user
operator|.
name|isInternalUser
argument_list|()
condition|?
literal|null
else|:
name|user
operator|.
name|getAccountId
argument_list|()
decl_stmt|;
name|ChangeMessage
name|m
init|=
operator|new
name|ChangeMessage
argument_list|(
operator|new
name|ChangeMessage
operator|.
name|Key
argument_list|(
name|psId
operator|.
name|getParentKey
argument_list|()
argument_list|,
name|ChangeUtil
operator|.
name|messageUuid
argument_list|()
argument_list|)
argument_list|,
name|accountId
argument_list|,
name|when
argument_list|,
name|psId
argument_list|)
decl_stmt|;
name|m
operator|.
name|setMessage
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|m
operator|.
name|setTag
argument_list|(
name|tag
argument_list|)
expr_stmt|;
name|user
operator|.
name|updateRealAccountId
argument_list|(
name|m
operator|::
name|setRealAuthor
argument_list|)
expr_stmt|;
return|return
name|m
return|;
block|}
DECL|method|sortChangeMessages (Iterable<ChangeMessage> changeMessage)
specifier|private
specifier|static
name|List
argument_list|<
name|ChangeMessage
argument_list|>
name|sortChangeMessages
parameter_list|(
name|Iterable
argument_list|<
name|ChangeMessage
argument_list|>
name|changeMessage
parameter_list|)
block|{
return|return
name|ChangeNotes
operator|.
name|MESSAGE_BY_TIME
operator|.
name|sortedCopy
argument_list|(
name|changeMessage
argument_list|)
return|;
block|}
DECL|field|migration
specifier|private
specifier|final
name|NotesMigration
name|migration
decl_stmt|;
annotation|@
name|VisibleForTesting
annotation|@
name|Inject
DECL|method|ChangeMessagesUtil (NotesMigration migration)
specifier|public
name|ChangeMessagesUtil
parameter_list|(
name|NotesMigration
name|migration
parameter_list|)
block|{
name|this
operator|.
name|migration
operator|=
name|migration
expr_stmt|;
block|}
DECL|method|byChange (ReviewDb db, ChangeNotes notes)
specifier|public
name|List
argument_list|<
name|ChangeMessage
argument_list|>
name|byChange
parameter_list|(
name|ReviewDb
name|db
parameter_list|,
name|ChangeNotes
name|notes
parameter_list|)
throws|throws
name|OrmException
block|{
if|if
condition|(
operator|!
name|migration
operator|.
name|readChanges
argument_list|()
condition|)
block|{
return|return
name|sortChangeMessages
argument_list|(
name|db
operator|.
name|changeMessages
argument_list|()
operator|.
name|byChange
argument_list|(
name|notes
operator|.
name|getChangeId
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
return|return
name|notes
operator|.
name|load
argument_list|()
operator|.
name|getChangeMessages
argument_list|()
return|;
block|}
DECL|method|byPatchSet (ReviewDb db, ChangeNotes notes, PatchSet.Id psId)
specifier|public
name|Iterable
argument_list|<
name|ChangeMessage
argument_list|>
name|byPatchSet
parameter_list|(
name|ReviewDb
name|db
parameter_list|,
name|ChangeNotes
name|notes
parameter_list|,
name|PatchSet
operator|.
name|Id
name|psId
parameter_list|)
throws|throws
name|OrmException
block|{
if|if
condition|(
operator|!
name|migration
operator|.
name|readChanges
argument_list|()
condition|)
block|{
return|return
name|db
operator|.
name|changeMessages
argument_list|()
operator|.
name|byPatchSet
argument_list|(
name|psId
argument_list|)
return|;
block|}
return|return
name|notes
operator|.
name|load
argument_list|()
operator|.
name|getChangeMessagesByPatchSet
argument_list|()
operator|.
name|get
argument_list|(
name|psId
argument_list|)
return|;
block|}
DECL|method|addChangeMessage (ReviewDb db, ChangeUpdate update, ChangeMessage changeMessage)
specifier|public
name|void
name|addChangeMessage
parameter_list|(
name|ReviewDb
name|db
parameter_list|,
name|ChangeUpdate
name|update
parameter_list|,
name|ChangeMessage
name|changeMessage
parameter_list|)
throws|throws
name|OrmException
block|{
name|checkState
argument_list|(
name|Objects
operator|.
name|equals
argument_list|(
name|changeMessage
operator|.
name|getAuthor
argument_list|()
argument_list|,
name|update
operator|.
name|getNullableAccountId
argument_list|()
argument_list|)
argument_list|,
literal|"cannot store change message by %s in update by %s"
argument_list|,
name|changeMessage
operator|.
name|getAuthor
argument_list|()
argument_list|,
name|update
operator|.
name|getNullableAccountId
argument_list|()
argument_list|)
expr_stmt|;
name|update
operator|.
name|setChangeMessage
argument_list|(
name|changeMessage
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|update
operator|.
name|setTag
argument_list|(
name|changeMessage
operator|.
name|getTag
argument_list|()
argument_list|)
expr_stmt|;
name|db
operator|.
name|changeMessages
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|changeMessage
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

