begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2012 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.extensions.events
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|extensions
operator|.
name|events
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|events
operator|.
name|GitReferenceUpdatedListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|registration
operator|.
name|DynamicSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|RefUpdate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_class
DECL|class|GitReferenceUpdated
specifier|public
class|class
name|GitReferenceUpdated
block|{
DECL|field|log
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|GitReferenceUpdated
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|DISABLED
specifier|public
specifier|static
specifier|final
name|GitReferenceUpdated
name|DISABLED
init|=
operator|new
name|GitReferenceUpdated
argument_list|(
name|Collections
operator|.
expr|<
name|GitReferenceUpdatedListener
operator|>
name|emptyList
argument_list|()
argument_list|)
decl_stmt|;
DECL|field|listeners
specifier|private
specifier|final
name|Iterable
argument_list|<
name|GitReferenceUpdatedListener
argument_list|>
name|listeners
decl_stmt|;
annotation|@
name|Inject
DECL|method|GitReferenceUpdated (DynamicSet<GitReferenceUpdatedListener> listeners)
name|GitReferenceUpdated
parameter_list|(
name|DynamicSet
argument_list|<
name|GitReferenceUpdatedListener
argument_list|>
name|listeners
parameter_list|)
block|{
name|this
operator|.
name|listeners
operator|=
name|listeners
expr_stmt|;
block|}
DECL|method|GitReferenceUpdated (Iterable<GitReferenceUpdatedListener> listeners)
name|GitReferenceUpdated
parameter_list|(
name|Iterable
argument_list|<
name|GitReferenceUpdatedListener
argument_list|>
name|listeners
parameter_list|)
block|{
name|this
operator|.
name|listeners
operator|=
name|listeners
expr_stmt|;
block|}
DECL|method|fire (Project.NameKey project, RefUpdate refUpdate)
specifier|public
name|void
name|fire
parameter_list|(
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|RefUpdate
name|refUpdate
parameter_list|)
block|{
name|fire
argument_list|(
name|project
argument_list|,
name|refUpdate
operator|.
name|getName
argument_list|()
argument_list|,
name|refUpdate
operator|.
name|getOldObjectId
argument_list|()
argument_list|,
name|refUpdate
operator|.
name|getNewObjectId
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|fire (Project.NameKey project, String ref, ObjectId oldObjectId, ObjectId newObjectId)
specifier|public
name|void
name|fire
parameter_list|(
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|String
name|ref
parameter_list|,
name|ObjectId
name|oldObjectId
parameter_list|,
name|ObjectId
name|newObjectId
parameter_list|)
block|{
name|ObjectId
name|o
init|=
name|oldObjectId
operator|!=
literal|null
condition|?
name|oldObjectId
else|:
name|ObjectId
operator|.
name|zeroId
argument_list|()
decl_stmt|;
name|ObjectId
name|n
init|=
name|newObjectId
operator|!=
literal|null
condition|?
name|newObjectId
else|:
name|ObjectId
operator|.
name|zeroId
argument_list|()
decl_stmt|;
name|Event
name|event
init|=
operator|new
name|Event
argument_list|(
name|project
argument_list|,
name|ref
argument_list|,
name|o
operator|.
name|name
argument_list|()
argument_list|,
name|n
operator|.
name|name
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|GitReferenceUpdatedListener
name|l
range|:
name|listeners
control|)
block|{
try|try
block|{
name|l
operator|.
name|onGitReferenceUpdated
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|e
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"Failure in GitReferenceUpdatedListener"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|class|Event
specifier|private
specifier|static
class|class
name|Event
implements|implements
name|GitReferenceUpdatedListener
operator|.
name|Event
block|{
DECL|field|projectName
specifier|private
specifier|final
name|String
name|projectName
decl_stmt|;
DECL|field|ref
specifier|private
specifier|final
name|String
name|ref
decl_stmt|;
DECL|field|oldObjectId
specifier|private
specifier|final
name|String
name|oldObjectId
decl_stmt|;
DECL|field|newObjectId
specifier|private
specifier|final
name|String
name|newObjectId
decl_stmt|;
DECL|method|Event (Project.NameKey project, String ref, String oldObjectId, String newObjectId)
name|Event
parameter_list|(
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|String
name|ref
parameter_list|,
name|String
name|oldObjectId
parameter_list|,
name|String
name|newObjectId
parameter_list|)
block|{
name|this
operator|.
name|projectName
operator|=
name|project
operator|.
name|get
argument_list|()
expr_stmt|;
name|this
operator|.
name|ref
operator|=
name|ref
expr_stmt|;
name|this
operator|.
name|oldObjectId
operator|=
name|oldObjectId
expr_stmt|;
name|this
operator|.
name|newObjectId
operator|=
name|newObjectId
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getProjectName ()
specifier|public
name|String
name|getProjectName
parameter_list|()
block|{
return|return
name|projectName
return|;
block|}
annotation|@
name|Override
DECL|method|getRefName ()
specifier|public
name|String
name|getRefName
parameter_list|()
block|{
return|return
name|ref
return|;
block|}
annotation|@
name|Override
DECL|method|getOldObjectId ()
specifier|public
name|String
name|getOldObjectId
parameter_list|()
block|{
return|return
name|oldObjectId
return|;
block|}
annotation|@
name|Override
DECL|method|getNewObjectId ()
specifier|public
name|String
name|getNewObjectId
parameter_list|()
block|{
return|return
name|newObjectId
return|;
block|}
block|}
block|}
end_class

end_unit

