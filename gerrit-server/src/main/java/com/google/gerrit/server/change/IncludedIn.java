begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|change
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ListMultimap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|MultimapBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|IncludedInInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|config
operator|.
name|ExternalIncludedIn
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|registration
operator|.
name|DynamicSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|BadRequestException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|ResourceConflictException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestApiException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|GitRepositoryManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|errors
operator|.
name|IncorrectObjectTypeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|errors
operator|.
name|MissingObjectException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevCommit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevWalk
import|;
end_import

begin_class
annotation|@
name|Singleton
DECL|class|IncludedIn
specifier|public
class|class
name|IncludedIn
block|{
DECL|field|repoManager
specifier|private
specifier|final
name|GitRepositoryManager
name|repoManager
decl_stmt|;
DECL|field|externalIncludedIn
specifier|private
specifier|final
name|DynamicSet
argument_list|<
name|ExternalIncludedIn
argument_list|>
name|externalIncludedIn
decl_stmt|;
annotation|@
name|Inject
DECL|method|IncludedIn (GitRepositoryManager repoManager, DynamicSet<ExternalIncludedIn> externalIncludedIn)
name|IncludedIn
parameter_list|(
name|GitRepositoryManager
name|repoManager
parameter_list|,
name|DynamicSet
argument_list|<
name|ExternalIncludedIn
argument_list|>
name|externalIncludedIn
parameter_list|)
block|{
name|this
operator|.
name|repoManager
operator|=
name|repoManager
expr_stmt|;
name|this
operator|.
name|externalIncludedIn
operator|=
name|externalIncludedIn
expr_stmt|;
block|}
DECL|method|apply (Project.NameKey project, String revisionId)
specifier|public
name|IncludedInInfo
name|apply
parameter_list|(
name|Project
operator|.
name|NameKey
name|project
parameter_list|,
name|String
name|revisionId
parameter_list|)
throws|throws
name|RestApiException
throws|,
name|IOException
block|{
try|try
init|(
name|Repository
name|r
init|=
name|repoManager
operator|.
name|openRepository
argument_list|(
name|project
argument_list|)
init|;
name|RevWalk
name|rw
operator|=
operator|new
name|RevWalk
argument_list|(
name|r
argument_list|)
init|)
block|{
name|rw
operator|.
name|setRetainBody
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|RevCommit
name|rev
decl_stmt|;
try|try
block|{
name|rev
operator|=
name|rw
operator|.
name|parseCommit
argument_list|(
name|ObjectId
operator|.
name|fromString
argument_list|(
name|revisionId
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IncorrectObjectTypeException
name|err
parameter_list|)
block|{
throw|throw
operator|new
name|BadRequestException
argument_list|(
name|err
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|MissingObjectException
name|err
parameter_list|)
block|{
throw|throw
operator|new
name|ResourceConflictException
argument_list|(
name|err
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
name|IncludedInResolver
operator|.
name|Result
name|d
init|=
name|IncludedInResolver
operator|.
name|resolve
argument_list|(
name|r
argument_list|,
name|rw
argument_list|,
name|rev
argument_list|)
decl_stmt|;
name|ListMultimap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|external
init|=
name|MultimapBuilder
operator|.
name|hashKeys
argument_list|()
operator|.
name|arrayListValues
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
for|for
control|(
name|ExternalIncludedIn
name|ext
range|:
name|externalIncludedIn
control|)
block|{
name|ListMultimap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|extIncludedIns
init|=
name|ext
operator|.
name|getIncludedIn
argument_list|(
name|project
operator|.
name|get
argument_list|()
argument_list|,
name|rev
operator|.
name|name
argument_list|()
argument_list|,
name|d
operator|.
name|getTags
argument_list|()
argument_list|,
name|d
operator|.
name|getBranches
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|extIncludedIns
operator|!=
literal|null
condition|)
block|{
name|external
operator|.
name|putAll
argument_list|(
name|extIncludedIns
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|IncludedInInfo
argument_list|(
name|d
operator|.
name|getBranches
argument_list|()
argument_list|,
name|d
operator|.
name|getTags
argument_list|()
argument_list|,
operator|(
operator|!
name|external
operator|.
name|isEmpty
argument_list|()
condition|?
name|external
operator|.
name|asMap
argument_list|()
else|:
literal|null
operator|)
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

