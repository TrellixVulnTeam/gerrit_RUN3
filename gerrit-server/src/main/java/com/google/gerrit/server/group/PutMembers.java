begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.group
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|GroupDescription
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|errors
operator|.
name|InactiveAccountException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|errors
operator|.
name|NoSuchAccountException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|AuthException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|BadRequestException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|DefaultInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|MethodNotAllowedException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestModifyView
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountGroup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountGroupMember
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountGroupMemberAudit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AuthType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|server
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|BadRequestHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|CurrentUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|IdentifiedUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountResolver
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AuthRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|GroupControl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AuthConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|MembersCollection
operator|.
name|MemberInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|PutMembers
operator|.
name|Input
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
DECL|class|PutMembers
class|class
name|PutMembers
implements|implements
name|RestModifyView
argument_list|<
name|GroupResource
argument_list|,
name|Input
argument_list|>
block|{
DECL|class|Input
specifier|static
class|class
name|Input
block|{
annotation|@
name|DefaultInput
DECL|field|_oneMember
name|String
name|_oneMember
decl_stmt|;
DECL|field|members
name|List
argument_list|<
name|String
argument_list|>
name|members
decl_stmt|;
DECL|method|init (Input in)
specifier|static
name|Input
name|init
parameter_list|(
name|Input
name|in
parameter_list|)
block|{
if|if
condition|(
name|in
operator|==
literal|null
condition|)
block|{
name|in
operator|=
operator|new
name|Input
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|in
operator|.
name|members
operator|==
literal|null
condition|)
block|{
name|in
operator|.
name|members
operator|=
name|Lists
operator|.
name|newArrayListWithCapacity
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|Strings
operator|.
name|isNullOrEmpty
argument_list|(
name|in
operator|.
name|_oneMember
argument_list|)
condition|)
block|{
name|in
operator|.
name|members
operator|.
name|add
argument_list|(
name|in
operator|.
name|_oneMember
argument_list|)
expr_stmt|;
block|}
return|return
name|in
return|;
block|}
block|}
DECL|field|groupControlFactory
specifier|private
specifier|final
name|GroupControl
operator|.
name|Factory
name|groupControlFactory
decl_stmt|;
DECL|field|accountManager
specifier|private
specifier|final
name|AccountManager
name|accountManager
decl_stmt|;
DECL|field|authType
specifier|private
specifier|final
name|AuthType
name|authType
decl_stmt|;
DECL|field|accountResolver
specifier|private
specifier|final
name|AccountResolver
name|accountResolver
decl_stmt|;
DECL|field|accountCache
specifier|private
specifier|final
name|AccountCache
name|accountCache
decl_stmt|;
DECL|field|db
specifier|private
specifier|final
name|ReviewDb
name|db
decl_stmt|;
DECL|field|self
specifier|private
specifier|final
name|Provider
argument_list|<
name|CurrentUser
argument_list|>
name|self
decl_stmt|;
annotation|@
name|Inject
DECL|method|PutMembers (final GroupControl.Factory groupControlFactory, final AccountManager accountManager, final AuthConfig authConfig, final AccountResolver accountResolver, final AccountCache accountCache, final ReviewDb db, final Provider<CurrentUser> self)
name|PutMembers
parameter_list|(
specifier|final
name|GroupControl
operator|.
name|Factory
name|groupControlFactory
parameter_list|,
specifier|final
name|AccountManager
name|accountManager
parameter_list|,
specifier|final
name|AuthConfig
name|authConfig
parameter_list|,
specifier|final
name|AccountResolver
name|accountResolver
parameter_list|,
specifier|final
name|AccountCache
name|accountCache
parameter_list|,
specifier|final
name|ReviewDb
name|db
parameter_list|,
specifier|final
name|Provider
argument_list|<
name|CurrentUser
argument_list|>
name|self
parameter_list|)
block|{
name|this
operator|.
name|groupControlFactory
operator|=
name|groupControlFactory
expr_stmt|;
name|this
operator|.
name|accountManager
operator|=
name|accountManager
expr_stmt|;
name|this
operator|.
name|authType
operator|=
name|authConfig
operator|.
name|getAuthType
argument_list|()
expr_stmt|;
name|this
operator|.
name|accountResolver
operator|=
name|accountResolver
expr_stmt|;
name|this
operator|.
name|accountCache
operator|=
name|accountCache
expr_stmt|;
name|this
operator|.
name|db
operator|=
name|db
expr_stmt|;
name|this
operator|.
name|self
operator|=
name|self
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|inputType ()
specifier|public
name|Class
argument_list|<
name|Input
argument_list|>
name|inputType
parameter_list|()
block|{
return|return
name|Input
operator|.
name|class
return|;
block|}
annotation|@
name|Override
DECL|method|apply (GroupResource resource, Input input)
specifier|public
name|List
argument_list|<
name|MemberInfo
argument_list|>
name|apply
parameter_list|(
name|GroupResource
name|resource
parameter_list|,
name|Input
name|input
parameter_list|)
throws|throws
name|AuthException
throws|,
name|MethodNotAllowedException
throws|,
name|BadRequestException
throws|,
name|OrmException
block|{
specifier|final
name|GroupDescription
operator|.
name|Basic
name|group
init|=
name|resource
operator|.
name|getGroup
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|group
operator|instanceof
name|GroupDescription
operator|.
name|Internal
operator|)
condition|)
block|{
throw|throw
operator|new
name|MethodNotAllowedException
argument_list|()
throw|;
block|}
name|input
operator|=
name|Input
operator|.
name|init
argument_list|(
name|input
argument_list|)
expr_stmt|;
specifier|final
name|AccountGroup
name|internalGroup
init|=
operator|(
operator|(
name|GroupDescription
operator|.
name|Internal
operator|)
name|group
operator|)
operator|.
name|getAccountGroup
argument_list|()
decl_stmt|;
specifier|final
name|GroupControl
name|control
init|=
name|groupControlFactory
operator|.
name|controlFor
argument_list|(
name|internalGroup
argument_list|)
decl_stmt|;
specifier|final
name|Map
argument_list|<
name|Account
operator|.
name|Id
argument_list|,
name|AccountGroupMember
argument_list|>
name|newAccountGroupMembers
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
specifier|final
name|List
argument_list|<
name|AccountGroupMemberAudit
argument_list|>
name|newAccountGroupMemberAudits
init|=
name|Lists
operator|.
name|newLinkedList
argument_list|()
decl_stmt|;
specifier|final
name|BadRequestHandler
name|badRequest
init|=
operator|new
name|BadRequestHandler
argument_list|(
literal|"adding new group members"
argument_list|)
decl_stmt|;
specifier|final
name|List
argument_list|<
name|MemberInfo
argument_list|>
name|newMembers
init|=
name|Lists
operator|.
name|newLinkedList
argument_list|()
decl_stmt|;
specifier|final
name|Account
operator|.
name|Id
name|me
init|=
operator|(
operator|(
name|IdentifiedUser
operator|)
name|self
operator|.
name|get
argument_list|()
operator|)
operator|.
name|getAccountId
argument_list|()
decl_stmt|;
for|for
control|(
specifier|final
name|String
name|nameOrEmail
range|:
name|input
operator|.
name|members
control|)
block|{
specifier|final
name|Account
name|a
init|=
name|findAccount
argument_list|(
name|nameOrEmail
argument_list|)
decl_stmt|;
if|if
condition|(
name|a
operator|==
literal|null
condition|)
block|{
name|badRequest
operator|.
name|addError
argument_list|(
operator|new
name|NoSuchAccountException
argument_list|(
name|nameOrEmail
argument_list|)
argument_list|)
expr_stmt|;
continue|continue;
block|}
if|if
condition|(
operator|!
name|a
operator|.
name|isActive
argument_list|()
condition|)
block|{
name|badRequest
operator|.
name|addError
argument_list|(
operator|new
name|InactiveAccountException
argument_list|(
name|a
operator|.
name|getFullName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
continue|continue;
block|}
if|if
condition|(
operator|!
name|control
operator|.
name|canAddMember
argument_list|(
name|a
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|AuthException
argument_list|(
literal|"Cannot add member: "
operator|+
name|a
operator|.
name|getFullName
argument_list|()
argument_list|)
throw|;
block|}
if|if
condition|(
operator|!
name|newAccountGroupMembers
operator|.
name|containsKey
argument_list|(
name|a
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
specifier|final
name|AccountGroupMember
operator|.
name|Key
name|key
init|=
operator|new
name|AccountGroupMember
operator|.
name|Key
argument_list|(
name|a
operator|.
name|getId
argument_list|()
argument_list|,
name|internalGroup
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
name|AccountGroupMember
name|m
init|=
name|db
operator|.
name|accountGroupMembers
argument_list|()
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|m
operator|==
literal|null
condition|)
block|{
name|m
operator|=
operator|new
name|AccountGroupMember
argument_list|(
name|key
argument_list|)
expr_stmt|;
name|newAccountGroupMembers
operator|.
name|put
argument_list|(
name|m
operator|.
name|getAccountId
argument_list|()
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|newAccountGroupMemberAudits
operator|.
name|add
argument_list|(
operator|new
name|AccountGroupMemberAudit
argument_list|(
name|m
argument_list|,
name|me
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|newMembers
operator|.
name|add
argument_list|(
name|MembersCollection
operator|.
name|parse
argument_list|(
name|a
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|badRequest
operator|.
name|failOnError
argument_list|()
expr_stmt|;
name|db
operator|.
name|accountGroupMembersAudit
argument_list|()
operator|.
name|insert
argument_list|(
name|newAccountGroupMemberAudits
argument_list|)
expr_stmt|;
name|db
operator|.
name|accountGroupMembers
argument_list|()
operator|.
name|insert
argument_list|(
name|newAccountGroupMembers
operator|.
name|values
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
specifier|final
name|AccountGroupMember
name|m
range|:
name|newAccountGroupMembers
operator|.
name|values
argument_list|()
control|)
block|{
name|accountCache
operator|.
name|evict
argument_list|(
name|m
operator|.
name|getAccountId
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|newMembers
return|;
block|}
DECL|method|findAccount (final String nameOrEmail)
specifier|private
name|Account
name|findAccount
parameter_list|(
specifier|final
name|String
name|nameOrEmail
parameter_list|)
throws|throws
name|OrmException
block|{
name|Account
name|r
init|=
name|accountResolver
operator|.
name|find
argument_list|(
name|nameOrEmail
argument_list|)
decl_stmt|;
if|if
condition|(
name|r
operator|==
literal|null
condition|)
block|{
switch|switch
condition|(
name|authType
condition|)
block|{
case|case
name|HTTP_LDAP
case|:
case|case
name|CLIENT_SSL_CERT_LDAP
case|:
case|case
name|LDAP
case|:
name|r
operator|=
name|createAccountByLdap
argument_list|(
name|nameOrEmail
argument_list|)
expr_stmt|;
break|break;
default|default:
block|}
block|}
return|return
name|r
return|;
block|}
DECL|method|createAccountByLdap (String user)
specifier|private
name|Account
name|createAccountByLdap
parameter_list|(
name|String
name|user
parameter_list|)
block|{
if|if
condition|(
operator|!
name|user
operator|.
name|matches
argument_list|(
name|Account
operator|.
name|USER_NAME_PATTERN
argument_list|)
condition|)
block|{
return|return
literal|null
return|;
block|}
try|try
block|{
specifier|final
name|AuthRequest
name|req
init|=
name|AuthRequest
operator|.
name|forUser
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|req
operator|.
name|setSkipAuthentication
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|accountCache
operator|.
name|get
argument_list|(
name|accountManager
operator|.
name|authenticate
argument_list|(
name|req
argument_list|)
operator|.
name|getAccountId
argument_list|()
argument_list|)
operator|.
name|getAccount
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|AccountException
name|e
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
DECL|class|PutMember
specifier|static
class|class
name|PutMember
implements|implements
name|RestModifyView
argument_list|<
name|GroupResource
argument_list|,
name|PutMember
operator|.
name|Input
argument_list|>
block|{
DECL|class|Input
specifier|static
class|class
name|Input
block|{     }
DECL|field|put
specifier|private
specifier|final
name|Provider
argument_list|<
name|PutMembers
argument_list|>
name|put
decl_stmt|;
DECL|field|id
specifier|private
specifier|final
name|String
name|id
decl_stmt|;
DECL|method|PutMember (final Provider<PutMembers> put, String id)
name|PutMember
parameter_list|(
specifier|final
name|Provider
argument_list|<
name|PutMembers
argument_list|>
name|put
parameter_list|,
name|String
name|id
parameter_list|)
block|{
name|this
operator|.
name|put
operator|=
name|put
expr_stmt|;
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|inputType ()
specifier|public
name|Class
argument_list|<
name|PutMember
operator|.
name|Input
argument_list|>
name|inputType
parameter_list|()
block|{
return|return
name|PutMember
operator|.
name|Input
operator|.
name|class
return|;
block|}
annotation|@
name|Override
DECL|method|apply (GroupResource resource, PutMember.Input input)
specifier|public
name|Object
name|apply
parameter_list|(
name|GroupResource
name|resource
parameter_list|,
name|PutMember
operator|.
name|Input
name|input
parameter_list|)
throws|throws
name|AuthException
throws|,
name|MethodNotAllowedException
throws|,
name|BadRequestException
throws|,
name|OrmException
block|{
name|PutMembers
operator|.
name|Input
name|in
init|=
operator|new
name|PutMembers
operator|.
name|Input
argument_list|()
decl_stmt|;
name|in
operator|.
name|_oneMember
operator|=
name|id
expr_stmt|;
return|return
name|put
operator|.
name|get
argument_list|()
operator|.
name|apply
argument_list|(
name|resource
argument_list|,
name|in
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

