begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.group
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|GroupResource
operator|.
name|GROUP_KIND
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|MemberResource
operator|.
name|MEMBER_KIND
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|SubgroupResource
operator|.
name|SUBGROUP_KIND
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|audit
operator|.
name|GroupMemberAuditListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|registration
operator|.
name|DynamicMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|registration
operator|.
name|DynamicSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestApiModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|IdentifiedUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|AddMembers
operator|.
name|UpdateMember
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|AddSubgroups
operator|.
name|UpdateSubgroup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|DeleteMembers
operator|.
name|DeleteMember
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|DeleteSubgroups
operator|.
name|DeleteSubgroup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provides
import|;
end_import

begin_class
DECL|class|Module
specifier|public
class|class
name|Module
extends|extends
name|RestApiModule
block|{
annotation|@
name|Override
DECL|method|configure ()
specifier|protected
name|void
name|configure
parameter_list|()
block|{
name|bind
argument_list|(
name|GroupsCollection
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicMap
operator|.
name|mapOf
argument_list|(
name|binder
argument_list|()
argument_list|,
name|GROUP_KIND
argument_list|)
expr_stmt|;
name|DynamicMap
operator|.
name|mapOf
argument_list|(
name|binder
argument_list|()
argument_list|,
name|MEMBER_KIND
argument_list|)
expr_stmt|;
name|DynamicMap
operator|.
name|mapOf
argument_list|(
name|binder
argument_list|()
argument_list|,
name|SUBGROUP_KIND
argument_list|)
expr_stmt|;
name|get
argument_list|(
name|GROUP_KIND
argument_list|)
operator|.
name|to
argument_list|(
name|GetGroup
operator|.
name|class
argument_list|)
expr_stmt|;
name|put
argument_list|(
name|GROUP_KIND
argument_list|)
operator|.
name|to
argument_list|(
name|PutGroup
operator|.
name|class
argument_list|)
expr_stmt|;
name|get
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"detail"
argument_list|)
operator|.
name|to
argument_list|(
name|GetDetail
operator|.
name|class
argument_list|)
expr_stmt|;
name|post
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"index"
argument_list|)
operator|.
name|to
argument_list|(
name|Index
operator|.
name|class
argument_list|)
expr_stmt|;
name|post
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"members"
argument_list|)
operator|.
name|to
argument_list|(
name|AddMembers
operator|.
name|class
argument_list|)
expr_stmt|;
name|post
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"members.add"
argument_list|)
operator|.
name|to
argument_list|(
name|AddMembers
operator|.
name|class
argument_list|)
expr_stmt|;
name|post
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"members.delete"
argument_list|)
operator|.
name|to
argument_list|(
name|DeleteMembers
operator|.
name|class
argument_list|)
expr_stmt|;
name|post
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"groups"
argument_list|)
operator|.
name|to
argument_list|(
name|AddSubgroups
operator|.
name|class
argument_list|)
expr_stmt|;
name|post
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"groups.add"
argument_list|)
operator|.
name|to
argument_list|(
name|AddSubgroups
operator|.
name|class
argument_list|)
expr_stmt|;
name|post
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"groups.delete"
argument_list|)
operator|.
name|to
argument_list|(
name|DeleteSubgroups
operator|.
name|class
argument_list|)
expr_stmt|;
name|get
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"description"
argument_list|)
operator|.
name|to
argument_list|(
name|GetDescription
operator|.
name|class
argument_list|)
expr_stmt|;
name|put
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"description"
argument_list|)
operator|.
name|to
argument_list|(
name|PutDescription
operator|.
name|class
argument_list|)
expr_stmt|;
name|delete
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"description"
argument_list|)
operator|.
name|to
argument_list|(
name|PutDescription
operator|.
name|class
argument_list|)
expr_stmt|;
name|get
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"name"
argument_list|)
operator|.
name|to
argument_list|(
name|GetName
operator|.
name|class
argument_list|)
expr_stmt|;
name|put
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"name"
argument_list|)
operator|.
name|to
argument_list|(
name|PutName
operator|.
name|class
argument_list|)
expr_stmt|;
name|get
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"owner"
argument_list|)
operator|.
name|to
argument_list|(
name|GetOwner
operator|.
name|class
argument_list|)
expr_stmt|;
name|put
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"owner"
argument_list|)
operator|.
name|to
argument_list|(
name|PutOwner
operator|.
name|class
argument_list|)
expr_stmt|;
name|get
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"options"
argument_list|)
operator|.
name|to
argument_list|(
name|GetOptions
operator|.
name|class
argument_list|)
expr_stmt|;
name|put
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"options"
argument_list|)
operator|.
name|to
argument_list|(
name|PutOptions
operator|.
name|class
argument_list|)
expr_stmt|;
name|get
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"log.audit"
argument_list|)
operator|.
name|to
argument_list|(
name|GetAuditLog
operator|.
name|class
argument_list|)
expr_stmt|;
name|child
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"members"
argument_list|)
operator|.
name|to
argument_list|(
name|MembersCollection
operator|.
name|class
argument_list|)
expr_stmt|;
name|get
argument_list|(
name|MEMBER_KIND
argument_list|)
operator|.
name|to
argument_list|(
name|GetMember
operator|.
name|class
argument_list|)
expr_stmt|;
name|put
argument_list|(
name|MEMBER_KIND
argument_list|)
operator|.
name|to
argument_list|(
name|UpdateMember
operator|.
name|class
argument_list|)
expr_stmt|;
name|delete
argument_list|(
name|MEMBER_KIND
argument_list|)
operator|.
name|to
argument_list|(
name|DeleteMember
operator|.
name|class
argument_list|)
expr_stmt|;
name|child
argument_list|(
name|GROUP_KIND
argument_list|,
literal|"groups"
argument_list|)
operator|.
name|to
argument_list|(
name|SubgroupsCollection
operator|.
name|class
argument_list|)
expr_stmt|;
name|get
argument_list|(
name|SUBGROUP_KIND
argument_list|)
operator|.
name|to
argument_list|(
name|GetSubgroup
operator|.
name|class
argument_list|)
expr_stmt|;
name|put
argument_list|(
name|SUBGROUP_KIND
argument_list|)
operator|.
name|to
argument_list|(
name|UpdateSubgroup
operator|.
name|class
argument_list|)
expr_stmt|;
name|delete
argument_list|(
name|SUBGROUP_KIND
argument_list|)
operator|.
name|to
argument_list|(
name|DeleteSubgroup
operator|.
name|class
argument_list|)
expr_stmt|;
name|factory
argument_list|(
name|CreateGroup
operator|.
name|Factory
operator|.
name|class
argument_list|)
expr_stmt|;
name|factory
argument_list|(
name|GroupsUpdate
operator|.
name|Factory
operator|.
name|class
argument_list|)
expr_stmt|;
name|DynamicSet
operator|.
name|bind
argument_list|(
name|binder
argument_list|()
argument_list|,
name|GroupMemberAuditListener
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DbGroupMemberAuditListener
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Provides
annotation|@
name|ServerInitiated
DECL|method|provideServerInitiatedGroupsUpdate (GroupsUpdate.Factory groupsUpdateFactory)
name|GroupsUpdate
name|provideServerInitiatedGroupsUpdate
parameter_list|(
name|GroupsUpdate
operator|.
name|Factory
name|groupsUpdateFactory
parameter_list|)
block|{
return|return
name|groupsUpdateFactory
operator|.
name|create
argument_list|(
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Provides
annotation|@
name|UserInitiated
DECL|method|provideUserInitiatedGroupsUpdate ( GroupsUpdate.Factory groupsUpdateFactory, IdentifiedUser currentUser)
name|GroupsUpdate
name|provideUserInitiatedGroupsUpdate
parameter_list|(
name|GroupsUpdate
operator|.
name|Factory
name|groupsUpdateFactory
parameter_list|,
name|IdentifiedUser
name|currentUser
parameter_list|)
block|{
return|return
name|groupsUpdateFactory
operator|.
name|create
argument_list|(
name|currentUser
argument_list|)
return|;
block|}
block|}
end_class

end_unit

