begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2016 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.account
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheLoader
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|LoadingCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSetMultimap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ListMultimap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|MultimapBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountExternalId
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|server
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|cache
operator|.
name|CacheModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|SchemaFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Module
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|TypeLiteral
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|name
operator|.
name|Named
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutionException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|locks
operator|.
name|Lock
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|locks
operator|.
name|ReentrantLock
import|;
end_import

begin_class
annotation|@
name|Singleton
DECL|class|ExternalIdCacheImpl
specifier|public
class|class
name|ExternalIdCacheImpl
implements|implements
name|ExternalIdCache
block|{
DECL|field|log
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ExternalIdCacheImpl
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|CACHE_NAME
specifier|private
specifier|static
specifier|final
name|String
name|CACHE_NAME
init|=
literal|"external_ids_map"
decl_stmt|;
DECL|method|module ()
specifier|public
specifier|static
name|Module
name|module
parameter_list|()
block|{
return|return
operator|new
name|CacheModule
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|void
name|configure
parameter_list|()
block|{
name|cache
argument_list|(
name|CACHE_NAME
argument_list|,
name|AllKey
operator|.
name|class
argument_list|,
operator|new
name|TypeLiteral
argument_list|<
name|ImmutableSetMultimap
argument_list|<
name|Account
operator|.
name|Id
argument_list|,
name|AccountExternalId
argument_list|>
argument_list|>
argument_list|()
block|{}
argument_list|)
operator|.
name|maximumWeight
argument_list|(
literal|1
argument_list|)
operator|.
name|loader
argument_list|(
name|Loader
operator|.
name|class
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|ExternalIdCacheImpl
operator|.
name|class
argument_list|)
expr_stmt|;
name|bind
argument_list|(
name|ExternalIdCache
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ExternalIdCacheImpl
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
specifier|private
specifier|final
name|LoadingCache
argument_list|<
name|AllKey
argument_list|,
DECL|field|extIdsByAccount
name|ImmutableSetMultimap
argument_list|<
name|Account
operator|.
name|Id
argument_list|,
name|AccountExternalId
argument_list|>
argument_list|>
name|extIdsByAccount
decl_stmt|;
DECL|field|lock
specifier|private
specifier|final
name|Lock
name|lock
decl_stmt|;
annotation|@
name|Inject
DECL|method|ExternalIdCacheImpl ( @amedCACHE_NAME) LoadingCache<AllKey, ImmutableSetMultimap<Account.Id, AccountExternalId>> extIdsByAccount)
name|ExternalIdCacheImpl
parameter_list|(
annotation|@
name|Named
argument_list|(
name|CACHE_NAME
argument_list|)
name|LoadingCache
argument_list|<
name|AllKey
argument_list|,
name|ImmutableSetMultimap
argument_list|<
name|Account
operator|.
name|Id
argument_list|,
name|AccountExternalId
argument_list|>
argument_list|>
name|extIdsByAccount
parameter_list|)
block|{
name|this
operator|.
name|extIdsByAccount
operator|=
name|extIdsByAccount
expr_stmt|;
name|this
operator|.
name|lock
operator|=
operator|new
name|ReentrantLock
argument_list|(
literal|true
comment|/* fair */
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onCreate (Iterable<AccountExternalId> extIds)
specifier|public
name|void
name|onCreate
parameter_list|(
name|Iterable
argument_list|<
name|AccountExternalId
argument_list|>
name|extIds
parameter_list|)
block|{
name|lock
operator|.
name|lock
argument_list|()
expr_stmt|;
try|try
block|{
name|ListMultimap
argument_list|<
name|Account
operator|.
name|Id
argument_list|,
name|AccountExternalId
argument_list|>
name|n
init|=
name|MultimapBuilder
operator|.
name|hashKeys
argument_list|()
operator|.
name|arrayListValues
argument_list|()
operator|.
name|build
argument_list|(
name|extIdsByAccount
operator|.
name|get
argument_list|(
name|AllKey
operator|.
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|AccountExternalId
name|extId
range|:
name|extIds
control|)
block|{
name|n
operator|.
name|put
argument_list|(
name|extId
operator|.
name|getAccountId
argument_list|()
argument_list|,
name|extId
argument_list|)
expr_stmt|;
block|}
name|extIdsByAccount
operator|.
name|put
argument_list|(
name|AllKey
operator|.
name|ALL
argument_list|,
name|ImmutableSetMultimap
operator|.
name|copyOf
argument_list|(
name|n
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ExecutionException
name|e
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"Cannot list external IDs"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|lock
operator|.
name|unlock
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onRemove (Iterable<AccountExternalId> extIds)
specifier|public
name|void
name|onRemove
parameter_list|(
name|Iterable
argument_list|<
name|AccountExternalId
argument_list|>
name|extIds
parameter_list|)
block|{
name|lock
operator|.
name|lock
argument_list|()
expr_stmt|;
try|try
block|{
name|ListMultimap
argument_list|<
name|Account
operator|.
name|Id
argument_list|,
name|AccountExternalId
argument_list|>
name|n
init|=
name|MultimapBuilder
operator|.
name|hashKeys
argument_list|()
operator|.
name|arrayListValues
argument_list|()
operator|.
name|build
argument_list|(
name|extIdsByAccount
operator|.
name|get
argument_list|(
name|AllKey
operator|.
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|AccountExternalId
name|extId
range|:
name|extIds
control|)
block|{
name|n
operator|.
name|remove
argument_list|(
name|extId
operator|.
name|getAccountId
argument_list|()
argument_list|,
name|extId
argument_list|)
expr_stmt|;
block|}
name|extIdsByAccount
operator|.
name|put
argument_list|(
name|AllKey
operator|.
name|ALL
argument_list|,
name|ImmutableSetMultimap
operator|.
name|copyOf
argument_list|(
name|n
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ExecutionException
name|e
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"Cannot list external IDs"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|lock
operator|.
name|unlock
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onRemove (Account.Id accountId, Iterable<AccountExternalId.Key> extIdKeys)
specifier|public
name|void
name|onRemove
parameter_list|(
name|Account
operator|.
name|Id
name|accountId
parameter_list|,
name|Iterable
argument_list|<
name|AccountExternalId
operator|.
name|Key
argument_list|>
name|extIdKeys
parameter_list|)
block|{
name|lock
operator|.
name|lock
argument_list|()
expr_stmt|;
try|try
block|{
name|ListMultimap
argument_list|<
name|Account
operator|.
name|Id
argument_list|,
name|AccountExternalId
argument_list|>
name|n
init|=
name|MultimapBuilder
operator|.
name|hashKeys
argument_list|()
operator|.
name|arrayListValues
argument_list|()
operator|.
name|build
argument_list|(
name|extIdsByAccount
operator|.
name|get
argument_list|(
name|AllKey
operator|.
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|AccountExternalId
name|extId
range|:
name|byAccount
argument_list|(
name|accountId
argument_list|)
control|)
block|{
for|for
control|(
name|AccountExternalId
operator|.
name|Key
name|extIdKey
range|:
name|extIdKeys
control|)
block|{
if|if
condition|(
name|extIdKey
operator|.
name|equals
argument_list|(
name|extId
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
block|{
name|n
operator|.
name|remove
argument_list|(
name|accountId
argument_list|,
name|extId
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
name|extIdsByAccount
operator|.
name|put
argument_list|(
name|AllKey
operator|.
name|ALL
argument_list|,
name|ImmutableSetMultimap
operator|.
name|copyOf
argument_list|(
name|n
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ExecutionException
name|e
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"Cannot list external IDs"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|lock
operator|.
name|unlock
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|onUpdate (AccountExternalId updatedExtId)
specifier|public
name|void
name|onUpdate
parameter_list|(
name|AccountExternalId
name|updatedExtId
parameter_list|)
block|{
name|lock
operator|.
name|lock
argument_list|()
expr_stmt|;
try|try
block|{
name|ListMultimap
argument_list|<
name|Account
operator|.
name|Id
argument_list|,
name|AccountExternalId
argument_list|>
name|n
init|=
name|MultimapBuilder
operator|.
name|hashKeys
argument_list|()
operator|.
name|arrayListValues
argument_list|()
operator|.
name|build
argument_list|(
name|extIdsByAccount
operator|.
name|get
argument_list|(
name|AllKey
operator|.
name|ALL
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|AccountExternalId
name|extId
range|:
name|byAccount
argument_list|(
name|updatedExtId
operator|.
name|getAccountId
argument_list|()
argument_list|)
control|)
block|{
if|if
condition|(
name|updatedExtId
operator|.
name|getKey
argument_list|()
operator|.
name|equals
argument_list|(
name|extId
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
block|{
name|n
operator|.
name|remove
argument_list|(
name|updatedExtId
operator|.
name|getAccountId
argument_list|()
argument_list|,
name|extId
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
name|n
operator|.
name|put
argument_list|(
name|updatedExtId
operator|.
name|getAccountId
argument_list|()
argument_list|,
name|updatedExtId
argument_list|)
expr_stmt|;
name|extIdsByAccount
operator|.
name|put
argument_list|(
name|AllKey
operator|.
name|ALL
argument_list|,
name|ImmutableSetMultimap
operator|.
name|copyOf
argument_list|(
name|n
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ExecutionException
name|e
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"Cannot list external IDs"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|lock
operator|.
name|unlock
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|byAccount (Account.Id accountId)
specifier|public
name|Collection
argument_list|<
name|AccountExternalId
argument_list|>
name|byAccount
parameter_list|(
name|Account
operator|.
name|Id
name|accountId
parameter_list|)
block|{
try|try
block|{
return|return
name|extIdsByAccount
operator|.
name|get
argument_list|(
name|AllKey
operator|.
name|ALL
argument_list|)
operator|.
name|get
argument_list|(
name|accountId
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ExecutionException
name|e
parameter_list|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"Cannot list external ids"
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return
name|Collections
operator|.
name|emptySet
argument_list|()
return|;
block|}
block|}
DECL|class|AllKey
specifier|static
class|class
name|AllKey
block|{
DECL|field|ALL
specifier|static
specifier|final
name|AllKey
name|ALL
init|=
operator|new
name|AllKey
argument_list|()
decl_stmt|;
DECL|method|AllKey ()
specifier|private
name|AllKey
parameter_list|()
block|{     }
block|}
DECL|class|Loader
specifier|static
class|class
name|Loader
extends|extends
name|CacheLoader
argument_list|<
name|AllKey
argument_list|,
name|ImmutableSetMultimap
argument_list|<
name|Account
operator|.
name|Id
argument_list|,
name|AccountExternalId
argument_list|>
argument_list|>
block|{
DECL|field|schema
specifier|private
specifier|final
name|SchemaFactory
argument_list|<
name|ReviewDb
argument_list|>
name|schema
decl_stmt|;
annotation|@
name|Inject
DECL|method|Loader (SchemaFactory<ReviewDb> schema)
name|Loader
parameter_list|(
name|SchemaFactory
argument_list|<
name|ReviewDb
argument_list|>
name|schema
parameter_list|)
block|{
name|this
operator|.
name|schema
operator|=
name|schema
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|load (AllKey key)
specifier|public
name|ImmutableSetMultimap
argument_list|<
name|Account
operator|.
name|Id
argument_list|,
name|AccountExternalId
argument_list|>
name|load
parameter_list|(
name|AllKey
name|key
parameter_list|)
throws|throws
name|Exception
block|{
try|try
init|(
name|ReviewDb
name|db
init|=
name|schema
operator|.
name|open
argument_list|()
init|)
block|{
name|ListMultimap
argument_list|<
name|Account
operator|.
name|Id
argument_list|,
name|AccountExternalId
argument_list|>
name|extIdsByAccount
init|=
name|MultimapBuilder
operator|.
name|hashKeys
argument_list|()
operator|.
name|arrayListValues
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
for|for
control|(
name|AccountExternalId
name|extId
range|:
name|db
operator|.
name|accountExternalIds
argument_list|()
operator|.
name|all
argument_list|()
control|)
block|{
name|extIdsByAccount
operator|.
name|put
argument_list|(
name|extId
operator|.
name|getAccountId
argument_list|()
argument_list|,
name|extId
argument_list|)
expr_stmt|;
block|}
return|return
name|ImmutableSetMultimap
operator|.
name|copyOf
argument_list|(
name|extIdsByAccount
argument_list|)
return|;
block|}
block|}
block|}
block|}
end_class

end_unit

