begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2012 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|change
package|;
end_package

begin_import
import|import static
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
operator|.
name|UTF_8
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|MoreObjects
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|hash
operator|.
name|Hasher
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|hash
operator|.
name|Hashing
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestResource
operator|.
name|HasETag
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestView
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountGroup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|server
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|ApprovalsUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|CurrentUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|PatchSetUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|StarredChangesUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ChangeNotes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|permissions
operator|.
name|PermissionBackend
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ChangeControl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ProjectState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|TypeLiteral
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|assistedinject
operator|.
name|Assisted
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectId
import|;
end_import

begin_class
DECL|class|ChangeResource
specifier|public
class|class
name|ChangeResource
implements|implements
name|RestResource
implements|,
name|HasETag
block|{
comment|/**    * JSON format version number for ETag computations.    *    *<p>Should be bumped on any JSON format change (new fields, etc.) so that otherwise unmodified    * changes get new ETags.    */
DECL|field|JSON_FORMAT_VERSION
specifier|public
specifier|static
specifier|final
name|int
name|JSON_FORMAT_VERSION
init|=
literal|1
decl_stmt|;
DECL|field|CHANGE_KIND
specifier|public
specifier|static
specifier|final
name|TypeLiteral
argument_list|<
name|RestView
argument_list|<
name|ChangeResource
argument_list|>
argument_list|>
name|CHANGE_KIND
init|=
operator|new
name|TypeLiteral
argument_list|<
name|RestView
argument_list|<
name|ChangeResource
argument_list|>
argument_list|>
argument_list|()
block|{}
decl_stmt|;
DECL|interface|Factory
specifier|public
interface|interface
name|Factory
block|{
DECL|method|create (ChangeControl ctl)
name|ChangeResource
name|create
parameter_list|(
name|ChangeControl
name|ctl
parameter_list|)
function_decl|;
block|}
DECL|field|ZERO_ID_STRING
specifier|private
specifier|static
specifier|final
name|String
name|ZERO_ID_STRING
init|=
name|ObjectId
operator|.
name|zeroId
argument_list|()
operator|.
name|name
argument_list|()
decl_stmt|;
DECL|field|db
specifier|private
specifier|final
name|Provider
argument_list|<
name|ReviewDb
argument_list|>
name|db
decl_stmt|;
DECL|field|accountCache
specifier|private
specifier|final
name|AccountCache
name|accountCache
decl_stmt|;
DECL|field|approvalUtil
specifier|private
specifier|final
name|ApprovalsUtil
name|approvalUtil
decl_stmt|;
DECL|field|patchSetUtil
specifier|private
specifier|final
name|PatchSetUtil
name|patchSetUtil
decl_stmt|;
DECL|field|permissionBackend
specifier|private
specifier|final
name|PermissionBackend
name|permissionBackend
decl_stmt|;
DECL|field|starredChangesUtil
specifier|private
specifier|final
name|StarredChangesUtil
name|starredChangesUtil
decl_stmt|;
DECL|field|control
specifier|private
specifier|final
name|ChangeControl
name|control
decl_stmt|;
annotation|@
name|Inject
DECL|method|ChangeResource ( Provider<ReviewDb> db, AccountCache accountCache, ApprovalsUtil approvalUtil, PatchSetUtil patchSetUtil, PermissionBackend permissionBackend, StarredChangesUtil starredChangesUtil, @Assisted ChangeControl control)
name|ChangeResource
parameter_list|(
name|Provider
argument_list|<
name|ReviewDb
argument_list|>
name|db
parameter_list|,
name|AccountCache
name|accountCache
parameter_list|,
name|ApprovalsUtil
name|approvalUtil
parameter_list|,
name|PatchSetUtil
name|patchSetUtil
parameter_list|,
name|PermissionBackend
name|permissionBackend
parameter_list|,
name|StarredChangesUtil
name|starredChangesUtil
parameter_list|,
annotation|@
name|Assisted
name|ChangeControl
name|control
parameter_list|)
block|{
name|this
operator|.
name|db
operator|=
name|db
expr_stmt|;
name|this
operator|.
name|accountCache
operator|=
name|accountCache
expr_stmt|;
name|this
operator|.
name|approvalUtil
operator|=
name|approvalUtil
expr_stmt|;
name|this
operator|.
name|patchSetUtil
operator|=
name|patchSetUtil
expr_stmt|;
name|this
operator|.
name|permissionBackend
operator|=
name|permissionBackend
expr_stmt|;
name|this
operator|.
name|starredChangesUtil
operator|=
name|starredChangesUtil
expr_stmt|;
name|this
operator|.
name|control
operator|=
name|control
expr_stmt|;
block|}
DECL|method|permissions ()
specifier|public
name|PermissionBackend
operator|.
name|ForChange
name|permissions
parameter_list|()
block|{
return|return
name|permissionBackend
operator|.
name|user
argument_list|(
name|control
operator|.
name|getUser
argument_list|()
argument_list|)
operator|.
name|change
argument_list|(
name|getNotes
argument_list|()
argument_list|)
return|;
block|}
DECL|method|getUser ()
specifier|public
name|CurrentUser
name|getUser
parameter_list|()
block|{
return|return
name|control
operator|.
name|getUser
argument_list|()
return|;
block|}
DECL|method|getId ()
specifier|public
name|Change
operator|.
name|Id
name|getId
parameter_list|()
block|{
return|return
name|control
operator|.
name|getId
argument_list|()
return|;
block|}
comment|/** @return true if {@link #getUser()} is the change's owner. */
DECL|method|isUserOwner ()
specifier|public
name|boolean
name|isUserOwner
parameter_list|()
block|{
name|CurrentUser
name|user
init|=
name|control
operator|.
name|getUser
argument_list|()
decl_stmt|;
name|Account
operator|.
name|Id
name|owner
init|=
name|getChange
argument_list|()
operator|.
name|getOwner
argument_list|()
decl_stmt|;
return|return
name|user
operator|.
name|isIdentifiedUser
argument_list|()
operator|&&
name|user
operator|.
name|asIdentifiedUser
argument_list|()
operator|.
name|getAccountId
argument_list|()
operator|.
name|equals
argument_list|(
name|owner
argument_list|)
return|;
block|}
DECL|method|getChange ()
specifier|public
name|Change
name|getChange
parameter_list|()
block|{
return|return
name|control
operator|.
name|getChange
argument_list|()
return|;
block|}
DECL|method|getProject ()
specifier|public
name|Project
operator|.
name|NameKey
name|getProject
parameter_list|()
block|{
return|return
name|getChange
argument_list|()
operator|.
name|getProject
argument_list|()
return|;
block|}
DECL|method|getNotes ()
specifier|public
name|ChangeNotes
name|getNotes
parameter_list|()
block|{
return|return
name|control
operator|.
name|getNotes
argument_list|()
return|;
block|}
comment|// This includes all information relevant for ETag computation
comment|// unrelated to the UI.
DECL|method|prepareETag (Hasher h, CurrentUser user)
specifier|public
name|void
name|prepareETag
parameter_list|(
name|Hasher
name|h
parameter_list|,
name|CurrentUser
name|user
parameter_list|)
block|{
name|h
operator|.
name|putInt
argument_list|(
name|JSON_FORMAT_VERSION
argument_list|)
operator|.
name|putLong
argument_list|(
name|getChange
argument_list|()
operator|.
name|getLastUpdatedOn
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
operator|.
name|putInt
argument_list|(
name|getChange
argument_list|()
operator|.
name|getRowVersion
argument_list|()
argument_list|)
operator|.
name|putInt
argument_list|(
name|user
operator|.
name|isIdentifiedUser
argument_list|()
condition|?
name|user
operator|.
name|getAccountId
argument_list|()
operator|.
name|get
argument_list|()
else|:
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|user
operator|.
name|isIdentifiedUser
argument_list|()
condition|)
block|{
for|for
control|(
name|AccountGroup
operator|.
name|UUID
name|uuid
range|:
name|user
operator|.
name|getEffectiveGroups
argument_list|()
operator|.
name|getKnownGroups
argument_list|()
control|)
block|{
name|h
operator|.
name|putBytes
argument_list|(
name|uuid
operator|.
name|get
argument_list|()
operator|.
name|getBytes
argument_list|(
name|UTF_8
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|byte
index|[]
name|buf
init|=
operator|new
name|byte
index|[
literal|20
index|]
decl_stmt|;
name|Set
argument_list|<
name|Account
operator|.
name|Id
argument_list|>
name|accounts
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|accounts
operator|.
name|add
argument_list|(
name|getChange
argument_list|()
operator|.
name|getOwner
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|getChange
argument_list|()
operator|.
name|getAssignee
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|accounts
operator|.
name|add
argument_list|(
name|getChange
argument_list|()
operator|.
name|getAssignee
argument_list|()
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|patchSetUtil
operator|.
name|byChange
argument_list|(
name|db
operator|.
name|get
argument_list|()
argument_list|,
name|getNotes
argument_list|()
argument_list|)
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|ps
lambda|->
name|ps
operator|.
name|getUploader
argument_list|()
argument_list|)
operator|.
name|forEach
argument_list|(
name|accounts
operator|::
name|add
argument_list|)
expr_stmt|;
comment|// It's intentional to include the states for *all* reviewers into the ETag computation.
comment|// We need the states of all current reviewers and CCs because they are part of ChangeInfo.
comment|// Including removed reviewers is a cheap way of making sure that the states of accounts that
comment|// posted a message on the change are included. Loading all change messages to find the exact
comment|// set of accounts that posted a message is too expensive. However everyone who posts a
comment|// message is automatically added as reviewer. Hence if we include removed reviewers we can
comment|// be sure that we have all accounts that posted messages on the change.
name|accounts
operator|.
name|addAll
argument_list|(
name|approvalUtil
operator|.
name|getReviewers
argument_list|(
name|db
operator|.
name|get
argument_list|()
argument_list|,
name|getNotes
argument_list|()
argument_list|)
operator|.
name|all
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OrmException
name|e
parameter_list|)
block|{
comment|// This ETag will be invalidated if it loads next time.
block|}
name|accounts
operator|.
name|stream
argument_list|()
operator|.
name|forEach
argument_list|(
name|a
lambda|->
name|hashAccount
argument_list|(
name|h
argument_list|,
name|accountCache
operator|.
name|get
argument_list|(
name|a
argument_list|)
argument_list|,
name|buf
argument_list|)
argument_list|)
expr_stmt|;
name|ObjectId
name|noteId
decl_stmt|;
try|try
block|{
name|noteId
operator|=
name|getNotes
argument_list|()
operator|.
name|loadRevision
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OrmException
name|e
parameter_list|)
block|{
name|noteId
operator|=
literal|null
expr_stmt|;
comment|// This ETag will be invalidated if it loads next time.
block|}
name|hashObjectId
argument_list|(
name|h
argument_list|,
name|noteId
argument_list|,
name|buf
argument_list|)
expr_stmt|;
comment|// TODO(dborowitz): Include more NoteDb and other related refs, e.g. drafts
comment|// and edits.
for|for
control|(
name|ProjectState
name|p
range|:
name|control
operator|.
name|getProjectControl
argument_list|()
operator|.
name|getProjectState
argument_list|()
operator|.
name|tree
argument_list|()
control|)
block|{
name|hashObjectId
argument_list|(
name|h
argument_list|,
name|p
operator|.
name|getConfig
argument_list|()
operator|.
name|getRevision
argument_list|()
argument_list|,
name|buf
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|getETag ()
specifier|public
name|String
name|getETag
parameter_list|()
block|{
name|CurrentUser
name|user
init|=
name|control
operator|.
name|getUser
argument_list|()
decl_stmt|;
name|Hasher
name|h
init|=
name|Hashing
operator|.
name|murmur3_128
argument_list|()
operator|.
name|newHasher
argument_list|()
decl_stmt|;
if|if
condition|(
name|user
operator|.
name|isIdentifiedUser
argument_list|()
condition|)
block|{
name|h
operator|.
name|putString
argument_list|(
name|starredChangesUtil
operator|.
name|getObjectId
argument_list|(
name|user
operator|.
name|getAccountId
argument_list|()
argument_list|,
name|getId
argument_list|()
argument_list|)
operator|.
name|name
argument_list|()
argument_list|,
name|UTF_8
argument_list|)
expr_stmt|;
block|}
name|prepareETag
argument_list|(
name|h
argument_list|,
name|user
argument_list|)
expr_stmt|;
return|return
name|h
operator|.
name|hash
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|hashObjectId (Hasher h, ObjectId id, byte[] buf)
specifier|private
name|void
name|hashObjectId
parameter_list|(
name|Hasher
name|h
parameter_list|,
name|ObjectId
name|id
parameter_list|,
name|byte
index|[]
name|buf
parameter_list|)
block|{
name|MoreObjects
operator|.
name|firstNonNull
argument_list|(
name|id
argument_list|,
name|ObjectId
operator|.
name|zeroId
argument_list|()
argument_list|)
operator|.
name|copyRawTo
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|h
operator|.
name|putBytes
argument_list|(
name|buf
argument_list|)
expr_stmt|;
block|}
DECL|method|hashAccount (Hasher h, AccountState accountState, byte[] buf)
specifier|private
name|void
name|hashAccount
parameter_list|(
name|Hasher
name|h
parameter_list|,
name|AccountState
name|accountState
parameter_list|,
name|byte
index|[]
name|buf
parameter_list|)
block|{
name|h
operator|.
name|putString
argument_list|(
name|MoreObjects
operator|.
name|firstNonNull
argument_list|(
name|accountState
operator|.
name|getAccount
argument_list|()
operator|.
name|getMetaId
argument_list|()
argument_list|,
name|ZERO_ID_STRING
argument_list|)
argument_list|,
name|UTF_8
argument_list|)
expr_stmt|;
name|accountState
operator|.
name|getExternalIds
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|forEach
argument_list|(
name|e
lambda|->
name|hashObjectId
argument_list|(
name|h
argument_list|,
name|e
operator|.
name|blobId
argument_list|()
argument_list|,
name|buf
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

