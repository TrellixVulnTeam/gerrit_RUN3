begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright 2011 Google Inc. All Rights Reserved.
end_comment

begin_package
DECL|package|com.google.gerrit.server.contact
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|contact
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|AbstractModule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Module
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|assistedinject
operator|.
name|Assisted
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|assistedinject
operator|.
name|FactoryModuleBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|util
operator|.
name|IO
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLConnection
import|;
end_import

begin_comment
comment|/** {@link ContactStoreConnection} with an underlying {@literal @HttpURLConnection}. */
end_comment

begin_class
DECL|class|HttpContactStoreConnection
specifier|public
class|class
name|HttpContactStoreConnection
implements|implements
name|ContactStoreConnection
block|{
DECL|method|module ()
specifier|public
specifier|static
name|Module
name|module
parameter_list|()
block|{
return|return
operator|new
name|AbstractModule
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|void
name|configure
parameter_list|()
block|{
name|install
argument_list|(
operator|new
name|FactoryModuleBuilder
argument_list|()
operator|.
name|implement
argument_list|(
name|ContactStoreConnection
operator|.
name|class
argument_list|,
name|HttpContactStoreConnection
operator|.
name|class
argument_list|)
operator|.
name|build
argument_list|(
name|ContactStoreConnection
operator|.
name|Factory
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
DECL|field|conn
specifier|private
specifier|final
name|HttpURLConnection
name|conn
decl_stmt|;
annotation|@
name|Inject
DECL|method|HttpContactStoreConnection (@ssisted final URL url)
name|HttpContactStoreConnection
parameter_list|(
annotation|@
name|Assisted
specifier|final
name|URL
name|url
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|URLConnection
name|urlConn
init|=
name|url
operator|.
name|openConnection
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|urlConn
operator|instanceof
name|HttpURLConnection
operator|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Non-HTTP URL not supported: "
operator|+
name|urlConn
argument_list|)
throw|;
block|}
name|conn
operator|=
operator|(
name|HttpURLConnection
operator|)
name|urlConn
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|store (final byte[] body)
specifier|public
name|void
name|store
parameter_list|(
specifier|final
name|byte
index|[]
name|body
parameter_list|)
throws|throws
name|IOException
block|{
name|conn
operator|.
name|setRequestMethod
argument_list|(
literal|"POST"
argument_list|)
expr_stmt|;
name|conn
operator|.
name|setRequestProperty
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/x-www-form-urlencoded; charset=UTF-8"
argument_list|)
expr_stmt|;
name|conn
operator|.
name|setDoOutput
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|conn
operator|.
name|setFixedLengthStreamingMode
argument_list|(
name|body
operator|.
name|length
argument_list|)
expr_stmt|;
specifier|final
name|OutputStream
name|out
init|=
name|conn
operator|.
name|getOutputStream
argument_list|()
decl_stmt|;
name|out
operator|.
name|write
argument_list|(
name|body
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
if|if
condition|(
name|conn
operator|.
name|getResponseCode
argument_list|()
operator|!=
name|HttpURLConnection
operator|.
name|HTTP_OK
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Connection failed: "
operator|+
name|conn
operator|.
name|getResponseCode
argument_list|()
argument_list|)
throw|;
block|}
specifier|final
name|byte
index|[]
name|dst
init|=
operator|new
name|byte
index|[
literal|2
index|]
decl_stmt|;
specifier|final
name|InputStream
name|in
init|=
name|conn
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
try|try
block|{
name|IO
operator|.
name|readFully
argument_list|(
name|in
argument_list|,
name|dst
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|dst
index|[
literal|0
index|]
operator|!=
literal|'O'
operator|||
name|dst
index|[
literal|1
index|]
operator|!=
literal|'K'
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Store failed: "
operator|+
name|dst
index|[
literal|0
index|]
operator|+
name|dst
index|[
literal|1
index|]
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

