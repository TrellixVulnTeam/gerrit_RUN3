begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2009 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.schema
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|schema
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|AccountGroup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|AccountGroupName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|ApprovalCategory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|ApprovalCategoryValue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|CurrentSchemaVersion
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|RefRight
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|SystemConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|SitePath
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|SitePaths
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|workflow
operator|.
name|NoOpFunction
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|workflow
operator|.
name|SubmitFunction
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtjsonrpc
operator|.
name|server
operator|.
name|SignedToken
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|jdbc
operator|.
name|JdbcExecutor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|jdbc
operator|.
name|JdbcSchema
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|schema
operator|.
name|sql
operator|.
name|DialectH2
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|schema
operator|.
name|sql
operator|.
name|DialectMySQL
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|schema
operator|.
name|sql
operator|.
name|DialectPostgreSQL
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|schema
operator|.
name|sql
operator|.
name|SqlDialect
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_comment
comment|/** Creates the current database schema and populates initial code rows. */
end_comment

begin_class
DECL|class|SchemaCreator
specifier|public
class|class
name|SchemaCreator
block|{
DECL|field|DEFAULT_WILD_NAME
specifier|private
specifier|static
specifier|final
name|Project
operator|.
name|NameKey
name|DEFAULT_WILD_NAME
init|=
operator|new
name|Project
operator|.
name|NameKey
argument_list|(
literal|"-- All Projects --"
argument_list|)
decl_stmt|;
specifier|private
specifier|final
annotation|@
name|SitePath
DECL|field|site_path
name|File
name|site_path
decl_stmt|;
DECL|field|versionNbr
specifier|private
specifier|final
name|int
name|versionNbr
decl_stmt|;
DECL|field|index_generic
specifier|private
specifier|final
name|ScriptRunner
name|index_generic
decl_stmt|;
DECL|field|index_postgres
specifier|private
specifier|final
name|ScriptRunner
name|index_postgres
decl_stmt|;
DECL|field|mysql_nextval
specifier|private
specifier|final
name|ScriptRunner
name|mysql_nextval
decl_stmt|;
annotation|@
name|Inject
DECL|method|SchemaCreator (final SitePaths site, @Current final SchemaVersion version)
specifier|public
name|SchemaCreator
parameter_list|(
specifier|final
name|SitePaths
name|site
parameter_list|,
annotation|@
name|Current
specifier|final
name|SchemaVersion
name|version
parameter_list|)
block|{
name|this
argument_list|(
name|site
operator|.
name|site_path
argument_list|,
name|version
argument_list|)
expr_stmt|;
block|}
DECL|method|SchemaCreator (final @SitePath File site, @Current final SchemaVersion version)
specifier|public
name|SchemaCreator
parameter_list|(
specifier|final
annotation|@
name|SitePath
name|File
name|site
parameter_list|,
annotation|@
name|Current
specifier|final
name|SchemaVersion
name|version
parameter_list|)
block|{
name|site_path
operator|=
name|site
expr_stmt|;
name|versionNbr
operator|=
name|version
operator|.
name|getVersionNbr
argument_list|()
expr_stmt|;
name|index_generic
operator|=
operator|new
name|ScriptRunner
argument_list|(
literal|"index_generic.sql"
argument_list|)
expr_stmt|;
name|index_postgres
operator|=
operator|new
name|ScriptRunner
argument_list|(
literal|"index_postgres.sql"
argument_list|)
expr_stmt|;
name|mysql_nextval
operator|=
operator|new
name|ScriptRunner
argument_list|(
literal|"mysql_nextval.sql"
argument_list|)
expr_stmt|;
block|}
DECL|method|create (final ReviewDb db)
specifier|public
name|void
name|create
parameter_list|(
specifier|final
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|JdbcSchema
name|jdbc
init|=
operator|(
name|JdbcSchema
operator|)
name|db
decl_stmt|;
specifier|final
name|JdbcExecutor
name|e
init|=
operator|new
name|JdbcExecutor
argument_list|(
name|jdbc
argument_list|)
decl_stmt|;
try|try
block|{
name|jdbc
operator|.
name|updateSchema
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|e
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|final
name|CurrentSchemaVersion
name|sVer
init|=
name|CurrentSchemaVersion
operator|.
name|create
argument_list|()
decl_stmt|;
name|sVer
operator|.
name|versionNbr
operator|=
name|versionNbr
expr_stmt|;
name|db
operator|.
name|schemaVersion
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|sVer
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|SystemConfig
name|sConfig
init|=
name|initSystemConfig
argument_list|(
name|db
argument_list|)
decl_stmt|;
name|initOwnerCategory
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|initReadCategory
argument_list|(
name|db
argument_list|,
name|sConfig
argument_list|)
expr_stmt|;
name|initVerifiedCategory
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|initCodeReviewCategory
argument_list|(
name|db
argument_list|,
name|sConfig
argument_list|)
expr_stmt|;
name|initSubmitCategory
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|initPushTagCategory
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|initPushUpdateBranchCategory
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|initForgeIdentityCategory
argument_list|(
name|db
argument_list|,
name|sConfig
argument_list|)
expr_stmt|;
name|initWildCardProject
argument_list|(
name|db
argument_list|)
expr_stmt|;
specifier|final
name|SqlDialect
name|d
init|=
name|jdbc
operator|.
name|getDialect
argument_list|()
decl_stmt|;
if|if
condition|(
name|d
operator|instanceof
name|DialectH2
condition|)
block|{
name|index_generic
operator|.
name|run
argument_list|(
name|db
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|d
operator|instanceof
name|DialectMySQL
condition|)
block|{
name|index_generic
operator|.
name|run
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|mysql_nextval
operator|.
name|run
argument_list|(
name|db
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|d
operator|instanceof
name|DialectPostgreSQL
condition|)
block|{
name|index_postgres
operator|.
name|run
argument_list|(
name|db
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|OrmException
argument_list|(
literal|"Unsupported database "
operator|+
name|d
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
block|}
block|}
DECL|method|initSystemConfig (final ReviewDb c)
specifier|private
name|SystemConfig
name|initSystemConfig
parameter_list|(
specifier|final
name|ReviewDb
name|c
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|AccountGroup
name|admin
init|=
operator|new
name|AccountGroup
argument_list|(
operator|new
name|AccountGroup
operator|.
name|NameKey
argument_list|(
literal|"Administrators"
argument_list|)
argument_list|,
operator|new
name|AccountGroup
operator|.
name|Id
argument_list|(
name|c
operator|.
name|nextAccountGroupId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|admin
operator|.
name|setDescription
argument_list|(
literal|"Gerrit Site Administrators"
argument_list|)
expr_stmt|;
name|admin
operator|.
name|setType
argument_list|(
name|AccountGroup
operator|.
name|Type
operator|.
name|INTERNAL
argument_list|)
expr_stmt|;
name|c
operator|.
name|accountGroups
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|admin
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|accountGroupNames
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
operator|new
name|AccountGroupName
argument_list|(
name|admin
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|AccountGroup
name|anonymous
init|=
operator|new
name|AccountGroup
argument_list|(
operator|new
name|AccountGroup
operator|.
name|NameKey
argument_list|(
literal|"Anonymous Users"
argument_list|)
argument_list|,
operator|new
name|AccountGroup
operator|.
name|Id
argument_list|(
name|c
operator|.
name|nextAccountGroupId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|anonymous
operator|.
name|setDescription
argument_list|(
literal|"Any user, signed-in or not"
argument_list|)
expr_stmt|;
name|anonymous
operator|.
name|setOwnerGroupId
argument_list|(
name|admin
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|anonymous
operator|.
name|setType
argument_list|(
name|AccountGroup
operator|.
name|Type
operator|.
name|SYSTEM
argument_list|)
expr_stmt|;
name|c
operator|.
name|accountGroups
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|anonymous
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|accountGroupNames
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
operator|new
name|AccountGroupName
argument_list|(
name|anonymous
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|AccountGroup
name|registered
init|=
operator|new
name|AccountGroup
argument_list|(
operator|new
name|AccountGroup
operator|.
name|NameKey
argument_list|(
literal|"Registered Users"
argument_list|)
argument_list|,
operator|new
name|AccountGroup
operator|.
name|Id
argument_list|(
name|c
operator|.
name|nextAccountGroupId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|registered
operator|.
name|setDescription
argument_list|(
literal|"Any signed-in user"
argument_list|)
expr_stmt|;
name|registered
operator|.
name|setOwnerGroupId
argument_list|(
name|admin
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|registered
operator|.
name|setType
argument_list|(
name|AccountGroup
operator|.
name|Type
operator|.
name|SYSTEM
argument_list|)
expr_stmt|;
name|c
operator|.
name|accountGroups
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|registered
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|accountGroupNames
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
operator|new
name|AccountGroupName
argument_list|(
name|registered
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|SystemConfig
name|s
init|=
name|SystemConfig
operator|.
name|create
argument_list|()
decl_stmt|;
name|s
operator|.
name|registerEmailPrivateKey
operator|=
name|SignedToken
operator|.
name|generateRandomKey
argument_list|()
expr_stmt|;
name|s
operator|.
name|adminGroupId
operator|=
name|admin
operator|.
name|getId
argument_list|()
expr_stmt|;
name|s
operator|.
name|anonymousGroupId
operator|=
name|anonymous
operator|.
name|getId
argument_list|()
expr_stmt|;
name|s
operator|.
name|registeredGroupId
operator|=
name|registered
operator|.
name|getId
argument_list|()
expr_stmt|;
name|s
operator|.
name|wildProjectName
operator|=
name|DEFAULT_WILD_NAME
expr_stmt|;
try|try
block|{
name|s
operator|.
name|sitePath
operator|=
name|site_path
operator|.
name|getCanonicalPath
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|s
operator|.
name|sitePath
operator|=
name|site_path
operator|.
name|getAbsolutePath
argument_list|()
expr_stmt|;
block|}
name|c
operator|.
name|systemConfig
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|s
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|s
return|;
block|}
DECL|method|initWildCardProject (final ReviewDb c)
specifier|private
name|void
name|initWildCardProject
parameter_list|(
specifier|final
name|ReviewDb
name|c
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|Project
name|p
decl_stmt|;
name|p
operator|=
operator|new
name|Project
argument_list|(
name|DEFAULT_WILD_NAME
argument_list|)
expr_stmt|;
name|p
operator|.
name|setDescription
argument_list|(
literal|"Rights inherited by all other projects"
argument_list|)
expr_stmt|;
name|p
operator|.
name|setUseContributorAgreements
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|c
operator|.
name|projects
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|p
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|initVerifiedCategory (final ReviewDb c)
specifier|private
name|void
name|initVerifiedCategory
parameter_list|(
specifier|final
name|ReviewDb
name|c
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|ApprovalCategory
name|cat
decl_stmt|;
specifier|final
name|ArrayList
argument_list|<
name|ApprovalCategoryValue
argument_list|>
name|vals
decl_stmt|;
name|cat
operator|=
operator|new
name|ApprovalCategory
argument_list|(
operator|new
name|ApprovalCategory
operator|.
name|Id
argument_list|(
literal|"VRIF"
argument_list|)
argument_list|,
literal|"Verified"
argument_list|)
expr_stmt|;
name|cat
operator|.
name|setPosition
argument_list|(
operator|(
name|short
operator|)
literal|0
argument_list|)
expr_stmt|;
name|cat
operator|.
name|setAbbreviatedName
argument_list|(
literal|"V"
argument_list|)
expr_stmt|;
name|vals
operator|=
operator|new
name|ArrayList
argument_list|<
name|ApprovalCategoryValue
argument_list|>
argument_list|()
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
literal|1
argument_list|,
literal|"Verified"
argument_list|)
argument_list|)
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
literal|0
argument_list|,
literal|"No score"
argument_list|)
argument_list|)
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
operator|-
literal|1
argument_list|,
literal|"Fails"
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|approvalCategories
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|cat
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|approvalCategoryValues
argument_list|()
operator|.
name|insert
argument_list|(
name|vals
argument_list|)
expr_stmt|;
block|}
DECL|method|initCodeReviewCategory (final ReviewDb c, final SystemConfig sConfig)
specifier|private
name|void
name|initCodeReviewCategory
parameter_list|(
specifier|final
name|ReviewDb
name|c
parameter_list|,
specifier|final
name|SystemConfig
name|sConfig
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|ApprovalCategory
name|cat
decl_stmt|;
specifier|final
name|ArrayList
argument_list|<
name|ApprovalCategoryValue
argument_list|>
name|vals
decl_stmt|;
name|cat
operator|=
operator|new
name|ApprovalCategory
argument_list|(
operator|new
name|ApprovalCategory
operator|.
name|Id
argument_list|(
literal|"CRVW"
argument_list|)
argument_list|,
literal|"Code Review"
argument_list|)
expr_stmt|;
name|cat
operator|.
name|setPosition
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|cat
operator|.
name|setAbbreviatedName
argument_list|(
literal|"R"
argument_list|)
expr_stmt|;
name|cat
operator|.
name|setCopyMinScore
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|vals
operator|=
operator|new
name|ArrayList
argument_list|<
name|ApprovalCategoryValue
argument_list|>
argument_list|()
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
literal|2
argument_list|,
literal|"Looks good to me, approved"
argument_list|)
argument_list|)
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
literal|1
argument_list|,
literal|"Looks good to me, but someone else must approve"
argument_list|)
argument_list|)
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
literal|0
argument_list|,
literal|"No score"
argument_list|)
argument_list|)
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
operator|-
literal|1
argument_list|,
literal|"I would prefer that you didn't submit this"
argument_list|)
argument_list|)
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
operator|-
literal|2
argument_list|,
literal|"Do not submit"
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|approvalCategories
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|cat
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|approvalCategoryValues
argument_list|()
operator|.
name|insert
argument_list|(
name|vals
argument_list|)
expr_stmt|;
specifier|final
name|RefRight
name|approve
init|=
operator|new
name|RefRight
argument_list|(
operator|new
name|RefRight
operator|.
name|Key
argument_list|(
name|DEFAULT_WILD_NAME
argument_list|,
operator|new
name|RefRight
operator|.
name|RefPattern
argument_list|(
literal|"refs/heads/*"
argument_list|)
argument_list|,
name|cat
operator|.
name|getId
argument_list|()
argument_list|,
name|sConfig
operator|.
name|registeredGroupId
argument_list|)
argument_list|)
decl_stmt|;
name|approve
operator|.
name|setMaxValue
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|approve
operator|.
name|setMinValue
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
expr_stmt|;
name|c
operator|.
name|refRights
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|approve
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|initOwnerCategory (final ReviewDb c)
specifier|private
name|void
name|initOwnerCategory
parameter_list|(
specifier|final
name|ReviewDb
name|c
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|ApprovalCategory
name|cat
decl_stmt|;
specifier|final
name|ArrayList
argument_list|<
name|ApprovalCategoryValue
argument_list|>
name|vals
decl_stmt|;
name|cat
operator|=
operator|new
name|ApprovalCategory
argument_list|(
name|ApprovalCategory
operator|.
name|OWN
argument_list|,
literal|"Owner"
argument_list|)
expr_stmt|;
name|cat
operator|.
name|setPosition
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
expr_stmt|;
name|cat
operator|.
name|setFunctionName
argument_list|(
name|NoOpFunction
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|vals
operator|=
operator|new
name|ArrayList
argument_list|<
name|ApprovalCategoryValue
argument_list|>
argument_list|()
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
literal|1
argument_list|,
literal|"Administer All Settings"
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|approvalCategories
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|cat
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|approvalCategoryValues
argument_list|()
operator|.
name|insert
argument_list|(
name|vals
argument_list|)
expr_stmt|;
block|}
DECL|method|initReadCategory (final ReviewDb c, final SystemConfig sConfig)
specifier|private
name|void
name|initReadCategory
parameter_list|(
specifier|final
name|ReviewDb
name|c
parameter_list|,
specifier|final
name|SystemConfig
name|sConfig
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|ApprovalCategory
name|cat
decl_stmt|;
specifier|final
name|ArrayList
argument_list|<
name|ApprovalCategoryValue
argument_list|>
name|vals
decl_stmt|;
name|cat
operator|=
operator|new
name|ApprovalCategory
argument_list|(
name|ApprovalCategory
operator|.
name|READ
argument_list|,
literal|"Read Access"
argument_list|)
expr_stmt|;
name|cat
operator|.
name|setPosition
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
expr_stmt|;
name|cat
operator|.
name|setFunctionName
argument_list|(
name|NoOpFunction
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|vals
operator|=
operator|new
name|ArrayList
argument_list|<
name|ApprovalCategoryValue
argument_list|>
argument_list|()
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
literal|2
argument_list|,
literal|"Upload permission"
argument_list|)
argument_list|)
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
literal|1
argument_list|,
literal|"Read access"
argument_list|)
argument_list|)
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
operator|-
literal|1
argument_list|,
literal|"No access"
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|approvalCategories
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|cat
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|approvalCategoryValues
argument_list|()
operator|.
name|insert
argument_list|(
name|vals
argument_list|)
expr_stmt|;
specifier|final
name|RefRight
operator|.
name|RefPattern
name|pattern
init|=
operator|new
name|RefRight
operator|.
name|RefPattern
argument_list|(
name|RefRight
operator|.
name|ALL
argument_list|)
decl_stmt|;
block|{
specifier|final
name|RefRight
name|read
init|=
operator|new
name|RefRight
argument_list|(
operator|new
name|RefRight
operator|.
name|Key
argument_list|(
name|DEFAULT_WILD_NAME
argument_list|,
name|pattern
argument_list|,
name|cat
operator|.
name|getId
argument_list|()
argument_list|,
name|sConfig
operator|.
name|anonymousGroupId
argument_list|)
argument_list|)
decl_stmt|;
name|read
operator|.
name|setMaxValue
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|read
operator|.
name|setMinValue
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|c
operator|.
name|refRights
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|read
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
specifier|final
name|RefRight
name|read
init|=
operator|new
name|RefRight
argument_list|(
operator|new
name|RefRight
operator|.
name|Key
argument_list|(
name|DEFAULT_WILD_NAME
argument_list|,
name|pattern
argument_list|,
name|cat
operator|.
name|getId
argument_list|()
argument_list|,
name|sConfig
operator|.
name|registeredGroupId
argument_list|)
argument_list|)
decl_stmt|;
name|read
operator|.
name|setMaxValue
argument_list|(
operator|(
name|short
operator|)
literal|2
argument_list|)
expr_stmt|;
name|read
operator|.
name|setMinValue
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|c
operator|.
name|refRights
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|read
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
specifier|final
name|RefRight
name|read
init|=
operator|new
name|RefRight
argument_list|(
operator|new
name|RefRight
operator|.
name|Key
argument_list|(
name|DEFAULT_WILD_NAME
argument_list|,
name|pattern
argument_list|,
name|cat
operator|.
name|getId
argument_list|()
argument_list|,
name|sConfig
operator|.
name|adminGroupId
argument_list|)
argument_list|)
decl_stmt|;
name|read
operator|.
name|setMaxValue
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|read
operator|.
name|setMinValue
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
expr_stmt|;
name|c
operator|.
name|refRights
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|read
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|initSubmitCategory (final ReviewDb c)
specifier|private
name|void
name|initSubmitCategory
parameter_list|(
specifier|final
name|ReviewDb
name|c
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|ApprovalCategory
name|cat
decl_stmt|;
specifier|final
name|ArrayList
argument_list|<
name|ApprovalCategoryValue
argument_list|>
name|vals
decl_stmt|;
name|cat
operator|=
operator|new
name|ApprovalCategory
argument_list|(
name|ApprovalCategory
operator|.
name|SUBMIT
argument_list|,
literal|"Submit"
argument_list|)
expr_stmt|;
name|cat
operator|.
name|setPosition
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
expr_stmt|;
name|cat
operator|.
name|setFunctionName
argument_list|(
name|SubmitFunction
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|vals
operator|=
operator|new
name|ArrayList
argument_list|<
name|ApprovalCategoryValue
argument_list|>
argument_list|()
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
literal|1
argument_list|,
literal|"Submit"
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|approvalCategories
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|cat
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|approvalCategoryValues
argument_list|()
operator|.
name|insert
argument_list|(
name|vals
argument_list|)
expr_stmt|;
block|}
DECL|method|initPushTagCategory (final ReviewDb c)
specifier|private
name|void
name|initPushTagCategory
parameter_list|(
specifier|final
name|ReviewDb
name|c
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|ApprovalCategory
name|cat
decl_stmt|;
specifier|final
name|ArrayList
argument_list|<
name|ApprovalCategoryValue
argument_list|>
name|vals
decl_stmt|;
name|cat
operator|=
operator|new
name|ApprovalCategory
argument_list|(
name|ApprovalCategory
operator|.
name|PUSH_TAG
argument_list|,
literal|"Push Tag"
argument_list|)
expr_stmt|;
name|cat
operator|.
name|setPosition
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
expr_stmt|;
name|cat
operator|.
name|setFunctionName
argument_list|(
name|NoOpFunction
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|vals
operator|=
operator|new
name|ArrayList
argument_list|<
name|ApprovalCategoryValue
argument_list|>
argument_list|()
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
name|ApprovalCategory
operator|.
name|PUSH_TAG_SIGNED
argument_list|,
literal|"Create Signed Tag"
argument_list|)
argument_list|)
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
name|ApprovalCategory
operator|.
name|PUSH_TAG_ANNOTATED
argument_list|,
literal|"Create Annotated Tag"
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|approvalCategories
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|cat
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|approvalCategoryValues
argument_list|()
operator|.
name|insert
argument_list|(
name|vals
argument_list|)
expr_stmt|;
block|}
DECL|method|initPushUpdateBranchCategory (final ReviewDb c)
specifier|private
name|void
name|initPushUpdateBranchCategory
parameter_list|(
specifier|final
name|ReviewDb
name|c
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|ApprovalCategory
name|cat
decl_stmt|;
specifier|final
name|ArrayList
argument_list|<
name|ApprovalCategoryValue
argument_list|>
name|vals
decl_stmt|;
name|cat
operator|=
operator|new
name|ApprovalCategory
argument_list|(
name|ApprovalCategory
operator|.
name|PUSH_HEAD
argument_list|,
literal|"Push Branch"
argument_list|)
expr_stmt|;
name|cat
operator|.
name|setPosition
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
expr_stmt|;
name|cat
operator|.
name|setFunctionName
argument_list|(
name|NoOpFunction
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|vals
operator|=
operator|new
name|ArrayList
argument_list|<
name|ApprovalCategoryValue
argument_list|>
argument_list|()
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
name|ApprovalCategory
operator|.
name|PUSH_HEAD_UPDATE
argument_list|,
literal|"Update Branch"
argument_list|)
argument_list|)
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
name|ApprovalCategory
operator|.
name|PUSH_HEAD_CREATE
argument_list|,
literal|"Create Branch"
argument_list|)
argument_list|)
expr_stmt|;
name|vals
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
name|ApprovalCategory
operator|.
name|PUSH_HEAD_REPLACE
argument_list|,
literal|"Force Push Branch; Delete Branch"
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|approvalCategories
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|cat
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|approvalCategoryValues
argument_list|()
operator|.
name|insert
argument_list|(
name|vals
argument_list|)
expr_stmt|;
block|}
DECL|method|initForgeIdentityCategory (final ReviewDb c, final SystemConfig sConfig)
specifier|private
name|void
name|initForgeIdentityCategory
parameter_list|(
specifier|final
name|ReviewDb
name|c
parameter_list|,
specifier|final
name|SystemConfig
name|sConfig
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|ApprovalCategory
name|cat
decl_stmt|;
specifier|final
name|ArrayList
argument_list|<
name|ApprovalCategoryValue
argument_list|>
name|values
decl_stmt|;
name|cat
operator|=
operator|new
name|ApprovalCategory
argument_list|(
name|ApprovalCategory
operator|.
name|FORGE_IDENTITY
argument_list|,
literal|"Forge Identity"
argument_list|)
expr_stmt|;
name|cat
operator|.
name|setPosition
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
expr_stmt|;
name|cat
operator|.
name|setFunctionName
argument_list|(
name|NoOpFunction
operator|.
name|NAME
argument_list|)
expr_stmt|;
name|values
operator|=
operator|new
name|ArrayList
argument_list|<
name|ApprovalCategoryValue
argument_list|>
argument_list|()
expr_stmt|;
name|values
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
name|ApprovalCategory
operator|.
name|FORGE_AUTHOR
argument_list|,
literal|"Forge Author Identity"
argument_list|)
argument_list|)
expr_stmt|;
name|values
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
name|ApprovalCategory
operator|.
name|FORGE_COMMITTER
argument_list|,
literal|"Forge Committer or Tagger Identity"
argument_list|)
argument_list|)
expr_stmt|;
name|values
operator|.
name|add
argument_list|(
name|value
argument_list|(
name|cat
argument_list|,
name|ApprovalCategory
operator|.
name|FORGE_SERVER
argument_list|,
literal|"Forge Gerrit Code Review Server Identity"
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|approvalCategories
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|cat
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|approvalCategoryValues
argument_list|()
operator|.
name|insert
argument_list|(
name|values
argument_list|)
expr_stmt|;
name|RefRight
name|right
init|=
operator|new
name|RefRight
argument_list|(
operator|new
name|RefRight
operator|.
name|Key
argument_list|(
name|sConfig
operator|.
name|wildProjectName
argument_list|,
operator|new
name|RefRight
operator|.
name|RefPattern
argument_list|(
name|RefRight
operator|.
name|ALL
argument_list|)
argument_list|,
name|ApprovalCategory
operator|.
name|FORGE_IDENTITY
argument_list|,
name|sConfig
operator|.
name|registeredGroupId
argument_list|)
argument_list|)
decl_stmt|;
name|right
operator|.
name|setMinValue
argument_list|(
name|ApprovalCategory
operator|.
name|FORGE_AUTHOR
argument_list|)
expr_stmt|;
name|right
operator|.
name|setMaxValue
argument_list|(
name|ApprovalCategory
operator|.
name|FORGE_AUTHOR
argument_list|)
expr_stmt|;
name|c
operator|.
name|refRights
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|right
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|value (final ApprovalCategory cat, final int value, final String name)
specifier|private
specifier|static
name|ApprovalCategoryValue
name|value
parameter_list|(
specifier|final
name|ApprovalCategory
name|cat
parameter_list|,
specifier|final
name|int
name|value
parameter_list|,
specifier|final
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|ApprovalCategoryValue
argument_list|(
operator|new
name|ApprovalCategoryValue
operator|.
name|Id
argument_list|(
name|cat
operator|.
name|getId
argument_list|()
argument_list|,
operator|(
name|short
operator|)
name|value
argument_list|)
argument_list|,
name|name
argument_list|)
return|;
block|}
block|}
end_class

end_unit

