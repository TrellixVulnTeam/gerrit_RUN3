begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2010 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.git
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|Project
operator|.
name|SubmitType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|errors
operator|.
name|ConfigInvalidException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|CommitBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|ProjectConfig
specifier|public
class|class
name|ProjectConfig
extends|extends
name|VersionedMetaData
block|{
DECL|field|PROJECT_CONFIG
specifier|private
specifier|static
specifier|final
name|String
name|PROJECT_CONFIG
init|=
literal|"project.config"
decl_stmt|;
DECL|field|PROJECT
specifier|private
specifier|static
specifier|final
name|String
name|PROJECT
init|=
literal|"project"
decl_stmt|;
DECL|field|KEY_DESCRIPTION
specifier|private
specifier|static
specifier|final
name|String
name|KEY_DESCRIPTION
init|=
literal|"description"
decl_stmt|;
DECL|field|ACCESS
specifier|private
specifier|static
specifier|final
name|String
name|ACCESS
init|=
literal|"access"
decl_stmt|;
DECL|field|KEY_INHERIT_FROM
specifier|private
specifier|static
specifier|final
name|String
name|KEY_INHERIT_FROM
init|=
literal|"inheritFrom"
decl_stmt|;
DECL|field|RECEIVE
specifier|private
specifier|static
specifier|final
name|String
name|RECEIVE
init|=
literal|"receive"
decl_stmt|;
DECL|field|KEY_REQUIRE_SIGNED_OFF_BY
specifier|private
specifier|static
specifier|final
name|String
name|KEY_REQUIRE_SIGNED_OFF_BY
init|=
literal|"requireSignedOffBy"
decl_stmt|;
DECL|field|KEY_REQUIRE_CHANGE_ID
specifier|private
specifier|static
specifier|final
name|String
name|KEY_REQUIRE_CHANGE_ID
init|=
literal|"requireChangeId"
decl_stmt|;
DECL|field|KEY_REQUIRE_CONTRIBUTOR_AGREEMENT
specifier|private
specifier|static
specifier|final
name|String
name|KEY_REQUIRE_CONTRIBUTOR_AGREEMENT
init|=
literal|"requireContributorAgreement"
decl_stmt|;
DECL|field|SUBMIT
specifier|private
specifier|static
specifier|final
name|String
name|SUBMIT
init|=
literal|"submit"
decl_stmt|;
DECL|field|KEY_ACTION
specifier|private
specifier|static
specifier|final
name|String
name|KEY_ACTION
init|=
literal|"action"
decl_stmt|;
DECL|field|KEY_MERGE_CONTENT
specifier|private
specifier|static
specifier|final
name|String
name|KEY_MERGE_CONTENT
init|=
literal|"mergeContent"
decl_stmt|;
DECL|field|defaultSubmitAction
specifier|private
specifier|static
specifier|final
name|SubmitType
name|defaultSubmitAction
init|=
name|SubmitType
operator|.
name|MERGE_IF_NECESSARY
decl_stmt|;
DECL|field|projectName
specifier|private
name|Project
operator|.
name|NameKey
name|projectName
decl_stmt|;
DECL|field|project
specifier|private
name|Project
name|project
decl_stmt|;
DECL|method|read (MetaDataUpdate update)
specifier|public
specifier|static
name|ProjectConfig
name|read
parameter_list|(
name|MetaDataUpdate
name|update
parameter_list|)
throws|throws
name|IOException
throws|,
name|ConfigInvalidException
block|{
name|ProjectConfig
name|r
init|=
operator|new
name|ProjectConfig
argument_list|(
name|update
operator|.
name|getProjectName
argument_list|()
argument_list|)
decl_stmt|;
name|r
operator|.
name|load
argument_list|(
name|update
argument_list|)
expr_stmt|;
return|return
name|r
return|;
block|}
DECL|method|read (MetaDataUpdate update, ObjectId id)
specifier|public
specifier|static
name|ProjectConfig
name|read
parameter_list|(
name|MetaDataUpdate
name|update
parameter_list|,
name|ObjectId
name|id
parameter_list|)
throws|throws
name|IOException
throws|,
name|ConfigInvalidException
block|{
name|ProjectConfig
name|r
init|=
operator|new
name|ProjectConfig
argument_list|(
name|update
operator|.
name|getProjectName
argument_list|()
argument_list|)
decl_stmt|;
name|r
operator|.
name|load
argument_list|(
name|update
argument_list|,
name|id
argument_list|)
expr_stmt|;
return|return
name|r
return|;
block|}
DECL|method|ProjectConfig (Project.NameKey projectName)
specifier|public
name|ProjectConfig
parameter_list|(
name|Project
operator|.
name|NameKey
name|projectName
parameter_list|)
block|{
name|this
operator|.
name|projectName
operator|=
name|projectName
expr_stmt|;
block|}
DECL|method|getProject ()
specifier|public
name|Project
name|getProject
parameter_list|()
block|{
return|return
name|project
return|;
block|}
annotation|@
name|Override
DECL|method|getRefName ()
specifier|protected
name|String
name|getRefName
parameter_list|()
block|{
return|return
name|GitRepositoryManager
operator|.
name|REF_CONFIG
return|;
block|}
annotation|@
name|Override
DECL|method|onLoad ()
specifier|protected
name|void
name|onLoad
parameter_list|()
throws|throws
name|IOException
throws|,
name|ConfigInvalidException
block|{
name|Config
name|rc
init|=
name|readConfig
argument_list|(
name|PROJECT_CONFIG
argument_list|)
decl_stmt|;
name|project
operator|=
operator|new
name|Project
argument_list|(
name|projectName
argument_list|)
expr_stmt|;
name|Project
name|p
init|=
name|project
decl_stmt|;
name|p
operator|.
name|setDescription
argument_list|(
name|rc
operator|.
name|getString
argument_list|(
name|PROJECT
argument_list|,
literal|null
argument_list|,
name|KEY_DESCRIPTION
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|p
operator|.
name|getDescription
argument_list|()
operator|==
literal|null
condition|)
block|{
name|p
operator|.
name|setDescription
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
name|p
operator|.
name|setParentName
argument_list|(
name|rc
operator|.
name|getString
argument_list|(
name|ACCESS
argument_list|,
literal|null
argument_list|,
name|KEY_INHERIT_FROM
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setUseContributorAgreements
argument_list|(
name|rc
operator|.
name|getBoolean
argument_list|(
name|RECEIVE
argument_list|,
name|KEY_REQUIRE_CONTRIBUTOR_AGREEMENT
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setUseSignedOffBy
argument_list|(
name|rc
operator|.
name|getBoolean
argument_list|(
name|RECEIVE
argument_list|,
name|KEY_REQUIRE_SIGNED_OFF_BY
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRequireChangeID
argument_list|(
name|rc
operator|.
name|getBoolean
argument_list|(
name|RECEIVE
argument_list|,
name|KEY_REQUIRE_CHANGE_ID
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setSubmitType
argument_list|(
name|rc
operator|.
name|getEnum
argument_list|(
name|SUBMIT
argument_list|,
literal|null
argument_list|,
name|KEY_ACTION
argument_list|,
name|defaultSubmitAction
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setUseContentMerge
argument_list|(
name|rc
operator|.
name|getBoolean
argument_list|(
name|SUBMIT
argument_list|,
literal|null
argument_list|,
name|KEY_MERGE_CONTENT
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onSave (CommitBuilder commit)
specifier|protected
name|void
name|onSave
parameter_list|(
name|CommitBuilder
name|commit
parameter_list|)
throws|throws
name|IOException
throws|,
name|ConfigInvalidException
block|{
if|if
condition|(
name|commit
operator|.
name|getMessage
argument_list|()
operator|==
literal|null
operator|||
literal|""
operator|.
name|equals
argument_list|(
name|commit
operator|.
name|getMessage
argument_list|()
argument_list|)
condition|)
block|{
name|commit
operator|.
name|setMessage
argument_list|(
literal|"Updated project configuration\n"
argument_list|)
expr_stmt|;
block|}
name|Config
name|rc
init|=
name|readConfig
argument_list|(
name|PROJECT_CONFIG
argument_list|)
decl_stmt|;
name|Project
name|p
init|=
name|project
decl_stmt|;
if|if
condition|(
name|p
operator|.
name|getDescription
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|p
operator|.
name|getDescription
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|rc
operator|.
name|setString
argument_list|(
name|PROJECT
argument_list|,
literal|null
argument_list|,
name|KEY_DESCRIPTION
argument_list|,
name|p
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rc
operator|.
name|unset
argument_list|(
name|PROJECT
argument_list|,
literal|null
argument_list|,
name|KEY_DESCRIPTION
argument_list|)
expr_stmt|;
block|}
name|set
argument_list|(
name|rc
argument_list|,
name|ACCESS
argument_list|,
literal|null
argument_list|,
name|KEY_INHERIT_FROM
argument_list|,
name|p
operator|.
name|getParentName
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|rc
argument_list|,
name|RECEIVE
argument_list|,
literal|null
argument_list|,
name|KEY_REQUIRE_CONTRIBUTOR_AGREEMENT
argument_list|,
name|p
operator|.
name|isUseContributorAgreements
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|rc
argument_list|,
name|RECEIVE
argument_list|,
literal|null
argument_list|,
name|KEY_REQUIRE_SIGNED_OFF_BY
argument_list|,
name|p
operator|.
name|isUseSignedOffBy
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|rc
argument_list|,
name|RECEIVE
argument_list|,
literal|null
argument_list|,
name|KEY_REQUIRE_CHANGE_ID
argument_list|,
name|p
operator|.
name|isRequireChangeID
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|rc
argument_list|,
name|SUBMIT
argument_list|,
literal|null
argument_list|,
name|KEY_ACTION
argument_list|,
name|p
operator|.
name|getSubmitType
argument_list|()
argument_list|,
name|defaultSubmitAction
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|rc
argument_list|,
name|SUBMIT
argument_list|,
literal|null
argument_list|,
name|KEY_MERGE_CONTENT
argument_list|,
name|p
operator|.
name|isUseContentMerge
argument_list|()
argument_list|)
expr_stmt|;
name|saveConfig
argument_list|(
name|PROJECT_CONFIG
argument_list|,
name|rc
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

