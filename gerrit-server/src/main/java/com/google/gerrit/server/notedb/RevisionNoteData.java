begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2016 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.notedb
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
package|;
end_package

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
operator|.
name|toList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Patch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchLineComment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|RevId
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Holds the raw data of a RevisionNote.  *<p>It is intended for (de)serialization to JSON only.  */
end_comment

begin_class
DECL|class|RevisionNoteData
class|class
name|RevisionNoteData
block|{
DECL|class|Identity
specifier|static
class|class
name|Identity
block|{
DECL|field|id
name|int
name|id
decl_stmt|;
DECL|method|Identity (Account.Id id)
name|Identity
parameter_list|(
name|Account
operator|.
name|Id
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
DECL|method|export ()
name|Account
operator|.
name|Id
name|export
parameter_list|()
block|{
return|return
operator|new
name|Account
operator|.
name|Id
argument_list|(
name|id
argument_list|)
return|;
block|}
block|}
DECL|class|CommentKey
specifier|static
class|class
name|CommentKey
block|{
DECL|field|uuid
name|String
name|uuid
decl_stmt|;
DECL|field|filename
name|String
name|filename
decl_stmt|;
DECL|field|patchSetId
name|int
name|patchSetId
decl_stmt|;
DECL|method|CommentKey (PatchLineComment.Key k)
name|CommentKey
parameter_list|(
name|PatchLineComment
operator|.
name|Key
name|k
parameter_list|)
block|{
name|uuid
operator|=
name|k
operator|.
name|get
argument_list|()
expr_stmt|;
name|filename
operator|=
name|k
operator|.
name|getParentKey
argument_list|()
operator|.
name|getFileName
argument_list|()
expr_stmt|;
name|patchSetId
operator|=
name|k
operator|.
name|getParentKey
argument_list|()
operator|.
name|getParentKey
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
DECL|method|export (Change.Id changeId)
name|PatchLineComment
operator|.
name|Key
name|export
parameter_list|(
name|Change
operator|.
name|Id
name|changeId
parameter_list|)
block|{
return|return
operator|new
name|PatchLineComment
operator|.
name|Key
argument_list|(
operator|new
name|Patch
operator|.
name|Key
argument_list|(
operator|new
name|PatchSet
operator|.
name|Id
argument_list|(
name|changeId
argument_list|,
name|patchSetId
argument_list|)
argument_list|,
name|filename
argument_list|)
argument_list|,
name|uuid
argument_list|)
return|;
block|}
block|}
DECL|class|CommentRange
specifier|static
class|class
name|CommentRange
block|{
DECL|field|startLine
name|int
name|startLine
decl_stmt|;
DECL|field|startChar
name|int
name|startChar
decl_stmt|;
DECL|field|endLine
name|int
name|endLine
decl_stmt|;
DECL|field|endChar
name|int
name|endChar
decl_stmt|;
DECL|method|CommentRange (com.google.gerrit.reviewdb.client.CommentRange cr)
name|CommentRange
parameter_list|(
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|CommentRange
name|cr
parameter_list|)
block|{
name|startLine
operator|=
name|cr
operator|.
name|getStartLine
argument_list|()
expr_stmt|;
name|startChar
operator|=
name|cr
operator|.
name|getStartCharacter
argument_list|()
expr_stmt|;
name|endLine
operator|=
name|cr
operator|.
name|getEndLine
argument_list|()
expr_stmt|;
name|endChar
operator|=
name|cr
operator|.
name|getEndCharacter
argument_list|()
expr_stmt|;
block|}
DECL|method|export ()
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|CommentRange
name|export
parameter_list|()
block|{
return|return
operator|new
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|CommentRange
argument_list|(
name|startLine
argument_list|,
name|startChar
argument_list|,
name|endLine
argument_list|,
name|endChar
argument_list|)
return|;
block|}
block|}
DECL|class|Comment
specifier|static
class|class
name|Comment
block|{
DECL|field|key
name|CommentKey
name|key
decl_stmt|;
DECL|field|lineNbr
name|int
name|lineNbr
decl_stmt|;
DECL|field|author
name|Identity
name|author
decl_stmt|;
DECL|field|writtenOn
name|Timestamp
name|writtenOn
decl_stmt|;
DECL|field|side
name|short
name|side
decl_stmt|;
DECL|field|message
name|String
name|message
decl_stmt|;
DECL|field|parentUuid
name|String
name|parentUuid
decl_stmt|;
DECL|field|range
name|CommentRange
name|range
decl_stmt|;
DECL|field|tag
name|String
name|tag
decl_stmt|;
DECL|field|revId
name|String
name|revId
decl_stmt|;
DECL|field|serverId
name|String
name|serverId
decl_stmt|;
DECL|method|Comment (PatchLineComment plc, String serverId)
name|Comment
parameter_list|(
name|PatchLineComment
name|plc
parameter_list|,
name|String
name|serverId
parameter_list|)
block|{
name|key
operator|=
operator|new
name|CommentKey
argument_list|(
name|plc
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|lineNbr
operator|=
name|plc
operator|.
name|getLine
argument_list|()
expr_stmt|;
name|author
operator|=
operator|new
name|Identity
argument_list|(
name|plc
operator|.
name|getAuthor
argument_list|()
argument_list|)
expr_stmt|;
name|writtenOn
operator|=
name|plc
operator|.
name|getWrittenOn
argument_list|()
expr_stmt|;
name|side
operator|=
name|plc
operator|.
name|getSide
argument_list|()
expr_stmt|;
name|message
operator|=
name|plc
operator|.
name|getMessage
argument_list|()
expr_stmt|;
name|parentUuid
operator|=
name|plc
operator|.
name|getParentUuid
argument_list|()
expr_stmt|;
name|range
operator|=
name|plc
operator|.
name|getRange
argument_list|()
operator|!=
literal|null
condition|?
operator|new
name|CommentRange
argument_list|(
name|plc
operator|.
name|getRange
argument_list|()
argument_list|)
else|:
literal|null
expr_stmt|;
name|tag
operator|=
name|plc
operator|.
name|getTag
argument_list|()
expr_stmt|;
name|revId
operator|=
name|plc
operator|.
name|getRevId
argument_list|()
operator|.
name|get
argument_list|()
expr_stmt|;
name|this
operator|.
name|serverId
operator|=
name|serverId
expr_stmt|;
block|}
DECL|method|export (Change.Id changeId, PatchLineComment.Status status)
name|PatchLineComment
name|export
parameter_list|(
name|Change
operator|.
name|Id
name|changeId
parameter_list|,
name|PatchLineComment
operator|.
name|Status
name|status
parameter_list|)
block|{
name|PatchLineComment
name|plc
init|=
operator|new
name|PatchLineComment
argument_list|(
name|key
operator|.
name|export
argument_list|(
name|changeId
argument_list|)
argument_list|,
name|lineNbr
argument_list|,
name|author
operator|.
name|export
argument_list|()
argument_list|,
name|parentUuid
argument_list|,
name|writtenOn
argument_list|)
decl_stmt|;
name|plc
operator|.
name|setSide
argument_list|(
name|side
argument_list|)
expr_stmt|;
name|plc
operator|.
name|setMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
if|if
condition|(
name|range
operator|!=
literal|null
condition|)
block|{
name|plc
operator|.
name|setRange
argument_list|(
name|range
operator|.
name|export
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|plc
operator|.
name|setTag
argument_list|(
name|tag
argument_list|)
expr_stmt|;
name|plc
operator|.
name|setRevId
argument_list|(
operator|new
name|RevId
argument_list|(
name|revId
argument_list|)
argument_list|)
expr_stmt|;
name|plc
operator|.
name|setStatus
argument_list|(
name|status
argument_list|)
expr_stmt|;
return|return
name|plc
return|;
block|}
block|}
DECL|field|pushCert
name|String
name|pushCert
decl_stmt|;
DECL|field|comments
name|List
argument_list|<
name|Comment
argument_list|>
name|comments
decl_stmt|;
DECL|method|exportComments (Change.Id changeId, PatchLineComment.Status status)
name|ImmutableList
argument_list|<
name|PatchLineComment
argument_list|>
name|exportComments
parameter_list|(
name|Change
operator|.
name|Id
name|changeId
parameter_list|,
name|PatchLineComment
operator|.
name|Status
name|status
parameter_list|)
block|{
return|return
name|ImmutableList
operator|.
name|copyOf
argument_list|(
name|comments
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|c
lambda|->
name|c
operator|.
name|export
argument_list|(
name|changeId
argument_list|,
name|status
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

