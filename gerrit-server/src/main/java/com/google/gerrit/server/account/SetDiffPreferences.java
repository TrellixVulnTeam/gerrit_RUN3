begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.account
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|GetDiffPreferences
operator|.
name|initFromDb
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|GetDiffPreferences
operator|.
name|readFromGit
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|ConfigUtil
operator|.
name|loadSection
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|ConfigUtil
operator|.
name|storeSection
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|DiffPreferencesInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|AuthException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|BadRequestException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestModifyView
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountDiffPreference
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountDiffPreference
operator|.
name|Whitespace
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|server
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|CurrentUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AllUsersName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|GerritServerConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|GitRepositoryManager
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|MetaDataUpdate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|UserConfigSections
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|patch
operator|.
name|PatchListKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|errors
operator|.
name|ConfigInvalidException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|errors
operator|.
name|RepositoryNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_class
annotation|@
name|Singleton
DECL|class|SetDiffPreferences
specifier|public
class|class
name|SetDiffPreferences
implements|implements
name|RestModifyView
argument_list|<
name|AccountResource
argument_list|,
name|DiffPreferencesInfo
argument_list|>
block|{
DECL|field|self
specifier|private
specifier|final
name|Provider
argument_list|<
name|CurrentUser
argument_list|>
name|self
decl_stmt|;
DECL|field|db
specifier|private
specifier|final
name|Provider
argument_list|<
name|ReviewDb
argument_list|>
name|db
decl_stmt|;
DECL|field|metaDataUpdateFactory
specifier|private
specifier|final
name|Provider
argument_list|<
name|MetaDataUpdate
operator|.
name|User
argument_list|>
name|metaDataUpdateFactory
decl_stmt|;
DECL|field|allUsersName
specifier|private
specifier|final
name|AllUsersName
name|allUsersName
decl_stmt|;
DECL|field|gitMgr
specifier|private
specifier|final
name|GitRepositoryManager
name|gitMgr
decl_stmt|;
DECL|field|readFromGit
specifier|private
specifier|final
name|boolean
name|readFromGit
decl_stmt|;
annotation|@
name|Inject
DECL|method|SetDiffPreferences (Provider<CurrentUser> self, Provider<ReviewDb> db, @GerritServerConfig Config cfg, Provider<MetaDataUpdate.User> metaDataUpdateFactory, AllUsersName allUsersName, GitRepositoryManager gitMgr)
name|SetDiffPreferences
parameter_list|(
name|Provider
argument_list|<
name|CurrentUser
argument_list|>
name|self
parameter_list|,
name|Provider
argument_list|<
name|ReviewDb
argument_list|>
name|db
parameter_list|,
annotation|@
name|GerritServerConfig
name|Config
name|cfg
parameter_list|,
name|Provider
argument_list|<
name|MetaDataUpdate
operator|.
name|User
argument_list|>
name|metaDataUpdateFactory
parameter_list|,
name|AllUsersName
name|allUsersName
parameter_list|,
name|GitRepositoryManager
name|gitMgr
parameter_list|)
block|{
name|this
operator|.
name|self
operator|=
name|self
expr_stmt|;
name|this
operator|.
name|db
operator|=
name|db
expr_stmt|;
name|this
operator|.
name|metaDataUpdateFactory
operator|=
name|metaDataUpdateFactory
expr_stmt|;
name|this
operator|.
name|allUsersName
operator|=
name|allUsersName
expr_stmt|;
name|this
operator|.
name|gitMgr
operator|=
name|gitMgr
expr_stmt|;
name|readFromGit
operator|=
name|cfg
operator|.
name|getBoolean
argument_list|(
literal|"user"
argument_list|,
literal|null
argument_list|,
literal|"readPrefsFromGit"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|apply (AccountResource rsrc, DiffPreferencesInfo in)
specifier|public
name|DiffPreferencesInfo
name|apply
parameter_list|(
name|AccountResource
name|rsrc
parameter_list|,
name|DiffPreferencesInfo
name|in
parameter_list|)
throws|throws
name|AuthException
throws|,
name|BadRequestException
throws|,
name|ConfigInvalidException
throws|,
name|RepositoryNotFoundException
throws|,
name|IOException
throws|,
name|OrmException
block|{
if|if
condition|(
name|self
operator|.
name|get
argument_list|()
operator|!=
name|rsrc
operator|.
name|getUser
argument_list|()
operator|&&
operator|!
name|self
operator|.
name|get
argument_list|()
operator|.
name|getCapabilities
argument_list|()
operator|.
name|canModifyAccount
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|AuthException
argument_list|(
literal|"restricted to members of Modify Accounts"
argument_list|)
throw|;
block|}
if|if
condition|(
name|in
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|BadRequestException
argument_list|(
literal|"input must be provided"
argument_list|)
throw|;
block|}
name|Account
operator|.
name|Id
name|userId
init|=
name|rsrc
operator|.
name|getUser
argument_list|()
operator|.
name|getAccountId
argument_list|()
decl_stmt|;
name|DiffPreferencesInfo
name|n
init|=
name|readFromGit
condition|?
name|readFromGit
argument_list|(
name|userId
argument_list|,
name|gitMgr
argument_list|,
name|allUsersName
argument_list|,
name|in
argument_list|)
else|:
name|merge
argument_list|(
name|initFromDb
argument_list|(
name|db
operator|.
name|get
argument_list|()
operator|.
name|accountDiffPreferences
argument_list|()
operator|.
name|get
argument_list|(
name|userId
argument_list|)
argument_list|)
argument_list|,
name|in
argument_list|)
decl_stmt|;
name|DiffPreferencesInfo
name|out
init|=
name|writeToGit
argument_list|(
name|n
argument_list|,
name|userId
argument_list|)
decl_stmt|;
name|writeToDb
argument_list|(
name|n
argument_list|,
name|userId
argument_list|)
expr_stmt|;
return|return
name|out
return|;
block|}
DECL|method|writeToDb (DiffPreferencesInfo in, Account.Id id)
specifier|private
name|void
name|writeToDb
parameter_list|(
name|DiffPreferencesInfo
name|in
parameter_list|,
name|Account
operator|.
name|Id
name|id
parameter_list|)
throws|throws
name|OrmException
block|{
name|db
operator|.
name|get
argument_list|()
operator|.
name|accounts
argument_list|()
operator|.
name|beginTransaction
argument_list|(
name|id
argument_list|)
expr_stmt|;
try|try
block|{
name|AccountDiffPreference
name|p
init|=
name|db
operator|.
name|get
argument_list|()
operator|.
name|accountDiffPreferences
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|p
operator|=
name|initAccountDiffPreferences
argument_list|(
name|p
argument_list|,
name|in
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|db
operator|.
name|get
argument_list|()
operator|.
name|accountDiffPreferences
argument_list|()
operator|.
name|upsert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|p
argument_list|)
argument_list|)
expr_stmt|;
name|db
operator|.
name|get
argument_list|()
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|db
operator|.
name|get
argument_list|()
operator|.
name|rollback
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|writeToGit (DiffPreferencesInfo in, Account.Id useId)
specifier|private
name|DiffPreferencesInfo
name|writeToGit
parameter_list|(
name|DiffPreferencesInfo
name|in
parameter_list|,
name|Account
operator|.
name|Id
name|useId
parameter_list|)
throws|throws
name|RepositoryNotFoundException
throws|,
name|IOException
throws|,
name|ConfigInvalidException
block|{
name|MetaDataUpdate
name|md
init|=
name|metaDataUpdateFactory
operator|.
name|get
argument_list|()
operator|.
name|create
argument_list|(
name|allUsersName
argument_list|)
decl_stmt|;
name|VersionedAccountPreferences
name|prefs
decl_stmt|;
name|DiffPreferencesInfo
name|out
init|=
operator|new
name|DiffPreferencesInfo
argument_list|()
decl_stmt|;
try|try
block|{
name|prefs
operator|=
name|VersionedAccountPreferences
operator|.
name|forUser
argument_list|(
name|useId
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|load
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|storeSection
argument_list|(
name|prefs
operator|.
name|getConfig
argument_list|()
argument_list|,
name|UserConfigSections
operator|.
name|DIFF
argument_list|,
literal|null
argument_list|,
name|in
argument_list|,
name|DiffPreferencesInfo
operator|.
name|defaults
argument_list|()
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|commit
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|loadSection
argument_list|(
name|prefs
operator|.
name|getConfig
argument_list|()
argument_list|,
name|UserConfigSections
operator|.
name|DIFF
argument_list|,
literal|null
argument_list|,
name|out
argument_list|,
name|DiffPreferencesInfo
operator|.
name|defaults
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|md
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
return|return
name|out
return|;
block|}
comment|// TODO(davido): Remove manual merging in follow-up change
DECL|method|merge (DiffPreferencesInfo n, DiffPreferencesInfo i)
specifier|private
name|DiffPreferencesInfo
name|merge
parameter_list|(
name|DiffPreferencesInfo
name|n
parameter_list|,
name|DiffPreferencesInfo
name|i
parameter_list|)
block|{
if|if
condition|(
name|i
operator|.
name|context
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|context
operator|=
name|i
operator|.
name|context
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|expandAllComments
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|expandAllComments
operator|=
name|i
operator|.
name|expandAllComments
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|hideLineNumbers
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|hideLineNumbers
operator|=
name|i
operator|.
name|hideLineNumbers
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|hideTopMenu
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|hideTopMenu
operator|=
name|i
operator|.
name|hideTopMenu
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|ignoreWhitespace
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|ignoreWhitespace
operator|=
name|i
operator|.
name|ignoreWhitespace
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|intralineDifference
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|intralineDifference
operator|=
name|i
operator|.
name|intralineDifference
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|lineLength
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|lineLength
operator|=
name|i
operator|.
name|lineLength
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|manualReview
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|manualReview
operator|=
name|i
operator|.
name|manualReview
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|renderEntireFile
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|renderEntireFile
operator|=
name|i
operator|.
name|renderEntireFile
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|retainHeader
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|retainHeader
operator|=
name|i
operator|.
name|retainHeader
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|showLineEndings
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|showLineEndings
operator|=
name|i
operator|.
name|showLineEndings
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|showTabs
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|showTabs
operator|=
name|i
operator|.
name|showTabs
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|showWhitespaceErrors
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|showWhitespaceErrors
operator|=
name|i
operator|.
name|showWhitespaceErrors
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|skipDeleted
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|skipDeleted
operator|=
name|i
operator|.
name|skipDeleted
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|skipUncommented
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|skipUncommented
operator|=
name|i
operator|.
name|skipUncommented
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|syntaxHighlighting
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|syntaxHighlighting
operator|=
name|i
operator|.
name|syntaxHighlighting
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|tabSize
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|tabSize
operator|=
name|i
operator|.
name|tabSize
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|theme
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|theme
operator|=
name|i
operator|.
name|theme
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|hideEmptyPane
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|hideEmptyPane
operator|=
name|i
operator|.
name|hideEmptyPane
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|.
name|autoHideDiffTableHeader
operator|!=
literal|null
condition|)
block|{
name|n
operator|.
name|autoHideDiffTableHeader
operator|=
name|i
operator|.
name|autoHideDiffTableHeader
expr_stmt|;
block|}
return|return
name|n
return|;
block|}
DECL|method|initAccountDiffPreferences ( AccountDiffPreference a, DiffPreferencesInfo i, Account.Id id)
specifier|private
specifier|static
name|AccountDiffPreference
name|initAccountDiffPreferences
parameter_list|(
name|AccountDiffPreference
name|a
parameter_list|,
name|DiffPreferencesInfo
name|i
parameter_list|,
name|Account
operator|.
name|Id
name|id
parameter_list|)
block|{
if|if
condition|(
name|a
operator|==
literal|null
condition|)
block|{
name|a
operator|=
name|AccountDiffPreference
operator|.
name|createDefault
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
name|int
name|context
init|=
name|i
operator|.
name|context
operator|==
literal|null
condition|?
name|DiffPreferencesInfo
operator|.
name|DEFAULT_CONTEXT
else|:
name|i
operator|.
name|context
decl_stmt|;
name|a
operator|.
name|setContext
argument_list|(
operator|(
name|short
operator|)
name|context
argument_list|)
expr_stmt|;
name|a
operator|.
name|setExpandAllComments
argument_list|(
name|b
argument_list|(
name|i
operator|.
name|expandAllComments
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setHideLineNumbers
argument_list|(
name|b
argument_list|(
name|i
operator|.
name|hideLineNumbers
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setHideTopMenu
argument_list|(
name|b
argument_list|(
name|i
operator|.
name|hideTopMenu
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setIgnoreWhitespace
argument_list|(
name|i
operator|.
name|ignoreWhitespace
operator|==
literal|null
condition|?
name|Whitespace
operator|.
name|IGNORE_NONE
else|:
name|Whitespace
operator|.
name|forCode
argument_list|(
name|PatchListKey
operator|.
name|WHITESPACE_TYPES
operator|.
name|get
argument_list|(
name|i
operator|.
name|ignoreWhitespace
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setIntralineDifference
argument_list|(
name|b
argument_list|(
name|i
operator|.
name|intralineDifference
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setLineLength
argument_list|(
name|i
operator|.
name|lineLength
operator|==
literal|null
condition|?
name|DiffPreferencesInfo
operator|.
name|DEFAULT_LINE_LENGTH
else|:
name|i
operator|.
name|lineLength
argument_list|)
expr_stmt|;
name|a
operator|.
name|setManualReview
argument_list|(
name|b
argument_list|(
name|i
operator|.
name|manualReview
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setRenderEntireFile
argument_list|(
name|b
argument_list|(
name|i
operator|.
name|renderEntireFile
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setRetainHeader
argument_list|(
name|b
argument_list|(
name|i
operator|.
name|retainHeader
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setShowLineEndings
argument_list|(
name|b
argument_list|(
name|i
operator|.
name|showLineEndings
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setShowTabs
argument_list|(
name|b
argument_list|(
name|i
operator|.
name|showTabs
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setShowWhitespaceErrors
argument_list|(
name|b
argument_list|(
name|i
operator|.
name|showWhitespaceErrors
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setSkipDeleted
argument_list|(
name|b
argument_list|(
name|i
operator|.
name|skipDeleted
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setSkipUncommented
argument_list|(
name|b
argument_list|(
name|i
operator|.
name|skipUncommented
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setSyntaxHighlighting
argument_list|(
name|b
argument_list|(
name|i
operator|.
name|syntaxHighlighting
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setTabSize
argument_list|(
name|i
operator|.
name|tabSize
operator|==
literal|null
condition|?
name|DiffPreferencesInfo
operator|.
name|DEFAULT_TAB_SIZE
else|:
name|i
operator|.
name|tabSize
argument_list|)
expr_stmt|;
name|a
operator|.
name|setTheme
argument_list|(
name|i
operator|.
name|theme
argument_list|)
expr_stmt|;
name|a
operator|.
name|setHideEmptyPane
argument_list|(
name|b
argument_list|(
name|i
operator|.
name|hideEmptyPane
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setAutoHideDiffTableHeader
argument_list|(
name|b
argument_list|(
name|i
operator|.
name|autoHideDiffTableHeader
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|a
return|;
block|}
DECL|method|b (Boolean b)
specifier|private
specifier|static
name|boolean
name|b
parameter_list|(
name|Boolean
name|b
parameter_list|)
block|{
return|return
name|b
operator|==
literal|null
condition|?
literal|false
else|:
name|b
return|;
block|}
block|}
end_class

end_unit

