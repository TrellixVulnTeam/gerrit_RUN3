begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.account
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|AuthException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestModifyView
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountDiffPreference
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountDiffPreference
operator|.
name|Theme
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountDiffPreference
operator|.
name|Whitespace
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|server
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|CurrentUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|GetDiffPreferences
operator|.
name|DiffPreferencesInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|SetDiffPreferences
operator|.
name|Input
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_class
DECL|class|SetDiffPreferences
specifier|public
class|class
name|SetDiffPreferences
implements|implements
name|RestModifyView
argument_list|<
name|AccountResource
argument_list|,
name|Input
argument_list|>
block|{
DECL|class|Input
specifier|static
class|class
name|Input
block|{
DECL|field|context
name|Short
name|context
decl_stmt|;
DECL|field|expandAllComments
name|Boolean
name|expandAllComments
decl_stmt|;
DECL|field|ignoreWhitespace
name|Whitespace
name|ignoreWhitespace
decl_stmt|;
DECL|field|intralineDifference
name|Boolean
name|intralineDifference
decl_stmt|;
DECL|field|lineLength
name|Integer
name|lineLength
decl_stmt|;
DECL|field|manualReview
name|Boolean
name|manualReview
decl_stmt|;
DECL|field|retainHeader
name|Boolean
name|retainHeader
decl_stmt|;
DECL|field|showLineEndings
name|Boolean
name|showLineEndings
decl_stmt|;
DECL|field|showTabs
name|Boolean
name|showTabs
decl_stmt|;
DECL|field|showWhitespaceErrors
name|Boolean
name|showWhitespaceErrors
decl_stmt|;
DECL|field|skipDeleted
name|Boolean
name|skipDeleted
decl_stmt|;
DECL|field|skipUncommented
name|Boolean
name|skipUncommented
decl_stmt|;
DECL|field|syntaxHighlighting
name|Boolean
name|syntaxHighlighting
decl_stmt|;
DECL|field|hideTopMenu
name|Boolean
name|hideTopMenu
decl_stmt|;
DECL|field|hideLineNumbers
name|Boolean
name|hideLineNumbers
decl_stmt|;
DECL|field|renderEntireFile
name|Boolean
name|renderEntireFile
decl_stmt|;
DECL|field|tabSize
name|Integer
name|tabSize
decl_stmt|;
DECL|field|theme
name|Theme
name|theme
decl_stmt|;
block|}
DECL|field|self
specifier|private
specifier|final
name|Provider
argument_list|<
name|CurrentUser
argument_list|>
name|self
decl_stmt|;
DECL|field|db
specifier|private
specifier|final
name|ReviewDb
name|db
decl_stmt|;
annotation|@
name|Inject
DECL|method|SetDiffPreferences (Provider<CurrentUser> self, ReviewDb db)
name|SetDiffPreferences
parameter_list|(
name|Provider
argument_list|<
name|CurrentUser
argument_list|>
name|self
parameter_list|,
name|ReviewDb
name|db
parameter_list|)
block|{
name|this
operator|.
name|self
operator|=
name|self
expr_stmt|;
name|this
operator|.
name|db
operator|=
name|db
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|apply (AccountResource rsrc, Input input)
specifier|public
name|DiffPreferencesInfo
name|apply
parameter_list|(
name|AccountResource
name|rsrc
parameter_list|,
name|Input
name|input
parameter_list|)
throws|throws
name|AuthException
throws|,
name|OrmException
block|{
if|if
condition|(
name|self
operator|.
name|get
argument_list|()
operator|!=
name|rsrc
operator|.
name|getUser
argument_list|()
operator|&&
operator|!
name|self
operator|.
name|get
argument_list|()
operator|.
name|getCapabilities
argument_list|()
operator|.
name|canAdministrateServer
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|AuthException
argument_list|(
literal|"restricted to administrator"
argument_list|)
throw|;
block|}
if|if
condition|(
name|input
operator|==
literal|null
condition|)
block|{
name|input
operator|=
operator|new
name|Input
argument_list|()
expr_stmt|;
block|}
name|Account
operator|.
name|Id
name|accountId
init|=
name|rsrc
operator|.
name|getUser
argument_list|()
operator|.
name|getAccountId
argument_list|()
decl_stmt|;
name|AccountDiffPreference
name|p
decl_stmt|;
name|db
operator|.
name|accounts
argument_list|()
operator|.
name|beginTransaction
argument_list|(
name|accountId
argument_list|)
expr_stmt|;
try|try
block|{
name|p
operator|=
name|db
operator|.
name|accountDiffPreferences
argument_list|()
operator|.
name|get
argument_list|(
name|accountId
argument_list|)
expr_stmt|;
if|if
condition|(
name|p
operator|==
literal|null
condition|)
block|{
name|p
operator|=
operator|new
name|AccountDiffPreference
argument_list|(
name|accountId
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|context
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setContext
argument_list|(
name|input
operator|.
name|context
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|ignoreWhitespace
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setIgnoreWhitespace
argument_list|(
name|input
operator|.
name|ignoreWhitespace
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|expandAllComments
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setExpandAllComments
argument_list|(
name|input
operator|.
name|expandAllComments
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|intralineDifference
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setIntralineDifference
argument_list|(
name|input
operator|.
name|intralineDifference
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|lineLength
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setLineLength
argument_list|(
name|input
operator|.
name|lineLength
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|manualReview
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setManualReview
argument_list|(
name|input
operator|.
name|manualReview
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|retainHeader
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setRetainHeader
argument_list|(
name|input
operator|.
name|retainHeader
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|showLineEndings
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setShowLineEndings
argument_list|(
name|input
operator|.
name|showLineEndings
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|showTabs
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setShowTabs
argument_list|(
name|input
operator|.
name|showTabs
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|showWhitespaceErrors
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setShowWhitespaceErrors
argument_list|(
name|input
operator|.
name|showWhitespaceErrors
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|skipDeleted
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setSkipDeleted
argument_list|(
name|input
operator|.
name|skipDeleted
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|skipUncommented
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setSkipUncommented
argument_list|(
name|input
operator|.
name|skipUncommented
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|syntaxHighlighting
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setSyntaxHighlighting
argument_list|(
name|input
operator|.
name|syntaxHighlighting
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|hideTopMenu
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setHideTopMenu
argument_list|(
name|input
operator|.
name|hideTopMenu
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|hideLineNumbers
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setHideLineNumbers
argument_list|(
name|input
operator|.
name|hideLineNumbers
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|renderEntireFile
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setRenderEntireFile
argument_list|(
name|input
operator|.
name|renderEntireFile
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|tabSize
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setTabSize
argument_list|(
name|input
operator|.
name|tabSize
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|input
operator|.
name|theme
operator|!=
literal|null
condition|)
block|{
name|p
operator|.
name|setTheme
argument_list|(
name|input
operator|.
name|theme
argument_list|)
expr_stmt|;
block|}
name|db
operator|.
name|accountDiffPreferences
argument_list|()
operator|.
name|upsert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|p
argument_list|)
argument_list|)
expr_stmt|;
name|db
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|db
operator|.
name|rollback
argument_list|()
expr_stmt|;
block|}
return|return
name|DiffPreferencesInfo
operator|.
name|parse
argument_list|(
name|p
argument_list|)
return|;
block|}
block|}
end_class

end_unit

