begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2016 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.notedb.rebuild
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|rebuild
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ChangeUpdate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|PatchSetState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|errors
operator|.
name|InvalidObjectIdException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|errors
operator|.
name|MissingObjectException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevWalk
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
DECL|class|PatchSetEvent
class|class
name|PatchSetEvent
extends|extends
name|Event
block|{
DECL|field|change
specifier|private
specifier|final
name|Change
name|change
decl_stmt|;
DECL|field|ps
specifier|private
specifier|final
name|PatchSet
name|ps
decl_stmt|;
DECL|field|rw
specifier|private
specifier|final
name|RevWalk
name|rw
decl_stmt|;
DECL|field|createChange
name|boolean
name|createChange
decl_stmt|;
DECL|method|PatchSetEvent (Change change, PatchSet ps, RevWalk rw)
name|PatchSetEvent
parameter_list|(
name|Change
name|change
parameter_list|,
name|PatchSet
name|ps
parameter_list|,
name|RevWalk
name|rw
parameter_list|)
block|{
name|super
argument_list|(
name|ps
operator|.
name|getId
argument_list|()
argument_list|,
name|ps
operator|.
name|getUploader
argument_list|()
argument_list|,
name|ps
operator|.
name|getCreatedOn
argument_list|()
argument_list|,
name|change
operator|.
name|getCreatedOn
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|this
operator|.
name|change
operator|=
name|change
expr_stmt|;
name|this
operator|.
name|ps
operator|=
name|ps
expr_stmt|;
name|this
operator|.
name|rw
operator|=
name|rw
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|uniquePerUpdate ()
name|boolean
name|uniquePerUpdate
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|apply (ChangeUpdate update)
name|void
name|apply
parameter_list|(
name|ChangeUpdate
name|update
parameter_list|)
throws|throws
name|IOException
throws|,
name|OrmException
block|{
name|checkUpdate
argument_list|(
name|update
argument_list|)
expr_stmt|;
if|if
condition|(
name|createChange
condition|)
block|{
name|ChangeRebuilderImpl
operator|.
name|createChange
argument_list|(
name|update
argument_list|,
name|change
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|update
operator|.
name|setSubject
argument_list|(
name|change
operator|.
name|getSubject
argument_list|()
argument_list|)
expr_stmt|;
name|update
operator|.
name|setSubjectForCommit
argument_list|(
literal|"Create patch set "
operator|+
name|ps
operator|.
name|getPatchSetId
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|setRevision
argument_list|(
name|update
argument_list|,
name|ps
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|groups
init|=
name|ps
operator|.
name|getGroups
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|groups
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|update
operator|.
name|setGroups
argument_list|(
name|ps
operator|.
name|getGroups
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ps
operator|.
name|isDraft
argument_list|()
condition|)
block|{
name|update
operator|.
name|setPatchSetState
argument_list|(
name|PatchSetState
operator|.
name|DRAFT
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|isPatchSet ()
specifier|protected
name|boolean
name|isPatchSet
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
DECL|method|setRevision (ChangeUpdate update, PatchSet ps)
specifier|private
name|void
name|setRevision
parameter_list|(
name|ChangeUpdate
name|update
parameter_list|,
name|PatchSet
name|ps
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|rev
init|=
name|ps
operator|.
name|getRevision
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
name|String
name|cert
init|=
name|ps
operator|.
name|getPushCertificate
argument_list|()
decl_stmt|;
name|ObjectId
name|id
decl_stmt|;
try|try
block|{
name|id
operator|=
name|ObjectId
operator|.
name|fromString
argument_list|(
name|rev
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InvalidObjectIdException
name|e
parameter_list|)
block|{
name|update
operator|.
name|setRevisionForMissingCommit
argument_list|(
name|rev
argument_list|,
name|cert
argument_list|)
expr_stmt|;
return|return;
block|}
try|try
block|{
name|update
operator|.
name|setCommit
argument_list|(
name|rw
argument_list|,
name|id
argument_list|,
name|cert
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MissingObjectException
name|e
parameter_list|)
block|{
name|update
operator|.
name|setRevisionForMissingCommit
argument_list|(
name|rev
argument_list|,
name|cert
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
end_class

end_unit

