begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2012 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.sshd.commands
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|sshd
operator|.
name|commands
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|TestSubmitRuleInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|TestSubmitRuleInput
operator|.
name|Filters
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|IdString
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestModifyView
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|TopLevelResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|OutputFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|change
operator|.
name|ChangesCollection
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|change
operator|.
name|RevisionResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|change
operator|.
name|Revisions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|sshd
operator|.
name|SshCommand
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|util
operator|.
name|IO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|util
operator|.
name|RawParseUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kohsuke
operator|.
name|args4j
operator|.
name|Argument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|kohsuke
operator|.
name|args4j
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_class
DECL|class|BaseTestPrologCommand
specifier|abstract
class|class
name|BaseTestPrologCommand
extends|extends
name|SshCommand
block|{
DECL|field|input
specifier|private
name|TestSubmitRuleInput
name|input
init|=
operator|new
name|TestSubmitRuleInput
argument_list|()
decl_stmt|;
annotation|@
name|Inject
DECL|field|changes
specifier|private
name|ChangesCollection
name|changes
decl_stmt|;
annotation|@
name|Inject
DECL|field|revisions
specifier|private
name|Revisions
name|revisions
decl_stmt|;
annotation|@
name|Argument
argument_list|(
name|index
operator|=
literal|0
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|usage
operator|=
literal|"ChangeId to load in prolog environment"
argument_list|)
DECL|field|changeId
specifier|protected
name|String
name|changeId
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-s"
argument_list|,
name|usage
operator|=
literal|"Read prolog script from stdin instead of reading rules.pl from the refs/meta/config branch"
argument_list|)
DECL|field|useStdin
specifier|protected
name|boolean
name|useStdin
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--no-filters"
argument_list|,
name|aliases
operator|=
block|{
literal|"-n"
block|}
argument_list|,
name|usage
operator|=
literal|"Don't run the submit_filter/2 from the parent projects"
argument_list|)
DECL|method|setNoFilters (boolean no)
name|void
name|setNoFilters
parameter_list|(
name|boolean
name|no
parameter_list|)
block|{
name|input
operator|.
name|filters
operator|=
name|no
condition|?
name|Filters
operator|.
name|SKIP
else|:
name|Filters
operator|.
name|RUN
expr_stmt|;
block|}
DECL|method|createView ()
specifier|protected
specifier|abstract
name|RestModifyView
argument_list|<
name|RevisionResource
argument_list|,
name|TestSubmitRuleInput
argument_list|>
name|createView
parameter_list|()
function_decl|;
annotation|@
name|Override
DECL|method|run ()
specifier|protected
specifier|final
name|void
name|run
parameter_list|()
throws|throws
name|UnloggedFailure
block|{
try|try
block|{
name|RevisionResource
name|revision
init|=
name|revisions
operator|.
name|parse
argument_list|(
name|changes
operator|.
name|parse
argument_list|(
name|TopLevelResource
operator|.
name|INSTANCE
argument_list|,
name|IdString
operator|.
name|fromUrl
argument_list|(
name|changeId
argument_list|)
argument_list|)
argument_list|,
name|IdString
operator|.
name|fromUrl
argument_list|(
literal|"current"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|useStdin
condition|)
block|{
name|ByteBuffer
name|buf
init|=
name|IO
operator|.
name|readWholeStream
argument_list|(
name|in
argument_list|,
literal|4096
argument_list|)
decl_stmt|;
name|input
operator|.
name|rule
operator|=
name|RawParseUtils
operator|.
name|decode
argument_list|(
name|buf
operator|.
name|array
argument_list|()
argument_list|,
name|buf
operator|.
name|arrayOffset
argument_list|()
argument_list|,
name|buf
operator|.
name|limit
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Object
name|result
init|=
name|createView
argument_list|()
operator|.
name|apply
argument_list|(
name|revision
argument_list|,
name|input
argument_list|)
decl_stmt|;
name|OutputFormat
operator|.
name|JSON
operator|.
name|newGson
argument_list|()
operator|.
name|toJson
argument_list|(
name|result
argument_list|,
name|stdout
argument_list|)
expr_stmt|;
name|stdout
operator|.
name|print
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|UnloggedFailure
argument_list|(
literal|"Processing of prolog script failed: "
operator|+
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

