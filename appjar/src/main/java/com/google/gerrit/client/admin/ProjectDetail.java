begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright 2008 Google Inc.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.admin
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|admin
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|data
operator|.
name|ProjectCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|AccountGroup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|ProjectRight
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|Common
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|ResultSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
DECL|class|ProjectDetail
specifier|public
class|class
name|ProjectDetail
block|{
DECL|field|project
specifier|protected
name|Project
name|project
decl_stmt|;
DECL|field|groups
specifier|protected
name|Map
argument_list|<
name|AccountGroup
operator|.
name|Id
argument_list|,
name|AccountGroup
argument_list|>
name|groups
decl_stmt|;
DECL|field|rights
specifier|protected
name|List
argument_list|<
name|ProjectRight
argument_list|>
name|rights
decl_stmt|;
DECL|method|ProjectDetail ()
specifier|public
name|ProjectDetail
parameter_list|()
block|{   }
DECL|method|load (final ReviewDb db, final ProjectCache.Entry g)
specifier|public
name|void
name|load
parameter_list|(
specifier|final
name|ReviewDb
name|db
parameter_list|,
specifier|final
name|ProjectCache
operator|.
name|Entry
name|g
parameter_list|)
throws|throws
name|OrmException
block|{
name|project
operator|=
name|g
operator|.
name|getProject
argument_list|()
expr_stmt|;
name|groups
operator|=
operator|new
name|HashMap
argument_list|<
name|AccountGroup
operator|.
name|Id
argument_list|,
name|AccountGroup
argument_list|>
argument_list|()
expr_stmt|;
name|wantGroup
argument_list|(
name|project
operator|.
name|getOwnerGroupId
argument_list|()
argument_list|)
expr_stmt|;
name|rights
operator|=
operator|new
name|ArrayList
argument_list|<
name|ProjectRight
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
specifier|final
name|ProjectRight
name|p
range|:
name|g
operator|.
name|getRights
argument_list|()
control|)
block|{
name|rights
operator|.
name|add
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|wantGroup
argument_list|(
name|p
operator|.
name|getAccountGroupId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|ProjectRight
operator|.
name|WILD_PROJECT
operator|.
name|equals
argument_list|(
name|project
operator|.
name|getId
argument_list|()
argument_list|)
condition|)
block|{
for|for
control|(
specifier|final
name|ProjectRight
name|p
range|:
name|Common
operator|.
name|getProjectCache
argument_list|()
operator|.
name|getWildcardRights
argument_list|()
control|)
block|{
name|rights
operator|.
name|add
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|wantGroup
argument_list|(
name|p
operator|.
name|getAccountGroupId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|loadGroups
argument_list|(
name|db
argument_list|)
expr_stmt|;
block|}
DECL|method|wantGroup (final AccountGroup.Id id)
specifier|private
name|void
name|wantGroup
parameter_list|(
specifier|final
name|AccountGroup
operator|.
name|Id
name|id
parameter_list|)
block|{
name|groups
operator|.
name|put
argument_list|(
name|id
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|loadGroups (final ReviewDb db)
specifier|private
name|void
name|loadGroups
parameter_list|(
specifier|final
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|ResultSet
argument_list|<
name|AccountGroup
argument_list|>
name|r
init|=
name|db
operator|.
name|accountGroups
argument_list|()
operator|.
name|get
argument_list|(
name|groups
operator|.
name|keySet
argument_list|()
argument_list|)
decl_stmt|;
name|groups
operator|.
name|clear
argument_list|()
expr_stmt|;
for|for
control|(
specifier|final
name|AccountGroup
name|g
range|:
name|r
control|)
block|{
name|groups
operator|.
name|put
argument_list|(
name|g
operator|.
name|getId
argument_list|()
argument_list|,
name|g
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

