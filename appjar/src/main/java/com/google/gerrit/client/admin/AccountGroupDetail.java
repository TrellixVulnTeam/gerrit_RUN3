begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright 2008 Google Inc.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.admin
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|admin
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|data
operator|.
name|AccountInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|data
operator|.
name|AccountInfoCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|data
operator|.
name|AccountInfoCacheFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|AccountGroup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|AccountGroupMember
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
DECL|class|AccountGroupDetail
specifier|public
class|class
name|AccountGroupDetail
block|{
DECL|field|accounts
specifier|protected
name|AccountInfoCache
name|accounts
decl_stmt|;
DECL|field|group
specifier|protected
name|AccountGroup
name|group
decl_stmt|;
DECL|field|members
specifier|protected
name|List
argument_list|<
name|AccountGroupMember
argument_list|>
name|members
decl_stmt|;
DECL|field|ownerGroup
specifier|protected
name|AccountGroup
name|ownerGroup
decl_stmt|;
DECL|field|autoGroup
specifier|protected
name|boolean
name|autoGroup
decl_stmt|;
DECL|method|AccountGroupDetail ()
specifier|public
name|AccountGroupDetail
parameter_list|()
block|{   }
DECL|method|load (final ReviewDb db, final AccountInfoCacheFactory acc, final AccountGroup g, final boolean isAuto)
specifier|public
name|void
name|load
parameter_list|(
specifier|final
name|ReviewDb
name|db
parameter_list|,
specifier|final
name|AccountInfoCacheFactory
name|acc
parameter_list|,
specifier|final
name|AccountGroup
name|g
parameter_list|,
specifier|final
name|boolean
name|isAuto
parameter_list|)
throws|throws
name|OrmException
block|{
name|group
operator|=
name|g
expr_stmt|;
if|if
condition|(
name|group
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|group
operator|.
name|getOwnerGroupId
argument_list|()
argument_list|)
condition|)
block|{
name|ownerGroup
operator|=
name|group
expr_stmt|;
block|}
else|else
block|{
name|ownerGroup
operator|=
name|db
operator|.
name|accountGroups
argument_list|()
operator|.
name|get
argument_list|(
name|group
operator|.
name|getOwnerGroupId
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|autoGroup
operator|=
name|isAuto
expr_stmt|;
if|if
condition|(
operator|!
name|autoGroup
condition|)
block|{
name|loadMembers
argument_list|(
name|db
argument_list|,
name|acc
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|loadMembers (final ReviewDb db, final AccountInfoCacheFactory acc)
specifier|private
name|void
name|loadMembers
parameter_list|(
specifier|final
name|ReviewDb
name|db
parameter_list|,
specifier|final
name|AccountInfoCacheFactory
name|acc
parameter_list|)
throws|throws
name|OrmException
block|{
name|members
operator|=
name|db
operator|.
name|accountGroupMembers
argument_list|()
operator|.
name|byGroup
argument_list|(
name|group
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|toList
argument_list|()
expr_stmt|;
for|for
control|(
specifier|final
name|AccountGroupMember
name|m
range|:
name|members
control|)
block|{
name|acc
operator|.
name|want
argument_list|(
name|m
operator|.
name|getAccountId
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|accounts
operator|=
name|acc
operator|.
name|create
argument_list|()
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|members
argument_list|,
operator|new
name|Comparator
argument_list|<
name|AccountGroupMember
argument_list|>
argument_list|()
block|{
specifier|public
name|int
name|compare
parameter_list|(
specifier|final
name|AccountGroupMember
name|o1
parameter_list|,
specifier|final
name|AccountGroupMember
name|o2
parameter_list|)
block|{
specifier|final
name|AccountInfo
name|a
init|=
name|accounts
operator|.
name|get
argument_list|(
name|o1
operator|.
name|getAccountId
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|AccountInfo
name|b
init|=
name|accounts
operator|.
name|get
argument_list|(
name|o2
operator|.
name|getAccountId
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|n
argument_list|(
name|a
argument_list|)
operator|.
name|compareTo
argument_list|(
name|n
argument_list|(
name|b
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|String
name|n
parameter_list|(
specifier|final
name|AccountInfo
name|a
parameter_list|)
block|{
name|String
name|n
init|=
name|a
operator|.
name|getFullName
argument_list|()
decl_stmt|;
if|if
condition|(
name|n
operator|!=
literal|null
operator|&&
name|n
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
return|return
name|n
return|;
block|}
name|n
operator|=
name|a
operator|.
name|getPreferredEmail
argument_list|()
expr_stmt|;
if|if
condition|(
name|n
operator|!=
literal|null
operator|&&
name|n
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
return|return
name|n
return|;
block|}
return|return
name|a
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|loadOneMember (final ReviewDb db, final Account a, final AccountGroupMember m)
specifier|public
name|void
name|loadOneMember
parameter_list|(
specifier|final
name|ReviewDb
name|db
parameter_list|,
specifier|final
name|Account
name|a
parameter_list|,
specifier|final
name|AccountGroupMember
name|m
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|AccountInfoCacheFactory
name|acc
init|=
operator|new
name|AccountInfoCacheFactory
argument_list|(
name|db
argument_list|)
decl_stmt|;
name|acc
operator|.
name|put
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|acc
operator|.
name|want
argument_list|(
name|m
operator|.
name|getAccountId
argument_list|()
argument_list|)
expr_stmt|;
name|members
operator|=
operator|new
name|ArrayList
argument_list|<
name|AccountGroupMember
argument_list|>
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|members
operator|.
name|add
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|accounts
operator|=
name|acc
operator|.
name|create
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

