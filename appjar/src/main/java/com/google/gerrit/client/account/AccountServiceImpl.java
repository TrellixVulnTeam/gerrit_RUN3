begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright 2008 Google Inc.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.account
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|account
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|AccountAgreement
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|AccountProjectWatch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|ContributorAgreement
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|BaseServiceImplementation
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|NoSuchEntityException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|RpcUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtjsonrpc
operator|.
name|client
operator|.
name|VoidResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|SchemaFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|Transaction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_class
DECL|class|AccountServiceImpl
specifier|public
class|class
name|AccountServiceImpl
extends|extends
name|BaseServiceImplementation
implements|implements
name|AccountService
block|{
DECL|method|AccountServiceImpl (final SchemaFactory<ReviewDb> rdf)
specifier|public
name|AccountServiceImpl
parameter_list|(
specifier|final
name|SchemaFactory
argument_list|<
name|ReviewDb
argument_list|>
name|rdf
parameter_list|)
block|{
name|super
argument_list|(
name|rdf
argument_list|)
expr_stmt|;
block|}
DECL|method|myAccount (final AsyncCallback<Account> callback)
specifier|public
name|void
name|myAccount
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|Account
argument_list|>
name|callback
parameter_list|)
block|{
name|run
argument_list|(
name|callback
argument_list|,
operator|new
name|Action
argument_list|<
name|Account
argument_list|>
argument_list|()
block|{
specifier|public
name|Account
name|run
parameter_list|(
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
return|return
name|db
operator|.
name|accounts
argument_list|()
operator|.
name|get
argument_list|(
name|RpcUtil
operator|.
name|getAccountId
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|changeDefaultContext (final short newSetting, final AsyncCallback<VoidResult> callback)
specifier|public
name|void
name|changeDefaultContext
parameter_list|(
specifier|final
name|short
name|newSetting
parameter_list|,
specifier|final
name|AsyncCallback
argument_list|<
name|VoidResult
argument_list|>
name|callback
parameter_list|)
block|{
name|run
argument_list|(
name|callback
argument_list|,
operator|new
name|Action
argument_list|<
name|VoidResult
argument_list|>
argument_list|()
block|{
specifier|public
name|VoidResult
name|run
parameter_list|(
specifier|final
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|Account
name|a
init|=
name|db
operator|.
name|accounts
argument_list|()
operator|.
name|get
argument_list|(
name|RpcUtil
operator|.
name|getAccountId
argument_list|()
argument_list|)
decl_stmt|;
name|a
operator|.
name|setDefaultContext
argument_list|(
name|newSetting
argument_list|)
expr_stmt|;
name|db
operator|.
name|accounts
argument_list|()
operator|.
name|update
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|a
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|VoidResult
operator|.
name|INSTANCE
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|myProjectWatch ( final AsyncCallback<List<AccountProjectWatchInfo>> callback)
specifier|public
name|void
name|myProjectWatch
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|AccountProjectWatchInfo
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
name|run
argument_list|(
name|callback
argument_list|,
operator|new
name|Action
argument_list|<
name|List
argument_list|<
name|AccountProjectWatchInfo
argument_list|>
argument_list|>
argument_list|()
block|{
specifier|public
name|List
argument_list|<
name|AccountProjectWatchInfo
argument_list|>
name|run
parameter_list|(
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|List
argument_list|<
name|AccountProjectWatchInfo
argument_list|>
name|r
init|=
operator|new
name|ArrayList
argument_list|<
name|AccountProjectWatchInfo
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
specifier|final
name|AccountProjectWatch
name|w
range|:
name|db
operator|.
name|accountProjectWatches
argument_list|()
operator|.
name|byAccount
argument_list|(
name|RpcUtil
operator|.
name|getAccountId
argument_list|()
argument_list|)
operator|.
name|toList
argument_list|()
control|)
block|{
specifier|final
name|Project
name|p
init|=
name|db
operator|.
name|projects
argument_list|()
operator|.
name|get
argument_list|(
name|w
operator|.
name|getProjectId
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|p
operator|==
literal|null
condition|)
block|{
name|db
operator|.
name|accountProjectWatches
argument_list|()
operator|.
name|delete
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|w
argument_list|)
argument_list|)
expr_stmt|;
continue|continue;
block|}
name|r
operator|.
name|add
argument_list|(
operator|new
name|AccountProjectWatchInfo
argument_list|(
name|w
argument_list|,
name|p
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|Collections
operator|.
name|sort
argument_list|(
name|r
argument_list|,
operator|new
name|Comparator
argument_list|<
name|AccountProjectWatchInfo
argument_list|>
argument_list|()
block|{
specifier|public
name|int
name|compare
parameter_list|(
specifier|final
name|AccountProjectWatchInfo
name|a
parameter_list|,
specifier|final
name|AccountProjectWatchInfo
name|b
parameter_list|)
block|{
return|return
name|a
operator|.
name|getProject
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|compareTo
argument_list|(
name|b
operator|.
name|getProject
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|r
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|addProjectWatch (final String projectName, final AsyncCallback<AccountProjectWatchInfo> callback)
specifier|public
name|void
name|addProjectWatch
parameter_list|(
specifier|final
name|String
name|projectName
parameter_list|,
specifier|final
name|AsyncCallback
argument_list|<
name|AccountProjectWatchInfo
argument_list|>
name|callback
parameter_list|)
block|{
name|run
argument_list|(
name|callback
argument_list|,
operator|new
name|Action
argument_list|<
name|AccountProjectWatchInfo
argument_list|>
argument_list|()
block|{
specifier|public
name|AccountProjectWatchInfo
name|run
parameter_list|(
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
throws|,
name|Failure
block|{
specifier|final
name|Project
name|project
init|=
name|db
operator|.
name|projects
argument_list|()
operator|.
name|get
argument_list|(
operator|new
name|Project
operator|.
name|NameKey
argument_list|(
name|projectName
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|project
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|Failure
argument_list|(
operator|new
name|NoSuchEntityException
argument_list|()
argument_list|)
throw|;
block|}
specifier|final
name|AccountProjectWatch
name|watch
init|=
operator|new
name|AccountProjectWatch
argument_list|(
operator|new
name|AccountProjectWatch
operator|.
name|Key
argument_list|(
name|RpcUtil
operator|.
name|getAccountId
argument_list|()
argument_list|,
name|project
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|db
operator|.
name|accountProjectWatches
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|watch
argument_list|)
argument_list|)
expr_stmt|;
return|return
operator|new
name|AccountProjectWatchInfo
argument_list|(
name|watch
argument_list|,
name|project
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|deleteProjectWatches (final Set<AccountProjectWatch.Key> keys, final AsyncCallback<VoidResult> callback)
specifier|public
name|void
name|deleteProjectWatches
parameter_list|(
specifier|final
name|Set
argument_list|<
name|AccountProjectWatch
operator|.
name|Key
argument_list|>
name|keys
parameter_list|,
specifier|final
name|AsyncCallback
argument_list|<
name|VoidResult
argument_list|>
name|callback
parameter_list|)
block|{
name|run
argument_list|(
name|callback
argument_list|,
operator|new
name|Action
argument_list|<
name|VoidResult
argument_list|>
argument_list|()
block|{
specifier|public
name|VoidResult
name|run
parameter_list|(
specifier|final
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
throws|,
name|Failure
block|{
specifier|final
name|Account
operator|.
name|Id
name|me
init|=
name|RpcUtil
operator|.
name|getAccountId
argument_list|()
decl_stmt|;
for|for
control|(
specifier|final
name|AccountProjectWatch
operator|.
name|Key
name|keyId
range|:
name|keys
control|)
block|{
if|if
condition|(
operator|!
name|me
operator|.
name|equals
argument_list|(
name|keyId
operator|.
name|getParentKey
argument_list|()
argument_list|)
condition|)
throw|throw
operator|new
name|Failure
argument_list|(
operator|new
name|NoSuchEntityException
argument_list|()
argument_list|)
throw|;
block|}
specifier|final
name|List
argument_list|<
name|AccountProjectWatch
argument_list|>
name|k
init|=
name|db
operator|.
name|accountProjectWatches
argument_list|()
operator|.
name|get
argument_list|(
name|keys
argument_list|)
operator|.
name|toList
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|k
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
specifier|final
name|Transaction
name|txn
init|=
name|db
operator|.
name|beginTransaction
argument_list|()
decl_stmt|;
name|db
operator|.
name|accountProjectWatches
argument_list|()
operator|.
name|delete
argument_list|(
name|k
argument_list|,
name|txn
argument_list|)
expr_stmt|;
name|txn
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
return|return
name|VoidResult
operator|.
name|INSTANCE
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|myAgreements (final AsyncCallback<AgreementInfo> callback)
specifier|public
name|void
name|myAgreements
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|AgreementInfo
argument_list|>
name|callback
parameter_list|)
block|{
name|run
argument_list|(
name|callback
argument_list|,
operator|new
name|Action
argument_list|<
name|AgreementInfo
argument_list|>
argument_list|()
block|{
specifier|public
name|AgreementInfo
name|run
parameter_list|(
specifier|final
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|AgreementInfo
name|i
init|=
operator|new
name|AgreementInfo
argument_list|()
decl_stmt|;
name|i
operator|.
name|load
argument_list|(
name|RpcUtil
operator|.
name|getAccountId
argument_list|()
argument_list|,
name|db
argument_list|)
expr_stmt|;
return|return
name|i
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|enterAgreement (final ContributorAgreement.Id id, final AsyncCallback<VoidResult> callback)
specifier|public
name|void
name|enterAgreement
parameter_list|(
specifier|final
name|ContributorAgreement
operator|.
name|Id
name|id
parameter_list|,
specifier|final
name|AsyncCallback
argument_list|<
name|VoidResult
argument_list|>
name|callback
parameter_list|)
block|{
name|run
argument_list|(
name|callback
argument_list|,
operator|new
name|Action
argument_list|<
name|VoidResult
argument_list|>
argument_list|()
block|{
specifier|public
name|VoidResult
name|run
parameter_list|(
specifier|final
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|AccountAgreement
name|a
init|=
operator|new
name|AccountAgreement
argument_list|(
operator|new
name|AccountAgreement
operator|.
name|Key
argument_list|(
name|RpcUtil
operator|.
name|getAccountId
argument_list|()
argument_list|,
name|id
argument_list|)
argument_list|)
decl_stmt|;
name|db
operator|.
name|accountAgreements
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|a
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|VoidResult
operator|.
name|INSTANCE
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

