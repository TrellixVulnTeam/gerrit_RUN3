begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright 2008 Google Inc.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|Common
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|server
operator|.
name|rpc
operator|.
name|RPCServletUtils
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtjsonrpc
operator|.
name|server
operator|.
name|XsrfException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServlet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_comment
comment|/** Sends the Gerrit host page to clients. */
end_comment

begin_class
DECL|class|HostPageServlet
specifier|public
class|class
name|HostPageServlet
extends|extends
name|HttpServlet
block|{
DECL|field|MAX_AGE
specifier|private
specifier|static
specifier|final
name|long
name|MAX_AGE
init|=
literal|5
operator|*
literal|60
operator|*
literal|1000L
comment|/* milliseconds */
decl_stmt|;
DECL|field|CACHE_CTRL
specifier|private
specifier|static
specifier|final
name|String
name|CACHE_CTRL
init|=
literal|"public, max-age="
operator|+
operator|(
name|MAX_AGE
operator|/
literal|1000L
operator|)
decl_stmt|;
DECL|field|canonicalUrl
specifier|private
name|String
name|canonicalUrl
decl_stmt|;
DECL|field|hostPageRaw
specifier|private
name|byte
index|[]
name|hostPageRaw
decl_stmt|;
DECL|field|hostPageCompressed
specifier|private
name|byte
index|[]
name|hostPageCompressed
decl_stmt|;
DECL|field|lastModified
specifier|private
name|long
name|lastModified
decl_stmt|;
annotation|@
name|Override
DECL|method|init (final ServletConfig config)
specifier|public
name|void
name|init
parameter_list|(
specifier|final
name|ServletConfig
name|config
parameter_list|)
throws|throws
name|ServletException
block|{
name|super
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
specifier|final
name|GerritServer
name|srv
decl_stmt|;
try|try
block|{
name|srv
operator|=
name|GerritServer
operator|.
name|getInstance
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OrmException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServletException
argument_list|(
literal|"Cannot load GerritServer"
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|XsrfException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServletException
argument_list|(
literal|"Cannot load GerritServer"
argument_list|,
name|e
argument_list|)
throw|;
block|}
specifier|final
name|File
name|sitePath
init|=
name|srv
operator|.
name|getSitePath
argument_list|()
decl_stmt|;
name|canonicalUrl
operator|=
name|srv
operator|.
name|getCanonicalURL
argument_list|()
expr_stmt|;
specifier|final
name|String
name|hostPageName
init|=
literal|"com/google/gerrit/public/Gerrit.html"
decl_stmt|;
specifier|final
name|Document
name|hostDoc
init|=
name|HtmlDomUtil
operator|.
name|parseFile
argument_list|(
name|hostPageName
argument_list|)
decl_stmt|;
if|if
condition|(
name|hostDoc
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|ServletException
argument_list|(
literal|"No "
operator|+
name|hostPageName
operator|+
literal|" in CLASSPATH"
argument_list|)
throw|;
block|}
name|injectJson
argument_list|(
name|hostDoc
argument_list|,
literal|"gerrit_gerritconfig"
argument_list|,
name|Common
operator|.
name|getGerritConfig
argument_list|()
argument_list|)
expr_stmt|;
name|injectCssFile
argument_list|(
name|hostDoc
argument_list|,
literal|"gerrit_sitecss"
argument_list|,
name|sitePath
argument_list|,
literal|"GerritSite.css"
argument_list|)
expr_stmt|;
name|injectXmlFile
argument_list|(
name|hostDoc
argument_list|,
literal|"gerrit_header"
argument_list|,
name|sitePath
argument_list|,
literal|"GerritSiteHeader.html"
argument_list|)
expr_stmt|;
name|injectXmlFile
argument_list|(
name|hostDoc
argument_list|,
literal|"gerrit_footer"
argument_list|,
name|sitePath
argument_list|,
literal|"GerritSiteFooter.html"
argument_list|)
expr_stmt|;
try|try
block|{
name|hostPageRaw
operator|=
name|HtmlDomUtil
operator|.
name|toUTF8
argument_list|(
name|hostDoc
argument_list|)
expr_stmt|;
name|hostPageCompressed
operator|=
name|HtmlDomUtil
operator|.
name|compress
argument_list|(
name|hostPageRaw
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServletException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|lastModified
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
block|}
DECL|method|injectXmlFile (final Document hostDoc, final String id, final File sitePath, final String fileName)
specifier|private
name|void
name|injectXmlFile
parameter_list|(
specifier|final
name|Document
name|hostDoc
parameter_list|,
specifier|final
name|String
name|id
parameter_list|,
specifier|final
name|File
name|sitePath
parameter_list|,
specifier|final
name|String
name|fileName
parameter_list|)
throws|throws
name|ServletException
block|{
specifier|final
name|Element
name|banner
init|=
name|HtmlDomUtil
operator|.
name|find
argument_list|(
name|hostDoc
argument_list|,
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|banner
operator|==
literal|null
condition|)
block|{
return|return;
block|}
while|while
condition|(
name|banner
operator|.
name|getFirstChild
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|banner
operator|.
name|removeChild
argument_list|(
name|banner
operator|.
name|getFirstChild
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|final
name|Document
name|html
init|=
name|HtmlDomUtil
operator|.
name|parseFile
argument_list|(
name|sitePath
argument_list|,
name|fileName
argument_list|)
decl_stmt|;
if|if
condition|(
name|html
operator|==
literal|null
condition|)
block|{
name|banner
operator|.
name|getParentNode
argument_list|()
operator|.
name|removeChild
argument_list|(
name|banner
argument_list|)
expr_stmt|;
return|return;
block|}
specifier|final
name|Element
name|content
init|=
name|html
operator|.
name|getDocumentElement
argument_list|()
decl_stmt|;
name|banner
operator|.
name|appendChild
argument_list|(
name|hostDoc
operator|.
name|importNode
argument_list|(
name|content
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|injectCssFile (final Document hostDoc, final String id, final File sitePath, final String fileName)
specifier|private
name|void
name|injectCssFile
parameter_list|(
specifier|final
name|Document
name|hostDoc
parameter_list|,
specifier|final
name|String
name|id
parameter_list|,
specifier|final
name|File
name|sitePath
parameter_list|,
specifier|final
name|String
name|fileName
parameter_list|)
throws|throws
name|ServletException
block|{
specifier|final
name|Element
name|banner
init|=
name|HtmlDomUtil
operator|.
name|find
argument_list|(
name|hostDoc
argument_list|,
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|banner
operator|==
literal|null
condition|)
block|{
return|return;
block|}
while|while
condition|(
name|banner
operator|.
name|getFirstChild
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|banner
operator|.
name|removeChild
argument_list|(
name|banner
operator|.
name|getFirstChild
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|final
name|String
name|css
init|=
name|HtmlDomUtil
operator|.
name|readFile
argument_list|(
name|sitePath
argument_list|,
name|fileName
argument_list|)
decl_stmt|;
if|if
condition|(
name|css
operator|==
literal|null
condition|)
block|{
name|banner
operator|.
name|getParentNode
argument_list|()
operator|.
name|removeChild
argument_list|(
name|banner
argument_list|)
expr_stmt|;
return|return;
block|}
name|banner
operator|.
name|removeAttribute
argument_list|(
literal|"id"
argument_list|)
expr_stmt|;
name|banner
operator|.
name|appendChild
argument_list|(
name|hostDoc
operator|.
name|createCDATASection
argument_list|(
literal|"\n"
operator|+
name|css
operator|+
literal|"\n"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|injectJson (final Document hostDoc, final String id, final Object obj)
specifier|private
name|void
name|injectJson
parameter_list|(
specifier|final
name|Document
name|hostDoc
parameter_list|,
specifier|final
name|String
name|id
parameter_list|,
specifier|final
name|Object
name|obj
parameter_list|)
block|{
specifier|final
name|Element
name|scriptNode
init|=
name|HtmlDomUtil
operator|.
name|find
argument_list|(
name|hostDoc
argument_list|,
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|scriptNode
operator|==
literal|null
condition|)
block|{
return|return;
block|}
while|while
condition|(
name|scriptNode
operator|.
name|getFirstChild
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|scriptNode
operator|.
name|removeChild
argument_list|(
name|scriptNode
operator|.
name|getFirstChild
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
name|scriptNode
operator|.
name|getParentNode
argument_list|()
operator|.
name|removeChild
argument_list|(
name|scriptNode
argument_list|)
expr_stmt|;
return|return;
block|}
specifier|final
name|StringWriter
name|w
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|w
operator|.
name|write
argument_list|(
literal|"<!--\n"
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
literal|"var "
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
literal|"_obj="
argument_list|)
expr_stmt|;
name|GerritJsonServlet
operator|.
name|defaultGsonBuilder
argument_list|()
operator|.
name|create
argument_list|()
operator|.
name|toJson
argument_list|(
name|obj
argument_list|,
name|w
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
literal|";\n// -->\n"
argument_list|)
expr_stmt|;
name|scriptNode
operator|.
name|removeAttribute
argument_list|(
literal|"id"
argument_list|)
expr_stmt|;
name|scriptNode
operator|.
name|setAttribute
argument_list|(
literal|"type"
argument_list|,
literal|"text/javascript"
argument_list|)
expr_stmt|;
name|scriptNode
operator|.
name|setAttribute
argument_list|(
literal|"language"
argument_list|,
literal|"javascript"
argument_list|)
expr_stmt|;
name|scriptNode
operator|.
name|appendChild
argument_list|(
name|hostDoc
operator|.
name|createCDATASection
argument_list|(
name|w
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getLastModified (final HttpServletRequest req)
specifier|protected
name|long
name|getLastModified
parameter_list|(
specifier|final
name|HttpServletRequest
name|req
parameter_list|)
block|{
return|return
name|lastModified
return|;
block|}
annotation|@
name|Override
DECL|method|doGet (final HttpServletRequest req, final HttpServletResponse rsp)
specifier|protected
name|void
name|doGet
parameter_list|(
specifier|final
name|HttpServletRequest
name|req
parameter_list|,
specifier|final
name|HttpServletResponse
name|rsp
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|canonicalUrl
operator|!=
literal|null
operator|&&
operator|!
name|canonicalUrl
operator|.
name|equals
argument_list|(
name|LoginServlet
operator|.
name|serverUrl
argument_list|(
name|req
argument_list|)
argument_list|)
condition|)
block|{
name|rsp
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_MOVED_PERMANENTLY
argument_list|)
expr_stmt|;
name|rsp
operator|.
name|setHeader
argument_list|(
literal|"Location"
argument_list|,
name|canonicalUrl
operator|+
literal|"Gerrit"
argument_list|)
expr_stmt|;
return|return;
block|}
specifier|final
name|byte
index|[]
name|tosend
decl_stmt|;
if|if
condition|(
name|RPCServletUtils
operator|.
name|acceptsGzipEncoding
argument_list|(
name|req
argument_list|)
condition|)
block|{
name|rsp
operator|.
name|setHeader
argument_list|(
literal|"Content-Encoding"
argument_list|,
literal|"gzip"
argument_list|)
expr_stmt|;
name|tosend
operator|=
name|hostPageCompressed
expr_stmt|;
block|}
else|else
block|{
name|tosend
operator|=
name|hostPageRaw
expr_stmt|;
block|}
name|rsp
operator|.
name|setHeader
argument_list|(
literal|"Cache-Control"
argument_list|,
name|CACHE_CTRL
argument_list|)
expr_stmt|;
name|rsp
operator|.
name|setDateHeader
argument_list|(
literal|"Expires"
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
name|MAX_AGE
argument_list|)
expr_stmt|;
name|rsp
operator|.
name|setDateHeader
argument_list|(
literal|"Last-Modified"
argument_list|,
name|lastModified
argument_list|)
expr_stmt|;
name|rsp
operator|.
name|setContentType
argument_list|(
literal|"text/html"
argument_list|)
expr_stmt|;
name|rsp
operator|.
name|setCharacterEncoding
argument_list|(
name|HtmlDomUtil
operator|.
name|ENC
argument_list|)
expr_stmt|;
name|rsp
operator|.
name|setContentLength
argument_list|(
name|tosend
operator|.
name|length
argument_list|)
expr_stmt|;
specifier|final
name|OutputStream
name|out
init|=
name|rsp
operator|.
name|getOutputStream
argument_list|()
decl_stmt|;
try|try
block|{
name|out
operator|.
name|write
argument_list|(
name|tosend
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

