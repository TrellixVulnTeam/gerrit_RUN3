begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright 2009 Google Inc.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|spearce
operator|.
name|jgit
operator|.
name|lib
operator|.
name|PersonIdent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|spearce
operator|.
name|jgit
operator|.
name|util
operator|.
name|Base64
import|;
end_import

begin_import
import|import
name|org
operator|.
name|spearce
operator|.
name|jgit
operator|.
name|util
operator|.
name|NB
import|;
end_import

begin_class
DECL|class|ChangeUtil
specifier|public
class|class
name|ChangeUtil
block|{
DECL|field|uuidPrefix
specifier|private
specifier|static
name|int
name|uuidPrefix
decl_stmt|;
DECL|field|uuidSeq
specifier|private
specifier|static
name|int
name|uuidSeq
decl_stmt|;
comment|/**    * Generate a new unique identifier for change message entities.    *     * @param db the database connection, used to increment the change message    *        allocation sequence.    * @return the new unique identifier.    * @throws OrmException the database couldn't be incremented.    */
DECL|method|messageUUID (final ReviewDb db)
specifier|public
specifier|static
name|String
name|messageUUID
parameter_list|(
specifier|final
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
specifier|final
name|byte
index|[]
name|raw
init|=
operator|new
name|byte
index|[
literal|8
index|]
decl_stmt|;
name|fill
argument_list|(
name|raw
argument_list|,
name|db
argument_list|)
expr_stmt|;
return|return
name|Base64
operator|.
name|encodeBytes
argument_list|(
name|raw
argument_list|)
return|;
block|}
DECL|method|toPersonIdent (final Account userAccount)
specifier|public
specifier|static
name|PersonIdent
name|toPersonIdent
parameter_list|(
specifier|final
name|Account
name|userAccount
parameter_list|)
block|{
name|String
name|name
init|=
name|userAccount
operator|.
name|getFullName
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|==
literal|null
condition|)
block|{
name|name
operator|=
name|userAccount
operator|.
name|getPreferredEmail
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|name
operator|==
literal|null
condition|)
block|{
name|name
operator|=
literal|"Anonymous Coward"
expr_stmt|;
block|}
name|String
name|user
init|=
literal|"account-"
operator|+
name|userAccount
operator|.
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|host
init|=
literal|"unknown"
decl_stmt|;
return|return
operator|new
name|PersonIdent
argument_list|(
name|name
argument_list|,
name|user
operator|+
literal|"@"
operator|+
name|host
argument_list|)
return|;
block|}
DECL|method|fill (byte[] raw, ReviewDb db)
specifier|private
specifier|static
specifier|synchronized
name|void
name|fill
parameter_list|(
name|byte
index|[]
name|raw
parameter_list|,
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
block|{
if|if
condition|(
name|uuidSeq
operator|==
literal|0
condition|)
block|{
name|uuidPrefix
operator|=
name|db
operator|.
name|nextChangeMessageId
argument_list|()
expr_stmt|;
name|uuidSeq
operator|=
name|Integer
operator|.
name|MAX_VALUE
expr_stmt|;
block|}
name|NB
operator|.
name|encodeInt32
argument_list|(
name|raw
argument_list|,
literal|0
argument_list|,
name|uuidPrefix
argument_list|)
expr_stmt|;
name|NB
operator|.
name|encodeInt32
argument_list|(
name|raw
argument_list|,
literal|4
argument_list|,
name|uuidSeq
operator|--
argument_list|)
expr_stmt|;
block|}
DECL|method|updated (final Change c)
specifier|public
specifier|static
name|void
name|updated
parameter_list|(
specifier|final
name|Change
name|c
parameter_list|)
block|{
name|c
operator|.
name|resetLastUpdatedOn
argument_list|()
expr_stmt|;
name|computeSortKey
argument_list|(
name|c
argument_list|)
expr_stmt|;
block|}
DECL|method|computeSortKey (final Change c)
specifier|public
specifier|static
name|void
name|computeSortKey
parameter_list|(
specifier|final
name|Change
name|c
parameter_list|)
block|{
comment|// The encoding uses minutes since Wed Oct 1 00:00:00 2008 UTC.
comment|// We overrun approximately 4,085 years later, so ~6093.
comment|//
specifier|final
name|long
name|lastUpdatedOn
init|=
operator|(
name|c
operator|.
name|getLastUpdatedOn
argument_list|()
operator|.
name|getTime
argument_list|()
operator|/
literal|1000L
operator|)
operator|-
literal|1222819200L
decl_stmt|;
specifier|final
name|StringBuilder
name|r
init|=
operator|new
name|StringBuilder
argument_list|(
literal|16
argument_list|)
decl_stmt|;
name|r
operator|.
name|setLength
argument_list|(
literal|16
argument_list|)
expr_stmt|;
name|formatHexInt
argument_list|(
name|r
argument_list|,
literal|0
argument_list|,
call|(
name|int
call|)
argument_list|(
name|lastUpdatedOn
operator|/
literal|60
argument_list|)
argument_list|)
expr_stmt|;
name|formatHexInt
argument_list|(
name|r
argument_list|,
literal|8
argument_list|,
name|c
operator|.
name|getId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|c
operator|.
name|setSortKey
argument_list|(
name|r
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|field|hexchar
specifier|private
specifier|static
specifier|final
name|char
index|[]
name|hexchar
init|=
block|{
literal|'0'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'3'
block|,
literal|'4'
block|,
literal|'5'
block|,
literal|'6'
block|,
literal|'7'
block|,
literal|'8'
block|,
literal|'9'
block|,
comment|//
literal|'a'
block|,
literal|'b'
block|,
literal|'c'
block|,
literal|'d'
block|,
literal|'e'
block|,
literal|'f'
block|}
decl_stmt|;
DECL|method|formatHexInt (final StringBuilder dst, final int p, int w)
specifier|private
specifier|static
name|void
name|formatHexInt
parameter_list|(
specifier|final
name|StringBuilder
name|dst
parameter_list|,
specifier|final
name|int
name|p
parameter_list|,
name|int
name|w
parameter_list|)
block|{
name|int
name|o
init|=
name|p
operator|+
literal|7
decl_stmt|;
while|while
condition|(
name|o
operator|>=
name|p
operator|&&
name|w
operator|!=
literal|0
condition|)
block|{
name|dst
operator|.
name|setCharAt
argument_list|(
name|o
operator|--
argument_list|,
name|hexchar
index|[
name|w
operator|&
literal|0xf
index|]
argument_list|)
expr_stmt|;
name|w
operator|>>>=
literal|4
expr_stmt|;
block|}
while|while
condition|(
name|o
operator|>=
name|p
condition|)
block|{
name|dst
operator|.
name|setCharAt
argument_list|(
name|o
operator|--
argument_list|,
literal|'0'
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

