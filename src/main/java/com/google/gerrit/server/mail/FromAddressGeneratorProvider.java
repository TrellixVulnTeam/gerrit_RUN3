begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2009 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.mail
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|mail
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|GerritPersonIdent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|ParamertizedString
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|GerritServerConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|spearce
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|org
operator|.
name|spearce
operator|.
name|jgit
operator|.
name|lib
operator|.
name|PersonIdent
import|;
end_import

begin_comment
comment|/** Creates a {@link FromAddressGenerator} from the {@link GerritServerConfig} */
end_comment

begin_class
annotation|@
name|Singleton
DECL|class|FromAddressGeneratorProvider
specifier|public
class|class
name|FromAddressGeneratorProvider
implements|implements
name|Provider
argument_list|<
name|FromAddressGenerator
argument_list|>
block|{
DECL|field|generator
specifier|private
specifier|final
name|FromAddressGenerator
name|generator
decl_stmt|;
annotation|@
name|Inject
DECL|method|FromAddressGeneratorProvider (@erritServerConfig final Config cfg, @GerritPersonIdent final PersonIdent myIdent, final AccountCache accountCache)
name|FromAddressGeneratorProvider
parameter_list|(
annotation|@
name|GerritServerConfig
specifier|final
name|Config
name|cfg
parameter_list|,
annotation|@
name|GerritPersonIdent
specifier|final
name|PersonIdent
name|myIdent
parameter_list|,
specifier|final
name|AccountCache
name|accountCache
parameter_list|)
block|{
specifier|final
name|String
name|from
init|=
name|cfg
operator|.
name|getString
argument_list|(
literal|"sendemail"
argument_list|,
literal|null
argument_list|,
literal|"from"
argument_list|)
decl_stmt|;
specifier|final
name|Address
name|srvAddr
init|=
name|toAddress
argument_list|(
name|myIdent
argument_list|)
decl_stmt|;
if|if
condition|(
name|from
operator|==
literal|null
operator|||
literal|"MIXED"
operator|.
name|equalsIgnoreCase
argument_list|(
name|from
argument_list|)
condition|)
block|{
specifier|final
name|String
name|name
init|=
literal|"${user} (Code Review)"
decl_stmt|;
specifier|final
name|String
name|email
init|=
name|srvAddr
operator|.
name|email
decl_stmt|;
name|generator
operator|=
operator|new
name|PatternGen
argument_list|(
name|srvAddr
argument_list|,
name|accountCache
argument_list|,
name|name
argument_list|,
name|email
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"USER"
operator|.
name|equalsIgnoreCase
argument_list|(
name|from
argument_list|)
condition|)
block|{
name|generator
operator|=
operator|new
name|UserGen
argument_list|(
name|accountCache
argument_list|,
name|srvAddr
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"SERVER"
operator|.
name|equalsIgnoreCase
argument_list|(
name|from
argument_list|)
condition|)
block|{
name|generator
operator|=
operator|new
name|ServerGen
argument_list|(
name|srvAddr
argument_list|)
expr_stmt|;
block|}
else|else
block|{
specifier|final
name|Address
name|a
init|=
name|Address
operator|.
name|parse
argument_list|(
name|from
argument_list|)
decl_stmt|;
name|generator
operator|=
operator|new
name|PatternGen
argument_list|(
name|srvAddr
argument_list|,
name|accountCache
argument_list|,
name|a
operator|.
name|name
argument_list|,
name|a
operator|.
name|email
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|toAddress (final PersonIdent myIdent)
specifier|private
specifier|static
name|Address
name|toAddress
parameter_list|(
specifier|final
name|PersonIdent
name|myIdent
parameter_list|)
block|{
return|return
operator|new
name|Address
argument_list|(
name|myIdent
operator|.
name|getName
argument_list|()
argument_list|,
name|myIdent
operator|.
name|getEmailAddress
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|get ()
specifier|public
name|FromAddressGenerator
name|get
parameter_list|()
block|{
return|return
name|generator
return|;
block|}
DECL|class|UserGen
specifier|static
specifier|final
class|class
name|UserGen
implements|implements
name|FromAddressGenerator
block|{
DECL|field|accountCache
specifier|private
specifier|final
name|AccountCache
name|accountCache
decl_stmt|;
DECL|field|srvAddr
specifier|private
specifier|final
name|Address
name|srvAddr
decl_stmt|;
DECL|method|UserGen (AccountCache accountCache, Address srvAddr)
name|UserGen
parameter_list|(
name|AccountCache
name|accountCache
parameter_list|,
name|Address
name|srvAddr
parameter_list|)
block|{
name|this
operator|.
name|accountCache
operator|=
name|accountCache
expr_stmt|;
name|this
operator|.
name|srvAddr
operator|=
name|srvAddr
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|from (final Account.Id fromId)
specifier|public
name|Address
name|from
parameter_list|(
specifier|final
name|Account
operator|.
name|Id
name|fromId
parameter_list|)
block|{
if|if
condition|(
name|fromId
operator|!=
literal|null
condition|)
block|{
specifier|final
name|Account
name|a
init|=
name|accountCache
operator|.
name|get
argument_list|(
name|fromId
argument_list|)
operator|.
name|getAccount
argument_list|()
decl_stmt|;
if|if
condition|(
name|a
operator|.
name|getPreferredEmail
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
operator|new
name|Address
argument_list|(
name|a
operator|.
name|getFullName
argument_list|()
argument_list|,
name|a
operator|.
name|getPreferredEmail
argument_list|()
argument_list|)
return|;
block|}
block|}
return|return
name|srvAddr
return|;
block|}
block|}
DECL|class|ServerGen
specifier|static
specifier|final
class|class
name|ServerGen
implements|implements
name|FromAddressGenerator
block|{
DECL|field|srvAddr
specifier|private
specifier|final
name|Address
name|srvAddr
decl_stmt|;
DECL|method|ServerGen (Address srvAddr)
name|ServerGen
parameter_list|(
name|Address
name|srvAddr
parameter_list|)
block|{
name|this
operator|.
name|srvAddr
operator|=
name|srvAddr
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|from (final Account.Id fromId)
specifier|public
name|Address
name|from
parameter_list|(
specifier|final
name|Account
operator|.
name|Id
name|fromId
parameter_list|)
block|{
return|return
name|srvAddr
return|;
block|}
block|}
DECL|class|PatternGen
specifier|static
specifier|final
class|class
name|PatternGen
implements|implements
name|FromAddressGenerator
block|{
DECL|field|senderEmail
specifier|private
specifier|final
name|String
name|senderEmail
decl_stmt|;
DECL|field|serverAddress
specifier|private
specifier|final
name|Address
name|serverAddress
decl_stmt|;
DECL|field|accountCache
specifier|private
specifier|final
name|AccountCache
name|accountCache
decl_stmt|;
DECL|field|namePattern
specifier|private
specifier|final
name|ParamertizedString
name|namePattern
decl_stmt|;
DECL|method|PatternGen (final Address serverAddress, final AccountCache accountCache, final String namePattern, final String senderEmail)
name|PatternGen
parameter_list|(
specifier|final
name|Address
name|serverAddress
parameter_list|,
specifier|final
name|AccountCache
name|accountCache
parameter_list|,
specifier|final
name|String
name|namePattern
parameter_list|,
specifier|final
name|String
name|senderEmail
parameter_list|)
block|{
name|this
operator|.
name|senderEmail
operator|=
name|senderEmail
expr_stmt|;
name|this
operator|.
name|serverAddress
operator|=
name|serverAddress
expr_stmt|;
name|this
operator|.
name|accountCache
operator|=
name|accountCache
expr_stmt|;
name|this
operator|.
name|namePattern
operator|=
operator|new
name|ParamertizedString
argument_list|(
name|namePattern
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|from (final Account.Id fromId)
specifier|public
name|Address
name|from
parameter_list|(
specifier|final
name|Account
operator|.
name|Id
name|fromId
parameter_list|)
block|{
specifier|final
name|String
name|senderName
decl_stmt|;
if|if
condition|(
name|fromId
operator|!=
literal|null
condition|)
block|{
specifier|final
name|Account
name|account
init|=
name|accountCache
operator|.
name|get
argument_list|(
name|fromId
argument_list|)
operator|.
name|getAccount
argument_list|()
decl_stmt|;
name|String
name|fullName
init|=
name|account
operator|.
name|getFullName
argument_list|()
decl_stmt|;
if|if
condition|(
name|fullName
operator|==
literal|null
operator|||
literal|""
operator|.
name|equals
argument_list|(
name|fullName
argument_list|)
condition|)
block|{
name|fullName
operator|=
literal|"Anonymous Coward"
expr_stmt|;
block|}
name|senderName
operator|=
name|namePattern
operator|.
name|replace
argument_list|(
literal|"user"
argument_list|,
name|fullName
argument_list|)
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|senderName
operator|=
name|serverAddress
operator|.
name|name
expr_stmt|;
block|}
return|return
operator|new
name|Address
argument_list|(
name|senderName
argument_list|,
name|senderEmail
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

