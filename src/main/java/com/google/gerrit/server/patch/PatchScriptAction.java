begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2009 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.patch
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|patch
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|BaseServiceImplementation
operator|.
name|canRead
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|data
operator|.
name|PatchScript
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|AccountGeneralPreferences
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Patch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|CorruptEntityException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|NoDifferencesException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|NoSuchEntityException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|BaseServiceImplementation
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|BaseServiceImplementation
operator|.
name|Failure
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|git
operator|.
name|InvalidRepositoryException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|git
operator|.
name|RepositoryCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|GerritServer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|CacheException
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|spearce
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|spearce
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|spearce
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|spearce
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevCommit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|spearce
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevWalk
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|PatchScriptAction
class|class
name|PatchScriptAction
implements|implements
name|Action
argument_list|<
name|PatchScript
argument_list|>
block|{
DECL|field|log
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|PatchScriptAction
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|server
specifier|private
specifier|final
name|GerritServer
name|server
decl_stmt|;
DECL|field|rc
specifier|private
specifier|final
name|RepositoryCache
name|rc
decl_stmt|;
DECL|field|patchKey
specifier|private
specifier|final
name|Patch
operator|.
name|Key
name|patchKey
decl_stmt|;
DECL|field|psa
specifier|private
specifier|final
name|PatchSet
operator|.
name|Id
name|psa
decl_stmt|;
DECL|field|psb
specifier|private
specifier|final
name|PatchSet
operator|.
name|Id
name|psb
decl_stmt|;
DECL|field|context
specifier|private
specifier|final
name|int
name|context
decl_stmt|;
DECL|field|patchSetId
specifier|private
specifier|final
name|PatchSet
operator|.
name|Id
name|patchSetId
decl_stmt|;
DECL|field|changeId
specifier|private
specifier|final
name|Change
operator|.
name|Id
name|changeId
decl_stmt|;
DECL|field|change
specifier|private
name|Change
name|change
decl_stmt|;
DECL|field|patch
specifier|private
name|Patch
name|patch
decl_stmt|;
DECL|field|projectKey
specifier|private
name|Project
operator|.
name|NameKey
name|projectKey
decl_stmt|;
DECL|field|git
specifier|private
name|Repository
name|git
decl_stmt|;
DECL|method|PatchScriptAction (final GerritServer gs, final RepositoryCache rc, final Patch.Key patchKey, final PatchSet.Id psa, final PatchSet.Id psb, final int context)
name|PatchScriptAction
parameter_list|(
specifier|final
name|GerritServer
name|gs
parameter_list|,
specifier|final
name|RepositoryCache
name|rc
parameter_list|,
specifier|final
name|Patch
operator|.
name|Key
name|patchKey
parameter_list|,
specifier|final
name|PatchSet
operator|.
name|Id
name|psa
parameter_list|,
specifier|final
name|PatchSet
operator|.
name|Id
name|psb
parameter_list|,
specifier|final
name|int
name|context
parameter_list|)
block|{
name|this
operator|.
name|server
operator|=
name|gs
expr_stmt|;
name|this
operator|.
name|rc
operator|=
name|rc
expr_stmt|;
name|this
operator|.
name|patchKey
operator|=
name|patchKey
expr_stmt|;
name|this
operator|.
name|psa
operator|=
name|psa
expr_stmt|;
name|this
operator|.
name|psb
operator|=
name|psb
expr_stmt|;
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
name|patchSetId
operator|=
name|patchKey
operator|.
name|getParentKey
argument_list|()
expr_stmt|;
name|changeId
operator|=
name|patchSetId
operator|.
name|getParentKey
argument_list|()
expr_stmt|;
block|}
DECL|method|run (final ReviewDb db)
specifier|public
name|PatchScript
name|run
parameter_list|(
specifier|final
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
throws|,
name|Failure
block|{
name|validatePatchSetId
argument_list|(
name|psa
argument_list|)
expr_stmt|;
name|validatePatchSetId
argument_list|(
name|psb
argument_list|)
expr_stmt|;
name|change
operator|=
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|changeId
argument_list|)
expr_stmt|;
name|patch
operator|=
name|db
operator|.
name|patches
argument_list|()
operator|.
name|get
argument_list|(
name|patchKey
argument_list|)
expr_stmt|;
if|if
condition|(
name|change
operator|==
literal|null
operator|||
name|patch
operator|==
literal|null
operator|||
operator|!
name|canRead
argument_list|(
name|change
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|Failure
argument_list|(
operator|new
name|NoSuchEntityException
argument_list|()
argument_list|)
throw|;
block|}
name|projectKey
operator|=
name|change
operator|.
name|getDest
argument_list|()
operator|.
name|getParentKey
argument_list|()
expr_stmt|;
try|try
block|{
name|git
operator|=
name|rc
operator|.
name|get
argument_list|(
name|projectKey
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InvalidRepositoryException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Repository "
operator|+
name|projectKey
operator|+
literal|" not found"
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|Failure
argument_list|(
operator|new
name|NoSuchEntityException
argument_list|()
argument_list|)
throw|;
block|}
specifier|final
name|PatchScriptBuilder
name|b
init|=
name|newBuilder
argument_list|()
decl_stmt|;
specifier|final
name|ObjectId
name|bId
init|=
name|toObjectId
argument_list|(
name|db
argument_list|,
name|psb
argument_list|)
decl_stmt|;
specifier|final
name|ObjectId
name|aId
init|=
name|psa
operator|==
literal|null
condition|?
name|ancestor
argument_list|(
name|bId
argument_list|)
else|:
name|toObjectId
argument_list|(
name|db
argument_list|,
name|psa
argument_list|)
decl_stmt|;
specifier|final
name|DiffCacheKey
name|key
init|=
operator|new
name|DiffCacheKey
argument_list|(
name|projectKey
argument_list|,
name|aId
argument_list|,
name|bId
argument_list|,
name|patch
argument_list|)
decl_stmt|;
specifier|final
name|Element
name|cacheElem
decl_stmt|;
try|try
block|{
name|cacheElem
operator|=
name|server
operator|.
name|getDiffCache
argument_list|()
operator|.
name|get
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Cache get failed for "
operator|+
name|key
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|Failure
argument_list|(
operator|new
name|NoSuchEntityException
argument_list|()
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|CacheException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Cache get failed for "
operator|+
name|key
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|Failure
argument_list|(
operator|new
name|NoSuchEntityException
argument_list|()
argument_list|)
throw|;
block|}
if|if
condition|(
name|cacheElem
operator|==
literal|null
operator|||
name|cacheElem
operator|.
name|getObjectValue
argument_list|()
operator|==
literal|null
condition|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Cache get failed for "
operator|+
name|key
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|Failure
argument_list|(
operator|new
name|NoSuchEntityException
argument_list|()
argument_list|)
throw|;
block|}
specifier|final
name|DiffCacheContent
name|dcc
init|=
operator|(
name|DiffCacheContent
operator|)
name|cacheElem
operator|.
name|getObjectValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|dcc
operator|.
name|isNoDifference
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|Failure
argument_list|(
operator|new
name|NoDifferencesException
argument_list|()
argument_list|)
throw|;
block|}
try|try
block|{
return|return
name|b
operator|.
name|toPatchScript
argument_list|(
name|dcc
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|CorruptEntityException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"File content for "
operator|+
name|key
operator|+
literal|" unavailable"
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|Failure
argument_list|(
operator|new
name|NoSuchEntityException
argument_list|()
argument_list|)
throw|;
block|}
block|}
DECL|method|newBuilder ()
specifier|private
name|PatchScriptBuilder
name|newBuilder
parameter_list|()
throws|throws
name|Failure
block|{
specifier|final
name|PatchScriptBuilder
name|b
init|=
operator|new
name|PatchScriptBuilder
argument_list|()
decl_stmt|;
name|b
operator|.
name|setRepository
argument_list|(
name|git
argument_list|)
expr_stmt|;
name|b
operator|.
name|setPatch
argument_list|(
name|patch
argument_list|)
expr_stmt|;
if|if
condition|(
name|context
operator|==
name|AccountGeneralPreferences
operator|.
name|WHOLE_FILE_CONTEXT
condition|)
name|b
operator|.
name|setContext
argument_list|(
name|PatchScriptBuilder
operator|.
name|MAX_CONTEXT
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
literal|0
operator|<=
name|context
operator|&&
name|context
operator|<=
name|PatchScriptBuilder
operator|.
name|MAX_CONTEXT
condition|)
name|b
operator|.
name|setContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
else|else
throw|throw
operator|new
name|Failure
argument_list|(
operator|new
name|NoSuchEntityException
argument_list|()
argument_list|)
throw|;
return|return
name|b
return|;
block|}
DECL|method|ancestor (final ObjectId id)
specifier|private
name|ObjectId
name|ancestor
parameter_list|(
specifier|final
name|ObjectId
name|id
parameter_list|)
throws|throws
name|Failure
block|{
try|try
block|{
specifier|final
name|RevCommit
name|c
init|=
operator|new
name|RevWalk
argument_list|(
name|git
argument_list|)
operator|.
name|parseCommit
argument_list|(
name|id
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|c
operator|.
name|getParentCount
argument_list|()
condition|)
block|{
case|case
literal|0
case|:
return|return
name|emptyTree
argument_list|()
return|;
case|case
literal|1
case|:
return|return
name|c
operator|.
name|getParent
argument_list|(
literal|0
argument_list|)
operator|.
name|getId
argument_list|()
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Commit information for "
operator|+
name|id
operator|.
name|name
argument_list|()
operator|+
literal|" unavailable"
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|Failure
argument_list|(
operator|new
name|NoSuchEntityException
argument_list|()
argument_list|)
throw|;
block|}
block|}
DECL|method|emptyTree ()
specifier|private
name|ObjectId
name|emptyTree
parameter_list|()
throws|throws
name|IOException
block|{
return|return
operator|new
name|ObjectWriter
argument_list|(
name|git
argument_list|)
operator|.
name|writeCanonicalTree
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
return|;
block|}
DECL|method|toObjectId (final ReviewDb db, final PatchSet.Id psId)
specifier|private
name|ObjectId
name|toObjectId
parameter_list|(
specifier|final
name|ReviewDb
name|db
parameter_list|,
specifier|final
name|PatchSet
operator|.
name|Id
name|psId
parameter_list|)
throws|throws
name|Failure
throws|,
name|OrmException
block|{
if|if
condition|(
operator|!
name|changeId
operator|.
name|equals
argument_list|(
name|psId
operator|.
name|getParentKey
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|Failure
argument_list|(
operator|new
name|NoSuchEntityException
argument_list|()
argument_list|)
throw|;
block|}
specifier|final
name|PatchSet
name|ps
init|=
name|db
operator|.
name|patchSets
argument_list|()
operator|.
name|get
argument_list|(
name|psId
argument_list|)
decl_stmt|;
if|if
condition|(
name|ps
operator|==
literal|null
operator|||
name|ps
operator|.
name|getRevision
argument_list|()
operator|==
literal|null
operator|||
name|ps
operator|.
name|getRevision
argument_list|()
operator|.
name|get
argument_list|()
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|Failure
argument_list|(
operator|new
name|NoSuchEntityException
argument_list|()
argument_list|)
throw|;
block|}
try|try
block|{
return|return
name|ObjectId
operator|.
name|fromString
argument_list|(
name|ps
operator|.
name|getRevision
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Patch set "
operator|+
name|psId
operator|+
literal|" has invalid revision"
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|Failure
argument_list|(
operator|new
name|NoSuchEntityException
argument_list|()
argument_list|)
throw|;
block|}
block|}
DECL|method|validatePatchSetId (final PatchSet.Id psId)
specifier|private
name|void
name|validatePatchSetId
parameter_list|(
specifier|final
name|PatchSet
operator|.
name|Id
name|psId
parameter_list|)
throws|throws
name|Failure
block|{
if|if
condition|(
name|psId
operator|==
literal|null
condition|)
block|{
comment|// OK, means use base;
block|}
elseif|else
if|if
condition|(
name|changeId
operator|.
name|equals
argument_list|(
name|psId
operator|.
name|getParentKey
argument_list|()
argument_list|)
condition|)
block|{
comment|// OK, same change;
block|}
else|else
block|{
throw|throw
operator|new
name|Failure
argument_list|(
operator|new
name|NoSuchEntityException
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

