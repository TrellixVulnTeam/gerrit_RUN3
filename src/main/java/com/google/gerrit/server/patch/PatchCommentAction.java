begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2009 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.patch
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|patch
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|BaseServiceImplementation
operator|.
name|canRead
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|data
operator|.
name|AccountInfoCacheFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|patches
operator|.
name|CommentDetail
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Patch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|PatchLineComment
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|Common
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|NoSuchEntityException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|BaseServiceImplementation
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|BaseServiceImplementation
operator|.
name|Failure
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|OrmException
import|;
end_import

begin_class
DECL|class|PatchCommentAction
class|class
name|PatchCommentAction
implements|implements
name|Action
argument_list|<
name|CommentDetail
argument_list|>
block|{
DECL|field|patchKey
specifier|private
specifier|final
name|Patch
operator|.
name|Key
name|patchKey
decl_stmt|;
DECL|field|psa
specifier|private
specifier|final
name|PatchSet
operator|.
name|Id
name|psa
decl_stmt|;
DECL|field|psb
specifier|private
specifier|final
name|PatchSet
operator|.
name|Id
name|psb
decl_stmt|;
DECL|field|patchSetId
specifier|private
specifier|final
name|PatchSet
operator|.
name|Id
name|patchSetId
decl_stmt|;
DECL|field|changeId
specifier|private
specifier|final
name|Change
operator|.
name|Id
name|changeId
decl_stmt|;
DECL|field|me
specifier|private
name|Account
operator|.
name|Id
name|me
decl_stmt|;
DECL|field|change
specifier|private
name|Change
name|change
decl_stmt|;
DECL|field|patch
specifier|private
name|Patch
name|patch
decl_stmt|;
DECL|method|PatchCommentAction (final Patch.Key patchKey, final PatchSet.Id psa, final PatchSet.Id psb)
name|PatchCommentAction
parameter_list|(
specifier|final
name|Patch
operator|.
name|Key
name|patchKey
parameter_list|,
specifier|final
name|PatchSet
operator|.
name|Id
name|psa
parameter_list|,
specifier|final
name|PatchSet
operator|.
name|Id
name|psb
parameter_list|)
block|{
name|this
operator|.
name|patchKey
operator|=
name|patchKey
expr_stmt|;
name|this
operator|.
name|psa
operator|=
name|psa
expr_stmt|;
name|this
operator|.
name|psb
operator|=
name|psb
expr_stmt|;
name|patchSetId
operator|=
name|patchKey
operator|.
name|getParentKey
argument_list|()
expr_stmt|;
name|changeId
operator|=
name|patchSetId
operator|.
name|getParentKey
argument_list|()
expr_stmt|;
block|}
DECL|method|run (final ReviewDb db)
specifier|public
name|CommentDetail
name|run
parameter_list|(
specifier|final
name|ReviewDb
name|db
parameter_list|)
throws|throws
name|OrmException
throws|,
name|Failure
block|{
name|validatePatchSetId
argument_list|(
name|psa
argument_list|)
expr_stmt|;
name|validatePatchSetId
argument_list|(
name|psb
argument_list|)
expr_stmt|;
name|me
operator|=
name|Common
operator|.
name|getAccountId
argument_list|()
expr_stmt|;
name|change
operator|=
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|changeId
argument_list|)
expr_stmt|;
name|patch
operator|=
name|db
operator|.
name|patches
argument_list|()
operator|.
name|get
argument_list|(
name|patchKey
argument_list|)
expr_stmt|;
if|if
condition|(
name|change
operator|==
literal|null
operator|||
name|patch
operator|==
literal|null
operator|||
operator|!
name|canRead
argument_list|(
name|change
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|Failure
argument_list|(
operator|new
name|NoSuchEntityException
argument_list|()
argument_list|)
throw|;
block|}
specifier|final
name|String
name|pn
init|=
name|patch
operator|.
name|getFileName
argument_list|()
decl_stmt|;
specifier|final
name|AccountInfoCacheFactory
name|aic
init|=
operator|new
name|AccountInfoCacheFactory
argument_list|(
name|db
argument_list|)
decl_stmt|;
specifier|final
name|CommentDetail
name|r
decl_stmt|;
name|r
operator|=
operator|new
name|CommentDetail
argument_list|(
name|psa
argument_list|,
name|psb
operator|!=
literal|null
condition|?
name|psb
else|:
name|patchSetId
argument_list|)
expr_stmt|;
for|for
control|(
name|PatchLineComment
name|p
range|:
name|db
operator|.
name|patchComments
argument_list|()
operator|.
name|published
argument_list|(
name|changeId
argument_list|,
name|pn
argument_list|)
control|)
block|{
if|if
condition|(
name|r
operator|.
name|include
argument_list|(
name|p
argument_list|)
condition|)
block|{
name|aic
operator|.
name|want
argument_list|(
name|p
operator|.
name|getAuthor
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|me
operator|!=
literal|null
condition|)
block|{
name|aic
operator|.
name|want
argument_list|(
name|me
argument_list|)
expr_stmt|;
for|for
control|(
name|PatchLineComment
name|p
range|:
name|db
operator|.
name|patchComments
argument_list|()
operator|.
name|draft
argument_list|(
name|changeId
argument_list|,
name|pn
argument_list|,
name|me
argument_list|)
control|)
block|{
name|r
operator|.
name|include
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
block|}
name|r
operator|.
name|setHistory
argument_list|(
name|db
operator|.
name|patches
argument_list|()
operator|.
name|history
argument_list|(
name|changeId
argument_list|,
name|pn
argument_list|)
operator|.
name|toList
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|setAccountInfoCache
argument_list|(
name|aic
operator|.
name|create
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|r
return|;
block|}
DECL|method|validatePatchSetId (final PatchSet.Id psId)
specifier|private
name|void
name|validatePatchSetId
parameter_list|(
specifier|final
name|PatchSet
operator|.
name|Id
name|psId
parameter_list|)
throws|throws
name|Failure
block|{
if|if
condition|(
name|psId
operator|==
literal|null
condition|)
block|{
comment|// OK, means use base;
block|}
elseif|else
if|if
condition|(
name|changeId
operator|.
name|equals
argument_list|(
name|psId
operator|.
name|getParentKey
argument_list|()
argument_list|)
condition|)
block|{
comment|// OK, same change;
block|}
else|else
block|{
throw|throw
operator|new
name|Failure
argument_list|(
operator|new
name|NoSuchEntityException
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

