begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2008 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.rpc
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|rpc
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|data
operator|.
name|GerritConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|data
operator|.
name|SshHostKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|data
operator|.
name|SystemInfoService
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|ContributorAgreement
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|ssh
operator|.
name|Sshd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|SchemaFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jcraft
operator|.
name|jsch
operator|.
name|HostKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jcraft
operator|.
name|jsch
operator|.
name|JSch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jcraft
operator|.
name|jsch
operator|.
name|JSchException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sshd
operator|.
name|common
operator|.
name|util
operator|.
name|Buffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|Inet6Address
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|UnknownHostException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PublicKey
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|interfaces
operator|.
name|DSAPublicKey
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|interfaces
operator|.
name|RSAPublicKey
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_class
DECL|class|SystemInfoServiceImpl
class|class
name|SystemInfoServiceImpl
implements|implements
name|SystemInfoService
block|{
DECL|field|log
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|SystemInfoServiceImpl
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|JSCH
specifier|private
specifier|static
specifier|final
name|JSch
name|JSCH
init|=
operator|new
name|JSch
argument_list|()
decl_stmt|;
DECL|field|schema
specifier|private
specifier|final
name|SchemaFactory
argument_list|<
name|ReviewDb
argument_list|>
name|schema
decl_stmt|;
DECL|field|sshd
specifier|private
specifier|final
name|Sshd
name|sshd
decl_stmt|;
DECL|field|config
specifier|private
specifier|final
name|GerritConfig
name|config
decl_stmt|;
DECL|field|hostKeys
specifier|private
specifier|final
name|List
argument_list|<
name|PublicKey
argument_list|>
name|hostKeys
decl_stmt|;
annotation|@
name|Inject
DECL|method|SystemInfoServiceImpl (final SchemaFactory<ReviewDb> sf, final Sshd daemon, final GerritConfig gc)
name|SystemInfoServiceImpl
parameter_list|(
specifier|final
name|SchemaFactory
argument_list|<
name|ReviewDb
argument_list|>
name|sf
parameter_list|,
specifier|final
name|Sshd
name|daemon
parameter_list|,
specifier|final
name|GerritConfig
name|gc
parameter_list|)
block|{
name|schema
operator|=
name|sf
expr_stmt|;
name|sshd
operator|=
name|daemon
expr_stmt|;
name|config
operator|=
name|gc
expr_stmt|;
name|hostKeys
operator|=
name|sortHostKeys
argument_list|()
expr_stmt|;
block|}
DECL|method|isIPv6 (final InetAddress ip)
specifier|private
specifier|static
name|boolean
name|isIPv6
parameter_list|(
specifier|final
name|InetAddress
name|ip
parameter_list|)
block|{
return|return
name|ip
operator|instanceof
name|Inet6Address
operator|&&
name|ip
operator|.
name|getHostName
argument_list|()
operator|.
name|equals
argument_list|(
name|ip
operator|.
name|getHostAddress
argument_list|()
argument_list|)
return|;
block|}
DECL|method|loadGerritConfig (final AsyncCallback<GerritConfig> callback)
specifier|public
name|void
name|loadGerritConfig
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|GerritConfig
argument_list|>
name|callback
parameter_list|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
name|config
argument_list|)
expr_stmt|;
block|}
DECL|method|contributorAgreements ( final AsyncCallback<List<ContributorAgreement>> callback)
specifier|public
name|void
name|contributorAgreements
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|ContributorAgreement
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
try|try
block|{
specifier|final
name|ReviewDb
name|db
init|=
name|schema
operator|.
name|open
argument_list|()
decl_stmt|;
try|try
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
name|db
operator|.
name|contributorAgreements
argument_list|()
operator|.
name|active
argument_list|()
operator|.
name|toList
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|db
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|OrmException
name|e
parameter_list|)
block|{
name|callback
operator|.
name|onFailure
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|daemonHostKeys (final AsyncCallback<List<SshHostKey>> callback)
specifier|public
name|void
name|daemonHostKeys
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|SshHostKey
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
specifier|final
name|String
name|hostIdent
init|=
name|hostIdent
argument_list|()
decl_stmt|;
specifier|final
name|ArrayList
argument_list|<
name|SshHostKey
argument_list|>
name|r
init|=
operator|new
name|ArrayList
argument_list|<
name|SshHostKey
argument_list|>
argument_list|(
name|hostKeys
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
specifier|final
name|PublicKey
name|pub
range|:
name|hostKeys
control|)
block|{
try|try
block|{
specifier|final
name|HostKey
name|hk
init|=
name|toHostKey
argument_list|(
name|hostIdent
argument_list|,
name|pub
argument_list|)
decl_stmt|;
name|r
operator|.
name|add
argument_list|(
operator|new
name|SshHostKey
argument_list|(
name|hk
operator|.
name|getHost
argument_list|()
argument_list|,
name|hk
operator|.
name|getType
argument_list|()
operator|+
literal|" "
operator|+
name|hk
operator|.
name|getKey
argument_list|()
argument_list|,
name|hk
operator|.
name|getFingerPrint
argument_list|(
name|JSCH
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JSchException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Invalid host key"
argument_list|,
name|e
argument_list|)
expr_stmt|;
continue|continue;
block|}
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
DECL|method|sortHostKeys ()
specifier|private
name|List
argument_list|<
name|PublicKey
argument_list|>
name|sortHostKeys
parameter_list|()
block|{
specifier|final
name|List
argument_list|<
name|PublicKey
argument_list|>
name|r
init|=
operator|new
name|ArrayList
argument_list|<
name|PublicKey
argument_list|>
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|r
operator|.
name|addAll
argument_list|(
name|sshd
operator|.
name|getHostKeys
argument_list|()
argument_list|)
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|r
argument_list|,
operator|new
name|Comparator
argument_list|<
name|PublicKey
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|int
name|compare
parameter_list|(
specifier|final
name|PublicKey
name|a
parameter_list|,
specifier|final
name|PublicKey
name|b
parameter_list|)
block|{
if|if
condition|(
name|a
operator|==
name|b
condition|)
block|{
return|return
literal|0
return|;
block|}
if|if
condition|(
name|a
operator|instanceof
name|RSAPublicKey
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
if|if
condition|(
name|a
operator|instanceof
name|DSAPublicKey
condition|)
block|{
return|return
literal|1
return|;
block|}
return|return
literal|0
return|;
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|r
argument_list|)
return|;
block|}
DECL|method|toHostKey (final String hostIdent, final PublicKey pub)
specifier|private
name|HostKey
name|toHostKey
parameter_list|(
specifier|final
name|String
name|hostIdent
parameter_list|,
specifier|final
name|PublicKey
name|pub
parameter_list|)
throws|throws
name|JSchException
block|{
specifier|final
name|Buffer
name|buf
init|=
operator|new
name|Buffer
argument_list|()
decl_stmt|;
name|buf
operator|.
name|putPublicKey
argument_list|(
name|pub
argument_list|)
expr_stmt|;
specifier|final
name|byte
index|[]
name|keyBin
init|=
name|buf
operator|.
name|getCompactData
argument_list|()
decl_stmt|;
return|return
operator|new
name|HostKey
argument_list|(
name|hostIdent
argument_list|,
name|keyBin
argument_list|)
return|;
block|}
DECL|method|hostIdent ()
specifier|private
name|String
name|hostIdent
parameter_list|()
block|{
specifier|final
name|HttpServletRequest
name|req
init|=
name|GerritJsonServlet
operator|.
name|getCurrentCall
argument_list|()
operator|.
name|getHttpServletRequest
argument_list|()
decl_stmt|;
name|InetSocketAddress
name|addr
init|=
name|sshd
operator|.
name|getAddress
argument_list|()
decl_stmt|;
name|InetAddress
name|ip
init|=
name|addr
operator|.
name|getAddress
argument_list|()
decl_stmt|;
if|if
condition|(
name|ip
operator|.
name|isAnyLocalAddress
argument_list|()
condition|)
block|{
try|try
block|{
name|ip
operator|=
name|InetAddress
operator|.
name|getByName
argument_list|(
name|req
operator|.
name|getServerName
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnknownHostException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
name|addr
operator|=
operator|new
name|InetSocketAddress
argument_list|(
name|ip
argument_list|,
name|addr
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|addr
operator|.
name|getPort
argument_list|()
operator|==
literal|22
operator|&&
operator|!
name|isIPv6
argument_list|(
name|ip
argument_list|)
condition|)
block|{
return|return
name|addr
operator|.
name|getHostName
argument_list|()
return|;
block|}
return|return
literal|"["
operator|+
name|addr
operator|.
name|getHostName
argument_list|()
operator|+
literal|"]:"
operator|+
name|addr
operator|.
name|getPort
argument_list|()
return|;
block|}
block|}
end_class

end_unit

