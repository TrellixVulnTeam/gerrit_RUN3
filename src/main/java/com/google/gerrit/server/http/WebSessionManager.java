begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2009 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.server.http
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|http
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|Cache
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|CacheException
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|CacheManager
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|ehcache
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|spearce
operator|.
name|jgit
operator|.
name|util
operator|.
name|Base64
import|;
end_import

begin_import
import|import
name|org
operator|.
name|spearce
operator|.
name|jgit
operator|.
name|util
operator|.
name|NB
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ObjectInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ObjectOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|SecureRandom
import|;
end_import

begin_class
annotation|@
name|Singleton
DECL|class|WebSessionManager
class|class
name|WebSessionManager
block|{
DECL|field|tokenLen
specifier|private
specifier|final
name|int
name|tokenLen
decl_stmt|;
DECL|field|prng
specifier|private
specifier|final
name|SecureRandom
name|prng
decl_stmt|;
DECL|field|self
specifier|private
specifier|final
name|Cache
name|self
decl_stmt|;
annotation|@
name|Inject
DECL|method|WebSessionManager (final CacheManager mgr)
name|WebSessionManager
parameter_list|(
specifier|final
name|CacheManager
name|mgr
parameter_list|)
block|{
name|tokenLen
operator|=
literal|40
operator|-
literal|4
expr_stmt|;
name|prng
operator|=
operator|new
name|SecureRandom
argument_list|()
expr_stmt|;
name|self
operator|=
name|mgr
operator|.
name|getCache
argument_list|(
literal|"web_sessions"
argument_list|)
expr_stmt|;
block|}
DECL|method|create (final Account.Id who)
name|Element
name|create
parameter_list|(
specifier|final
name|Account
operator|.
name|Id
name|who
parameter_list|)
block|{
specifier|final
name|int
name|accountId
init|=
name|who
operator|.
name|get
argument_list|()
decl_stmt|;
specifier|final
name|byte
index|[]
name|rnd
init|=
operator|new
name|byte
index|[
name|tokenLen
index|]
decl_stmt|;
name|prng
operator|.
name|nextBytes
argument_list|(
name|rnd
argument_list|)
expr_stmt|;
specifier|final
name|byte
index|[]
name|buf
init|=
operator|new
name|byte
index|[
literal|4
operator|+
name|tokenLen
index|]
decl_stmt|;
name|NB
operator|.
name|encodeInt32
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|,
name|accountId
argument_list|)
expr_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|rnd
argument_list|,
literal|0
argument_list|,
name|buf
argument_list|,
literal|4
argument_list|,
name|rnd
operator|.
name|length
argument_list|)
expr_stmt|;
specifier|final
name|String
name|token
init|=
name|Base64
operator|.
name|encodeBytes
argument_list|(
name|rnd
argument_list|,
name|Base64
operator|.
name|DONT_BREAK_LINES
argument_list|)
decl_stmt|;
specifier|final
name|Val
name|v
init|=
operator|new
name|Val
argument_list|(
name|who
argument_list|)
decl_stmt|;
specifier|final
name|Element
name|m
init|=
operator|new
name|Element
argument_list|(
operator|new
name|Key
argument_list|(
name|token
argument_list|)
argument_list|,
name|v
argument_list|)
decl_stmt|;
name|self
operator|.
name|put
argument_list|(
name|m
argument_list|)
expr_stmt|;
return|return
name|m
return|;
block|}
DECL|method|get (final String token)
name|Element
name|get
parameter_list|(
specifier|final
name|String
name|token
parameter_list|)
block|{
if|if
condition|(
name|token
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|token
argument_list|)
condition|)
block|{
try|try
block|{
return|return
name|self
operator|.
name|get
argument_list|(
operator|new
name|Key
argument_list|(
name|token
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|CacheException
name|e
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
DECL|method|destroy (final Element cacheEntry)
name|void
name|destroy
parameter_list|(
specifier|final
name|Element
name|cacheEntry
parameter_list|)
block|{
name|self
operator|.
name|remove
argument_list|(
name|cacheEntry
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|class|Key
specifier|static
specifier|final
class|class
name|Key
implements|implements
name|Serializable
block|{
DECL|field|serialVersionUID
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
DECL|field|token
specifier|transient
name|String
name|token
decl_stmt|;
DECL|method|Key (final String t)
name|Key
parameter_list|(
specifier|final
name|String
name|t
parameter_list|)
block|{
name|token
operator|=
name|t
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|token
operator|.
name|hashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object obj)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
return|return
name|obj
operator|instanceof
name|Key
operator|&&
name|token
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|Key
operator|)
name|obj
operator|)
operator|.
name|token
argument_list|)
return|;
block|}
DECL|method|writeObject (final ObjectOutputStream out)
specifier|private
name|void
name|writeObject
parameter_list|(
specifier|final
name|ObjectOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeUTF
argument_list|(
name|token
argument_list|)
expr_stmt|;
block|}
DECL|method|readObject (final ObjectInputStream in)
specifier|private
name|void
name|readObject
parameter_list|(
specifier|final
name|ObjectInputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|token
operator|=
name|in
operator|.
name|readUTF
argument_list|()
expr_stmt|;
block|}
block|}
DECL|class|Val
specifier|static
specifier|final
class|class
name|Val
implements|implements
name|Serializable
block|{
DECL|field|serialVersionUID
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
name|Key
operator|.
name|serialVersionUID
decl_stmt|;
DECL|field|accountId
specifier|transient
name|Account
operator|.
name|Id
name|accountId
decl_stmt|;
DECL|field|refreshCookieAt
specifier|transient
name|long
name|refreshCookieAt
decl_stmt|;
DECL|method|Val (final Account.Id accountId)
name|Val
parameter_list|(
specifier|final
name|Account
operator|.
name|Id
name|accountId
parameter_list|)
block|{
name|this
operator|.
name|accountId
operator|=
name|accountId
expr_stmt|;
block|}
DECL|method|writeObject (final ObjectOutputStream out)
specifier|private
name|void
name|writeObject
parameter_list|(
specifier|final
name|ObjectOutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeInt
argument_list|(
name|accountId
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeLong
argument_list|(
name|refreshCookieAt
argument_list|)
expr_stmt|;
block|}
DECL|method|readObject (final ObjectInputStream in)
specifier|private
name|void
name|readObject
parameter_list|(
specifier|final
name|ObjectInputStream
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|accountId
operator|=
operator|new
name|Account
operator|.
name|Id
argument_list|(
name|in
operator|.
name|readInt
argument_list|()
argument_list|)
expr_stmt|;
name|refreshCookieAt
operator|=
name|in
operator|.
name|readLong
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

