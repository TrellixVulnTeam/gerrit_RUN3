begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2008 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.admin
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|admin
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|Gerrit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|data
operator|.
name|AccountInfoCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|AccountGroup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|AccountGroupMember
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|GerritCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|ScreenLoadCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|AccountDashboardLink
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|AccountGroupSuggestOracle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|AccountScreen
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|AddMemberBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|FancyFlexTable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|SmallHeading
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|TextSaveButtonListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ChangeHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|ClickHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyCodes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|event
operator|.
name|dom
operator|.
name|client
operator|.
name|KeyPressHandler
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlowPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Grid
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|ListBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Panel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|SuggestBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|VerticalPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlexTable
operator|.
name|FlexCellFormatter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTMLTable
operator|.
name|CellFormatter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|globalkey
operator|.
name|client
operator|.
name|NpTextArea
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|globalkey
operator|.
name|client
operator|.
name|NpTextBox
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtjsonrpc
operator|.
name|client
operator|.
name|VoidResult
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
DECL|class|AccountGroupScreen
specifier|public
class|class
name|AccountGroupScreen
extends|extends
name|AccountScreen
block|{
DECL|field|groupId
specifier|private
specifier|final
name|AccountGroup
operator|.
name|Id
name|groupId
decl_stmt|;
DECL|field|accounts
specifier|private
name|AccountInfoCache
name|accounts
init|=
name|AccountInfoCache
operator|.
name|empty
argument_list|()
decl_stmt|;
DECL|field|members
specifier|private
name|MemberTable
name|members
decl_stmt|;
DECL|field|groupNameTxt
specifier|private
name|NpTextBox
name|groupNameTxt
decl_stmt|;
DECL|field|saveName
specifier|private
name|Button
name|saveName
decl_stmt|;
DECL|field|ownerTxtBox
specifier|private
name|NpTextBox
name|ownerTxtBox
decl_stmt|;
DECL|field|ownerTxt
specifier|private
name|SuggestBox
name|ownerTxt
decl_stmt|;
DECL|field|saveOwner
specifier|private
name|Button
name|saveOwner
decl_stmt|;
DECL|field|descTxt
specifier|private
name|NpTextArea
name|descTxt
decl_stmt|;
DECL|field|saveDesc
specifier|private
name|Button
name|saveDesc
decl_stmt|;
DECL|field|typeSystem
specifier|private
name|Label
name|typeSystem
decl_stmt|;
DECL|field|typeSelect
specifier|private
name|ListBox
name|typeSelect
decl_stmt|;
DECL|field|saveType
specifier|private
name|Button
name|saveType
decl_stmt|;
DECL|field|memberPanel
specifier|private
name|Panel
name|memberPanel
decl_stmt|;
DECL|field|addMemberBox
specifier|private
name|AddMemberBox
name|addMemberBox
decl_stmt|;
DECL|field|delMember
specifier|private
name|Button
name|delMember
decl_stmt|;
DECL|field|externalPanel
specifier|private
name|Panel
name|externalPanel
decl_stmt|;
DECL|field|externalName
specifier|private
name|Label
name|externalName
decl_stmt|;
DECL|field|externalNameFilter
specifier|private
name|NpTextBox
name|externalNameFilter
decl_stmt|;
DECL|field|externalNameSearch
specifier|private
name|Button
name|externalNameSearch
decl_stmt|;
DECL|field|externalMatches
specifier|private
name|Grid
name|externalMatches
decl_stmt|;
DECL|method|AccountGroupScreen (final AccountGroup.Id toShow)
specifier|public
name|AccountGroupScreen
parameter_list|(
specifier|final
name|AccountGroup
operator|.
name|Id
name|toShow
parameter_list|)
block|{
name|groupId
operator|=
name|toShow
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onLoad ()
specifier|protected
name|void
name|onLoad
parameter_list|()
block|{
name|super
operator|.
name|onLoad
argument_list|()
expr_stmt|;
name|Util
operator|.
name|GROUP_SVC
operator|.
name|groupDetail
argument_list|(
name|groupId
argument_list|,
operator|new
name|ScreenLoadCallback
argument_list|<
name|GroupDetail
argument_list|>
argument_list|(
name|this
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|void
name|preDisplay
parameter_list|(
specifier|final
name|GroupDetail
name|result
parameter_list|)
block|{
name|display
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|onInitUI ()
specifier|protected
name|void
name|onInitUI
parameter_list|()
block|{
name|super
operator|.
name|onInitUI
argument_list|()
expr_stmt|;
name|initName
argument_list|()
expr_stmt|;
name|initOwner
argument_list|()
expr_stmt|;
name|initDescription
argument_list|()
expr_stmt|;
name|initGroupType
argument_list|()
expr_stmt|;
name|initMemberList
argument_list|()
expr_stmt|;
name|initExternal
argument_list|()
expr_stmt|;
block|}
DECL|method|initName ()
specifier|private
name|void
name|initName
parameter_list|()
block|{
specifier|final
name|VerticalPanel
name|groupNamePanel
init|=
operator|new
name|VerticalPanel
argument_list|()
decl_stmt|;
name|groupNameTxt
operator|=
operator|new
name|NpTextBox
argument_list|()
expr_stmt|;
name|groupNameTxt
operator|.
name|setVisibleLength
argument_list|(
literal|60
argument_list|)
expr_stmt|;
name|groupNamePanel
operator|.
name|add
argument_list|(
name|groupNameTxt
argument_list|)
expr_stmt|;
name|saveName
operator|=
operator|new
name|Button
argument_list|(
name|Util
operator|.
name|C
operator|.
name|buttonRenameGroup
argument_list|()
argument_list|)
expr_stmt|;
name|saveName
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|saveName
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
specifier|final
name|ClickEvent
name|event
parameter_list|)
block|{
specifier|final
name|String
name|newName
init|=
name|groupNameTxt
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
name|Util
operator|.
name|GROUP_SVC
operator|.
name|renameGroup
argument_list|(
name|groupId
argument_list|,
name|newName
argument_list|,
operator|new
name|GerritCallback
argument_list|<
name|VoidResult
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|(
specifier|final
name|VoidResult
name|result
parameter_list|)
block|{
name|saveName
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setPageTitle
argument_list|(
name|Util
operator|.
name|M
operator|.
name|group
argument_list|(
name|newName
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|groupNamePanel
operator|.
name|add
argument_list|(
name|saveName
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|groupNamePanel
argument_list|)
expr_stmt|;
operator|new
name|TextSaveButtonListener
argument_list|(
name|groupNameTxt
argument_list|,
name|saveName
argument_list|)
expr_stmt|;
block|}
DECL|method|initOwner ()
specifier|private
name|void
name|initOwner
parameter_list|()
block|{
specifier|final
name|VerticalPanel
name|ownerPanel
init|=
operator|new
name|VerticalPanel
argument_list|()
decl_stmt|;
name|ownerPanel
operator|.
name|add
argument_list|(
operator|new
name|SmallHeading
argument_list|(
name|Util
operator|.
name|C
operator|.
name|headingOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ownerTxtBox
operator|=
operator|new
name|NpTextBox
argument_list|()
expr_stmt|;
name|ownerTxtBox
operator|.
name|setVisibleLength
argument_list|(
literal|60
argument_list|)
expr_stmt|;
name|ownerTxt
operator|=
operator|new
name|SuggestBox
argument_list|(
operator|new
name|AccountGroupSuggestOracle
argument_list|()
argument_list|,
name|ownerTxtBox
argument_list|)
expr_stmt|;
name|ownerPanel
operator|.
name|add
argument_list|(
name|ownerTxt
argument_list|)
expr_stmt|;
name|saveOwner
operator|=
operator|new
name|Button
argument_list|(
name|Util
operator|.
name|C
operator|.
name|buttonChangeGroupOwner
argument_list|()
argument_list|)
expr_stmt|;
name|saveOwner
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|saveOwner
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
specifier|final
name|ClickEvent
name|event
parameter_list|)
block|{
specifier|final
name|String
name|newOwner
init|=
name|ownerTxt
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
if|if
condition|(
name|newOwner
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|Util
operator|.
name|GROUP_SVC
operator|.
name|changeGroupOwner
argument_list|(
name|groupId
argument_list|,
name|newOwner
argument_list|,
operator|new
name|GerritCallback
argument_list|<
name|VoidResult
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|(
specifier|final
name|VoidResult
name|result
parameter_list|)
block|{
name|saveOwner
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|ownerPanel
operator|.
name|add
argument_list|(
name|saveOwner
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|ownerPanel
argument_list|)
expr_stmt|;
operator|new
name|TextSaveButtonListener
argument_list|(
name|ownerTxtBox
argument_list|,
name|saveOwner
argument_list|)
expr_stmt|;
block|}
DECL|method|initDescription ()
specifier|private
name|void
name|initDescription
parameter_list|()
block|{
specifier|final
name|VerticalPanel
name|vp
init|=
operator|new
name|VerticalPanel
argument_list|()
decl_stmt|;
name|vp
operator|.
name|add
argument_list|(
operator|new
name|SmallHeading
argument_list|(
name|Util
operator|.
name|C
operator|.
name|headingDescription
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|descTxt
operator|=
operator|new
name|NpTextArea
argument_list|()
expr_stmt|;
name|descTxt
operator|.
name|setVisibleLines
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|descTxt
operator|.
name|setCharacterWidth
argument_list|(
literal|60
argument_list|)
expr_stmt|;
name|vp
operator|.
name|add
argument_list|(
name|descTxt
argument_list|)
expr_stmt|;
name|saveDesc
operator|=
operator|new
name|Button
argument_list|(
name|Util
operator|.
name|C
operator|.
name|buttonSaveDescription
argument_list|()
argument_list|)
expr_stmt|;
name|saveDesc
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|saveDesc
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
specifier|final
name|ClickEvent
name|event
parameter_list|)
block|{
specifier|final
name|String
name|txt
init|=
name|descTxt
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
name|Util
operator|.
name|GROUP_SVC
operator|.
name|changeGroupDescription
argument_list|(
name|groupId
argument_list|,
name|txt
argument_list|,
operator|new
name|GerritCallback
argument_list|<
name|VoidResult
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|(
specifier|final
name|VoidResult
name|result
parameter_list|)
block|{
name|saveDesc
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|vp
operator|.
name|add
argument_list|(
name|saveDesc
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|vp
argument_list|)
expr_stmt|;
operator|new
name|TextSaveButtonListener
argument_list|(
name|descTxt
argument_list|,
name|saveDesc
argument_list|)
expr_stmt|;
block|}
DECL|method|initGroupType ()
specifier|private
name|void
name|initGroupType
parameter_list|()
block|{
name|typeSystem
operator|=
operator|new
name|Label
argument_list|(
name|Util
operator|.
name|C
operator|.
name|groupType_SYSTEM
argument_list|()
argument_list|)
expr_stmt|;
name|typeSelect
operator|=
operator|new
name|ListBox
argument_list|()
expr_stmt|;
name|typeSelect
operator|.
name|addItem
argument_list|(
name|Util
operator|.
name|C
operator|.
name|groupType_INTERNAL
argument_list|()
argument_list|,
name|AccountGroup
operator|.
name|Type
operator|.
name|INTERNAL
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|typeSelect
operator|.
name|addItem
argument_list|(
name|Util
operator|.
name|C
operator|.
name|groupType_LDAP
argument_list|()
argument_list|,
name|AccountGroup
operator|.
name|Type
operator|.
name|LDAP
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|typeSelect
operator|.
name|addChangeHandler
argument_list|(
operator|new
name|ChangeHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onChange
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|saveType
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|saveType
operator|=
operator|new
name|Button
argument_list|(
name|Util
operator|.
name|C
operator|.
name|buttonChangeGroupType
argument_list|()
argument_list|)
expr_stmt|;
name|saveType
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|saveType
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|onSaveType
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
specifier|final
name|VerticalPanel
name|fp
init|=
operator|new
name|VerticalPanel
argument_list|()
decl_stmt|;
name|fp
operator|.
name|add
argument_list|(
operator|new
name|SmallHeading
argument_list|(
name|Util
operator|.
name|C
operator|.
name|headingGroupType
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|fp
operator|.
name|add
argument_list|(
name|typeSystem
argument_list|)
expr_stmt|;
name|fp
operator|.
name|add
argument_list|(
name|typeSelect
argument_list|)
expr_stmt|;
name|fp
operator|.
name|add
argument_list|(
name|saveType
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|fp
argument_list|)
expr_stmt|;
block|}
DECL|method|initMemberList ()
specifier|private
name|void
name|initMemberList
parameter_list|()
block|{
name|addMemberBox
operator|=
operator|new
name|AddMemberBox
argument_list|()
expr_stmt|;
name|addMemberBox
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
specifier|final
name|ClickEvent
name|event
parameter_list|)
block|{
name|doAddNew
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|members
operator|=
operator|new
name|MemberTable
argument_list|()
expr_stmt|;
name|delMember
operator|=
operator|new
name|Button
argument_list|(
name|Util
operator|.
name|C
operator|.
name|buttonDeleteGroupMembers
argument_list|()
argument_list|)
expr_stmt|;
name|delMember
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
specifier|final
name|ClickEvent
name|event
parameter_list|)
block|{
name|members
operator|.
name|deleteChecked
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|memberPanel
operator|=
operator|new
name|FlowPanel
argument_list|()
expr_stmt|;
name|memberPanel
operator|.
name|add
argument_list|(
operator|new
name|SmallHeading
argument_list|(
name|Util
operator|.
name|C
operator|.
name|headingMembers
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|memberPanel
operator|.
name|add
argument_list|(
name|addMemberBox
argument_list|)
expr_stmt|;
name|memberPanel
operator|.
name|add
argument_list|(
name|members
argument_list|)
expr_stmt|;
name|memberPanel
operator|.
name|add
argument_list|(
name|delMember
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|memberPanel
argument_list|)
expr_stmt|;
block|}
DECL|method|initExternal ()
specifier|private
name|void
name|initExternal
parameter_list|()
block|{
name|externalName
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|externalNameFilter
operator|=
operator|new
name|NpTextBox
argument_list|()
expr_stmt|;
name|externalNameFilter
operator|.
name|setVisibleLength
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|externalNameFilter
operator|.
name|addKeyPressHandler
argument_list|(
operator|new
name|KeyPressHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onKeyPress
parameter_list|(
specifier|final
name|KeyPressEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getCharCode
argument_list|()
operator|==
name|KeyCodes
operator|.
name|KEY_ENTER
condition|)
block|{
name|doExternalSearch
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|externalNameSearch
operator|=
operator|new
name|Button
argument_list|(
name|Gerrit
operator|.
name|C
operator|.
name|searchButton
argument_list|()
argument_list|)
expr_stmt|;
name|externalNameSearch
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|doExternalSearch
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|externalMatches
operator|=
operator|new
name|Grid
argument_list|()
expr_stmt|;
name|externalMatches
operator|.
name|setStyleName
argument_list|(
literal|"gerrit-InfoTable"
argument_list|)
expr_stmt|;
name|externalMatches
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
specifier|final
name|FlowPanel
name|searchLine
init|=
operator|new
name|FlowPanel
argument_list|()
decl_stmt|;
name|searchLine
operator|.
name|add
argument_list|(
name|externalNameFilter
argument_list|)
expr_stmt|;
name|searchLine
operator|.
name|add
argument_list|(
name|externalNameSearch
argument_list|)
expr_stmt|;
name|externalPanel
operator|=
operator|new
name|VerticalPanel
argument_list|()
expr_stmt|;
name|externalPanel
operator|.
name|add
argument_list|(
operator|new
name|SmallHeading
argument_list|(
name|Util
operator|.
name|C
operator|.
name|headingExternalGroup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|externalPanel
operator|.
name|add
argument_list|(
name|externalName
argument_list|)
expr_stmt|;
name|externalPanel
operator|.
name|add
argument_list|(
name|searchLine
argument_list|)
expr_stmt|;
name|externalPanel
operator|.
name|add
argument_list|(
name|externalMatches
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|externalPanel
argument_list|)
expr_stmt|;
block|}
DECL|method|setType (final AccountGroup.Type newType)
specifier|private
name|void
name|setType
parameter_list|(
specifier|final
name|AccountGroup
operator|.
name|Type
name|newType
parameter_list|)
block|{
specifier|final
name|boolean
name|system
init|=
name|newType
operator|==
name|AccountGroup
operator|.
name|Type
operator|.
name|SYSTEM
decl_stmt|;
name|typeSystem
operator|.
name|setVisible
argument_list|(
name|system
argument_list|)
expr_stmt|;
name|typeSelect
operator|.
name|setVisible
argument_list|(
operator|!
name|system
argument_list|)
expr_stmt|;
name|saveType
operator|.
name|setVisible
argument_list|(
operator|!
name|system
argument_list|)
expr_stmt|;
name|memberPanel
operator|.
name|setVisible
argument_list|(
name|newType
operator|==
name|AccountGroup
operator|.
name|Type
operator|.
name|INTERNAL
argument_list|)
expr_stmt|;
name|externalPanel
operator|.
name|setVisible
argument_list|(
name|newType
operator|==
name|AccountGroup
operator|.
name|Type
operator|.
name|LDAP
argument_list|)
expr_stmt|;
name|externalNameFilter
operator|.
name|setText
argument_list|(
name|groupNameTxt
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|system
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|typeSelect
operator|.
name|getItemCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|newType
operator|.
name|name
argument_list|()
operator|.
name|equals
argument_list|(
name|typeSelect
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
argument_list|)
condition|)
block|{
name|typeSelect
operator|.
name|setSelectedIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
name|saveType
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|onSaveType ()
specifier|private
name|void
name|onSaveType
parameter_list|()
block|{
specifier|final
name|int
name|idx
init|=
name|typeSelect
operator|.
name|getSelectedIndex
argument_list|()
decl_stmt|;
specifier|final
name|AccountGroup
operator|.
name|Type
name|newType
init|=
name|AccountGroup
operator|.
name|Type
operator|.
name|valueOf
argument_list|(
name|typeSelect
operator|.
name|getValue
argument_list|(
name|idx
argument_list|)
argument_list|)
decl_stmt|;
name|typeSelect
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|saveType
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Util
operator|.
name|GROUP_SVC
operator|.
name|changeGroupType
argument_list|(
name|groupId
argument_list|,
name|newType
argument_list|,
operator|new
name|GerritCallback
argument_list|<
name|VoidResult
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|VoidResult
name|result
parameter_list|)
block|{
name|typeSelect
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setType
argument_list|(
name|newType
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|typeSelect
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|saveType
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|super
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|doExternalSearch ()
specifier|private
name|void
name|doExternalSearch
parameter_list|()
block|{
name|externalNameFilter
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|externalNameSearch
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Util
operator|.
name|GROUP_SVC
operator|.
name|searchExternalGroups
argument_list|(
name|externalNameFilter
operator|.
name|getText
argument_list|()
argument_list|,
operator|new
name|GerritCallback
argument_list|<
name|List
argument_list|<
name|AccountGroup
operator|.
name|ExternalNameKey
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|List
argument_list|<
name|AccountGroup
operator|.
name|ExternalNameKey
argument_list|>
name|result
parameter_list|)
block|{
specifier|final
name|CellFormatter
name|fmt
init|=
name|externalMatches
operator|.
name|getCellFormatter
argument_list|()
decl_stmt|;
if|if
condition|(
name|result
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|externalMatches
operator|.
name|resize
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|externalMatches
operator|.
name|setText
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|Util
operator|.
name|C
operator|.
name|errorNoMatchingGroups
argument_list|()
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setStyleName
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|"header"
argument_list|)
expr_stmt|;
return|return;
block|}
name|externalMatches
operator|.
name|resize
argument_list|(
literal|1
operator|+
name|result
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|externalMatches
operator|.
name|setText
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|Util
operator|.
name|C
operator|.
name|columnGroupName
argument_list|()
argument_list|)
expr_stmt|;
name|externalMatches
operator|.
name|setText
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setStyleName
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|"header"
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setStyleName
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|"header"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
name|result
operator|.
name|size
argument_list|()
condition|;
name|row
operator|++
control|)
block|{
specifier|final
name|AccountGroup
operator|.
name|ExternalNameKey
name|key
init|=
name|result
operator|.
name|get
argument_list|(
name|row
argument_list|)
decl_stmt|;
specifier|final
name|Button
name|b
init|=
operator|new
name|Button
argument_list|(
name|Util
operator|.
name|C
operator|.
name|buttonSelectGroup
argument_list|()
argument_list|)
decl_stmt|;
name|b
operator|.
name|addClickHandler
argument_list|(
operator|new
name|ClickHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onClick
parameter_list|(
name|ClickEvent
name|event
parameter_list|)
block|{
name|setExternalGroup
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|externalMatches
operator|.
name|setText
argument_list|(
literal|1
operator|+
name|row
argument_list|,
literal|0
argument_list|,
name|key
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|externalMatches
operator|.
name|setWidget
argument_list|(
literal|1
operator|+
name|row
argument_list|,
literal|1
argument_list|,
name|b
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setStyleName
argument_list|(
literal|1
operator|+
name|row
argument_list|,
literal|1
argument_list|,
literal|"rightmost"
argument_list|)
expr_stmt|;
block|}
name|externalMatches
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|externalNameFilter
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|externalNameSearch
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|externalNameFilter
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|externalNameSearch
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|super
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|setExternalGroup (final AccountGroup.ExternalNameKey key)
specifier|private
name|void
name|setExternalGroup
parameter_list|(
specifier|final
name|AccountGroup
operator|.
name|ExternalNameKey
name|key
parameter_list|)
block|{
name|externalMatches
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Util
operator|.
name|GROUP_SVC
operator|.
name|changeExternalGroup
argument_list|(
name|groupId
argument_list|,
name|key
argument_list|,
operator|new
name|GerritCallback
argument_list|<
name|VoidResult
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|onSuccess
parameter_list|(
name|VoidResult
name|result
parameter_list|)
block|{
name|externalName
operator|.
name|setText
argument_list|(
name|key
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
name|Throwable
name|caught
parameter_list|)
block|{
name|externalMatches
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|super
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|display (final GroupDetail result)
specifier|private
name|void
name|display
parameter_list|(
specifier|final
name|GroupDetail
name|result
parameter_list|)
block|{
specifier|final
name|AccountGroup
name|group
init|=
name|result
operator|.
name|group
decl_stmt|;
name|setPageTitle
argument_list|(
name|Util
operator|.
name|M
operator|.
name|group
argument_list|(
name|group
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|groupNameTxt
operator|.
name|setText
argument_list|(
name|group
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|ownerGroup
operator|!=
literal|null
condition|)
block|{
name|ownerTxt
operator|.
name|setText
argument_list|(
name|result
operator|.
name|ownerGroup
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ownerTxt
operator|.
name|setText
argument_list|(
name|Util
operator|.
name|M
operator|.
name|deletedGroup
argument_list|(
name|group
operator|.
name|getOwnerGroupId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|descTxt
operator|.
name|setText
argument_list|(
name|group
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|group
operator|.
name|getType
argument_list|()
condition|)
block|{
case|case
name|INTERNAL
case|:
name|accounts
operator|=
name|result
operator|.
name|accounts
expr_stmt|;
name|members
operator|.
name|display
argument_list|(
name|result
operator|.
name|members
argument_list|)
expr_stmt|;
break|break;
case|case
name|LDAP
case|:
name|externalName
operator|.
name|setText
argument_list|(
name|group
operator|.
name|getExternalNameKey
argument_list|()
operator|!=
literal|null
condition|?
name|group
operator|.
name|getExternalNameKey
argument_list|()
operator|.
name|get
argument_list|()
else|:
name|Util
operator|.
name|C
operator|.
name|noGroupSelected
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
name|setType
argument_list|(
name|group
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|doAddNew ()
name|void
name|doAddNew
parameter_list|()
block|{
specifier|final
name|String
name|nameEmail
init|=
name|addMemberBox
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
name|nameEmail
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return;
block|}
name|addMemberBox
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Util
operator|.
name|GROUP_SVC
operator|.
name|addGroupMember
argument_list|(
name|groupId
argument_list|,
name|nameEmail
argument_list|,
operator|new
name|GerritCallback
argument_list|<
name|GroupDetail
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|(
specifier|final
name|GroupDetail
name|result
parameter_list|)
block|{
name|addMemberBox
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|addMemberBox
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
if|if
condition|(
name|result
operator|.
name|accounts
operator|!=
literal|null
operator|&&
name|result
operator|.
name|members
operator|!=
literal|null
condition|)
block|{
name|accounts
operator|.
name|merge
argument_list|(
name|result
operator|.
name|accounts
argument_list|)
expr_stmt|;
name|members
operator|.
name|display
argument_list|(
name|result
operator|.
name|members
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFailure
parameter_list|(
specifier|final
name|Throwable
name|caught
parameter_list|)
block|{
name|addMemberBox
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|super
operator|.
name|onFailure
argument_list|(
name|caught
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|class|MemberTable
specifier|private
class|class
name|MemberTable
extends|extends
name|FancyFlexTable
argument_list|<
name|AccountGroupMember
argument_list|>
block|{
DECL|method|MemberTable ()
name|MemberTable
parameter_list|()
block|{
name|table
operator|.
name|setText
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|Util
operator|.
name|C
operator|.
name|columnMember
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|setText
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
name|Util
operator|.
name|C
operator|.
name|columnEmailAddress
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|FlexCellFormatter
name|fmt
init|=
name|table
operator|.
name|getFlexCellFormatter
argument_list|()
decl_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
name|S_ICON_HEADER
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
name|S_DATA_HEADER
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
name|S_DATA_HEADER
argument_list|)
expr_stmt|;
block|}
DECL|method|deleteChecked ()
name|void
name|deleteChecked
parameter_list|()
block|{
specifier|final
name|HashSet
argument_list|<
name|AccountGroupMember
operator|.
name|Key
argument_list|>
name|ids
init|=
operator|new
name|HashSet
argument_list|<
name|AccountGroupMember
operator|.
name|Key
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|row
init|=
literal|1
init|;
name|row
operator|<
name|table
operator|.
name|getRowCount
argument_list|()
condition|;
name|row
operator|++
control|)
block|{
specifier|final
name|AccountGroupMember
name|k
init|=
name|getRowItem
argument_list|(
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|k
operator|!=
literal|null
operator|&&
operator|(
operator|(
name|CheckBox
operator|)
name|table
operator|.
name|getWidget
argument_list|(
name|row
argument_list|,
literal|1
argument_list|)
operator|)
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|ids
operator|.
name|add
argument_list|(
name|k
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|ids
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Util
operator|.
name|GROUP_SVC
operator|.
name|deleteGroupMembers
argument_list|(
name|groupId
argument_list|,
name|ids
argument_list|,
operator|new
name|GerritCallback
argument_list|<
name|VoidResult
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|(
specifier|final
name|VoidResult
name|result
parameter_list|)
block|{
for|for
control|(
name|int
name|row
init|=
literal|1
init|;
name|row
operator|<
name|table
operator|.
name|getRowCount
argument_list|()
condition|;
control|)
block|{
specifier|final
name|AccountGroupMember
name|k
init|=
name|getRowItem
argument_list|(
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|k
operator|!=
literal|null
operator|&&
name|ids
operator|.
name|contains
argument_list|(
name|k
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
block|{
name|table
operator|.
name|removeRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|row
operator|++
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|insertMember (final AccountGroupMember k)
name|void
name|insertMember
parameter_list|(
specifier|final
name|AccountGroupMember
name|k
parameter_list|)
block|{
specifier|final
name|int
name|row
init|=
name|table
operator|.
name|getRowCount
argument_list|()
decl_stmt|;
name|table
operator|.
name|insertRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|applyDataRowStyle
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|populate
argument_list|(
name|row
argument_list|,
name|k
argument_list|)
expr_stmt|;
block|}
DECL|method|display (final List<AccountGroupMember> result)
name|void
name|display
parameter_list|(
specifier|final
name|List
argument_list|<
name|AccountGroupMember
argument_list|>
name|result
parameter_list|)
block|{
while|while
condition|(
literal|1
operator|<
name|table
operator|.
name|getRowCount
argument_list|()
condition|)
name|table
operator|.
name|removeRow
argument_list|(
name|table
operator|.
name|getRowCount
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
for|for
control|(
specifier|final
name|AccountGroupMember
name|k
range|:
name|result
control|)
block|{
specifier|final
name|int
name|row
init|=
name|table
operator|.
name|getRowCount
argument_list|()
decl_stmt|;
name|table
operator|.
name|insertRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|applyDataRowStyle
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|populate
argument_list|(
name|row
argument_list|,
name|k
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|populate (final int row, final AccountGroupMember k)
name|void
name|populate
parameter_list|(
specifier|final
name|int
name|row
parameter_list|,
specifier|final
name|AccountGroupMember
name|k
parameter_list|)
block|{
specifier|final
name|Account
operator|.
name|Id
name|accountId
init|=
name|k
operator|.
name|getAccountId
argument_list|()
decl_stmt|;
name|table
operator|.
name|setWidget
argument_list|(
name|row
argument_list|,
literal|1
argument_list|,
operator|new
name|CheckBox
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|setWidget
argument_list|(
name|row
argument_list|,
literal|2
argument_list|,
name|AccountDashboardLink
operator|.
name|link
argument_list|(
name|accounts
argument_list|,
name|accountId
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|setText
argument_list|(
name|row
argument_list|,
literal|3
argument_list|,
name|accounts
operator|.
name|get
argument_list|(
name|accountId
argument_list|)
operator|.
name|getPreferredEmail
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|FlexCellFormatter
name|fmt
init|=
name|table
operator|.
name|getFlexCellFormatter
argument_list|()
decl_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
name|row
argument_list|,
literal|1
argument_list|,
name|S_ICON_CELL
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
name|row
argument_list|,
literal|2
argument_list|,
name|S_DATA_CELL
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
name|row
argument_list|,
literal|3
argument_list|,
name|S_DATA_CELL
argument_list|)
expr_stmt|;
name|setRowItem
argument_list|(
name|row
argument_list|,
name|k
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

