begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2008 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.changes
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|FormatUtil
operator|.
name|mediumFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|data
operator|.
name|AccountInfoCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Branch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|AccountDashboardLink
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|ChangeLink
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|ProjectOpenLink
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Composite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlowPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Grid
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HTMLTable
operator|.
name|CellFormatter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtexpui
operator|.
name|clippy
operator|.
name|client
operator|.
name|CopyableLabel
import|;
end_import

begin_class
DECL|class|ChangeInfoBlock
specifier|public
class|class
name|ChangeInfoBlock
extends|extends
name|Composite
block|{
DECL|field|R_OWNER
specifier|private
specifier|static
specifier|final
name|int
name|R_OWNER
init|=
literal|0
decl_stmt|;
DECL|field|R_PROJECT
specifier|private
specifier|static
specifier|final
name|int
name|R_PROJECT
init|=
literal|1
decl_stmt|;
DECL|field|R_BRANCH
specifier|private
specifier|static
specifier|final
name|int
name|R_BRANCH
init|=
literal|2
decl_stmt|;
DECL|field|R_UPLOADED
specifier|private
specifier|static
specifier|final
name|int
name|R_UPLOADED
init|=
literal|3
decl_stmt|;
DECL|field|R_UPDATED
specifier|private
specifier|static
specifier|final
name|int
name|R_UPDATED
init|=
literal|4
decl_stmt|;
DECL|field|R_STATUS
specifier|private
specifier|static
specifier|final
name|int
name|R_STATUS
init|=
literal|5
decl_stmt|;
DECL|field|R_PERMALINK
specifier|private
specifier|static
specifier|final
name|int
name|R_PERMALINK
init|=
literal|6
decl_stmt|;
DECL|field|R_CNT
specifier|private
specifier|static
specifier|final
name|int
name|R_CNT
init|=
literal|7
decl_stmt|;
DECL|field|table
specifier|private
specifier|final
name|Grid
name|table
decl_stmt|;
DECL|method|ChangeInfoBlock ()
specifier|public
name|ChangeInfoBlock
parameter_list|()
block|{
name|table
operator|=
operator|new
name|Grid
argument_list|(
name|R_CNT
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|table
operator|.
name|setStyleName
argument_list|(
literal|"gerrit-InfoBlock"
argument_list|)
expr_stmt|;
name|table
operator|.
name|addStyleName
argument_list|(
literal|"gerrit-ChangeInfoBlock"
argument_list|)
expr_stmt|;
name|initRow
argument_list|(
name|R_OWNER
argument_list|,
name|Util
operator|.
name|C
operator|.
name|changeInfoBlockOwner
argument_list|()
argument_list|)
expr_stmt|;
name|initRow
argument_list|(
name|R_PROJECT
argument_list|,
name|Util
operator|.
name|C
operator|.
name|changeInfoBlockProject
argument_list|()
argument_list|)
expr_stmt|;
name|initRow
argument_list|(
name|R_BRANCH
argument_list|,
name|Util
operator|.
name|C
operator|.
name|changeInfoBlockBranch
argument_list|()
argument_list|)
expr_stmt|;
name|initRow
argument_list|(
name|R_UPLOADED
argument_list|,
name|Util
operator|.
name|C
operator|.
name|changeInfoBlockUploaded
argument_list|()
argument_list|)
expr_stmt|;
name|initRow
argument_list|(
name|R_UPDATED
argument_list|,
name|Util
operator|.
name|C
operator|.
name|changeInfoBlockUpdated
argument_list|()
argument_list|)
expr_stmt|;
name|initRow
argument_list|(
name|R_STATUS
argument_list|,
name|Util
operator|.
name|C
operator|.
name|changeInfoBlockStatus
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|CellFormatter
name|fmt
init|=
name|table
operator|.
name|getCellFormatter
argument_list|()
decl_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|"topmost"
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|"topmost"
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
name|R_CNT
operator|-
literal|2
argument_list|,
literal|0
argument_list|,
literal|"bottomheader"
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
name|R_PERMALINK
argument_list|,
literal|0
argument_list|,
literal|"permalink"
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|addStyleName
argument_list|(
name|R_PERMALINK
argument_list|,
literal|1
argument_list|,
literal|"permalink"
argument_list|)
expr_stmt|;
name|initWidget
argument_list|(
name|table
argument_list|)
expr_stmt|;
block|}
DECL|method|initRow (final int row, final String name)
specifier|private
name|void
name|initRow
parameter_list|(
specifier|final
name|int
name|row
parameter_list|,
specifier|final
name|String
name|name
parameter_list|)
block|{
name|table
operator|.
name|setText
argument_list|(
name|row
argument_list|,
literal|0
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|table
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|row
argument_list|,
literal|0
argument_list|,
literal|"header"
argument_list|)
expr_stmt|;
block|}
DECL|method|display (final Change chg, final AccountInfoCache acc)
specifier|public
name|void
name|display
parameter_list|(
specifier|final
name|Change
name|chg
parameter_list|,
specifier|final
name|AccountInfoCache
name|acc
parameter_list|)
block|{
specifier|final
name|Branch
operator|.
name|NameKey
name|dst
init|=
name|chg
operator|.
name|getDest
argument_list|()
decl_stmt|;
name|table
operator|.
name|setWidget
argument_list|(
name|R_OWNER
argument_list|,
literal|1
argument_list|,
name|AccountDashboardLink
operator|.
name|link
argument_list|(
name|acc
argument_list|,
name|chg
operator|.
name|getOwner
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|setWidget
argument_list|(
name|R_PROJECT
argument_list|,
literal|1
argument_list|,
operator|new
name|ProjectOpenLink
argument_list|(
name|dst
operator|.
name|getParentKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|setText
argument_list|(
name|R_BRANCH
argument_list|,
literal|1
argument_list|,
name|dst
operator|.
name|getShortName
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|setText
argument_list|(
name|R_UPLOADED
argument_list|,
literal|1
argument_list|,
name|mediumFormat
argument_list|(
name|chg
operator|.
name|getCreatedOn
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|setText
argument_list|(
name|R_UPDATED
argument_list|,
literal|1
argument_list|,
name|mediumFormat
argument_list|(
name|chg
operator|.
name|getLastUpdatedOn
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|setText
argument_list|(
name|R_STATUS
argument_list|,
literal|1
argument_list|,
name|Util
operator|.
name|toLongString
argument_list|(
name|chg
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|chg
operator|.
name|getStatus
argument_list|()
operator|.
name|isClosed
argument_list|()
condition|)
block|{
name|table
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|addStyleName
argument_list|(
name|R_STATUS
argument_list|,
literal|1
argument_list|,
literal|"closedstate"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|table
operator|.
name|getCellFormatter
argument_list|()
operator|.
name|removeStyleName
argument_list|(
name|R_STATUS
argument_list|,
literal|1
argument_list|,
literal|"closedstate"
argument_list|)
expr_stmt|;
block|}
specifier|final
name|FlowPanel
name|fp
init|=
operator|new
name|FlowPanel
argument_list|()
decl_stmt|;
name|fp
operator|.
name|add
argument_list|(
operator|new
name|ChangeLink
argument_list|(
name|Util
operator|.
name|C
operator|.
name|changePermalink
argument_list|()
argument_list|,
name|chg
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|fp
operator|.
name|add
argument_list|(
operator|new
name|CopyableLabel
argument_list|(
name|ChangeLink
operator|.
name|permalink
argument_list|(
name|chg
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|setWidget
argument_list|(
name|R_PERMALINK
argument_list|,
literal|1
argument_list|,
name|fp
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

