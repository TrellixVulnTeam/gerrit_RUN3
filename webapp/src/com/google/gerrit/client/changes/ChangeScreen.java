begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright 2008 Google Inc.
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.client.changes
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|changes
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|Gerrit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|data
operator|.
name|ChangeDetail
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|data
operator|.
name|ChangeInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|data
operator|.
name|GitwebLink
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|reviewdb
operator|.
name|PatchSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|rpc
operator|.
name|ScreenLoadCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|ComplexDisclosurePanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|client
operator|.
name|ui
operator|.
name|Screen
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|i18n
operator|.
name|client
operator|.
name|LocaleInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Anchor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|DisclosurePanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|FlowPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|HorizontalPanel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|ui
operator|.
name|Widget
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
DECL|class|ChangeScreen
specifier|public
class|class
name|ChangeScreen
extends|extends
name|Screen
block|{
DECL|field|changeId
specifier|private
name|Change
operator|.
name|Id
name|changeId
decl_stmt|;
DECL|field|changeInfo
specifier|private
name|ChangeInfo
name|changeInfo
decl_stmt|;
DECL|field|infoBlock
specifier|private
name|ChangeInfoBlock
name|infoBlock
decl_stmt|;
DECL|field|descriptionPanel
specifier|private
name|DisclosurePanel
name|descriptionPanel
decl_stmt|;
DECL|field|description
specifier|private
name|Label
name|description
decl_stmt|;
DECL|field|dependenciesPanel
specifier|private
name|DisclosurePanel
name|dependenciesPanel
decl_stmt|;
DECL|field|dependencies
specifier|private
name|ChangeTable
name|dependencies
decl_stmt|;
DECL|field|dependsOn
specifier|private
name|ChangeTable
operator|.
name|Section
name|dependsOn
decl_stmt|;
DECL|field|neededBy
specifier|private
name|ChangeTable
operator|.
name|Section
name|neededBy
decl_stmt|;
DECL|field|approvalsPanel
specifier|private
name|DisclosurePanel
name|approvalsPanel
decl_stmt|;
DECL|field|approvals
specifier|private
name|ApprovalTable
name|approvals
decl_stmt|;
DECL|field|patchSetPanels
specifier|private
name|List
argument_list|<
name|ComplexDisclosurePanel
argument_list|>
name|patchSetPanels
decl_stmt|;
DECL|method|ChangeScreen (final Change.Id toShow)
specifier|public
name|ChangeScreen
parameter_list|(
specifier|final
name|Change
operator|.
name|Id
name|toShow
parameter_list|)
block|{
name|changeId
operator|=
name|toShow
expr_stmt|;
block|}
DECL|method|ChangeScreen (final ChangeInfo c)
specifier|public
name|ChangeScreen
parameter_list|(
specifier|final
name|ChangeInfo
name|c
parameter_list|)
block|{
name|this
argument_list|(
name|c
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|changeInfo
operator|=
name|c
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getScreenCacheToken ()
specifier|public
name|Object
name|getScreenCacheToken
parameter_list|()
block|{
return|return
name|getClass
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|recycleThis (final Screen newScreen)
specifier|public
name|Screen
name|recycleThis
parameter_list|(
specifier|final
name|Screen
name|newScreen
parameter_list|)
block|{
specifier|final
name|ChangeScreen
name|s
init|=
operator|(
name|ChangeScreen
operator|)
name|newScreen
decl_stmt|;
name|changeId
operator|=
name|s
operator|.
name|changeId
expr_stmt|;
name|changeInfo
operator|=
name|s
operator|.
name|changeInfo
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
DECL|method|onLoad ()
specifier|public
name|void
name|onLoad
parameter_list|()
block|{
if|if
condition|(
name|descriptionPanel
operator|==
literal|null
condition|)
block|{
name|addStyleName
argument_list|(
literal|"gerrit-ChangeScreen"
argument_list|)
expr_stmt|;
name|infoBlock
operator|=
operator|new
name|ChangeInfoBlock
argument_list|()
expr_stmt|;
name|description
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|description
operator|.
name|setStyleName
argument_list|(
literal|"gerrit-ChangeScreen-Description"
argument_list|)
expr_stmt|;
name|descriptionPanel
operator|=
operator|new
name|DisclosurePanel
argument_list|(
name|Util
operator|.
name|C
operator|.
name|changeScreenDescription
argument_list|()
argument_list|)
expr_stmt|;
block|{
specifier|final
name|Label
name|glue
init|=
operator|new
name|Label
argument_list|()
decl_stmt|;
specifier|final
name|HorizontalPanel
name|hp
init|=
operator|new
name|HorizontalPanel
argument_list|()
decl_stmt|;
name|hp
operator|.
name|add
argument_list|(
name|description
argument_list|)
expr_stmt|;
name|hp
operator|.
name|add
argument_list|(
name|glue
argument_list|)
expr_stmt|;
name|hp
operator|.
name|add
argument_list|(
name|infoBlock
argument_list|)
expr_stmt|;
name|hp
operator|.
name|setCellWidth
argument_list|(
name|glue
argument_list|,
literal|"100%"
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|hp
argument_list|)
expr_stmt|;
name|descriptionPanel
operator|.
name|setContent
argument_list|(
name|hp
argument_list|)
expr_stmt|;
name|descriptionPanel
operator|.
name|setWidth
argument_list|(
literal|"100%"
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|descriptionPanel
argument_list|)
expr_stmt|;
block|}
name|dependencies
operator|=
operator|new
name|ChangeTable
argument_list|()
expr_stmt|;
name|dependsOn
operator|=
operator|new
name|ChangeTable
operator|.
name|Section
argument_list|(
name|Util
operator|.
name|C
operator|.
name|changeScreenDependsOn
argument_list|()
argument_list|)
expr_stmt|;
name|neededBy
operator|=
operator|new
name|ChangeTable
operator|.
name|Section
argument_list|(
name|Util
operator|.
name|C
operator|.
name|changeScreenNeededBy
argument_list|()
argument_list|)
expr_stmt|;
name|dependencies
operator|.
name|addSection
argument_list|(
name|dependsOn
argument_list|)
expr_stmt|;
name|dependencies
operator|.
name|addSection
argument_list|(
name|neededBy
argument_list|)
expr_stmt|;
name|dependenciesPanel
operator|=
operator|new
name|DisclosurePanel
argument_list|(
name|Util
operator|.
name|C
operator|.
name|changeScreenDependencies
argument_list|()
argument_list|)
expr_stmt|;
name|dependenciesPanel
operator|.
name|setContent
argument_list|(
name|dependencies
argument_list|)
expr_stmt|;
name|dependenciesPanel
operator|.
name|setWidth
argument_list|(
literal|"95%"
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|dependenciesPanel
argument_list|)
expr_stmt|;
name|approvals
operator|=
operator|new
name|ApprovalTable
argument_list|()
expr_stmt|;
name|approvalsPanel
operator|=
operator|new
name|DisclosurePanel
argument_list|(
name|Util
operator|.
name|C
operator|.
name|changeScreenApprovals
argument_list|()
argument_list|)
expr_stmt|;
name|approvalsPanel
operator|.
name|setContent
argument_list|(
name|wrap
argument_list|(
name|approvals
argument_list|)
argument_list|)
expr_stmt|;
name|dependenciesPanel
operator|.
name|setWidth
argument_list|(
literal|"95%"
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|approvalsPanel
argument_list|)
expr_stmt|;
name|patchSetPanels
operator|=
operator|new
name|ArrayList
argument_list|<
name|ComplexDisclosurePanel
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|displayTitle
argument_list|(
name|changeInfo
operator|!=
literal|null
condition|?
name|changeInfo
operator|.
name|getSubject
argument_list|()
else|:
literal|null
argument_list|)
expr_stmt|;
name|super
operator|.
name|onLoad
argument_list|()
expr_stmt|;
name|Util
operator|.
name|DETAIL_SVC
operator|.
name|changeDetail
argument_list|(
name|changeId
argument_list|,
operator|new
name|ScreenLoadCallback
argument_list|<
name|ChangeDetail
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|onSuccess
parameter_list|(
specifier|final
name|ChangeDetail
name|r
parameter_list|)
block|{
comment|// TODO Actually we want to cancel the RPC if detached.
if|if
condition|(
name|isAttached
argument_list|()
condition|)
block|{
name|display
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|displayTitle (final String subject)
specifier|private
name|void
name|displayTitle
parameter_list|(
specifier|final
name|String
name|subject
parameter_list|)
block|{
specifier|final
name|StringBuffer
name|titleBuf
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
if|if
condition|(
name|LocaleInfo
operator|.
name|getCurrentLocale
argument_list|()
operator|.
name|isRTL
argument_list|()
condition|)
block|{
if|if
condition|(
name|subject
operator|!=
literal|null
condition|)
block|{
name|titleBuf
operator|.
name|append
argument_list|(
name|subject
argument_list|)
expr_stmt|;
name|titleBuf
operator|.
name|append
argument_list|(
literal|" :"
argument_list|)
expr_stmt|;
block|}
name|titleBuf
operator|.
name|append
argument_list|(
name|Util
operator|.
name|M
operator|.
name|changeScreenTitleId
argument_list|(
name|changeId
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|titleBuf
operator|.
name|append
argument_list|(
name|Util
operator|.
name|M
operator|.
name|changeScreenTitleId
argument_list|(
name|changeId
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|subject
operator|!=
literal|null
condition|)
block|{
name|titleBuf
operator|.
name|append
argument_list|(
literal|": "
argument_list|)
expr_stmt|;
name|titleBuf
operator|.
name|append
argument_list|(
name|subject
argument_list|)
expr_stmt|;
block|}
block|}
name|setTitleText
argument_list|(
name|titleBuf
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|display (final ChangeDetail detail)
specifier|private
name|void
name|display
parameter_list|(
specifier|final
name|ChangeDetail
name|detail
parameter_list|)
block|{
if|if
condition|(
name|changeInfo
operator|==
literal|null
condition|)
block|{
comment|// We couldn't set the title correctly when we loaded the page
comment|// into the browser, update it now that we have the full detail.
comment|//
name|displayTitle
argument_list|(
name|detail
operator|.
name|getChange
argument_list|()
operator|.
name|getSubject
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|infoBlock
operator|.
name|display
argument_list|(
name|detail
argument_list|)
expr_stmt|;
name|description
operator|.
name|setText
argument_list|(
name|detail
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
name|dependsOn
operator|.
name|display
argument_list|(
name|detail
operator|.
name|getDependsOn
argument_list|()
argument_list|)
expr_stmt|;
name|neededBy
operator|.
name|display
argument_list|(
name|detail
operator|.
name|getNeededBy
argument_list|()
argument_list|)
expr_stmt|;
name|approvals
operator|.
name|display
argument_list|(
name|detail
operator|.
name|getApprovals
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|PatchSet
name|currps
init|=
name|detail
operator|.
name|getCurrentPatchSet
argument_list|()
decl_stmt|;
for|for
control|(
specifier|final
name|ComplexDisclosurePanel
name|p
range|:
name|patchSetPanels
control|)
block|{
name|remove
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
name|patchSetPanels
operator|.
name|clear
argument_list|()
expr_stmt|;
specifier|final
name|GitwebLink
name|gw
init|=
name|Gerrit
operator|.
name|getGerritConfig
argument_list|()
operator|.
name|getGitwebLink
argument_list|()
decl_stmt|;
for|for
control|(
specifier|final
name|PatchSet
name|ps
range|:
name|detail
operator|.
name|getPatchSets
argument_list|()
control|)
block|{
specifier|final
name|ComplexDisclosurePanel
name|panel
init|=
operator|new
name|ComplexDisclosurePanel
argument_list|(
name|Util
operator|.
name|M
operator|.
name|patchSetHeader
argument_list|(
name|ps
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
name|ps
operator|==
name|currps
argument_list|)
decl_stmt|;
specifier|final
name|PatchSetPanel
name|psp
init|=
operator|new
name|PatchSetPanel
argument_list|(
name|detail
argument_list|,
name|ps
argument_list|)
decl_stmt|;
name|panel
operator|.
name|setContent
argument_list|(
name|psp
argument_list|)
expr_stmt|;
if|if
condition|(
name|gw
operator|!=
literal|null
condition|)
block|{
specifier|final
name|Anchor
name|revlink
init|=
operator|new
name|Anchor
argument_list|(
name|ps
operator|.
name|getRevision
argument_list|()
argument_list|,
literal|false
argument_list|,
name|gw
operator|.
name|toRevision
argument_list|(
name|detail
operator|.
name|getChange
argument_list|()
operator|.
name|getDest
argument_list|()
operator|.
name|getParentKey
argument_list|()
argument_list|,
name|ps
argument_list|)
argument_list|)
decl_stmt|;
name|panel
operator|.
name|getHeader
argument_list|()
operator|.
name|add
argument_list|(
name|revlink
argument_list|)
expr_stmt|;
name|panel
operator|.
name|getHeader
argument_list|()
operator|.
name|addStyleName
argument_list|(
literal|"gerrit-PatchSetLink"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|ps
operator|==
name|currps
condition|)
block|{
name|psp
operator|.
name|ensureLoaded
argument_list|(
name|detail
operator|.
name|getCurrentPatchSetDetail
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|panel
operator|.
name|addEventHandler
argument_list|(
name|psp
argument_list|)
expr_stmt|;
block|}
name|add
argument_list|(
name|panel
argument_list|)
expr_stmt|;
name|patchSetPanels
operator|.
name|add
argument_list|(
name|panel
argument_list|)
expr_stmt|;
block|}
name|descriptionPanel
operator|.
name|setOpen
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|approvalsPanel
operator|.
name|setOpen
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|wrap (final Widget w)
specifier|private
specifier|static
name|FlowPanel
name|wrap
parameter_list|(
specifier|final
name|Widget
name|w
parameter_list|)
block|{
specifier|final
name|FlowPanel
name|p
init|=
operator|new
name|FlowPanel
argument_list|()
decl_stmt|;
name|p
operator|.
name|add
argument_list|(
name|w
argument_list|)
expr_stmt|;
return|return
name|p
return|;
block|}
block|}
end_class

end_unit

