begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2015 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.httpd.restapi
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|httpd
operator|.
name|restapi
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|httpd
operator|.
name|restapi
operator|.
name|RestApiServlet
operator|.
name|ViewData
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|metrics
operator|.
name|Counter1
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|metrics
operator|.
name|Counter2
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|metrics
operator|.
name|Description
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|metrics
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|metrics
operator|.
name|MetricMaker
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|metrics
operator|.
name|Timer1
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|metrics
operator|.
name|Description
operator|.
name|Units
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Singleton
import|;
end_import

begin_class
annotation|@
name|Singleton
DECL|class|RestApiMetrics
specifier|public
class|class
name|RestApiMetrics
block|{
DECL|field|PKGS
specifier|private
specifier|static
specifier|final
name|String
index|[]
name|PKGS
init|=
block|{
literal|"com.google.gerrit.server."
block|,
literal|"com.google.gerrit."
block|,   }
decl_stmt|;
DECL|field|count
specifier|final
name|Counter1
argument_list|<
name|String
argument_list|>
name|count
decl_stmt|;
DECL|field|errorCount
specifier|final
name|Counter2
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|errorCount
decl_stmt|;
DECL|field|serverLatency
specifier|final
name|Timer1
argument_list|<
name|String
argument_list|>
name|serverLatency
decl_stmt|;
annotation|@
name|Inject
DECL|method|RestApiMetrics (MetricMaker metrics)
name|RestApiMetrics
parameter_list|(
name|MetricMaker
name|metrics
parameter_list|)
block|{
name|Field
argument_list|<
name|String
argument_list|>
name|view
init|=
name|Field
operator|.
name|ofString
argument_list|(
literal|"view"
argument_list|,
literal|"view implementation class"
argument_list|)
decl_stmt|;
name|count
operator|=
name|metrics
operator|.
name|newCounter
argument_list|(
literal|"http/server/rest_api/count"
argument_list|,
operator|new
name|Description
argument_list|(
literal|"REST API calls by view"
argument_list|)
operator|.
name|setRate
argument_list|()
argument_list|,
name|view
argument_list|)
expr_stmt|;
name|errorCount
operator|=
name|metrics
operator|.
name|newCounter
argument_list|(
literal|"http/server/rest_api/error_count"
argument_list|,
operator|new
name|Description
argument_list|(
literal|"REST API calls by view"
argument_list|)
operator|.
name|setRate
argument_list|()
argument_list|,
name|view
argument_list|,
name|Field
operator|.
name|ofInteger
argument_list|(
literal|"error_code"
argument_list|,
literal|"HTTP status code"
argument_list|)
argument_list|)
expr_stmt|;
name|serverLatency
operator|=
name|metrics
operator|.
name|newTimer
argument_list|(
literal|"http/server/rest_api/server_latency"
argument_list|,
operator|new
name|Description
argument_list|(
literal|"REST API call latency by view"
argument_list|)
operator|.
name|setCumulative
argument_list|()
operator|.
name|setUnit
argument_list|(
name|Units
operator|.
name|MILLISECONDS
argument_list|)
argument_list|,
name|view
argument_list|)
expr_stmt|;
block|}
DECL|method|view (ViewData viewData)
name|String
name|view
parameter_list|(
name|ViewData
name|viewData
parameter_list|)
block|{
name|String
name|impl
init|=
name|viewData
operator|.
name|view
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|replace
argument_list|(
literal|'$'
argument_list|,
literal|'.'
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|p
range|:
name|PKGS
control|)
block|{
if|if
condition|(
name|impl
operator|.
name|startsWith
argument_list|(
name|p
argument_list|)
condition|)
block|{
name|impl
operator|=
name|impl
operator|.
name|substring
argument_list|(
name|p
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
operator|!
name|Strings
operator|.
name|isNullOrEmpty
argument_list|(
name|viewData
operator|.
name|pluginName
argument_list|)
operator|&&
operator|!
literal|"gerrit"
operator|.
name|equals
argument_list|(
name|viewData
operator|.
name|pluginName
argument_list|)
condition|)
block|{
name|impl
operator|=
name|viewData
operator|.
name|pluginName
operator|+
literal|'-'
operator|+
name|impl
expr_stmt|;
block|}
return|return
name|impl
return|;
block|}
block|}
end_class

end_unit

