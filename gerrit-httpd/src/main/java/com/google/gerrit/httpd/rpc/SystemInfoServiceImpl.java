begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2008 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.httpd.rpc
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|httpd
operator|.
name|rpc
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|ContributorAgreement
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|GerritConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|SshHostKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|SystemInfoService
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ProjectCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|ssh
operator|.
name|SshInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtjsonrpc
operator|.
name|common
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtjsonrpc
operator|.
name|common
operator|.
name|VoidResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jcraft
operator|.
name|jsch
operator|.
name|HostKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jcraft
operator|.
name|jsch
operator|.
name|JSch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_class
DECL|class|SystemInfoServiceImpl
class|class
name|SystemInfoServiceImpl
implements|implements
name|SystemInfoService
block|{
DECL|field|log
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|SystemInfoServiceImpl
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|JSCH
specifier|private
specifier|static
specifier|final
name|JSch
name|JSCH
init|=
operator|new
name|JSch
argument_list|()
decl_stmt|;
DECL|field|hostKeys
specifier|private
specifier|final
name|List
argument_list|<
name|HostKey
argument_list|>
name|hostKeys
decl_stmt|;
DECL|field|httpRequest
specifier|private
specifier|final
name|Provider
argument_list|<
name|HttpServletRequest
argument_list|>
name|httpRequest
decl_stmt|;
DECL|field|config
specifier|private
specifier|final
name|Provider
argument_list|<
name|GerritConfig
argument_list|>
name|config
decl_stmt|;
DECL|field|projectCache
specifier|private
specifier|final
name|ProjectCache
name|projectCache
decl_stmt|;
annotation|@
name|Inject
DECL|method|SystemInfoServiceImpl (final SshInfo daemon, final Provider<HttpServletRequest> hsr, final Provider<GerritConfig> cfg, final ProjectCache pc)
name|SystemInfoServiceImpl
parameter_list|(
specifier|final
name|SshInfo
name|daemon
parameter_list|,
specifier|final
name|Provider
argument_list|<
name|HttpServletRequest
argument_list|>
name|hsr
parameter_list|,
specifier|final
name|Provider
argument_list|<
name|GerritConfig
argument_list|>
name|cfg
parameter_list|,
specifier|final
name|ProjectCache
name|pc
parameter_list|)
block|{
name|hostKeys
operator|=
name|daemon
operator|.
name|getHostKeys
argument_list|()
expr_stmt|;
name|httpRequest
operator|=
name|hsr
expr_stmt|;
name|config
operator|=
name|cfg
expr_stmt|;
name|projectCache
operator|=
name|pc
expr_stmt|;
block|}
DECL|method|contributorAgreements ( final AsyncCallback<List<ContributorAgreement>> callback)
specifier|public
name|void
name|contributorAgreements
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|ContributorAgreement
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
name|Collection
argument_list|<
name|ContributorAgreement
argument_list|>
name|agreements
init|=
name|projectCache
operator|.
name|getAllProjects
argument_list|()
operator|.
name|getConfig
argument_list|()
operator|.
name|getContributorAgreements
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|ContributorAgreement
argument_list|>
name|cas
init|=
name|Lists
operator|.
name|newArrayListWithCapacity
argument_list|(
name|agreements
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|ContributorAgreement
name|ca
range|:
name|agreements
control|)
block|{
name|cas
operator|.
name|add
argument_list|(
name|ca
operator|.
name|forUi
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
name|cas
argument_list|)
expr_stmt|;
block|}
DECL|method|daemonHostKeys (final AsyncCallback<List<SshHostKey>> callback)
specifier|public
name|void
name|daemonHostKeys
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|SshHostKey
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
specifier|final
name|ArrayList
argument_list|<
name|SshHostKey
argument_list|>
name|r
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|hostKeys
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
specifier|final
name|HostKey
name|hk
range|:
name|hostKeys
control|)
block|{
name|String
name|host
init|=
name|hk
operator|.
name|getHost
argument_list|()
decl_stmt|;
if|if
condition|(
name|host
operator|.
name|startsWith
argument_list|(
literal|"*:"
argument_list|)
condition|)
block|{
specifier|final
name|String
name|port
init|=
name|host
operator|.
name|substring
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|host
operator|=
literal|"["
operator|+
name|httpRequest
operator|.
name|get
argument_list|()
operator|.
name|getServerName
argument_list|()
operator|+
literal|"]:"
operator|+
name|port
expr_stmt|;
block|}
specifier|final
name|String
name|fp
init|=
name|hk
operator|.
name|getFingerPrint
argument_list|(
name|JSCH
argument_list|)
decl_stmt|;
name|r
operator|.
name|add
argument_list|(
operator|new
name|SshHostKey
argument_list|(
name|host
argument_list|,
name|hk
operator|.
name|getType
argument_list|()
operator|+
literal|" "
operator|+
name|hk
operator|.
name|getKey
argument_list|()
argument_list|,
name|fp
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|clientError (String message, AsyncCallback<VoidResult> callback)
specifier|public
name|void
name|clientError
parameter_list|(
name|String
name|message
parameter_list|,
name|AsyncCallback
argument_list|<
name|VoidResult
argument_list|>
name|callback
parameter_list|)
block|{
name|HttpServletRequest
name|r
init|=
name|httpRequest
operator|.
name|get
argument_list|()
decl_stmt|;
name|String
name|ua
init|=
name|r
operator|.
name|getHeader
argument_list|(
literal|"User-Agent"
argument_list|)
decl_stmt|;
name|message
operator|=
name|message
operator|.
name|replaceAll
argument_list|(
literal|"\n"
argument_list|,
literal|"\n  "
argument_list|)
expr_stmt|;
name|log
operator|.
name|error
argument_list|(
literal|"Client UI JavaScript error: User-Agent="
operator|+
name|ua
operator|+
literal|": "
operator|+
name|message
argument_list|)
expr_stmt|;
name|callback
operator|.
name|onSuccess
argument_list|(
name|VoidResult
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|gerritConfig (final AsyncCallback<GerritConfig> callback)
specifier|public
name|void
name|gerritConfig
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|GerritConfig
argument_list|>
name|callback
parameter_list|)
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
name|config
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

