begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2008 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.httpd.rpc
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|httpd
operator|.
name|rpc
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|SshHostKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|SystemInfoService
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|ContributorAgreement
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|ssh
operator|.
name|SshInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwt
operator|.
name|user
operator|.
name|client
operator|.
name|rpc
operator|.
name|AsyncCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|client
operator|.
name|SchemaFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jcraft
operator|.
name|jsch
operator|.
name|HostKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jcraft
operator|.
name|jsch
operator|.
name|JSch
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_class
DECL|class|SystemInfoServiceImpl
class|class
name|SystemInfoServiceImpl
implements|implements
name|SystemInfoService
block|{
DECL|field|JSCH
specifier|private
specifier|static
specifier|final
name|JSch
name|JSCH
init|=
operator|new
name|JSch
argument_list|()
decl_stmt|;
DECL|field|schema
specifier|private
specifier|final
name|SchemaFactory
argument_list|<
name|ReviewDb
argument_list|>
name|schema
decl_stmt|;
DECL|field|hostKeys
specifier|private
specifier|final
name|List
argument_list|<
name|HostKey
argument_list|>
name|hostKeys
decl_stmt|;
DECL|field|httpRequest
specifier|private
specifier|final
name|Provider
argument_list|<
name|HttpServletRequest
argument_list|>
name|httpRequest
decl_stmt|;
annotation|@
name|Inject
DECL|method|SystemInfoServiceImpl (final SchemaFactory<ReviewDb> sf, final SshInfo daemon, final Provider<HttpServletRequest> hsr)
name|SystemInfoServiceImpl
parameter_list|(
specifier|final
name|SchemaFactory
argument_list|<
name|ReviewDb
argument_list|>
name|sf
parameter_list|,
specifier|final
name|SshInfo
name|daemon
parameter_list|,
specifier|final
name|Provider
argument_list|<
name|HttpServletRequest
argument_list|>
name|hsr
parameter_list|)
block|{
name|schema
operator|=
name|sf
expr_stmt|;
name|hostKeys
operator|=
name|daemon
operator|.
name|getHostKeys
argument_list|()
expr_stmt|;
name|httpRequest
operator|=
name|hsr
expr_stmt|;
block|}
DECL|method|contributorAgreements ( final AsyncCallback<List<ContributorAgreement>> callback)
specifier|public
name|void
name|contributorAgreements
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|ContributorAgreement
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
try|try
block|{
specifier|final
name|ReviewDb
name|db
init|=
name|schema
operator|.
name|open
argument_list|()
decl_stmt|;
try|try
block|{
name|callback
operator|.
name|onSuccess
argument_list|(
name|db
operator|.
name|contributorAgreements
argument_list|()
operator|.
name|active
argument_list|()
operator|.
name|toList
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|db
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|OrmException
name|e
parameter_list|)
block|{
name|callback
operator|.
name|onFailure
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|daemonHostKeys (final AsyncCallback<List<SshHostKey>> callback)
specifier|public
name|void
name|daemonHostKeys
parameter_list|(
specifier|final
name|AsyncCallback
argument_list|<
name|List
argument_list|<
name|SshHostKey
argument_list|>
argument_list|>
name|callback
parameter_list|)
block|{
specifier|final
name|ArrayList
argument_list|<
name|SshHostKey
argument_list|>
name|r
init|=
operator|new
name|ArrayList
argument_list|<
name|SshHostKey
argument_list|>
argument_list|(
name|hostKeys
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
specifier|final
name|HostKey
name|hk
range|:
name|hostKeys
control|)
block|{
name|String
name|host
init|=
name|hk
operator|.
name|getHost
argument_list|()
decl_stmt|;
if|if
condition|(
name|host
operator|.
name|startsWith
argument_list|(
literal|"*:"
argument_list|)
condition|)
block|{
specifier|final
name|String
name|port
init|=
name|host
operator|.
name|substring
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|host
operator|=
literal|"["
operator|+
name|httpRequest
operator|.
name|get
argument_list|()
operator|.
name|getServerName
argument_list|()
operator|+
literal|"]:"
operator|+
name|port
expr_stmt|;
block|}
specifier|final
name|String
name|fp
init|=
name|hk
operator|.
name|getFingerPrint
argument_list|(
name|JSCH
argument_list|)
decl_stmt|;
name|r
operator|.
name|add
argument_list|(
operator|new
name|SshHostKey
argument_list|(
name|host
argument_list|,
name|hk
operator|.
name|getType
argument_list|()
operator|+
literal|" "
operator|+
name|hk
operator|.
name|getKey
argument_list|()
argument_list|,
name|fp
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|callback
operator|.
name|onSuccess
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

