begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2015 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.httpd.raw
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|httpd
operator|.
name|raw
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
operator|.
name|UTF_8
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
operator|.
name|SC_NOT_FOUND
import|;
end_import

begin_import
import|import static
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
operator|.
name|SC_OK
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|CharMatcher
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|Cache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|cache
operator|.
name|CacheBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|ByteStreams
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|jimfs
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|jimfs
operator|.
name|Jimfs
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|httpd
operator|.
name|raw
operator|.
name|ResourceServlet
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|util
operator|.
name|http
operator|.
name|testutil
operator|.
name|FakeHttpServletRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|util
operator|.
name|http
operator|.
name|testutil
operator|.
name|FakeHttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|format
operator|.
name|ISODateTimeFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|attribute
operator|.
name|FileTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicLong
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|GZIPInputStream
import|;
end_import

begin_class
DECL|class|ResourceServletTest
specifier|public
class|class
name|ResourceServletTest
block|{
DECL|method|newCache (int size)
specifier|private
specifier|static
name|Cache
argument_list|<
name|Path
argument_list|,
name|Resource
argument_list|>
name|newCache
parameter_list|(
name|int
name|size
parameter_list|)
block|{
return|return
name|CacheBuilder
operator|.
name|newBuilder
argument_list|()
operator|.
name|maximumSize
argument_list|(
name|size
argument_list|)
operator|.
name|recordStats
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
DECL|class|Servlet
specifier|private
specifier|static
class|class
name|Servlet
extends|extends
name|ResourceServlet
block|{
DECL|field|serialVersionUID
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
DECL|field|fs
specifier|private
specifier|final
name|FileSystem
name|fs
decl_stmt|;
DECL|method|Servlet (FileSystem fs, Cache<Path, Resource> cache, boolean refresh)
specifier|private
name|Servlet
parameter_list|(
name|FileSystem
name|fs
parameter_list|,
name|Cache
argument_list|<
name|Path
argument_list|,
name|Resource
argument_list|>
name|cache
parameter_list|,
name|boolean
name|refresh
parameter_list|)
block|{
name|super
argument_list|(
name|cache
argument_list|,
name|refresh
argument_list|)
expr_stmt|;
name|this
operator|.
name|fs
operator|=
name|fs
expr_stmt|;
block|}
DECL|method|Servlet (FileSystem fs, Cache<Path, Resource> cache, boolean refresh, boolean cacheOnClient)
specifier|private
name|Servlet
parameter_list|(
name|FileSystem
name|fs
parameter_list|,
name|Cache
argument_list|<
name|Path
argument_list|,
name|Resource
argument_list|>
name|cache
parameter_list|,
name|boolean
name|refresh
parameter_list|,
name|boolean
name|cacheOnClient
parameter_list|)
block|{
name|super
argument_list|(
name|cache
argument_list|,
name|refresh
argument_list|,
name|cacheOnClient
argument_list|)
expr_stmt|;
name|this
operator|.
name|fs
operator|=
name|fs
expr_stmt|;
block|}
DECL|method|Servlet (FileSystem fs, Cache<Path, Resource> cache, boolean refresh, int cacheFileSizeLimitBytes)
specifier|private
name|Servlet
parameter_list|(
name|FileSystem
name|fs
parameter_list|,
name|Cache
argument_list|<
name|Path
argument_list|,
name|Resource
argument_list|>
name|cache
parameter_list|,
name|boolean
name|refresh
parameter_list|,
name|int
name|cacheFileSizeLimitBytes
parameter_list|)
block|{
name|super
argument_list|(
name|cache
argument_list|,
name|refresh
argument_list|,
literal|true
argument_list|,
name|cacheFileSizeLimitBytes
argument_list|)
expr_stmt|;
name|this
operator|.
name|fs
operator|=
name|fs
expr_stmt|;
block|}
DECL|method|Servlet (FileSystem fs, Cache<Path, Resource> cache, boolean refresh, boolean cacheOnClient, int cacheFileSizeLimitBytes)
specifier|private
name|Servlet
parameter_list|(
name|FileSystem
name|fs
parameter_list|,
name|Cache
argument_list|<
name|Path
argument_list|,
name|Resource
argument_list|>
name|cache
parameter_list|,
name|boolean
name|refresh
parameter_list|,
name|boolean
name|cacheOnClient
parameter_list|,
name|int
name|cacheFileSizeLimitBytes
parameter_list|)
block|{
name|super
argument_list|(
name|cache
argument_list|,
name|refresh
argument_list|,
name|cacheOnClient
argument_list|,
name|cacheFileSizeLimitBytes
argument_list|)
expr_stmt|;
name|this
operator|.
name|fs
operator|=
name|fs
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getResourcePath (String pathInfo)
specifier|protected
name|Path
name|getResourcePath
parameter_list|(
name|String
name|pathInfo
parameter_list|)
block|{
return|return
name|fs
operator|.
name|getPath
argument_list|(
literal|"/"
operator|+
name|CharMatcher
operator|.
name|is
argument_list|(
literal|'/'
argument_list|)
operator|.
name|trimLeadingFrom
argument_list|(
name|pathInfo
argument_list|)
argument_list|)
return|;
block|}
block|}
DECL|field|fs
specifier|private
name|FileSystem
name|fs
decl_stmt|;
DECL|field|ts
specifier|private
name|AtomicLong
name|ts
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|fs
operator|=
name|Jimfs
operator|.
name|newFileSystem
argument_list|(
name|Configuration
operator|.
name|unix
argument_list|()
argument_list|)
expr_stmt|;
name|ts
operator|=
operator|new
name|AtomicLong
argument_list|(
name|ISODateTimeFormat
operator|.
name|dateTime
argument_list|()
operator|.
name|parseMillis
argument_list|(
literal|"2010-01-30T12:00:00.000-08:00"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|notFoundWithoutRefresh ()
specifier|public
name|void
name|notFoundWithoutRefresh
parameter_list|()
throws|throws
name|Exception
block|{
name|Cache
argument_list|<
name|Path
argument_list|,
name|Resource
argument_list|>
name|cache
init|=
name|newCache
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Servlet
name|servlet
init|=
operator|new
name|Servlet
argument_list|(
name|fs
argument_list|,
name|cache
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|FakeHttpServletResponse
name|res
init|=
operator|new
name|FakeHttpServletResponse
argument_list|()
decl_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|(
literal|"/notfound"
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_NOT_FOUND
argument_list|)
expr_stmt|;
name|assertNotCacheable
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertCacheHits
argument_list|(
name|cache
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|res
operator|=
operator|new
name|FakeHttpServletResponse
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|(
literal|"/notfound"
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_NOT_FOUND
argument_list|)
expr_stmt|;
name|assertNotCacheable
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertCacheHits
argument_list|(
name|cache
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|notFoundWithRefresh ()
specifier|public
name|void
name|notFoundWithRefresh
parameter_list|()
throws|throws
name|Exception
block|{
name|Cache
argument_list|<
name|Path
argument_list|,
name|Resource
argument_list|>
name|cache
init|=
name|newCache
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Servlet
name|servlet
init|=
operator|new
name|Servlet
argument_list|(
name|fs
argument_list|,
name|cache
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|FakeHttpServletResponse
name|res
init|=
operator|new
name|FakeHttpServletResponse
argument_list|()
decl_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|(
literal|"/notfound"
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_NOT_FOUND
argument_list|)
expr_stmt|;
name|assertNotCacheable
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertCacheHits
argument_list|(
name|cache
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|res
operator|=
operator|new
name|FakeHttpServletResponse
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|(
literal|"/notfound"
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_NOT_FOUND
argument_list|)
expr_stmt|;
name|assertNotCacheable
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertCacheHits
argument_list|(
name|cache
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|smallFileWithRefresh ()
specifier|public
name|void
name|smallFileWithRefresh
parameter_list|()
throws|throws
name|Exception
block|{
name|Cache
argument_list|<
name|Path
argument_list|,
name|Resource
argument_list|>
name|cache
init|=
name|newCache
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Servlet
name|servlet
init|=
operator|new
name|Servlet
argument_list|(
name|fs
argument_list|,
name|cache
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|writeFile
argument_list|(
literal|"/foo"
argument_list|,
literal|"foo1"
argument_list|)
expr_stmt|;
name|FakeHttpServletResponse
name|res
init|=
operator|new
name|FakeHttpServletResponse
argument_list|()
decl_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|(
literal|"/foo"
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_OK
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getActualBodyString
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"foo1"
argument_list|)
expr_stmt|;
name|assertCacheable
argument_list|(
name|res
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertHasETag
argument_list|(
name|res
argument_list|)
expr_stmt|;
comment|// Miss on getIfPresent, miss on get.
name|assertCacheHits
argument_list|(
name|cache
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|res
operator|=
operator|new
name|FakeHttpServletResponse
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|(
literal|"/foo"
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_OK
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getActualBodyString
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"foo1"
argument_list|)
expr_stmt|;
name|assertCacheable
argument_list|(
name|res
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertHasETag
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertCacheHits
argument_list|(
name|cache
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|writeFile
argument_list|(
literal|"/foo"
argument_list|,
literal|"foo2"
argument_list|)
expr_stmt|;
name|res
operator|=
operator|new
name|FakeHttpServletResponse
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|(
literal|"/foo"
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_OK
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getActualBodyString
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"foo2"
argument_list|)
expr_stmt|;
name|assertCacheable
argument_list|(
name|res
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertHasETag
argument_list|(
name|res
argument_list|)
expr_stmt|;
comment|// Hit, invalidate, miss.
name|assertCacheHits
argument_list|(
name|cache
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|smallFileWithoutClientCache ()
specifier|public
name|void
name|smallFileWithoutClientCache
parameter_list|()
throws|throws
name|Exception
block|{
name|Cache
argument_list|<
name|Path
argument_list|,
name|Resource
argument_list|>
name|cache
init|=
name|newCache
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Servlet
name|servlet
init|=
operator|new
name|Servlet
argument_list|(
name|fs
argument_list|,
name|cache
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|writeFile
argument_list|(
literal|"/foo"
argument_list|,
literal|"foo1"
argument_list|)
expr_stmt|;
name|FakeHttpServletResponse
name|res
init|=
operator|new
name|FakeHttpServletResponse
argument_list|()
decl_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|(
literal|"/foo"
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_OK
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getActualBodyString
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"foo1"
argument_list|)
expr_stmt|;
name|assertNotCacheable
argument_list|(
name|res
argument_list|)
expr_stmt|;
comment|// Miss on getIfPresent, miss on get.
name|assertCacheHits
argument_list|(
name|cache
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|res
operator|=
operator|new
name|FakeHttpServletResponse
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|(
literal|"/foo"
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_OK
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getActualBodyString
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"foo1"
argument_list|)
expr_stmt|;
name|assertNotCacheable
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertCacheHits
argument_list|(
name|cache
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|writeFile
argument_list|(
literal|"/foo"
argument_list|,
literal|"foo2"
argument_list|)
expr_stmt|;
name|res
operator|=
operator|new
name|FakeHttpServletResponse
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|(
literal|"/foo"
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_OK
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getActualBodyString
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"foo1"
argument_list|)
expr_stmt|;
name|assertNotCacheable
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertCacheHits
argument_list|(
name|cache
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|smallFileWithoutRefresh ()
specifier|public
name|void
name|smallFileWithoutRefresh
parameter_list|()
throws|throws
name|Exception
block|{
name|Cache
argument_list|<
name|Path
argument_list|,
name|Resource
argument_list|>
name|cache
init|=
name|newCache
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Servlet
name|servlet
init|=
operator|new
name|Servlet
argument_list|(
name|fs
argument_list|,
name|cache
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|writeFile
argument_list|(
literal|"/foo"
argument_list|,
literal|"foo1"
argument_list|)
expr_stmt|;
name|FakeHttpServletResponse
name|res
init|=
operator|new
name|FakeHttpServletResponse
argument_list|()
decl_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|(
literal|"/foo"
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_OK
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getActualBodyString
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"foo1"
argument_list|)
expr_stmt|;
name|assertCacheable
argument_list|(
name|res
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertHasETag
argument_list|(
name|res
argument_list|)
expr_stmt|;
comment|// Miss on getIfPresent, miss on get.
name|assertCacheHits
argument_list|(
name|cache
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|res
operator|=
operator|new
name|FakeHttpServletResponse
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|(
literal|"/foo"
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_OK
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getActualBodyString
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"foo1"
argument_list|)
expr_stmt|;
name|assertCacheable
argument_list|(
name|res
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertHasETag
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertCacheHits
argument_list|(
name|cache
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|writeFile
argument_list|(
literal|"/foo"
argument_list|,
literal|"foo2"
argument_list|)
expr_stmt|;
name|res
operator|=
operator|new
name|FakeHttpServletResponse
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|(
literal|"/foo"
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_OK
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getActualBodyString
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"foo1"
argument_list|)
expr_stmt|;
name|assertCacheable
argument_list|(
name|res
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertHasETag
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertCacheHits
argument_list|(
name|cache
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|verySmallFileDoesntBotherWithGzip ()
specifier|public
name|void
name|verySmallFileDoesntBotherWithGzip
parameter_list|()
throws|throws
name|Exception
block|{
name|Cache
argument_list|<
name|Path
argument_list|,
name|Resource
argument_list|>
name|cache
init|=
name|newCache
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Servlet
name|servlet
init|=
operator|new
name|Servlet
argument_list|(
name|fs
argument_list|,
name|cache
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|writeFile
argument_list|(
literal|"/foo"
argument_list|,
literal|"foo1"
argument_list|)
expr_stmt|;
name|FakeHttpServletRequest
name|req
init|=
name|request
argument_list|(
literal|"/foo"
argument_list|)
operator|.
name|addHeader
argument_list|(
literal|"Accept-Encoding"
argument_list|,
literal|"gzip"
argument_list|)
decl_stmt|;
name|FakeHttpServletResponse
name|res
init|=
operator|new
name|FakeHttpServletResponse
argument_list|()
decl_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|req
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_OK
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getHeader
argument_list|(
literal|"Content-Encoding"
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getActualBodyString
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"foo1"
argument_list|)
expr_stmt|;
name|assertHasETag
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertCacheable
argument_list|(
name|res
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|smallFileWithGzip ()
specifier|public
name|void
name|smallFileWithGzip
parameter_list|()
throws|throws
name|Exception
block|{
name|Cache
argument_list|<
name|Path
argument_list|,
name|Resource
argument_list|>
name|cache
init|=
name|newCache
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Servlet
name|servlet
init|=
operator|new
name|Servlet
argument_list|(
name|fs
argument_list|,
name|cache
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|String
name|content
init|=
name|Strings
operator|.
name|repeat
argument_list|(
literal|"a"
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|writeFile
argument_list|(
literal|"/foo"
argument_list|,
name|content
argument_list|)
expr_stmt|;
name|FakeHttpServletRequest
name|req
init|=
name|request
argument_list|(
literal|"/foo"
argument_list|)
operator|.
name|addHeader
argument_list|(
literal|"Accept-Encoding"
argument_list|,
literal|"gzip"
argument_list|)
decl_stmt|;
name|FakeHttpServletResponse
name|res
init|=
operator|new
name|FakeHttpServletResponse
argument_list|()
decl_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|req
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_OK
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getHeader
argument_list|(
literal|"Content-Encoding"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"gzip"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gunzip
argument_list|(
name|res
operator|.
name|getActualBody
argument_list|()
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|assertHasETag
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertCacheable
argument_list|(
name|res
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|largeFileBypassesCacheRegardlessOfRefreshParamter ()
specifier|public
name|void
name|largeFileBypassesCacheRegardlessOfRefreshParamter
parameter_list|()
throws|throws
name|Exception
block|{
for|for
control|(
name|boolean
name|refresh
range|:
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|true
argument_list|,
literal|false
argument_list|)
control|)
block|{
name|Cache
argument_list|<
name|Path
argument_list|,
name|Resource
argument_list|>
name|cache
init|=
name|newCache
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Servlet
name|servlet
init|=
operator|new
name|Servlet
argument_list|(
name|fs
argument_list|,
name|cache
argument_list|,
name|refresh
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|writeFile
argument_list|(
literal|"/foo"
argument_list|,
literal|"foo1"
argument_list|)
expr_stmt|;
name|FakeHttpServletResponse
name|res
init|=
operator|new
name|FakeHttpServletResponse
argument_list|()
decl_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|(
literal|"/foo"
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_OK
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getActualBodyString
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"foo1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getHeader
argument_list|(
literal|"Last-Modified"
argument_list|)
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|assertCacheable
argument_list|(
name|res
argument_list|,
name|refresh
argument_list|)
expr_stmt|;
name|assertHasLastModified
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertCacheHits
argument_list|(
name|cache
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|writeFile
argument_list|(
literal|"/foo"
argument_list|,
literal|"foo1"
argument_list|)
expr_stmt|;
name|res
operator|=
operator|new
name|FakeHttpServletResponse
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|(
literal|"/foo"
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_OK
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getActualBodyString
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"foo1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getHeader
argument_list|(
literal|"Last-Modified"
argument_list|)
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|assertCacheable
argument_list|(
name|res
argument_list|,
name|refresh
argument_list|)
expr_stmt|;
name|assertHasLastModified
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertCacheHits
argument_list|(
name|cache
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|writeFile
argument_list|(
literal|"/foo"
argument_list|,
literal|"foo2"
argument_list|)
expr_stmt|;
name|res
operator|=
operator|new
name|FakeHttpServletResponse
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|(
literal|"/foo"
argument_list|)
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_OK
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getActualBodyString
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"foo2"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getHeader
argument_list|(
literal|"Last-Modified"
argument_list|)
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|assertCacheable
argument_list|(
name|res
argument_list|,
name|refresh
argument_list|)
expr_stmt|;
name|assertHasLastModified
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertCacheHits
argument_list|(
name|cache
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|largeFileWithGzip ()
specifier|public
name|void
name|largeFileWithGzip
parameter_list|()
throws|throws
name|Exception
block|{
name|Cache
argument_list|<
name|Path
argument_list|,
name|Resource
argument_list|>
name|cache
init|=
name|newCache
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Servlet
name|servlet
init|=
operator|new
name|Servlet
argument_list|(
name|fs
argument_list|,
name|cache
argument_list|,
literal|true
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|String
name|content
init|=
name|Strings
operator|.
name|repeat
argument_list|(
literal|"a"
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|writeFile
argument_list|(
literal|"/foo"
argument_list|,
name|content
argument_list|)
expr_stmt|;
name|FakeHttpServletRequest
name|req
init|=
name|request
argument_list|(
literal|"/foo"
argument_list|)
operator|.
name|addHeader
argument_list|(
literal|"Accept-Encoding"
argument_list|,
literal|"gzip"
argument_list|)
decl_stmt|;
name|FakeHttpServletResponse
name|res
init|=
operator|new
name|FakeHttpServletResponse
argument_list|()
decl_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|req
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|SC_OK
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getHeader
argument_list|(
literal|"Content-Encoding"
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"gzip"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gunzip
argument_list|(
name|res
operator|.
name|getActualBody
argument_list|()
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|assertHasLastModified
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertCacheable
argument_list|(
name|res
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
comment|// TODO(dborowitz): Check MIME type.
comment|// TODO(dborowitz): Test that JS is not gzipped.
comment|// TODO(dborowitz): Test ?e parameter.
comment|// TODO(dborowitz): Test If-None-Match behavior.
comment|// TODO(dborowitz): Test If-Modified-Since behavior.
DECL|method|writeFile (String path, String content)
specifier|private
name|void
name|writeFile
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|content
parameter_list|)
throws|throws
name|Exception
block|{
name|Files
operator|.
name|write
argument_list|(
name|fs
operator|.
name|getPath
argument_list|(
name|path
argument_list|)
argument_list|,
name|content
operator|.
name|getBytes
argument_list|(
name|UTF_8
argument_list|)
argument_list|)
expr_stmt|;
name|Files
operator|.
name|setLastModifiedTime
argument_list|(
name|fs
operator|.
name|getPath
argument_list|(
name|path
argument_list|)
argument_list|,
name|FileTime
operator|.
name|fromMillis
argument_list|(
name|ts
operator|.
name|getAndIncrement
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|assertCacheHits (Cache<?, ?> cache, int hits, int misses)
specifier|private
specifier|static
name|void
name|assertCacheHits
parameter_list|(
name|Cache
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|cache
parameter_list|,
name|int
name|hits
parameter_list|,
name|int
name|misses
parameter_list|)
block|{
name|assertThat
argument_list|(
name|cache
operator|.
name|stats
argument_list|()
operator|.
name|hitCount
argument_list|()
argument_list|)
operator|.
name|named
argument_list|(
literal|"hits"
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|hits
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|cache
operator|.
name|stats
argument_list|()
operator|.
name|missCount
argument_list|()
argument_list|)
operator|.
name|named
argument_list|(
literal|"misses"
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|misses
argument_list|)
expr_stmt|;
block|}
DECL|method|assertCacheable (FakeHttpServletResponse res, boolean revalidate)
specifier|private
specifier|static
name|void
name|assertCacheable
parameter_list|(
name|FakeHttpServletResponse
name|res
parameter_list|,
name|boolean
name|revalidate
parameter_list|)
block|{
name|String
name|header
init|=
name|res
operator|.
name|getHeader
argument_list|(
literal|"Cache-Control"
argument_list|)
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|header
argument_list|)
operator|.
name|contains
argument_list|(
literal|"public"
argument_list|)
expr_stmt|;
if|if
condition|(
name|revalidate
condition|)
block|{
name|assertThat
argument_list|(
name|header
argument_list|)
operator|.
name|contains
argument_list|(
literal|"must-revalidate"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertThat
argument_list|(
name|header
argument_list|)
operator|.
name|doesNotContain
argument_list|(
literal|"must-revalidate"
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|assertHasLastModified (FakeHttpServletResponse res)
specifier|private
specifier|static
name|void
name|assertHasLastModified
parameter_list|(
name|FakeHttpServletResponse
name|res
parameter_list|)
block|{
name|assertThat
argument_list|(
name|res
operator|.
name|getHeader
argument_list|(
literal|"Last-Modified"
argument_list|)
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getHeader
argument_list|(
literal|"ETag"
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
block|}
DECL|method|assertHasETag (FakeHttpServletResponse res)
specifier|private
specifier|static
name|void
name|assertHasETag
parameter_list|(
name|FakeHttpServletResponse
name|res
parameter_list|)
block|{
name|assertThat
argument_list|(
name|res
operator|.
name|getHeader
argument_list|(
literal|"ETag"
argument_list|)
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getHeader
argument_list|(
literal|"Last-Modified"
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
block|}
DECL|method|assertNotCacheable (FakeHttpServletResponse res)
specifier|private
specifier|static
name|void
name|assertNotCacheable
parameter_list|(
name|FakeHttpServletResponse
name|res
parameter_list|)
block|{
name|assertThat
argument_list|(
name|res
operator|.
name|getHeader
argument_list|(
literal|"Cache-Control"
argument_list|)
argument_list|)
operator|.
name|contains
argument_list|(
literal|"no-cache"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getHeader
argument_list|(
literal|"ETag"
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|res
operator|.
name|getHeader
argument_list|(
literal|"Last-Modified"
argument_list|)
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
block|}
DECL|method|request (String path)
specifier|private
specifier|static
name|FakeHttpServletRequest
name|request
parameter_list|(
name|String
name|path
parameter_list|)
block|{
return|return
operator|new
name|FakeHttpServletRequest
argument_list|()
operator|.
name|setPathInfo
argument_list|(
name|path
argument_list|)
return|;
block|}
DECL|method|gunzip (byte[] data)
specifier|private
specifier|static
name|String
name|gunzip
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|Exception
block|{
try|try
init|(
name|InputStream
name|in
init|=
operator|new
name|GZIPInputStream
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
argument_list|)
argument_list|)
init|)
block|{
return|return
operator|new
name|String
argument_list|(
name|ByteStreams
operator|.
name|toByteArray
argument_list|(
name|in
argument_list|)
argument_list|,
name|UTF_8
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

