begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.rest.revision
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|revision
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|PushOneCommit
operator|.
name|FILE_CONTENT
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|PushOneCommit
operator|.
name|FILE_NAME
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
operator|.
name|UTF_8
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractDaemonTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|PushOneCommit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|RestResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|util
operator|.
name|Base64
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|RevisionIT
specifier|public
class|class
name|RevisionIT
extends|extends
name|AbstractDaemonTest
block|{
annotation|@
name|Test
DECL|method|contentOfParent ()
specifier|public
name|void
name|contentOfParent
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|parentContent
init|=
literal|"parent content"
decl_stmt|;
name|PushOneCommit
operator|.
name|Result
name|parent
init|=
name|createChange
argument_list|(
literal|"Parent change"
argument_list|,
name|FILE_NAME
argument_list|,
name|parentContent
argument_list|)
decl_stmt|;
name|parent
operator|.
name|assertOkStatus
argument_list|()
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|parent
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|parent
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|submit
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|child
init|=
name|createChange
argument_list|(
literal|"Child change"
argument_list|,
name|FILE_NAME
argument_list|,
name|FILE_CONTENT
argument_list|)
decl_stmt|;
name|child
operator|.
name|assertOkStatus
argument_list|()
expr_stmt|;
name|assertContent
argument_list|(
name|child
argument_list|,
name|FILE_NAME
argument_list|,
name|FILE_CONTENT
argument_list|)
expr_stmt|;
name|RestResponse
name|response
init|=
name|adminRestSession
operator|.
name|get
argument_list|(
literal|"/changes/"
operator|+
name|child
operator|.
name|getChangeId
argument_list|()
operator|+
literal|"/revisions/current/files/"
operator|+
name|FILE_NAME
operator|+
literal|"/content?parent=1"
argument_list|)
decl_stmt|;
name|response
operator|.
name|assertOK
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
operator|new
name|String
argument_list|(
name|Base64
operator|.
name|decode
argument_list|(
name|response
operator|.
name|getEntityContent
argument_list|()
argument_list|)
argument_list|,
name|UTF_8
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|parentContent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|contentOfInvalidParent ()
specifier|public
name|void
name|contentOfInvalidParent
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|parentContent
init|=
literal|"parent content"
decl_stmt|;
name|PushOneCommit
operator|.
name|Result
name|parent
init|=
name|createChange
argument_list|(
literal|"Parent change"
argument_list|,
name|FILE_NAME
argument_list|,
name|parentContent
argument_list|)
decl_stmt|;
name|parent
operator|.
name|assertOkStatus
argument_list|()
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|parent
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|parent
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|submit
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|child
init|=
name|createChange
argument_list|(
literal|"Child change"
argument_list|,
name|FILE_NAME
argument_list|,
name|FILE_CONTENT
argument_list|)
decl_stmt|;
name|child
operator|.
name|assertOkStatus
argument_list|()
expr_stmt|;
name|assertContent
argument_list|(
name|child
argument_list|,
name|FILE_NAME
argument_list|,
name|FILE_CONTENT
argument_list|)
expr_stmt|;
name|RestResponse
name|response
init|=
name|adminRestSession
operator|.
name|get
argument_list|(
literal|"/changes/"
operator|+
name|child
operator|.
name|getChangeId
argument_list|()
operator|+
literal|"/revisions/current/files/"
operator|+
name|FILE_NAME
operator|+
literal|"/content?parent=10"
argument_list|)
decl_stmt|;
name|response
operator|.
name|assertBadRequest
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|response
operator|.
name|getEntityContent
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"invalid parent"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

