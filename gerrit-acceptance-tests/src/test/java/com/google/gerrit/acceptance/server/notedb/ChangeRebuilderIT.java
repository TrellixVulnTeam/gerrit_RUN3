begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2016 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.server.notedb
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|server
operator|.
name|notedb
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|TruthJUnit
operator|.
name|assume
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractDaemonTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|PushOneCommit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|DraftInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|ResourceNotFoundException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|RefNames
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|server
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|change
operator|.
name|Rebuild
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AllUsersName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ChangeNoteUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|schema
operator|.
name|DisabledChangesReviewDbWrapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|NoteDbChecker
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|NoteDbMode
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Ref
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|ChangeRebuilderIT
specifier|public
class|class
name|ChangeRebuilderIT
extends|extends
name|AbstractDaemonTest
block|{
annotation|@
name|Inject
DECL|field|allUsers
specifier|private
name|AllUsersName
name|allUsers
decl_stmt|;
annotation|@
name|Inject
DECL|field|checker
specifier|private
name|NoteDbChecker
name|checker
decl_stmt|;
annotation|@
name|Inject
DECL|field|rebuildHandler
specifier|private
name|Rebuild
name|rebuildHandler
decl_stmt|;
annotation|@
name|Inject
DECL|field|dbProvider
specifier|private
name|Provider
argument_list|<
name|ReviewDb
argument_list|>
name|dbProvider
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|NoteDbMode
operator|.
name|readWrite
argument_list|()
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|notesMigration
operator|.
name|setAllEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeFields ()
specifier|public
name|void
name|changeFields
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|r
operator|.
name|getPatchSetId
argument_list|()
operator|.
name|getParentKey
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|topic
argument_list|(
name|name
argument_list|(
literal|"a-topic"
argument_list|)
argument_list|)
expr_stmt|;
name|checker
operator|.
name|rebuildAndCheckChanges
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|patchSets ()
specifier|public
name|void
name|patchSets
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|r
operator|.
name|getPatchSetId
argument_list|()
operator|.
name|getParentKey
argument_list|()
decl_stmt|;
name|r
operator|=
name|amendChange
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
expr_stmt|;
name|checker
operator|.
name|rebuildAndCheckChanges
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|noWriteToNewRef ()
specifier|public
name|void
name|noWriteToNewRef
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|r
operator|.
name|getPatchSetId
argument_list|()
operator|.
name|getParentKey
argument_list|()
decl_stmt|;
name|checker
operator|.
name|assertNoChangeRef
argument_list|(
name|project
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|notesMigration
operator|.
name|setWriteChanges
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|topic
argument_list|(
name|name
argument_list|(
literal|"a-topic"
argument_list|)
argument_list|)
expr_stmt|;
comment|// First write doesn't create the ref, but rebuilding works.
name|checker
operator|.
name|assertNoChangeRef
argument_list|(
name|project
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
operator|.
name|getNoteDbState
argument_list|()
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
name|checker
operator|.
name|rebuildAndCheckChanges
argument_list|(
name|id
argument_list|)
expr_stmt|;
comment|// Now that there is a ref, writes are "turned on" for this change, and
comment|// NoteDb stays up to date without explicit rebuilding.
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|topic
argument_list|(
name|name
argument_list|(
literal|"new-topic"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
operator|.
name|getNoteDbState
argument_list|()
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|checker
operator|.
name|checkChanges
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|restApiNotFoundWhenNoteDbDisabled ()
specifier|public
name|void
name|restApiNotFoundWhenNoteDbDisabled
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|ResourceNotFoundException
operator|.
name|class
argument_list|)
expr_stmt|;
name|rebuildHandler
operator|.
name|apply
argument_list|(
name|parseChangeResource
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
argument_list|,
operator|new
name|Rebuild
operator|.
name|Input
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|rebuildViaRestApi ()
specifier|public
name|void
name|rebuildViaRestApi
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|r
operator|.
name|getPatchSetId
argument_list|()
operator|.
name|getParentKey
argument_list|()
decl_stmt|;
name|notesMigration
operator|.
name|setWriteChanges
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|checker
operator|.
name|assertNoChangeRef
argument_list|(
name|project
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|rebuildHandler
operator|.
name|apply
argument_list|(
name|parseChangeResource
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
argument_list|,
operator|new
name|Rebuild
operator|.
name|Input
argument_list|()
argument_list|)
expr_stmt|;
name|checker
operator|.
name|checkChanges
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|writeToNewRefForNewChange ()
specifier|public
name|void
name|writeToNewRefForNewChange
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r1
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id1
init|=
name|r1
operator|.
name|getPatchSetId
argument_list|()
operator|.
name|getParentKey
argument_list|()
decl_stmt|;
name|notesMigration
operator|.
name|setWriteChanges
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id1
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|topic
argument_list|(
name|name
argument_list|(
literal|"a-topic"
argument_list|)
argument_list|)
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r2
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id2
init|=
name|r2
operator|.
name|getPatchSetId
argument_list|()
operator|.
name|getParentKey
argument_list|()
decl_stmt|;
comment|// Second change was created after NoteDb writes were turned on, so it was
comment|// allowed to write to a new ref.
name|checker
operator|.
name|checkChanges
argument_list|(
name|id2
argument_list|)
expr_stmt|;
comment|// First change was created before NoteDb writes were turned on, so its meta
comment|// ref doesn't exist until a manual rebuild.
name|checker
operator|.
name|assertNoChangeRef
argument_list|(
name|project
argument_list|,
name|id1
argument_list|)
expr_stmt|;
name|checker
operator|.
name|rebuildAndCheckChanges
argument_list|(
name|id1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|noteDbChangeState ()
specifier|public
name|void
name|noteDbChangeState
parameter_list|()
throws|throws
name|Exception
block|{
name|notesMigration
operator|.
name|setAllEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|r
operator|.
name|getPatchSetId
argument_list|()
operator|.
name|getParentKey
argument_list|()
decl_stmt|;
name|ObjectId
name|changeMetaId
init|=
name|getMetaRef
argument_list|(
name|project
argument_list|,
name|ChangeNoteUtil
operator|.
name|changeRefName
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|unwrapDb
argument_list|()
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
operator|.
name|getNoteDbState
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|changeMetaId
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|DraftInput
name|in
init|=
operator|new
name|DraftInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|line
operator|=
literal|1
expr_stmt|;
name|in
operator|.
name|message
operator|=
literal|"comment by user"
expr_stmt|;
name|in
operator|.
name|path
operator|=
name|PushOneCommit
operator|.
name|FILE_NAME
expr_stmt|;
name|setApiUser
argument_list|(
name|user
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|createDraft
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|ObjectId
name|userDraftsId
init|=
name|getMetaRef
argument_list|(
name|allUsers
argument_list|,
name|RefNames
operator|.
name|refsDraftComments
argument_list|(
name|user
operator|.
name|getId
argument_list|()
argument_list|,
name|id
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|unwrapDb
argument_list|()
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
operator|.
name|getNoteDbState
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|changeMetaId
operator|.
name|name
argument_list|()
operator|+
literal|","
operator|+
name|user
operator|.
name|getId
argument_list|()
operator|+
literal|"="
operator|+
name|userDraftsId
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|in
operator|=
operator|new
name|DraftInput
argument_list|()
expr_stmt|;
name|in
operator|.
name|line
operator|=
literal|2
expr_stmt|;
name|in
operator|.
name|message
operator|=
literal|"comment by admin"
expr_stmt|;
name|in
operator|.
name|path
operator|=
name|PushOneCommit
operator|.
name|FILE_NAME
expr_stmt|;
name|setApiUser
argument_list|(
name|admin
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|createDraft
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|ObjectId
name|adminDraftsId
init|=
name|getMetaRef
argument_list|(
name|allUsers
argument_list|,
name|RefNames
operator|.
name|refsDraftComments
argument_list|(
name|admin
operator|.
name|getId
argument_list|()
argument_list|,
name|id
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|admin
operator|.
name|getId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|isLessThan
argument_list|(
name|user
operator|.
name|getId
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|unwrapDb
argument_list|()
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
operator|.
name|getNoteDbState
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|changeMetaId
operator|.
name|name
argument_list|()
operator|+
literal|","
operator|+
name|admin
operator|.
name|getId
argument_list|()
operator|+
literal|"="
operator|+
name|adminDraftsId
operator|.
name|name
argument_list|()
operator|+
literal|","
operator|+
name|user
operator|.
name|getId
argument_list|()
operator|+
literal|"="
operator|+
name|userDraftsId
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|in
operator|.
name|message
operator|=
literal|"revised comment by admin"
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|createDraft
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|adminDraftsId
operator|=
name|getMetaRef
argument_list|(
name|allUsers
argument_list|,
name|RefNames
operator|.
name|refsDraftComments
argument_list|(
name|admin
operator|.
name|getId
argument_list|()
argument_list|,
name|id
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|unwrapDb
argument_list|()
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
operator|.
name|getNoteDbState
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|changeMetaId
operator|.
name|name
argument_list|()
operator|+
literal|","
operator|+
name|admin
operator|.
name|getId
argument_list|()
operator|+
literal|"="
operator|+
name|adminDraftsId
operator|.
name|name
argument_list|()
operator|+
literal|","
operator|+
name|user
operator|.
name|getId
argument_list|()
operator|+
literal|"="
operator|+
name|userDraftsId
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getMetaRef (Project.NameKey p, String name)
specifier|private
name|ObjectId
name|getMetaRef
parameter_list|(
name|Project
operator|.
name|NameKey
name|p
parameter_list|,
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
try|try
init|(
name|Repository
name|repo
init|=
name|repoManager
operator|.
name|openMetadataRepository
argument_list|(
name|p
argument_list|)
init|)
block|{
name|Ref
name|ref
init|=
name|repo
operator|.
name|exactRef
argument_list|(
name|name
argument_list|)
decl_stmt|;
return|return
name|ref
operator|!=
literal|null
condition|?
name|ref
operator|.
name|getObjectId
argument_list|()
else|:
literal|null
return|;
block|}
block|}
DECL|method|unwrapDb ()
specifier|private
name|ReviewDb
name|unwrapDb
parameter_list|()
block|{
name|ReviewDb
name|db
init|=
name|dbProvider
operator|.
name|get
argument_list|()
decl_stmt|;
if|if
condition|(
name|db
operator|instanceof
name|DisabledChangesReviewDbWrapper
condition|)
block|{
name|db
operator|=
operator|(
operator|(
name|DisabledChangesReviewDbWrapper
operator|)
name|db
operator|)
operator|.
name|unsafeGetDelegate
argument_list|()
expr_stmt|;
block|}
return|return
name|db
return|;
block|}
block|}
end_class

end_unit

