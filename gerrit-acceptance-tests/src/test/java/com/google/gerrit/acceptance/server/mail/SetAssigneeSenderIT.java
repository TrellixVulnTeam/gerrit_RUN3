begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.server.mail
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|server
operator|.
name|mail
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|TruthJUnit
operator|.
name|assume
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|GeneralPreferencesInfo
operator|.
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractNotificationTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|TestAccount
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|AssigneeInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|GeneralPreferencesInfo
operator|.
name|EmailStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|SetAssigneeSenderIT
specifier|public
class|class
name|SetAssigneeSenderIT
extends|extends
name|AbstractNotificationTest
block|{
DECL|field|assignee
specifier|private
name|TestAccount
name|assignee
decl_stmt|;
annotation|@
name|Before
DECL|method|createAssignee ()
specifier|public
name|void
name|createAssignee
parameter_list|()
throws|throws
name|Exception
block|{
name|assignee
operator|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"assignee"
argument_list|,
literal|"assignee@example.com"
argument_list|,
literal|"assignee"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setAssigneeOnReviewableChange ()
specifier|public
name|void
name|setAssigneeOnReviewableChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|assignee
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|to
argument_list|(
name|assignee
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setAssigneeOnReviewableChangeByOwnerCcingSelf ()
specifier|public
name|void
name|setAssigneeOnReviewableChangeByOwnerCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|assignee
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|to
argument_list|(
name|assignee
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setAssigneeOnReviewableChangeByAdmin ()
specifier|public
name|void
name|setAssigneeOnReviewableChangeByAdmin
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|admin
argument_list|,
name|assignee
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|sc
operator|.
name|starrer
argument_list|,
name|admin
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|to
argument_list|(
name|assignee
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setAssigneeOnReviewableChangeByAdminCcingSelf ()
specifier|public
name|void
name|setAssigneeOnReviewableChangeByAdminCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|admin
argument_list|,
name|assignee
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|cc
argument_list|(
name|admin
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|to
argument_list|(
name|assignee
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setAssigneeToSelfOnReviewableChangeInNoteDb ()
specifier|public
name|void
name|setAssigneeToSelfOnReviewableChangeInNoteDb
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|sc
operator|.
name|starrer
argument_list|,
name|assignee
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccerByEmail
argument_list|)
expr_stmt|;
comment|// TODO(logan): This is probably not intended!
block|}
annotation|@
name|Test
DECL|method|setAssigneeToSelfOnReviewableChangeInReviewDb ()
specifier|public
name|void
name|setAssigneeToSelfOnReviewableChangeInReviewDb
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|notSent
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeAssigneeOnReviewableChange ()
specifier|public
name|void
name|changeAssigneeOnReviewableChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|other
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"other"
argument_list|,
literal|"other@example.com"
argument_list|,
literal|"other"
argument_list|)
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|other
argument_list|)
expr_stmt|;
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|assignee
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|sc
operator|.
name|starrer
argument_list|,
name|other
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|to
argument_list|(
name|assignee
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|changeAssigneeToSelfOnReviewableChangeInNoteDb ()
specifier|public
name|void
name|changeAssigneeToSelfOnReviewableChangeInNoteDb
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|assignee
argument_list|)
expr_stmt|;
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|sc
operator|.
name|starrer
argument_list|,
name|assignee
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccerByEmail
argument_list|)
expr_stmt|;
comment|// TODO(logan): This is probably not intended!
block|}
annotation|@
name|Test
DECL|method|changeAssigneeToSelfOnReviewableChangeInReviewDb ()
specifier|public
name|void
name|changeAssigneeToSelfOnReviewableChangeInReviewDb
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|assignee
argument_list|)
expr_stmt|;
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|notSent
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setAssigneeOnReviewableWipChange ()
specifier|public
name|void
name|setAssigneeOnReviewableWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableWipChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|assignee
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|to
argument_list|(
name|assignee
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|setAssigneeOnWipChange ()
specifier|public
name|void
name|setAssigneeOnWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|assign
argument_list|(
name|sc
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|assignee
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"setassignee"
argument_list|,
name|sc
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|ccerByEmail
argument_list|)
comment|// TODO(logan): This is probably not intended!
operator|.
name|to
argument_list|(
name|assignee
argument_list|)
expr_stmt|;
block|}
DECL|method|assign (StagedChange sc, TestAccount by, TestAccount to)
specifier|private
name|void
name|assign
parameter_list|(
name|StagedChange
name|sc
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|TestAccount
name|to
parameter_list|)
throws|throws
name|Exception
block|{
name|assign
argument_list|(
name|sc
argument_list|,
name|by
argument_list|,
name|to
argument_list|,
name|EmailStrategy
operator|.
name|ENABLED
argument_list|)
expr_stmt|;
block|}
DECL|method|assign (StagedChange sc, TestAccount by, TestAccount to, EmailStrategy emailStrategy)
specifier|private
name|void
name|assign
parameter_list|(
name|StagedChange
name|sc
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|TestAccount
name|to
parameter_list|,
name|EmailStrategy
name|emailStrategy
parameter_list|)
throws|throws
name|Exception
block|{
name|setEmailStrategy
argument_list|(
name|by
argument_list|,
name|emailStrategy
argument_list|)
expr_stmt|;
name|setApiUser
argument_list|(
name|by
argument_list|)
expr_stmt|;
name|AssigneeInput
name|in
init|=
operator|new
name|AssigneeInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|assignee
operator|=
name|to
operator|.
name|email
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|sc
operator|.
name|changeId
argument_list|)
operator|.
name|setAssignee
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

