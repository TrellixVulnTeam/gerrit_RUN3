begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.server.mail
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|server
operator|.
name|mail
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|TruthJUnit
operator|.
name|assume
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|NotifyHandling
operator|.
name|NONE
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|NotifyHandling
operator|.
name|OWNER
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|NotifyHandling
operator|.
name|OWNER_REVIEWERS
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|GeneralPreferencesInfo
operator|.
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractNotificationTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|TestAccount
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|AddReviewerInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|NotifyHandling
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|GeneralPreferencesInfo
operator|.
name|EmailStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|AddReviewerSenderIT
specifier|public
class|class
name|AddReviewerSenderIT
extends|extends
name|AbstractNotificationTest
block|{
DECL|interface|Adder
specifier|private
interface|interface
name|Adder
block|{
DECL|method|addReviewer (String changeId, String reviewer, @Nullable NotifyHandling notify)
name|void
name|addReviewer
parameter_list|(
name|String
name|changeId
parameter_list|,
name|String
name|reviewer
parameter_list|,
annotation|@
name|Nullable
name|NotifyHandling
name|notify
parameter_list|)
throws|throws
name|Exception
function_decl|;
block|}
DECL|method|singly ()
specifier|private
name|Adder
name|singly
parameter_list|()
block|{
return|return
parameter_list|(
name|String
name|changeId
parameter_list|,
name|String
name|reviewer
parameter_list|,
annotation|@
name|Nullable
name|NotifyHandling
name|notify
parameter_list|)
lambda|->
block|{
name|AddReviewerInput
name|in
init|=
operator|new
name|AddReviewerInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|reviewer
operator|=
name|reviewer
expr_stmt|;
if|if
condition|(
name|notify
operator|!=
literal|null
condition|)
block|{
name|in
operator|.
name|notify
operator|=
name|notify
expr_stmt|;
block|}
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|addReviewer
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
return|;
block|}
DECL|method|batch ()
specifier|private
name|Adder
name|batch
parameter_list|()
block|{
return|return
parameter_list|(
name|String
name|changeId
parameter_list|,
name|String
name|reviewer
parameter_list|,
annotation|@
name|Nullable
name|NotifyHandling
name|notify
parameter_list|)
lambda|->
block|{
name|ReviewInput
name|in
init|=
name|ReviewInput
operator|.
name|noScore
argument_list|()
decl_stmt|;
name|in
operator|.
name|reviewer
argument_list|(
name|reviewer
argument_list|)
expr_stmt|;
if|if
condition|(
name|notify
operator|!=
literal|null
condition|)
block|{
name|in
operator|.
name|notify
operator|=
name|notify
expr_stmt|;
block|}
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|revision
argument_list|(
literal|"current"
argument_list|)
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
return|;
block|}
DECL|interface|Tester
specifier|private
interface|interface
name|Tester
block|{
DECL|method|test (Adder adder)
name|void
name|test
parameter_list|(
name|Adder
name|adder
parameter_list|)
throws|throws
name|Exception
function_decl|;
block|}
DECL|method|forAll (Tester tester)
specifier|private
name|void
name|forAll
parameter_list|(
name|Tester
name|tester
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|Adder
name|adder
range|:
name|ImmutableList
operator|.
name|of
argument_list|(
name|singly
argument_list|()
argument_list|,
name|batch
argument_list|()
argument_list|)
control|)
block|{
name|tester
operator|.
name|test
argument_list|(
name|adder
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeInReviewDb ()
specifier|public
name|void
name|addReviewerToReviewableChangeInReviewDb
parameter_list|()
throws|throws
name|Exception
block|{
name|forAll
argument_list|(
name|adder
lambda|->
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|starrer
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeInNoteDb ()
specifier|public
name|void
name|addReviewerToReviewableChangeInNoteDb
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|forAll
argument_list|(
name|adder
lambda|->
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|)
expr_stmt|;
comment|// TODO(logan): Should CCs be included?
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|starrer
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeByOwnerCcingSelfInNoteDb ()
specifier|public
name|void
name|addReviewerToReviewableChangeByOwnerCcingSelfInNoteDb
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|forAll
argument_list|(
name|adder
lambda|->
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// TODO(logan): Should CCs be included?
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeByOtherInNoteDb ()
specifier|public
name|void
name|addReviewerToReviewableChangeByOtherInNoteDb
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|TestAccount
name|other
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"other"
argument_list|,
literal|"other@example.com"
argument_list|,
literal|"other"
argument_list|)
decl_stmt|;
name|forAll
argument_list|(
name|adder
lambda|->
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|other
argument_list|,
name|reviewer
operator|.
name|email
argument_list|)
expr_stmt|;
comment|// TODO(logan): Should CCs be included?
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|starrer
argument_list|,
name|other
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeByOtherCcingSelfInNoteDb ()
specifier|public
name|void
name|addReviewerToReviewableChangeByOtherCcingSelfInNoteDb
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|TestAccount
name|other
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"other"
argument_list|,
literal|"other@example.com"
argument_list|,
literal|"other"
argument_list|)
decl_stmt|;
name|forAll
argument_list|(
name|adder
lambda|->
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|other
argument_list|,
name|reviewer
operator|.
name|email
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// TODO(logan): Should CCs be included?
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|reviewer
argument_list|,
name|other
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerByEmailToReviewableChangeInReviewDb ()
specifier|public
name|void
name|addReviewerByEmailToReviewableChangeInReviewDb
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|forAll
argument_list|(
name|adder
lambda|->
block|{
name|String
name|email
init|=
literal|"addedbyemail@example.com"
decl_stmt|;
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|email
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|notSent
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerByEmailToReviewableChangeInNoteDb ()
specifier|public
name|void
name|addReviewerByEmailToReviewableChangeInNoteDb
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|forAll
argument_list|(
name|adder
lambda|->
block|{
name|String
name|email
init|=
literal|"addedbyemail@example.com"
decl_stmt|;
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|email
argument_list|)
expr_stmt|;
comment|// TODO(logan): Should CCs be included?
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|email
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|starrer
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToWipChange ()
specifier|public
name|void
name|addReviewerToWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|forAll
argument_list|(
name|adder
lambda|->
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|notSent
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableWipChange ()
specifier|public
name|void
name|addReviewerToReviewableWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|forAll
argument_list|(
name|adder
lambda|->
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableWipChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|notSent
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToWipChangeInNoteDbNotifyAll ()
specifier|public
name|void
name|addReviewerToWipChangeInNoteDbNotifyAll
parameter_list|()
throws|throws
name|Exception
block|{
name|forAll
argument_list|(
name|adder
lambda|->
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|,
name|NotifyHandling
operator|.
name|ALL
argument_list|)
expr_stmt|;
comment|// TODO(logan): Should CCs be included?
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|starrer
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToWipChangeInReviewDbNotifyAll ()
specifier|public
name|void
name|addReviewerToWipChangeInReviewDbNotifyAll
parameter_list|()
throws|throws
name|Exception
block|{
name|forAll
argument_list|(
name|adder
lambda|->
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|,
name|NotifyHandling
operator|.
name|ALL
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|starrer
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeInNoteDbNotifyOwnerReviewers ()
specifier|public
name|void
name|addReviewerToReviewableChangeInNoteDbNotifyOwnerReviewers
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|forAll
argument_list|(
name|adder
lambda|->
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|,
name|OWNER_REVIEWERS
argument_list|)
expr_stmt|;
comment|// TODO(logan): Should CCs be included?
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"newchange"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|,
name|sc
operator|.
name|starrer
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeInNoteDbByOwnerCcingSelfNotifyOwner ()
specifier|public
name|void
name|addReviewerToReviewableChangeInNoteDbByOwnerCcingSelfNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|forAll
argument_list|(
name|adder
lambda|->
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|,
name|OWNER
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|notSent
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addReviewerToReviewableChangeInNoteDbByOwnerCcingSelfNotifyNone ()
specifier|public
name|void
name|addReviewerToReviewableChangeInNoteDbByOwnerCcingSelfNotifyNone
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|forAll
argument_list|(
name|adder
lambda|->
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|reviewer
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"added"
argument_list|,
literal|"added@example.com"
argument_list|,
literal|"added"
argument_list|)
decl_stmt|;
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|reviewer
operator|.
name|email
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|,
name|NONE
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|notSent
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|addReviewer (Adder adder, String changeId, TestAccount by, String reviewer)
specifier|private
name|void
name|addReviewer
parameter_list|(
name|Adder
name|adder
parameter_list|,
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|String
name|reviewer
parameter_list|)
throws|throws
name|Exception
block|{
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|changeId
argument_list|,
name|by
argument_list|,
name|reviewer
argument_list|,
name|EmailStrategy
operator|.
name|ENABLED
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|addReviewer ( Adder adder, String changeId, TestAccount by, String reviewer, NotifyHandling notify)
specifier|private
name|void
name|addReviewer
parameter_list|(
name|Adder
name|adder
parameter_list|,
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|String
name|reviewer
parameter_list|,
name|NotifyHandling
name|notify
parameter_list|)
throws|throws
name|Exception
block|{
name|addReviewer
argument_list|(
name|adder
argument_list|,
name|changeId
argument_list|,
name|by
argument_list|,
name|reviewer
argument_list|,
name|EmailStrategy
operator|.
name|ENABLED
argument_list|,
name|notify
argument_list|)
expr_stmt|;
block|}
DECL|method|addReviewer ( Adder adder, String changeId, TestAccount by, String reviewer, EmailStrategy emailStrategy, @Nullable NotifyHandling notify)
specifier|private
name|void
name|addReviewer
parameter_list|(
name|Adder
name|adder
parameter_list|,
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|String
name|reviewer
parameter_list|,
name|EmailStrategy
name|emailStrategy
parameter_list|,
annotation|@
name|Nullable
name|NotifyHandling
name|notify
parameter_list|)
throws|throws
name|Exception
block|{
name|setEmailStrategy
argument_list|(
name|by
argument_list|,
name|emailStrategy
argument_list|)
expr_stmt|;
name|setApiUser
argument_list|(
name|by
argument_list|)
expr_stmt|;
name|adder
operator|.
name|addReviewer
argument_list|(
name|changeId
argument_list|,
name|reviewer
argument_list|,
name|notify
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

