begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.rest.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|change
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|TruthJUnit
operator|.
name|assume
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterables
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractDaemonTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|NoHttpd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|PushOneCommit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|AddReviewerInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|projects
operator|.
name|ConfigInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|InheritableBoolean
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|ListChangesOption
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|ReviewerState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|AccountInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ChangeInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|BadRequestException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|UnprocessableEntityException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|mail
operator|.
name|Address
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|FakeEmailSender
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
annotation|@
name|NoHttpd
DECL|class|ChangeReviewersByEmailIT
specifier|public
class|class
name|ChangeReviewersByEmailIT
extends|extends
name|AbstractDaemonTest
block|{
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|ConfigInput
name|conf
init|=
operator|new
name|ConfigInput
argument_list|()
decl_stmt|;
name|conf
operator|.
name|enableReviewerByEmail
operator|=
name|InheritableBoolean
operator|.
name|TRUE
expr_stmt|;
name|gApi
operator|.
name|projects
argument_list|()
operator|.
name|name
argument_list|(
name|project
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|config
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addByEmail ()
specifier|public
name|void
name|addByEmail
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|AccountInfo
name|acc
init|=
operator|new
name|AccountInfo
argument_list|(
literal|"Foo Bar"
argument_list|,
literal|"foo.bar@gerritcodereview.com"
argument_list|)
decl_stmt|;
for|for
control|(
name|ReviewerState
name|state
range|:
name|ImmutableList
operator|.
name|of
argument_list|(
name|ReviewerState
operator|.
name|CC
argument_list|,
name|ReviewerState
operator|.
name|REVIEWER
argument_list|)
control|)
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|AddReviewerInput
name|input
init|=
operator|new
name|AddReviewerInput
argument_list|()
decl_stmt|;
name|input
operator|.
name|reviewer
operator|=
name|toRfcAddressString
argument_list|(
name|acc
argument_list|)
expr_stmt|;
name|input
operator|.
name|state
operator|=
name|state
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|addReviewer
argument_list|(
name|input
argument_list|)
expr_stmt|;
name|ChangeInfo
name|info
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|get
argument_list|(
name|EnumSet
operator|.
name|of
argument_list|(
name|ListChangesOption
operator|.
name|DETAILED_LABELS
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|info
operator|.
name|reviewers
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|(
name|state
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|acc
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// All reviewers added by email should be removable
name|assertThat
argument_list|(
name|info
operator|.
name|removableReviewers
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|(
name|acc
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|addByEmailAndById ()
specifier|public
name|void
name|addByEmailAndById
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|AccountInfo
name|byEmail
init|=
operator|new
name|AccountInfo
argument_list|(
literal|"Foo Bar"
argument_list|,
literal|"foo.bar@gerritcodereview.com"
argument_list|)
decl_stmt|;
name|AccountInfo
name|byId
init|=
operator|new
name|AccountInfo
argument_list|(
name|user
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|ReviewerState
name|state
range|:
name|ImmutableList
operator|.
name|of
argument_list|(
name|ReviewerState
operator|.
name|CC
argument_list|,
name|ReviewerState
operator|.
name|REVIEWER
argument_list|)
control|)
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|AddReviewerInput
name|inputByEmail
init|=
operator|new
name|AddReviewerInput
argument_list|()
decl_stmt|;
name|inputByEmail
operator|.
name|reviewer
operator|=
name|toRfcAddressString
argument_list|(
name|byEmail
argument_list|)
expr_stmt|;
name|inputByEmail
operator|.
name|state
operator|=
name|state
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|addReviewer
argument_list|(
name|inputByEmail
argument_list|)
expr_stmt|;
name|AddReviewerInput
name|inputById
init|=
operator|new
name|AddReviewerInput
argument_list|()
decl_stmt|;
name|inputById
operator|.
name|reviewer
operator|=
name|user
operator|.
name|email
expr_stmt|;
name|inputById
operator|.
name|state
operator|=
name|state
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|addReviewer
argument_list|(
name|inputById
argument_list|)
expr_stmt|;
name|ChangeInfo
name|info
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|get
argument_list|(
name|EnumSet
operator|.
name|of
argument_list|(
name|ListChangesOption
operator|.
name|DETAILED_LABELS
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|info
operator|.
name|reviewers
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|(
name|state
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|byId
argument_list|,
name|byEmail
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// All reviewers (both by id and by email) should be removable
name|assertThat
argument_list|(
name|info
operator|.
name|removableReviewers
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|(
name|byId
argument_list|,
name|byEmail
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|removeByEmail ()
specifier|public
name|void
name|removeByEmail
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|AccountInfo
name|acc
init|=
operator|new
name|AccountInfo
argument_list|(
literal|"Foo Bar"
argument_list|,
literal|"foo.bar@gerritcodereview.com"
argument_list|)
decl_stmt|;
for|for
control|(
name|ReviewerState
name|state
range|:
name|ImmutableList
operator|.
name|of
argument_list|(
name|ReviewerState
operator|.
name|CC
argument_list|,
name|ReviewerState
operator|.
name|REVIEWER
argument_list|)
control|)
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|AddReviewerInput
name|addInput
init|=
operator|new
name|AddReviewerInput
argument_list|()
decl_stmt|;
name|addInput
operator|.
name|reviewer
operator|=
name|toRfcAddressString
argument_list|(
name|acc
argument_list|)
expr_stmt|;
name|addInput
operator|.
name|state
operator|=
name|state
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|addReviewer
argument_list|(
name|addInput
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|reviewer
argument_list|(
name|acc
operator|.
name|email
argument_list|)
operator|.
name|remove
argument_list|()
expr_stmt|;
name|ChangeInfo
name|info
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|get
argument_list|(
name|EnumSet
operator|.
name|of
argument_list|(
name|ListChangesOption
operator|.
name|DETAILED_LABELS
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|info
operator|.
name|reviewers
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|convertFromCCToReviewer ()
specifier|public
name|void
name|convertFromCCToReviewer
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|AccountInfo
name|acc
init|=
operator|new
name|AccountInfo
argument_list|(
literal|"Foo Bar"
argument_list|,
literal|"foo.bar@gerritcodereview.com"
argument_list|)
decl_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|AddReviewerInput
name|addInput
init|=
operator|new
name|AddReviewerInput
argument_list|()
decl_stmt|;
name|addInput
operator|.
name|reviewer
operator|=
name|toRfcAddressString
argument_list|(
name|acc
argument_list|)
expr_stmt|;
name|addInput
operator|.
name|state
operator|=
name|ReviewerState
operator|.
name|CC
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|addReviewer
argument_list|(
name|addInput
argument_list|)
expr_stmt|;
name|AddReviewerInput
name|modifyInput
init|=
operator|new
name|AddReviewerInput
argument_list|()
decl_stmt|;
name|modifyInput
operator|.
name|reviewer
operator|=
name|addInput
operator|.
name|reviewer
expr_stmt|;
name|modifyInput
operator|.
name|state
operator|=
name|ReviewerState
operator|.
name|REVIEWER
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|addReviewer
argument_list|(
name|modifyInput
argument_list|)
expr_stmt|;
name|ChangeInfo
name|info
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|get
argument_list|(
name|EnumSet
operator|.
name|of
argument_list|(
name|ListChangesOption
operator|.
name|DETAILED_LABELS
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|info
operator|.
name|reviewers
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|(
name|ReviewerState
operator|.
name|REVIEWER
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|acc
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|addedReviewersGetNotified ()
specifier|public
name|void
name|addedReviewersGetNotified
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|AccountInfo
name|acc
init|=
operator|new
name|AccountInfo
argument_list|(
literal|"Foo Bar"
argument_list|,
literal|"foo.bar@gerritcodereview.com"
argument_list|)
decl_stmt|;
for|for
control|(
name|ReviewerState
name|state
range|:
name|ImmutableList
operator|.
name|of
argument_list|(
name|ReviewerState
operator|.
name|CC
argument_list|,
name|ReviewerState
operator|.
name|REVIEWER
argument_list|)
control|)
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|AddReviewerInput
name|input
init|=
operator|new
name|AddReviewerInput
argument_list|()
decl_stmt|;
name|input
operator|.
name|reviewer
operator|=
name|toRfcAddressString
argument_list|(
name|acc
argument_list|)
expr_stmt|;
name|input
operator|.
name|state
operator|=
name|state
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|addReviewer
argument_list|(
name|input
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Message
argument_list|>
name|messages
init|=
name|sender
operator|.
name|getMessages
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|messages
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|messages
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|rcpt
argument_list|()
argument_list|)
operator|.
name|containsExactly
argument_list|(
name|Address
operator|.
name|parse
argument_list|(
name|input
operator|.
name|reviewer
argument_list|)
argument_list|)
expr_stmt|;
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|removingReviewerTriggersNotification ()
specifier|public
name|void
name|removingReviewerTriggersNotification
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|AccountInfo
name|acc
init|=
operator|new
name|AccountInfo
argument_list|(
literal|"Foo Bar"
argument_list|,
literal|"foo.bar@gerritcodereview.com"
argument_list|)
decl_stmt|;
for|for
control|(
name|ReviewerState
name|state
range|:
name|ImmutableList
operator|.
name|of
argument_list|(
name|ReviewerState
operator|.
name|CC
argument_list|,
name|ReviewerState
operator|.
name|REVIEWER
argument_list|)
control|)
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|AddReviewerInput
name|addInput
init|=
operator|new
name|AddReviewerInput
argument_list|()
decl_stmt|;
name|addInput
operator|.
name|reviewer
operator|=
name|toRfcAddressString
argument_list|(
name|acc
argument_list|)
expr_stmt|;
name|addInput
operator|.
name|state
operator|=
name|state
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|addReviewer
argument_list|(
name|addInput
argument_list|)
expr_stmt|;
comment|// Review change as user
name|ReviewInput
name|reviewInput
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|reviewInput
operator|.
name|message
operator|=
literal|"I have a comment"
expr_stmt|;
name|setApiUser
argument_list|(
name|user
argument_list|)
expr_stmt|;
name|revision
argument_list|(
name|r
argument_list|)
operator|.
name|review
argument_list|(
name|reviewInput
argument_list|)
expr_stmt|;
name|setApiUser
argument_list|(
name|admin
argument_list|)
expr_stmt|;
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
comment|// Delete as admin
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|reviewer
argument_list|(
name|addInput
operator|.
name|reviewer
argument_list|)
operator|.
name|remove
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|Message
argument_list|>
name|messages
init|=
name|sender
operator|.
name|getMessages
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|messages
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|messages
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|rcpt
argument_list|()
argument_list|)
operator|.
name|containsExactly
argument_list|(
name|Address
operator|.
name|parse
argument_list|(
name|addInput
operator|.
name|reviewer
argument_list|)
argument_list|,
name|user
operator|.
name|emailAddress
argument_list|)
expr_stmt|;
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|reviewerAndCCReceiveRegularNotification ()
specifier|public
name|void
name|reviewerAndCCReceiveRegularNotification
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|AccountInfo
name|acc
init|=
operator|new
name|AccountInfo
argument_list|(
literal|"Foo Bar"
argument_list|,
literal|"foo.bar@gerritcodereview.com"
argument_list|)
decl_stmt|;
for|for
control|(
name|ReviewerState
name|state
range|:
name|ImmutableList
operator|.
name|of
argument_list|(
name|ReviewerState
operator|.
name|CC
argument_list|,
name|ReviewerState
operator|.
name|REVIEWER
argument_list|)
control|)
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|AddReviewerInput
name|input
init|=
operator|new
name|AddReviewerInput
argument_list|()
decl_stmt|;
name|input
operator|.
name|reviewer
operator|=
name|toRfcAddressString
argument_list|(
name|acc
argument_list|)
expr_stmt|;
name|input
operator|.
name|state
operator|=
name|state
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|addReviewer
argument_list|(
name|input
argument_list|)
expr_stmt|;
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|revision
argument_list|(
name|r
operator|.
name|getCommit
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|state
operator|==
name|ReviewerState
operator|.
name|CC
condition|)
block|{
name|assertNotifyCc
argument_list|(
name|Address
operator|.
name|parse
argument_list|(
name|input
operator|.
name|reviewer
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertNotifyTo
argument_list|(
name|Address
operator|.
name|parse
argument_list|(
name|input
operator|.
name|reviewer
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
DECL|method|rejectMissingEmail ()
specifier|public
name|void
name|rejectMissingEmail
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|UnprocessableEntityException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"email invalid"
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|addReviewer
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|rejectMalformedEmail ()
specifier|public
name|void
name|rejectMalformedEmail
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|UnprocessableEntityException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"email invalid"
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|addReviewer
argument_list|(
literal|"Foo Bar<foo.bar@"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|rejectOnNonPublicChange ()
specifier|public
name|void
name|rejectOnNonPublicChange
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createDraftChange
argument_list|()
decl_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|BadRequestException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"change is not publicly visible"
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|addReviewer
argument_list|(
literal|"Foo Bar<foo.bar@gerritcodereview.com>"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|rejectWhenFeatureIsDisabled ()
specifier|public
name|void
name|rejectWhenFeatureIsDisabled
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|readChanges
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|ConfigInput
name|conf
init|=
operator|new
name|ConfigInput
argument_list|()
decl_stmt|;
name|conf
operator|.
name|enableReviewerByEmail
operator|=
name|InheritableBoolean
operator|.
name|FALSE
expr_stmt|;
name|gApi
operator|.
name|projects
argument_list|()
operator|.
name|name
argument_list|(
name|project
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|config
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|UnprocessableEntityException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"Foo Bar<foo.bar@gerritcodereview.com> does not identify a registered user or group"
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|addReviewer
argument_list|(
literal|"Foo Bar<foo.bar@gerritcodereview.com>"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|reviewersByEmailAreServedFromIndex ()
specifier|public
name|void
name|reviewersByEmailAreServedFromIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|notesMigration
operator|.
name|enabled
argument_list|()
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|AccountInfo
name|acc
init|=
operator|new
name|AccountInfo
argument_list|(
literal|"Foo Bar"
argument_list|,
literal|"foo.bar@gerritcodereview.com"
argument_list|)
decl_stmt|;
for|for
control|(
name|ReviewerState
name|state
range|:
name|ImmutableList
operator|.
name|of
argument_list|(
name|ReviewerState
operator|.
name|CC
argument_list|,
name|ReviewerState
operator|.
name|REVIEWER
argument_list|)
control|)
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|AddReviewerInput
name|input
init|=
operator|new
name|AddReviewerInput
argument_list|()
decl_stmt|;
name|input
operator|.
name|reviewer
operator|=
name|toRfcAddressString
argument_list|(
name|acc
argument_list|)
expr_stmt|;
name|input
operator|.
name|state
operator|=
name|state
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|addReviewer
argument_list|(
name|input
argument_list|)
expr_stmt|;
name|notesMigration
operator|.
name|setFailOnLoad
argument_list|(
literal|true
argument_list|)
expr_stmt|;
try|try
block|{
name|ChangeInfo
name|info
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|query
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|withOption
argument_list|(
name|ListChangesOption
operator|.
name|DETAILED_LABELS
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|info
operator|.
name|reviewers
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ImmutableMap
operator|.
name|of
argument_list|(
name|state
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|acc
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|notesMigration
operator|.
name|setFailOnLoad
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|toRfcAddressString (AccountInfo info)
specifier|private
specifier|static
name|String
name|toRfcAddressString
parameter_list|(
name|AccountInfo
name|info
parameter_list|)
block|{
return|return
operator|(
operator|new
name|Address
argument_list|(
name|info
operator|.
name|name
argument_list|,
name|info
operator|.
name|email
argument_list|)
operator|)
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

