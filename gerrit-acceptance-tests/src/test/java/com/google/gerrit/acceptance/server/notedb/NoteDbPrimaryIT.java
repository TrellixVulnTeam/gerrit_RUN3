begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2016 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.server.notedb
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|server
operator|.
name|notedb
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assert_
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|TruthJUnit
operator|.
name|assume
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ChangeNoteUtil
operator|.
name|formatTime
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|NoteDbChangeState
operator|.
name|PrimaryStorage
operator|.
name|REVIEW_DB
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
operator|.
name|DAYS
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
operator|.
name|MILLISECONDS
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
operator|.
name|SECONDS
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
operator|.
name|toList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|rholder
operator|.
name|retry
operator|.
name|Retryer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|rholder
operator|.
name|retry
operator|.
name|RetryerBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|rholder
operator|.
name|retry
operator|.
name|StopStrategies
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Throwables
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterables
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractDaemonTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|PushOneCommit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|TimeUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|DraftInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
operator|.
name|CommentInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|ChangeStatus
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ApprovalInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ChangeInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|CommentInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestApiException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Change
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|ChangeMessage
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|RefNames
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|server
operator|.
name|ReviewDbUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|ChangeMessagesUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|CommentsUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|InternalUser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AllUsersName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|RepoRefCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ChangeBundle
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ChangeBundleReader
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ChangeNotes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|ChangeUpdate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|NoteDbChangeState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|NoteDbChangeState
operator|.
name|PrimaryStorage
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|PrimaryStorageMigrator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|notedb
operator|.
name|TestChangeRebuilderWrapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ChangeControl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|ConfigSuite
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|NoteDbMode
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|testutil
operator|.
name|TestTimeUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|OrmRuntimeException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|util
operator|.
name|Providers
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevCommit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|revwalk
operator|.
name|RevWalk
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|NoteDbPrimaryIT
specifier|public
class|class
name|NoteDbPrimaryIT
extends|extends
name|AbstractDaemonTest
block|{
annotation|@
name|ConfigSuite
operator|.
name|Default
DECL|method|defaultConfig ()
specifier|public
specifier|static
name|Config
name|defaultConfig
parameter_list|()
block|{
name|Config
name|cfg
init|=
operator|new
name|Config
argument_list|()
decl_stmt|;
name|cfg
operator|.
name|setString
argument_list|(
literal|"notedb"
argument_list|,
literal|null
argument_list|,
literal|"concurrentWriterTimeout"
argument_list|,
literal|"0s"
argument_list|)
expr_stmt|;
name|cfg
operator|.
name|setString
argument_list|(
literal|"notedb"
argument_list|,
literal|null
argument_list|,
literal|"primaryStorageMigrationTimeout"
argument_list|,
literal|"1d"
argument_list|)
expr_stmt|;
name|cfg
operator|.
name|setBoolean
argument_list|(
literal|"noteDb"
argument_list|,
literal|null
argument_list|,
literal|"testRebuilderWrapper"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|cfg
return|;
block|}
DECL|field|allUsers
annotation|@
name|Inject
specifier|private
name|AllUsersName
name|allUsers
decl_stmt|;
DECL|field|bundleReader
annotation|@
name|Inject
specifier|private
name|ChangeBundleReader
name|bundleReader
decl_stmt|;
DECL|field|commentsUtil
annotation|@
name|Inject
specifier|private
name|CommentsUtil
name|commentsUtil
decl_stmt|;
DECL|field|rebuilderWrapper
annotation|@
name|Inject
specifier|private
name|TestChangeRebuilderWrapper
name|rebuilderWrapper
decl_stmt|;
DECL|field|changeControlFactory
annotation|@
name|Inject
specifier|private
name|ChangeControl
operator|.
name|GenericFactory
name|changeControlFactory
decl_stmt|;
DECL|field|updateFactory
annotation|@
name|Inject
specifier|private
name|ChangeUpdate
operator|.
name|Factory
name|updateFactory
decl_stmt|;
DECL|field|internalUserFactory
annotation|@
name|Inject
specifier|private
name|InternalUser
operator|.
name|Factory
name|internalUserFactory
decl_stmt|;
DECL|field|migrator
specifier|private
name|PrimaryStorageMigrator
name|migrator
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|assume
argument_list|()
operator|.
name|that
argument_list|(
name|NoteDbMode
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|NoteDbMode
operator|.
name|READ_WRITE
argument_list|)
expr_stmt|;
name|db
operator|=
name|ReviewDbUtil
operator|.
name|unwrapDb
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|TestTimeUtil
operator|.
name|resetWithClockStep
argument_list|(
literal|1
argument_list|,
name|SECONDS
argument_list|)
expr_stmt|;
name|migrator
operator|=
name|newMigrator
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|newMigrator ( @ullable Retryer<NoteDbChangeState> ensureRebuiltRetryer)
specifier|private
name|PrimaryStorageMigrator
name|newMigrator
parameter_list|(
annotation|@
name|Nullable
name|Retryer
argument_list|<
name|NoteDbChangeState
argument_list|>
name|ensureRebuiltRetryer
parameter_list|)
block|{
return|return
operator|new
name|PrimaryStorageMigrator
argument_list|(
name|cfg
argument_list|,
name|Providers
operator|.
name|of
argument_list|(
name|db
argument_list|)
argument_list|,
name|repoManager
argument_list|,
name|allUsers
argument_list|,
name|rebuilderWrapper
argument_list|,
name|ensureRebuiltRetryer
argument_list|,
name|changeControlFactory
argument_list|,
name|queryProvider
argument_list|,
name|updateFactory
argument_list|,
name|internalUserFactory
argument_list|,
name|batchUpdateFactory
argument_list|)
return|;
block|}
annotation|@
name|After
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
name|TestTimeUtil
operator|.
name|useSystemTime
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|updateChange ()
specifier|public
name|void
name|updateChange
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|r
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|setNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|submit
argument_list|()
expr_stmt|;
name|ChangeInfo
name|info
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|info
operator|.
name|status
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ChangeStatus
operator|.
name|MERGED
argument_list|)
expr_stmt|;
name|ApprovalInfo
name|approval
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|info
operator|.
name|labels
operator|.
name|get
argument_list|(
literal|"Code-Review"
argument_list|)
operator|.
name|all
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|approval
operator|.
name|_accountId
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|admin
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|approval
operator|.
name|value
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|info
operator|.
name|messages
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Iterables
operator|.
name|getLast
argument_list|(
name|info
operator|.
name|messages
argument_list|)
operator|.
name|message
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"Change has been successfully merged by "
operator|+
name|admin
operator|.
name|fullName
argument_list|)
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|notesFactory
operator|.
name|create
argument_list|(
name|db
argument_list|,
name|project
argument_list|,
name|id
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|notes
operator|.
name|getChange
argument_list|()
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|Change
operator|.
name|Status
operator|.
name|MERGED
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|notes
operator|.
name|getChange
argument_list|()
operator|.
name|getNoteDbState
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|NoteDbChangeState
operator|.
name|NOTE_DB_PRIMARY_STATE
argument_list|)
expr_stmt|;
comment|// Writes weren't reflected in ReviewDb.
name|assertThat
argument_list|(
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
operator|.
name|getStatus
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|Change
operator|.
name|Status
operator|.
name|NEW
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|db
operator|.
name|patchSetApprovals
argument_list|()
operator|.
name|byChange
argument_list|(
name|id
argument_list|)
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|db
operator|.
name|changeMessages
argument_list|()
operator|.
name|byChange
argument_list|(
name|id
argument_list|)
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteDraftComment ()
specifier|public
name|void
name|deleteDraftComment
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|r
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|setNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|DraftInput
name|din
init|=
operator|new
name|DraftInput
argument_list|()
decl_stmt|;
name|din
operator|.
name|path
operator|=
name|PushOneCommit
operator|.
name|FILE_NAME
expr_stmt|;
name|din
operator|.
name|line
operator|=
literal|1
expr_stmt|;
name|din
operator|.
name|message
operator|=
literal|"A comment"
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|createDraft
argument_list|(
name|din
argument_list|)
expr_stmt|;
name|CommentInfo
name|di
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|drafts
argument_list|()
operator|.
name|get
argument_list|(
name|PushOneCommit
operator|.
name|FILE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|di
operator|.
name|message
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|din
operator|.
name|message
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|db
operator|.
name|patchComments
argument_list|()
operator|.
name|draftByChangeFileAuthor
argument_list|(
name|id
argument_list|,
name|din
operator|.
name|path
argument_list|,
name|admin
operator|.
name|id
argument_list|)
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|draft
argument_list|(
name|di
operator|.
name|id
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|drafts
argument_list|()
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteVote ()
specifier|public
name|void
name|deleteVote
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|r
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|setNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ApprovalInfo
argument_list|>
name|approvals
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|labels
operator|.
name|get
argument_list|(
literal|"Code-Review"
argument_list|)
operator|.
name|all
decl_stmt|;
name|assertThat
argument_list|(
name|approvals
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|approvals
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|value
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|reviewer
argument_list|(
name|admin
operator|.
name|id
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|deleteVote
argument_list|(
literal|"Code-Review"
argument_list|)
expr_stmt|;
name|approvals
operator|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|labels
operator|.
name|get
argument_list|(
literal|"Code-Review"
argument_list|)
operator|.
name|all
expr_stmt|;
name|assertThat
argument_list|(
name|approvals
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|approvals
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|value
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteVoteViaReview ()
specifier|public
name|void
name|deleteVoteViaReview
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|r
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|setNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ApprovalInfo
argument_list|>
name|approvals
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|labels
operator|.
name|get
argument_list|(
literal|"Code-Review"
argument_list|)
operator|.
name|all
decl_stmt|;
name|assertThat
argument_list|(
name|approvals
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|approvals
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|value
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|noScore
argument_list|()
argument_list|)
expr_stmt|;
name|approvals
operator|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|labels
operator|.
name|get
argument_list|(
literal|"Code-Review"
argument_list|)
operator|.
name|all
expr_stmt|;
name|assertThat
argument_list|(
name|approvals
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|approvals
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|value
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|deleteReviewer ()
specifier|public
name|void
name|deleteReviewer
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|r
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|setNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|addReviewer
argument_list|(
name|user
operator|.
name|id
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|getReviewers
argument_list|(
name|id
argument_list|)
argument_list|)
operator|.
name|containsExactly
argument_list|(
name|user
operator|.
name|id
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|reviewer
argument_list|(
name|user
operator|.
name|id
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|remove
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|getReviewers
argument_list|(
name|id
argument_list|)
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|readOnlyReviewDb ()
specifier|public
name|void
name|readOnlyReviewDb
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|r
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|testReadOnly
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|readOnlyNoteDb ()
specifier|public
name|void
name|readOnlyNoteDb
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|r
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|setNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|testReadOnly
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
DECL|method|testReadOnly (Change.Id id)
specifier|private
name|void
name|testReadOnly
parameter_list|(
name|Change
operator|.
name|Id
name|id
parameter_list|)
throws|throws
name|Exception
block|{
name|Timestamp
name|before
init|=
name|TimeUtil
operator|.
name|nowTs
argument_list|()
decl_stmt|;
name|Timestamp
name|until
init|=
operator|new
name|Timestamp
argument_list|(
name|before
operator|.
name|getTime
argument_list|()
operator|+
literal|1000
operator|*
literal|3600
argument_list|)
decl_stmt|;
comment|// Set read-only.
name|Change
name|c
init|=
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|c
argument_list|)
operator|.
name|named
argument_list|(
literal|"change "
operator|+
name|id
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|NoteDbChangeState
name|state
init|=
name|NoteDbChangeState
operator|.
name|parse
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|state
operator|=
name|state
operator|.
name|withReadOnlyUntil
argument_list|(
name|until
argument_list|)
expr_stmt|;
name|c
operator|.
name|setNoteDbState
argument_list|(
name|state
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|db
operator|.
name|changes
argument_list|()
operator|.
name|update
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|subject
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|PushOneCommit
operator|.
name|SUBJECT
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|topic
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
try|try
block|{
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|topic
argument_list|(
literal|"a-topic"
argument_list|)
expr_stmt|;
name|assert_
argument_list|()
operator|.
name|fail
argument_list|(
literal|"expected read-only exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RestApiException
name|e
parameter_list|)
block|{
name|Optional
argument_list|<
name|Throwable
argument_list|>
name|oe
init|=
name|Throwables
operator|.
name|getCausalChain
argument_list|(
name|e
argument_list|)
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|x
lambda|->
name|x
operator|instanceof
name|OrmRuntimeException
argument_list|)
operator|.
name|findFirst
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|oe
operator|.
name|isPresent
argument_list|()
argument_list|)
operator|.
name|named
argument_list|(
literal|"OrmRuntimeException in causal chain of "
operator|+
name|e
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|oe
operator|.
name|get
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|contains
argument_list|(
literal|"read-only"
argument_list|)
expr_stmt|;
block|}
name|assertThat
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|topic
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
name|TestTimeUtil
operator|.
name|setClock
argument_list|(
operator|new
name|Timestamp
argument_list|(
name|until
operator|.
name|getTime
argument_list|()
operator|+
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|subject
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|PushOneCommit
operator|.
name|SUBJECT
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|topic
argument_list|(
literal|"a-topic"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|topic
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"a-topic"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|migrateToNoteDb ()
specifier|public
name|void
name|migrateToNoteDb
parameter_list|()
throws|throws
name|Exception
block|{
name|testMigrateToNoteDb
argument_list|(
name|createChange
argument_list|()
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|migrateToNoteDbWithRebuildingFirst ()
specifier|public
name|void
name|migrateToNoteDbWithRebuildingFirst
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|r
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|Change
name|c
init|=
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|c
operator|.
name|setNoteDbState
argument_list|(
literal|"deadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
argument_list|)
expr_stmt|;
name|db
operator|.
name|changes
argument_list|()
operator|.
name|update
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|testMigrateToNoteDb
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
DECL|method|testMigrateToNoteDb (Change.Id id)
specifier|private
name|void
name|testMigrateToNoteDb
parameter_list|(
name|Change
operator|.
name|Id
name|id
parameter_list|)
throws|throws
name|Exception
block|{
name|assertThat
argument_list|(
name|PrimaryStorage
operator|.
name|of
argument_list|(
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|PrimaryStorage
operator|.
name|REVIEW_DB
argument_list|)
expr_stmt|;
name|migrator
operator|.
name|migrateToNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|assertNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|topic
argument_list|(
literal|"a-topic"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|topic
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"a-topic"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
operator|.
name|getTopic
argument_list|()
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|migrateToNoteDbFailsRebuildingOnceAndRetries ()
specifier|public
name|void
name|migrateToNoteDbFailsRebuildingOnceAndRetries
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
operator|.
name|Id
name|id
init|=
name|createChange
argument_list|()
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|Change
name|c
init|=
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|c
operator|.
name|setNoteDbState
argument_list|(
literal|"deadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
argument_list|)
expr_stmt|;
name|db
operator|.
name|changes
argument_list|()
operator|.
name|update
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|rebuilderWrapper
operator|.
name|failNextUpdate
argument_list|()
expr_stmt|;
name|migrator
operator|=
name|newMigrator
argument_list|(
name|RetryerBuilder
operator|.
expr|<
name|NoteDbChangeState
operator|>
name|newBuilder
argument_list|()
operator|.
name|retryIfException
argument_list|()
operator|.
name|withStopStrategy
argument_list|(
name|StopStrategies
operator|.
name|neverStop
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|migrator
operator|.
name|migrateToNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|assertNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|migrateToNoteDbFailsRebuildingAndStops ()
specifier|public
name|void
name|migrateToNoteDbFailsRebuildingAndStops
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
operator|.
name|Id
name|id
init|=
name|createChange
argument_list|()
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|Change
name|c
init|=
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|c
operator|.
name|setNoteDbState
argument_list|(
literal|"deadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
argument_list|)
expr_stmt|;
name|db
operator|.
name|changes
argument_list|()
operator|.
name|update
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|rebuilderWrapper
operator|.
name|failNextUpdate
argument_list|()
expr_stmt|;
name|migrator
operator|=
name|newMigrator
argument_list|(
name|RetryerBuilder
operator|.
expr|<
name|NoteDbChangeState
operator|>
name|newBuilder
argument_list|()
operator|.
name|retryIfException
argument_list|()
operator|.
name|withStopStrategy
argument_list|(
name|StopStrategies
operator|.
name|stopAfterAttempt
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|OrmException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"Retrying failed"
argument_list|)
expr_stmt|;
name|migrator
operator|.
name|migrateToNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|migrateToNoteDbMissingOldState ()
specifier|public
name|void
name|migrateToNoteDbMissingOldState
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|r
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|Change
name|c
init|=
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|c
operator|.
name|setNoteDbState
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|db
operator|.
name|changes
argument_list|()
operator|.
name|update
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|OrmRuntimeException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"no note_db_state"
argument_list|)
expr_stmt|;
name|migrator
operator|.
name|migrateToNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|migrateToNoteDbLeaseExpires ()
specifier|public
name|void
name|migrateToNoteDbLeaseExpires
parameter_list|()
throws|throws
name|Exception
block|{
name|TestTimeUtil
operator|.
name|resetWithClockStep
argument_list|(
literal|2
argument_list|,
name|DAYS
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|OrmRuntimeException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"read-only lease"
argument_list|)
expr_stmt|;
name|migrator
operator|.
name|migrateToNoteDbPrimary
argument_list|(
name|createChange
argument_list|()
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|migrateToNoteDbAlreadyReadOnly ()
specifier|public
name|void
name|migrateToNoteDbAlreadyReadOnly
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|r
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|Change
name|c
init|=
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|NoteDbChangeState
name|state
init|=
name|NoteDbChangeState
operator|.
name|parse
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|Timestamp
name|until
init|=
operator|new
name|Timestamp
argument_list|(
name|TimeUtil
operator|.
name|nowMs
argument_list|()
operator|+
name|MILLISECONDS
operator|.
name|convert
argument_list|(
literal|1
argument_list|,
name|DAYS
argument_list|)
argument_list|)
decl_stmt|;
name|state
operator|=
name|state
operator|.
name|withReadOnlyUntil
argument_list|(
name|until
argument_list|)
expr_stmt|;
name|c
operator|.
name|setNoteDbState
argument_list|(
name|state
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|db
operator|.
name|changes
argument_list|()
operator|.
name|update
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|OrmRuntimeException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"read-only until "
operator|+
name|until
argument_list|)
expr_stmt|;
name|migrator
operator|.
name|migrateToNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|migrateToNoteDbAlreadyMigrated ()
specifier|public
name|void
name|migrateToNoteDbAlreadyMigrated
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|r
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|PrimaryStorage
operator|.
name|of
argument_list|(
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|PrimaryStorage
operator|.
name|REVIEW_DB
argument_list|)
expr_stmt|;
name|migrator
operator|.
name|migrateToNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|assertNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|migrator
operator|.
name|migrateToNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|assertNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|rebuildReviewDb ()
specifier|public
name|void
name|rebuildReviewDb
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|createChange
argument_list|()
operator|.
name|getChange
argument_list|()
operator|.
name|change
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|c
operator|.
name|getId
argument_list|()
decl_stmt|;
name|CommentInput
name|cin
init|=
operator|new
name|CommentInput
argument_list|()
decl_stmt|;
name|cin
operator|.
name|line
operator|=
literal|1
expr_stmt|;
name|cin
operator|.
name|message
operator|=
literal|"Published comment"
expr_stmt|;
name|ReviewInput
name|rin
init|=
name|ReviewInput
operator|.
name|approve
argument_list|()
decl_stmt|;
name|rin
operator|.
name|comments
operator|=
name|ImmutableMap
operator|.
name|of
argument_list|(
name|PushOneCommit
operator|.
name|FILE_NAME
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|cin
argument_list|)
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|DraftInput
name|din
init|=
operator|new
name|DraftInput
argument_list|()
decl_stmt|;
name|din
operator|.
name|path
operator|=
name|PushOneCommit
operator|.
name|FILE_NAME
expr_stmt|;
name|din
operator|.
name|line
operator|=
literal|1
expr_stmt|;
name|din
operator|.
name|message
operator|=
literal|"Draft comment"
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|createDraft
argument_list|(
name|din
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|createDraft
argument_list|(
name|din
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|db
operator|.
name|changeMessages
argument_list|()
operator|.
name|byChange
argument_list|(
name|id
argument_list|)
argument_list|)
operator|.
name|isNotEmpty
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|db
operator|.
name|patchSets
argument_list|()
operator|.
name|byChange
argument_list|(
name|id
argument_list|)
argument_list|)
operator|.
name|isNotEmpty
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|db
operator|.
name|patchSetApprovals
argument_list|()
operator|.
name|byChange
argument_list|(
name|id
argument_list|)
argument_list|)
operator|.
name|isNotEmpty
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|db
operator|.
name|patchComments
argument_list|()
operator|.
name|byChange
argument_list|(
name|id
argument_list|)
argument_list|)
operator|.
name|isNotEmpty
argument_list|()
expr_stmt|;
name|ChangeBundle
name|noteDbBundle
init|=
name|ChangeBundle
operator|.
name|fromNotes
argument_list|(
name|commentsUtil
argument_list|,
name|notesFactory
operator|.
name|create
argument_list|(
name|db
argument_list|,
name|project
argument_list|,
name|id
argument_list|)
argument_list|)
decl_stmt|;
name|setNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|db
operator|.
name|changeMessages
argument_list|()
operator|.
name|delete
argument_list|(
name|db
operator|.
name|changeMessages
argument_list|()
operator|.
name|byChange
argument_list|(
name|id
argument_list|)
argument_list|)
expr_stmt|;
name|db
operator|.
name|patchSets
argument_list|()
operator|.
name|delete
argument_list|(
name|db
operator|.
name|patchSets
argument_list|()
operator|.
name|byChange
argument_list|(
name|id
argument_list|)
argument_list|)
expr_stmt|;
name|db
operator|.
name|patchSetApprovals
argument_list|()
operator|.
name|delete
argument_list|(
name|db
operator|.
name|patchSetApprovals
argument_list|()
operator|.
name|byChange
argument_list|(
name|id
argument_list|)
argument_list|)
expr_stmt|;
name|db
operator|.
name|patchComments
argument_list|()
operator|.
name|delete
argument_list|(
name|db
operator|.
name|patchComments
argument_list|()
operator|.
name|byChange
argument_list|(
name|id
argument_list|)
argument_list|)
expr_stmt|;
name|ChangeMessage
name|bogusMessage
init|=
name|ChangeMessagesUtil
operator|.
name|newMessage
argument_list|(
name|c
operator|.
name|currentPatchSetId
argument_list|()
argument_list|,
name|identifiedUserFactory
operator|.
name|create
argument_list|(
name|admin
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|,
name|TimeUtil
operator|.
name|nowTs
argument_list|()
argument_list|,
literal|"some message"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|db
operator|.
name|changeMessages
argument_list|()
operator|.
name|insert
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|bogusMessage
argument_list|)
argument_list|)
expr_stmt|;
name|rebuilderWrapper
operator|.
name|rebuildReviewDb
argument_list|(
name|db
argument_list|,
name|project
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|db
operator|.
name|changeMessages
argument_list|()
operator|.
name|byChange
argument_list|(
name|id
argument_list|)
argument_list|)
operator|.
name|isNotEmpty
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|db
operator|.
name|patchSets
argument_list|()
operator|.
name|byChange
argument_list|(
name|id
argument_list|)
argument_list|)
operator|.
name|isNotEmpty
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|db
operator|.
name|patchSetApprovals
argument_list|()
operator|.
name|byChange
argument_list|(
name|id
argument_list|)
argument_list|)
operator|.
name|isNotEmpty
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|db
operator|.
name|patchComments
argument_list|()
operator|.
name|byChange
argument_list|(
name|id
argument_list|)
argument_list|)
operator|.
name|isNotEmpty
argument_list|()
expr_stmt|;
name|ChangeBundle
name|reviewDbBundle
init|=
name|bundleReader
operator|.
name|fromReviewDb
argument_list|(
name|ReviewDbUtil
operator|.
name|unwrapDb
argument_list|(
name|db
argument_list|)
argument_list|,
name|id
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|reviewDbBundle
operator|.
name|differencesFrom
argument_list|(
name|noteDbBundle
argument_list|)
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|rebuildReviewDbRequiresNoteDbPrimary ()
specifier|public
name|void
name|rebuildReviewDbRequiresNoteDbPrimary
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
operator|.
name|Id
name|id
init|=
name|createChange
argument_list|()
operator|.
name|getChange
argument_list|()
operator|.
name|getId
argument_list|()
decl_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|OrmException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"primary storage of "
operator|+
name|id
operator|+
literal|" is REVIEW_DB"
argument_list|)
expr_stmt|;
name|rebuilderWrapper
operator|.
name|rebuildReviewDb
argument_list|(
name|db
argument_list|,
name|project
argument_list|,
name|id
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|migrateBackToReviewDbPrimary ()
specifier|public
name|void
name|migrateBackToReviewDbPrimary
parameter_list|()
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|createChange
argument_list|()
operator|.
name|getChange
argument_list|()
operator|.
name|change
argument_list|()
decl_stmt|;
name|Change
operator|.
name|Id
name|id
init|=
name|c
operator|.
name|getId
argument_list|()
decl_stmt|;
name|migrator
operator|.
name|migrateToNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|assertNoteDbPrimary
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|topic
argument_list|(
literal|"new-topic"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|topic
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"new-topic"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
operator|.
name|getTopic
argument_list|()
argument_list|)
operator|.
name|isNotEqualTo
argument_list|(
literal|"new-topic"
argument_list|)
expr_stmt|;
name|migrator
operator|.
name|migrateToReviewDbPrimary
argument_list|(
name|id
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|ObjectId
name|metaId
decl_stmt|;
try|try
init|(
name|Repository
name|repo
init|=
name|repoManager
operator|.
name|openRepository
argument_list|(
name|c
operator|.
name|getProject
argument_list|()
argument_list|)
init|;
name|RevWalk
name|rw
operator|=
operator|new
name|RevWalk
argument_list|(
name|repo
argument_list|)
init|)
block|{
name|metaId
operator|=
name|repo
operator|.
name|exactRef
argument_list|(
name|RefNames
operator|.
name|changeMetaRef
argument_list|(
name|id
argument_list|)
argument_list|)
operator|.
name|getObjectId
argument_list|()
expr_stmt|;
name|RevCommit
name|commit
init|=
name|rw
operator|.
name|parseCommit
argument_list|(
name|metaId
argument_list|)
decl_stmt|;
name|rw
operator|.
name|parseBody
argument_list|(
name|commit
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|commit
operator|.
name|getFullMessage
argument_list|()
argument_list|)
operator|.
name|contains
argument_list|(
literal|"Read-only-until: "
operator|+
name|formatTime
argument_list|(
name|serverIdent
operator|.
name|get
argument_list|()
argument_list|,
operator|new
name|Timestamp
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|NoteDbChangeState
name|state
init|=
name|NoteDbChangeState
operator|.
name|parse
argument_list|(
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|state
operator|.
name|getPrimaryStorage
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|PrimaryStorage
operator|.
name|REVIEW_DB
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|state
operator|.
name|getChangeMetaId
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|metaId
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|topic
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"new-topic"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
operator|.
name|getTopic
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"new-topic"
argument_list|)
expr_stmt|;
name|ChangeNotes
name|notes
init|=
name|notesFactory
operator|.
name|create
argument_list|(
name|db
argument_list|,
name|project
argument_list|,
name|id
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|notes
operator|.
name|getRevision
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|metaId
argument_list|)
expr_stmt|;
comment|// No rebuilding, change was up to date.
name|assertThat
argument_list|(
name|notes
operator|.
name|getReadOnlyUntil
argument_list|()
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|topic
argument_list|(
literal|"reviewdb-topic"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
operator|.
name|getTopic
argument_list|()
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"reviewdb-topic"
argument_list|)
expr_stmt|;
block|}
DECL|method|setNoteDbPrimary (Change.Id id)
specifier|private
name|void
name|setNoteDbPrimary
parameter_list|(
name|Change
operator|.
name|Id
name|id
parameter_list|)
throws|throws
name|Exception
block|{
name|Change
name|c
init|=
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|c
argument_list|)
operator|.
name|named
argument_list|(
literal|"change "
operator|+
name|id
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|NoteDbChangeState
name|state
init|=
name|NoteDbChangeState
operator|.
name|parse
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|state
operator|.
name|getPrimaryStorage
argument_list|()
argument_list|)
operator|.
name|named
argument_list|(
literal|"storage of "
operator|+
name|id
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|REVIEW_DB
argument_list|)
expr_stmt|;
try|try
init|(
name|Repository
name|changeRepo
init|=
name|repoManager
operator|.
name|openRepository
argument_list|(
name|c
operator|.
name|getProject
argument_list|()
argument_list|)
init|;
name|Repository
name|allUsersRepo
operator|=
name|repoManager
operator|.
name|openRepository
argument_list|(
name|allUsers
argument_list|)
init|)
block|{
name|assertThat
argument_list|(
name|state
operator|.
name|isUpToDate
argument_list|(
operator|new
name|RepoRefCache
argument_list|(
name|changeRepo
argument_list|)
argument_list|,
operator|new
name|RepoRefCache
argument_list|(
name|allUsersRepo
argument_list|)
argument_list|)
argument_list|)
operator|.
name|named
argument_list|(
literal|"change "
operator|+
name|id
operator|+
literal|" up to date"
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
block|}
name|c
operator|.
name|setNoteDbState
argument_list|(
name|NoteDbChangeState
operator|.
name|NOTE_DB_PRIMARY_STATE
argument_list|)
expr_stmt|;
name|db
operator|.
name|changes
argument_list|()
operator|.
name|update
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|c
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|assertNoteDbPrimary (Change.Id id)
specifier|private
name|void
name|assertNoteDbPrimary
parameter_list|(
name|Change
operator|.
name|Id
name|id
parameter_list|)
throws|throws
name|Exception
block|{
name|assertThat
argument_list|(
name|PrimaryStorage
operator|.
name|of
argument_list|(
name|db
operator|.
name|changes
argument_list|()
operator|.
name|get
argument_list|(
name|id
argument_list|)
argument_list|)
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|PrimaryStorage
operator|.
name|NOTE_DB
argument_list|)
expr_stmt|;
block|}
DECL|method|getReviewers (Change.Id id)
specifier|private
name|List
argument_list|<
name|Account
operator|.
name|Id
argument_list|>
name|getReviewers
parameter_list|(
name|Change
operator|.
name|Id
name|id
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|reviewers
operator|.
name|values
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|flatMap
argument_list|(
name|Collection
operator|::
name|stream
argument_list|)
operator|.
name|map
argument_list|(
name|a
lambda|->
operator|new
name|Account
operator|.
name|Id
argument_list|(
name|a
operator|.
name|_accountId
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

