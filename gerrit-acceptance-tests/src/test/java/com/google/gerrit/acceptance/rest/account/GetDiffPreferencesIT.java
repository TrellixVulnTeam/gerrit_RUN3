begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.rest.account
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|account
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractDaemonTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AccountCreator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|RestResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|RestSession
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|TestAccount
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountDiffPreference
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountDiffPreference
operator|.
name|Whitespace
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|Gson
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|reflect
operator|.
name|TypeToken
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|OrmException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|GetDiffPreferencesIT
specifier|public
class|class
name|GetDiffPreferencesIT
extends|extends
name|AbstractDaemonTest
block|{
annotation|@
name|Inject
DECL|field|accounts
specifier|private
name|AccountCreator
name|accounts
decl_stmt|;
DECL|field|admin
specifier|private
name|TestAccount
name|admin
decl_stmt|;
DECL|field|session
specifier|private
name|RestSession
name|session
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|admin
operator|=
name|accounts
operator|.
name|admin
argument_list|()
expr_stmt|;
name|session
operator|=
operator|new
name|RestSession
argument_list|(
name|server
argument_list|,
name|admin
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getDiffPreferencesOfNonExistingAccount_NotFound ()
specifier|public
name|void
name|getDiffPreferencesOfNonExistingAccount_NotFound
parameter_list|()
throws|throws
name|IOException
block|{
name|assertEquals
argument_list|(
name|HttpStatus
operator|.
name|SC_NOT_FOUND
argument_list|,
name|session
operator|.
name|get
argument_list|(
literal|"/accounts/non-existing/preferences.diff"
argument_list|)
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getDiffPreferences ()
specifier|public
name|void
name|getDiffPreferences
parameter_list|()
throws|throws
name|IOException
throws|,
name|OrmException
block|{
name|RestResponse
name|r
init|=
name|session
operator|.
name|get
argument_list|(
literal|"/accounts/"
operator|+
name|admin
operator|.
name|email
operator|+
literal|"/preferences.diff"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|HttpStatus
operator|.
name|SC_OK
argument_list|,
name|r
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|DiffPreferencesInfo
name|diffPreferences
init|=
operator|(
operator|new
name|Gson
argument_list|()
operator|)
operator|.
name|fromJson
argument_list|(
name|r
operator|.
name|getReader
argument_list|()
argument_list|,
operator|new
name|TypeToken
argument_list|<
name|DiffPreferencesInfo
argument_list|>
argument_list|()
block|{}
operator|.
name|getType
argument_list|()
argument_list|)
decl_stmt|;
name|assertDiffPreferences
argument_list|(
operator|new
name|AccountDiffPreference
argument_list|(
name|admin
operator|.
name|id
argument_list|)
argument_list|,
name|diffPreferences
argument_list|)
expr_stmt|;
block|}
DECL|method|assertDiffPreferences (AccountDiffPreference expected, DiffPreferencesInfo actual)
specifier|private
specifier|static
name|void
name|assertDiffPreferences
parameter_list|(
name|AccountDiffPreference
name|expected
parameter_list|,
name|DiffPreferencesInfo
name|actual
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expected
operator|.
name|getContext
argument_list|()
argument_list|,
name|actual
operator|.
name|context
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|isExpandAllComments
argument_list|()
argument_list|,
name|toBoolean
argument_list|(
name|actual
operator|.
name|expand_all_comments
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|getIgnoreWhitespace
argument_list|()
argument_list|,
name|actual
operator|.
name|ignore_whitespace
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|isIntralineDifference
argument_list|()
argument_list|,
name|toBoolean
argument_list|(
name|actual
operator|.
name|intraline_difference
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|getLineLength
argument_list|()
argument_list|,
name|actual
operator|.
name|line_length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|isManualReview
argument_list|()
argument_list|,
name|toBoolean
argument_list|(
name|actual
operator|.
name|manual_review
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|isRetainHeader
argument_list|()
argument_list|,
name|toBoolean
argument_list|(
name|actual
operator|.
name|retain_header
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|isShowLineEndings
argument_list|()
argument_list|,
name|toBoolean
argument_list|(
name|actual
operator|.
name|show_line_endings
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|isShowTabs
argument_list|()
argument_list|,
name|toBoolean
argument_list|(
name|actual
operator|.
name|show_tabs
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|isShowWhitespaceErrors
argument_list|()
argument_list|,
name|toBoolean
argument_list|(
name|actual
operator|.
name|show_whitespace_errors
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|isSkipDeleted
argument_list|()
argument_list|,
name|toBoolean
argument_list|(
name|actual
operator|.
name|skip_deleted
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|isSkipUncommented
argument_list|()
argument_list|,
name|toBoolean
argument_list|(
name|actual
operator|.
name|skip_uncommented
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|isSyntaxHighlighting
argument_list|()
argument_list|,
name|toBoolean
argument_list|(
name|actual
operator|.
name|syntax_highlighting
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|getTabSize
argument_list|()
argument_list|,
name|actual
operator|.
name|tab_size
argument_list|)
expr_stmt|;
block|}
DECL|method|toBoolean (Boolean b)
specifier|private
specifier|static
name|boolean
name|toBoolean
parameter_list|(
name|Boolean
name|b
parameter_list|)
block|{
if|if
condition|(
name|b
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
name|b
operator|.
name|booleanValue
argument_list|()
return|;
block|}
DECL|class|DiffPreferencesInfo
specifier|static
class|class
name|DiffPreferencesInfo
block|{
DECL|field|context
name|short
name|context
decl_stmt|;
DECL|field|expand_all_comments
name|Boolean
name|expand_all_comments
decl_stmt|;
DECL|field|ignore_whitespace
name|Whitespace
name|ignore_whitespace
decl_stmt|;
DECL|field|intraline_difference
name|Boolean
name|intraline_difference
decl_stmt|;
DECL|field|line_length
name|int
name|line_length
decl_stmt|;
DECL|field|manual_review
name|Boolean
name|manual_review
decl_stmt|;
DECL|field|retain_header
name|Boolean
name|retain_header
decl_stmt|;
DECL|field|show_line_endings
name|Boolean
name|show_line_endings
decl_stmt|;
DECL|field|show_tabs
name|Boolean
name|show_tabs
decl_stmt|;
DECL|field|show_whitespace_errors
name|Boolean
name|show_whitespace_errors
decl_stmt|;
DECL|field|skip_deleted
name|Boolean
name|skip_deleted
decl_stmt|;
DECL|field|skip_uncommented
name|Boolean
name|skip_uncommented
decl_stmt|;
DECL|field|syntax_highlighting
name|Boolean
name|syntax_highlighting
decl_stmt|;
DECL|field|tab_size
name|int
name|tab_size
decl_stmt|;
block|}
block|}
end_class

end_unit

