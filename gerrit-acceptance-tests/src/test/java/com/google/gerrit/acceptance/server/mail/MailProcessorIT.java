begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2016 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.server.mail
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|server
operator|.
name|mail
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterables
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ChangeInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ChangeMessageInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|CommentInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|mail
operator|.
name|MailUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|mail
operator|.
name|receive
operator|.
name|MailMessage
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|mail
operator|.
name|receive
operator|.
name|MailProcessor
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|ZoneId
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|ZonedDateTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|MailProcessorIT
specifier|public
class|class
name|MailProcessorIT
extends|extends
name|AbstractMailIT
block|{
DECL|field|mailProcessor
annotation|@
name|Inject
specifier|private
name|MailProcessor
name|mailProcessor
decl_stmt|;
annotation|@
name|Test
DECL|method|parseAndPersistChangeMessage ()
specifier|public
name|void
name|parseAndPersistChangeMessage
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChangeWithReview
argument_list|()
decl_stmt|;
name|ChangeInfo
name|changeInfo
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|CommentInfo
argument_list|>
name|comments
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|commentsAsList
argument_list|()
decl_stmt|;
name|String
name|ts
init|=
name|MailUtil
operator|.
name|rfcDateformatter
operator|.
name|format
argument_list|(
name|ZonedDateTime
operator|.
name|ofInstant
argument_list|(
name|comments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|updated
operator|.
name|toInstant
argument_list|()
argument_list|,
name|ZoneId
operator|.
name|of
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
comment|// Build Message
name|MailMessage
operator|.
name|Builder
name|b
init|=
name|messageBuilderWithDefaultFields
argument_list|()
decl_stmt|;
name|String
name|txt
init|=
name|newPlaintextBody
argument_list|(
name|canonicalWebUrl
operator|.
name|get
argument_list|()
operator|+
literal|"#/c/"
operator|+
name|changeInfo
operator|.
name|_number
operator|+
literal|"/1"
argument_list|,
literal|"Test Message"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|b
operator|.
name|textContent
argument_list|(
name|txt
operator|+
name|textFooterForChange
argument_list|(
name|changeInfo
operator|.
name|_number
argument_list|,
name|ts
argument_list|)
argument_list|)
expr_stmt|;
name|mailProcessor
operator|.
name|process
argument_list|(
name|b
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|ChangeMessageInfo
argument_list|>
name|messages
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|messages
decl_stmt|;
name|assertThat
argument_list|(
name|messages
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Iterables
operator|.
name|getLast
argument_list|(
name|messages
argument_list|)
operator|.
name|message
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"Patch Set 1:\n\nTest Message"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Iterables
operator|.
name|getLast
argument_list|(
name|messages
argument_list|)
operator|.
name|tag
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"mailMessageId=some id"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|parseAndPersistInlineComment ()
specifier|public
name|void
name|parseAndPersistInlineComment
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChangeWithReview
argument_list|()
decl_stmt|;
name|ChangeInfo
name|changeInfo
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|CommentInfo
argument_list|>
name|comments
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|commentsAsList
argument_list|()
decl_stmt|;
name|String
name|ts
init|=
name|MailUtil
operator|.
name|rfcDateformatter
operator|.
name|format
argument_list|(
name|ZonedDateTime
operator|.
name|ofInstant
argument_list|(
name|comments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|updated
operator|.
name|toInstant
argument_list|()
argument_list|,
name|ZoneId
operator|.
name|of
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
comment|// Build Message
name|MailMessage
operator|.
name|Builder
name|b
init|=
name|messageBuilderWithDefaultFields
argument_list|()
decl_stmt|;
name|String
name|txt
init|=
name|newPlaintextBody
argument_list|(
name|canonicalWebUrl
operator|.
name|get
argument_list|()
operator|+
literal|"#/c/"
operator|+
name|changeInfo
operator|.
name|_number
operator|+
literal|"/1"
argument_list|,
literal|null
argument_list|,
literal|"Some Inline Comment"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|b
operator|.
name|textContent
argument_list|(
name|txt
operator|+
name|textFooterForChange
argument_list|(
name|changeInfo
operator|.
name|_number
argument_list|,
name|ts
argument_list|)
argument_list|)
expr_stmt|;
name|mailProcessor
operator|.
name|process
argument_list|(
name|b
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// Assert messages
name|Collection
argument_list|<
name|ChangeMessageInfo
argument_list|>
name|messages
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|messages
decl_stmt|;
name|assertThat
argument_list|(
name|messages
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Iterables
operator|.
name|getLast
argument_list|(
name|messages
argument_list|)
operator|.
name|message
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"Patch Set 1:\n\n(1 comment)"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Iterables
operator|.
name|getLast
argument_list|(
name|messages
argument_list|)
operator|.
name|tag
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"mailMessageId=some id"
argument_list|)
expr_stmt|;
comment|// Assert comment
name|comments
operator|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|commentsAsList
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|comments
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|comments
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|message
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"Some Inline Comment"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|comments
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|tag
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"mailMessageId=some id"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|comments
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|inReplyTo
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|comments
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|id
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|parseAndPersistFileComment ()
specifier|public
name|void
name|parseAndPersistFileComment
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChangeWithReview
argument_list|()
decl_stmt|;
name|ChangeInfo
name|changeInfo
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|CommentInfo
argument_list|>
name|comments
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|commentsAsList
argument_list|()
decl_stmt|;
name|String
name|ts
init|=
name|MailUtil
operator|.
name|rfcDateformatter
operator|.
name|format
argument_list|(
name|ZonedDateTime
operator|.
name|ofInstant
argument_list|(
name|comments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|updated
operator|.
name|toInstant
argument_list|()
argument_list|,
name|ZoneId
operator|.
name|of
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
comment|// Build Message
name|MailMessage
operator|.
name|Builder
name|b
init|=
name|messageBuilderWithDefaultFields
argument_list|()
decl_stmt|;
name|String
name|txt
init|=
name|newPlaintextBody
argument_list|(
name|canonicalWebUrl
operator|.
name|get
argument_list|()
operator|+
literal|"#/c/"
operator|+
name|changeInfo
operator|.
name|_number
operator|+
literal|"/1"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|"Some Comment on File 1"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|b
operator|.
name|textContent
argument_list|(
name|txt
operator|+
name|textFooterForChange
argument_list|(
name|changeInfo
operator|.
name|_number
argument_list|,
name|ts
argument_list|)
argument_list|)
expr_stmt|;
name|mailProcessor
operator|.
name|process
argument_list|(
name|b
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// Assert messages
name|Collection
argument_list|<
name|ChangeMessageInfo
argument_list|>
name|messages
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|messages
decl_stmt|;
name|assertThat
argument_list|(
name|messages
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Iterables
operator|.
name|getLast
argument_list|(
name|messages
argument_list|)
operator|.
name|message
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"Patch Set 1:\n\n(1 comment)"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Iterables
operator|.
name|getLast
argument_list|(
name|messages
argument_list|)
operator|.
name|tag
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"mailMessageId=some id"
argument_list|)
expr_stmt|;
comment|// Assert comment
name|comments
operator|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|commentsAsList
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|comments
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|comments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|message
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"Some Comment on File 1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|comments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|inReplyTo
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|comments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|tag
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"mailMessageId=some id"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|comments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|path
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|"gerrit-server/test.txt"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|parseAndPersistMessageTwice ()
specifier|public
name|void
name|parseAndPersistMessageTwice
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChangeWithReview
argument_list|()
decl_stmt|;
name|ChangeInfo
name|changeInfo
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|CommentInfo
argument_list|>
name|comments
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|commentsAsList
argument_list|()
decl_stmt|;
name|String
name|ts
init|=
name|MailUtil
operator|.
name|rfcDateformatter
operator|.
name|format
argument_list|(
name|ZonedDateTime
operator|.
name|ofInstant
argument_list|(
name|comments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|updated
operator|.
name|toInstant
argument_list|()
argument_list|,
name|ZoneId
operator|.
name|of
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
comment|// Build Message
name|MailMessage
operator|.
name|Builder
name|b
init|=
name|messageBuilderWithDefaultFields
argument_list|()
decl_stmt|;
name|String
name|txt
init|=
name|newPlaintextBody
argument_list|(
name|canonicalWebUrl
operator|.
name|get
argument_list|()
operator|+
literal|"#/c/"
operator|+
name|changeInfo
operator|.
name|_number
operator|+
literal|"/1"
argument_list|,
literal|null
argument_list|,
literal|"Some Inline Comment"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|b
operator|.
name|textContent
argument_list|(
name|txt
operator|+
name|textFooterForChange
argument_list|(
name|changeInfo
operator|.
name|_number
argument_list|,
name|ts
argument_list|)
argument_list|)
expr_stmt|;
name|mailProcessor
operator|.
name|process
argument_list|(
name|b
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|comments
operator|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|commentsAsList
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|comments
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
comment|// Check that the comment has not been persisted a second time
name|mailProcessor
operator|.
name|process
argument_list|(
name|b
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|comments
operator|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|commentsAsList
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|comments
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|parseAndPersistMessageFromInactiveAccount ()
specifier|public
name|void
name|parseAndPersistMessageFromInactiveAccount
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChangeWithReview
argument_list|()
decl_stmt|;
name|ChangeInfo
name|changeInfo
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|CommentInfo
argument_list|>
name|comments
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|commentsAsList
argument_list|()
decl_stmt|;
name|String
name|ts
init|=
name|MailUtil
operator|.
name|rfcDateformatter
operator|.
name|format
argument_list|(
name|ZonedDateTime
operator|.
name|ofInstant
argument_list|(
name|comments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|updated
operator|.
name|toInstant
argument_list|()
argument_list|,
name|ZoneId
operator|.
name|of
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|comments
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|2
argument_list|)
expr_stmt|;
comment|// Build Message
name|MailMessage
operator|.
name|Builder
name|b
init|=
name|messageBuilderWithDefaultFields
argument_list|()
decl_stmt|;
name|String
name|txt
init|=
name|newPlaintextBody
argument_list|(
name|canonicalWebUrl
operator|.
name|get
argument_list|()
operator|+
literal|"#/c/"
operator|+
name|changeInfo
operator|.
name|_number
operator|+
literal|"/1"
argument_list|,
literal|null
argument_list|,
literal|"Some Inline Comment"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|b
operator|.
name|textContent
argument_list|(
name|txt
operator|+
name|textFooterForChange
argument_list|(
name|changeInfo
operator|.
name|_number
argument_list|,
name|ts
argument_list|)
argument_list|)
expr_stmt|;
comment|// Set account state to inactive
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|id
argument_list|(
literal|"user"
argument_list|)
operator|.
name|setActive
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|mailProcessor
operator|.
name|process
argument_list|(
name|b
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|comments
operator|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|commentsAsList
argument_list|()
expr_stmt|;
comment|// Check that comment size has not changed
name|assertThat
argument_list|(
name|comments
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|2
argument_list|)
expr_stmt|;
comment|// Reset
name|gApi
operator|.
name|accounts
argument_list|()
operator|.
name|id
argument_list|(
literal|"user"
argument_list|)
operator|.
name|setActive
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|sendNotificationAfterPersistingComments ()
specifier|public
name|void
name|sendNotificationAfterPersistingComments
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChangeWithReview
argument_list|()
decl_stmt|;
name|ChangeInfo
name|changeInfo
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|CommentInfo
argument_list|>
name|comments
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|commentsAsList
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|comments
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|String
name|ts
init|=
name|MailUtil
operator|.
name|rfcDateformatter
operator|.
name|format
argument_list|(
name|ZonedDateTime
operator|.
name|ofInstant
argument_list|(
name|comments
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|updated
operator|.
name|toInstant
argument_list|()
argument_list|,
name|ZoneId
operator|.
name|of
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
comment|// Build Message
name|String
name|txt
init|=
name|newPlaintextBody
argument_list|(
name|canonicalWebUrl
operator|.
name|get
argument_list|()
operator|+
literal|"#/c/"
operator|+
name|changeInfo
operator|.
name|_number
operator|+
literal|"/1"
argument_list|,
literal|"Test Message"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|MailMessage
operator|.
name|Builder
name|b
init|=
name|messageBuilderWithDefaultFields
argument_list|()
operator|.
name|from
argument_list|(
name|user
operator|.
name|emailAddress
argument_list|)
operator|.
name|textContent
argument_list|(
name|txt
operator|+
name|textFooterForChange
argument_list|(
name|changeInfo
operator|.
name|_number
argument_list|,
name|ts
argument_list|)
argument_list|)
decl_stmt|;
name|sender
operator|.
name|clear
argument_list|()
expr_stmt|;
name|mailProcessor
operator|.
name|process
argument_list|(
name|b
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotifyTo
argument_list|(
name|admin
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

