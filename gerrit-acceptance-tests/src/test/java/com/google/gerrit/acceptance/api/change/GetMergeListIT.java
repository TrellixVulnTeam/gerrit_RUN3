begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2016 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.api.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|api
operator|.
name|change
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|Constants
operator|.
name|HEAD
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractDaemonTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|NoHttpd
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|PushOneCommit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|CommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|lib
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
annotation|@
name|NoHttpd
DECL|class|GetMergeListIT
specifier|public
class|class
name|GetMergeListIT
extends|extends
name|AbstractDaemonTest
block|{
annotation|@
name|Test
DECL|method|getMergeList ()
specifier|public
name|void
name|getMergeList
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectId
name|initial
init|=
name|repo
argument_list|()
operator|.
name|exactRef
argument_list|(
name|HEAD
argument_list|)
operator|.
name|getLeaf
argument_list|()
operator|.
name|getObjectId
argument_list|()
decl_stmt|;
name|PushOneCommit
operator|.
name|Result
name|gp1
init|=
name|pushFactory
operator|.
name|create
argument_list|(
name|db
argument_list|,
name|admin
operator|.
name|getIdent
argument_list|()
argument_list|,
name|testRepo
argument_list|,
literal|"grand parent 1"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"foo"
argument_list|,
literal|"foo-1.1"
argument_list|,
literal|"bar"
argument_list|,
literal|"bar-1.1"
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"refs/for/master"
argument_list|)
decl_stmt|;
name|PushOneCommit
operator|.
name|Result
name|p1
init|=
name|pushFactory
operator|.
name|create
argument_list|(
name|db
argument_list|,
name|admin
operator|.
name|getIdent
argument_list|()
argument_list|,
name|testRepo
argument_list|,
literal|"parent 1"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"foo"
argument_list|,
literal|"foo-1.2"
argument_list|,
literal|"bar"
argument_list|,
literal|"bar-1.2"
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"refs/for/master"
argument_list|)
decl_stmt|;
comment|// reset HEAD in order to create a sibling of the first change
name|testRepo
operator|.
name|reset
argument_list|(
name|initial
argument_list|)
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|gp2
init|=
name|pushFactory
operator|.
name|create
argument_list|(
name|db
argument_list|,
name|admin
operator|.
name|getIdent
argument_list|()
argument_list|,
name|testRepo
argument_list|,
literal|"grand parent 1"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"foo"
argument_list|,
literal|"foo-2.1"
argument_list|,
literal|"bar"
argument_list|,
literal|"bar-2.1"
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"refs/for/master"
argument_list|)
decl_stmt|;
name|PushOneCommit
operator|.
name|Result
name|p2
init|=
name|pushFactory
operator|.
name|create
argument_list|(
name|db
argument_list|,
name|admin
operator|.
name|getIdent
argument_list|()
argument_list|,
name|testRepo
argument_list|,
literal|"parent 2"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"foo"
argument_list|,
literal|"foo-2.2"
argument_list|,
literal|"bar"
argument_list|,
literal|"bar-2.2"
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
literal|"refs/for/master"
argument_list|)
decl_stmt|;
name|PushOneCommit
name|m
init|=
name|pushFactory
operator|.
name|create
argument_list|(
name|db
argument_list|,
name|admin
operator|.
name|getIdent
argument_list|()
argument_list|,
name|testRepo
argument_list|,
literal|"merge"
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"foo"
argument_list|,
literal|"foo-1"
argument_list|,
literal|"bar"
argument_list|,
literal|"bar-2"
argument_list|)
argument_list|)
decl_stmt|;
name|m
operator|.
name|setParents
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|(
name|p1
operator|.
name|getCommit
argument_list|()
argument_list|,
name|p2
operator|.
name|getCommit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|result
init|=
name|m
operator|.
name|to
argument_list|(
literal|"refs/for/master"
argument_list|)
decl_stmt|;
name|result
operator|.
name|assertOkStatus
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|CommitInfo
argument_list|>
name|mergeList
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|result
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|getMergeList
argument_list|()
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|mergeList
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mergeList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|commit
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|p2
operator|.
name|getCommit
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mergeList
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|commit
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|gp2
operator|.
name|getCommit
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|mergeList
operator|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|result
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|getMergeList
argument_list|()
operator|.
name|withUninterestingParent
argument_list|(
literal|2
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|mergeList
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mergeList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|commit
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|p1
operator|.
name|getCommit
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|mergeList
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|commit
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|gp1
operator|.
name|getCommit
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

