begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2014 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.rest.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|change
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|git
operator|.
name|GitUtil
operator|.
name|cloneProject
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|git
operator|.
name|GitUtil
operator|.
name|createProject
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|git
operator|.
name|GitUtil
operator|.
name|initSsh
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|Util
operator|.
name|REGISTERED
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|Util
operator|.
name|category
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|Util
operator|.
name|grant
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|Util
operator|.
name|value
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractDaemonTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AccountCreator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|RestResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|RestSession
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|SshSession
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|TestAccount
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|git
operator|.
name|PushOneCommit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|changes
operator|.
name|ListChangesOption
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|LabelType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|server
operator|.
name|ReviewDb
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|OutputFormat
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|change
operator|.
name|ChangeJson
operator|.
name|LabelInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|config
operator|.
name|AllProjectsName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|MetaDataUpdate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|ProjectConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|ProjectCache
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gwtorm
operator|.
name|server
operator|.
name|SchemaFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|api
operator|.
name|Git
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jgit
operator|.
name|api
operator|.
name|errors
operator|.
name|GitAPIException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
DECL|class|CustomLabelIT
specifier|public
class|class
name|CustomLabelIT
extends|extends
name|AbstractDaemonTest
block|{
annotation|@
name|Inject
DECL|field|projectCache
specifier|private
name|ProjectCache
name|projectCache
decl_stmt|;
annotation|@
name|Inject
DECL|field|allProjects
specifier|private
name|AllProjectsName
name|allProjects
decl_stmt|;
annotation|@
name|Inject
DECL|field|metaDataUpdateFactory
specifier|private
name|MetaDataUpdate
operator|.
name|Server
name|metaDataUpdateFactory
decl_stmt|;
annotation|@
name|Inject
DECL|field|accounts
specifier|private
name|AccountCreator
name|accounts
decl_stmt|;
annotation|@
name|Inject
DECL|field|reviewDbProvider
specifier|private
name|SchemaFactory
argument_list|<
name|ReviewDb
argument_list|>
name|reviewDbProvider
decl_stmt|;
DECL|field|admin
specifier|private
name|TestAccount
name|admin
decl_stmt|;
DECL|field|session
specifier|private
name|RestSession
name|session
decl_stmt|;
DECL|field|git
specifier|private
name|Git
name|git
decl_stmt|;
DECL|field|db
specifier|private
name|ReviewDb
name|db
decl_stmt|;
DECL|field|Q
specifier|private
specifier|final
name|LabelType
name|Q
init|=
name|category
argument_list|(
literal|"CustomLabel"
argument_list|,
name|value
argument_list|(
literal|1
argument_list|,
literal|"Positive"
argument_list|)
argument_list|,
name|value
argument_list|(
literal|0
argument_list|,
literal|"No score"
argument_list|)
argument_list|,
name|value
argument_list|(
operator|-
literal|1
argument_list|,
literal|"Negative"
argument_list|)
argument_list|)
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|admin
operator|=
name|accounts
operator|.
name|admin
argument_list|()
expr_stmt|;
name|session
operator|=
operator|new
name|RestSession
argument_list|(
name|server
argument_list|,
name|admin
argument_list|)
expr_stmt|;
name|initSsh
argument_list|(
name|admin
argument_list|)
expr_stmt|;
name|Project
operator|.
name|NameKey
name|project
init|=
operator|new
name|Project
operator|.
name|NameKey
argument_list|(
literal|"p"
argument_list|)
decl_stmt|;
name|SshSession
name|sshSession
init|=
operator|new
name|SshSession
argument_list|(
name|server
argument_list|,
name|admin
argument_list|)
decl_stmt|;
name|createProject
argument_list|(
name|sshSession
argument_list|,
name|project
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|git
operator|=
name|cloneProject
argument_list|(
name|sshSession
operator|.
name|getUrl
argument_list|()
operator|+
literal|"/"
operator|+
name|project
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|sshSession
operator|.
name|close
argument_list|()
expr_stmt|;
name|db
operator|=
name|reviewDbProvider
operator|.
name|open
argument_list|()
expr_stmt|;
name|ProjectConfig
name|cfg
init|=
name|projectCache
operator|.
name|checkedGet
argument_list|(
name|allProjects
argument_list|)
operator|.
name|getConfig
argument_list|()
decl_stmt|;
name|grant
argument_list|(
name|cfg
argument_list|,
name|Permission
operator|.
name|forLabel
argument_list|(
name|Q
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|,
operator|+
literal|1
argument_list|,
name|REGISTERED
argument_list|,
literal|"refs/heads/*"
argument_list|)
expr_stmt|;
name|saveProjectConfig
argument_list|(
name|cfg
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|cleanup ()
specifier|public
name|void
name|cleanup
parameter_list|()
block|{
name|db
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|customLabelNoOp_NegativeVoteNotBlock ()
specifier|public
name|void
name|customLabelNoOp_NegativeVoteNotBlock
parameter_list|()
throws|throws
name|Exception
block|{
name|Q
operator|.
name|setFunctionName
argument_list|(
literal|"NoOp"
argument_list|)
expr_stmt|;
name|saveLabelConfig
argument_list|()
expr_stmt|;
name|ChangeInfo
name|c
init|=
name|get
argument_list|(
name|disliked
argument_list|(
name|change
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|LabelInfo
name|q
init|=
name|c
operator|.
name|labels
operator|.
name|get
argument_list|(
name|Q
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|q
operator|.
name|all
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|q
operator|.
name|rejected
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|q
operator|.
name|blocking
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|customLabelNoBlock_NegativeVoteNotBlock ()
specifier|public
name|void
name|customLabelNoBlock_NegativeVoteNotBlock
parameter_list|()
throws|throws
name|Exception
block|{
name|Q
operator|.
name|setFunctionName
argument_list|(
literal|"NoBlock"
argument_list|)
expr_stmt|;
name|saveLabelConfig
argument_list|()
expr_stmt|;
name|ChangeInfo
name|c
init|=
name|get
argument_list|(
name|disliked
argument_list|(
name|change
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|LabelInfo
name|q
init|=
name|c
operator|.
name|labels
operator|.
name|get
argument_list|(
name|Q
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|q
operator|.
name|all
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|q
operator|.
name|rejected
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|q
operator|.
name|blocking
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|customLabelMaxNoBlock_NegativeVoteNotBlock ()
specifier|public
name|void
name|customLabelMaxNoBlock_NegativeVoteNotBlock
parameter_list|()
throws|throws
name|Exception
block|{
name|Q
operator|.
name|setFunctionName
argument_list|(
literal|"MaxNoBlock"
argument_list|)
expr_stmt|;
name|saveLabelConfig
argument_list|()
expr_stmt|;
name|ChangeInfo
name|c
init|=
name|get
argument_list|(
name|disliked
argument_list|(
name|change
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|LabelInfo
name|q
init|=
name|c
operator|.
name|labels
operator|.
name|get
argument_list|(
name|Q
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|q
operator|.
name|all
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|q
operator|.
name|rejected
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|q
operator|.
name|blocking
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|customLabelAnyWithBlock_NegativeVoteBlock ()
specifier|public
name|void
name|customLabelAnyWithBlock_NegativeVoteBlock
parameter_list|()
throws|throws
name|Exception
block|{
name|Q
operator|.
name|setFunctionName
argument_list|(
literal|"AnyWithBlock"
argument_list|)
expr_stmt|;
name|saveLabelConfig
argument_list|()
expr_stmt|;
name|ChangeInfo
name|c
init|=
name|get
argument_list|(
name|disliked
argument_list|(
name|change
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|LabelInfo
name|q
init|=
name|c
operator|.
name|labels
operator|.
name|get
argument_list|(
name|Q
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|q
operator|.
name|all
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|q
operator|.
name|disliked
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|q
operator|.
name|rejected
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|q
operator|.
name|blocking
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|customLabelMaxWithBlock_NegativeVoteBlock ()
specifier|public
name|void
name|customLabelMaxWithBlock_NegativeVoteBlock
parameter_list|()
throws|throws
name|Exception
block|{
name|saveLabelConfig
argument_list|()
expr_stmt|;
name|ChangeInfo
name|c
init|=
name|get
argument_list|(
name|disliked
argument_list|(
name|change
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|LabelInfo
name|q
init|=
name|c
operator|.
name|labels
operator|.
name|get
argument_list|(
name|Q
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|q
operator|.
name|all
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|q
operator|.
name|disliked
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|q
operator|.
name|rejected
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|q
operator|.
name|blocking
argument_list|)
expr_stmt|;
block|}
DECL|method|disliked (String changeId)
specifier|private
name|String
name|disliked
parameter_list|(
name|String
name|changeId
parameter_list|)
throws|throws
name|IOException
block|{
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|labels
operator|=
name|Maps
operator|.
name|newHashMap
argument_list|()
expr_stmt|;
name|in
operator|.
name|labels
operator|.
name|put
argument_list|(
name|Q
operator|.
name|getName
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|RestResponse
name|r
init|=
name|session
operator|.
name|post
argument_list|(
literal|"/changes/"
operator|+
name|changeId
operator|+
literal|"/revisions/current/review"
argument_list|,
name|in
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|HttpStatus
operator|.
name|SC_OK
argument_list|,
name|r
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|consume
argument_list|()
expr_stmt|;
return|return
name|changeId
return|;
block|}
DECL|method|get (String changeId)
specifier|private
name|ChangeInfo
name|get
parameter_list|(
name|String
name|changeId
parameter_list|)
throws|throws
name|IOException
block|{
name|RestResponse
name|r
init|=
name|session
operator|.
name|get
argument_list|(
literal|"/changes/"
operator|+
name|changeId
operator|+
literal|"?o="
operator|+
name|ListChangesOption
operator|.
name|DETAILED_LABELS
operator|+
literal|"&o="
operator|+
name|ListChangesOption
operator|.
name|LABELS
argument_list|)
decl_stmt|;
return|return
name|OutputFormat
operator|.
name|JSON
operator|.
name|newGson
argument_list|()
operator|.
name|fromJson
argument_list|(
name|r
operator|.
name|getReader
argument_list|()
argument_list|,
name|ChangeInfo
operator|.
name|class
argument_list|)
return|;
block|}
DECL|method|change ()
specifier|private
name|String
name|change
parameter_list|()
throws|throws
name|GitAPIException
throws|,
name|IOException
block|{
name|PushOneCommit
name|push
init|=
operator|new
name|PushOneCommit
argument_list|(
name|db
argument_list|,
name|admin
operator|.
name|getIdent
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|push
operator|.
name|to
argument_list|(
name|git
argument_list|,
literal|"refs/for/master"
argument_list|)
operator|.
name|getChangeId
argument_list|()
return|;
block|}
DECL|method|saveLabelConfig ()
specifier|private
name|void
name|saveLabelConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|ProjectConfig
name|cfg
init|=
name|projectCache
operator|.
name|checkedGet
argument_list|(
name|allProjects
argument_list|)
operator|.
name|getConfig
argument_list|()
decl_stmt|;
name|cfg
operator|.
name|getLabelSections
argument_list|()
operator|.
name|put
argument_list|(
name|Q
operator|.
name|getName
argument_list|()
argument_list|,
name|Q
argument_list|)
expr_stmt|;
name|saveProjectConfig
argument_list|(
name|cfg
argument_list|)
expr_stmt|;
block|}
DECL|method|saveProjectConfig (ProjectConfig cfg)
specifier|private
name|void
name|saveProjectConfig
parameter_list|(
name|ProjectConfig
name|cfg
parameter_list|)
throws|throws
name|Exception
block|{
name|MetaDataUpdate
name|md
init|=
name|metaDataUpdateFactory
operator|.
name|create
argument_list|(
name|allProjects
argument_list|)
decl_stmt|;
try|try
block|{
name|cfg
operator|.
name|commit
argument_list|(
name|md
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|md
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|projectCache
operator|.
name|evict
argument_list|(
name|allProjects
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

