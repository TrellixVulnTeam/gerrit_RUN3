begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2013 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.rest.change
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|change
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|SystemGroupBackend
operator|.
name|ANONYMOUS_USERS
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
operator|.
name|toList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterables
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractDaemonTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|GerritConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|Sandboxed
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|TestAccount
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|GlobalCapability
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|GroupDescription
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|GroupDescriptions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ChangeInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|GroupInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|SuggestedReviewerInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|RestApiException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|TopLevelResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|Url
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountGroup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|CreateGroup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|GroupsCollection
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
annotation|@
name|Sandboxed
DECL|class|SuggestReviewersIT
specifier|public
class|class
name|SuggestReviewersIT
extends|extends
name|AbstractDaemonTest
block|{
DECL|field|createGroupFactory
annotation|@
name|Inject
specifier|private
name|CreateGroup
operator|.
name|Factory
name|createGroupFactory
decl_stmt|;
DECL|field|groups
annotation|@
name|Inject
specifier|private
name|GroupsCollection
name|groups
decl_stmt|;
DECL|field|group1
specifier|private
name|AccountGroup
name|group1
decl_stmt|;
DECL|field|group2
specifier|private
name|AccountGroup
name|group2
decl_stmt|;
DECL|field|group3
specifier|private
name|AccountGroup
name|group3
decl_stmt|;
DECL|field|user1
specifier|private
name|TestAccount
name|user1
decl_stmt|;
DECL|field|user2
specifier|private
name|TestAccount
name|user2
decl_stmt|;
DECL|field|user3
specifier|private
name|TestAccount
name|user3
decl_stmt|;
DECL|field|user4
specifier|private
name|TestAccount
name|user4
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|group1
operator|=
name|group
argument_list|(
literal|"users1"
argument_list|)
expr_stmt|;
name|group2
operator|=
name|group
argument_list|(
literal|"users2"
argument_list|)
expr_stmt|;
name|group3
operator|=
name|group
argument_list|(
literal|"users3"
argument_list|)
expr_stmt|;
name|user1
operator|=
name|user
argument_list|(
literal|"user1"
argument_list|,
literal|"First1 Last1"
argument_list|,
name|group1
argument_list|)
expr_stmt|;
name|user2
operator|=
name|user
argument_list|(
literal|"user2"
argument_list|,
literal|"First2 Last2"
argument_list|,
name|group2
argument_list|)
expr_stmt|;
name|user3
operator|=
name|user
argument_list|(
literal|"user3"
argument_list|,
literal|"First3 Last3"
argument_list|,
name|group1
argument_list|,
name|group2
argument_list|)
expr_stmt|;
name|user4
operator|=
name|user
argument_list|(
literal|"jdoe"
argument_list|,
literal|"John Doe"
argument_list|,
literal|"JDOE"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|GerritConfig
argument_list|(
name|name
operator|=
literal|"accounts.visibility"
argument_list|,
name|value
operator|=
literal|"NONE"
argument_list|)
DECL|method|suggestReviewersNoResult1 ()
specifier|public
name|void
name|suggestReviewersNoResult1
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|SuggestedReviewerInfo
argument_list|>
name|reviewers
init|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|name
argument_list|(
literal|"u"
argument_list|)
argument_list|,
literal|6
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|GerritConfig
argument_list|(
name|name
operator|=
literal|"suggest.from"
argument_list|,
name|value
operator|=
literal|"1"
argument_list|)
annotation|@
name|GerritConfig
argument_list|(
name|name
operator|=
literal|"accounts.visibility"
argument_list|,
name|value
operator|=
literal|"NONE"
argument_list|)
DECL|method|suggestReviewersNoResult2 ()
specifier|public
name|void
name|suggestReviewersNoResult2
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|SuggestedReviewerInfo
argument_list|>
name|reviewers
init|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|name
argument_list|(
literal|"u"
argument_list|)
argument_list|,
literal|6
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|suggestReviewersChange ()
specifier|public
name|void
name|suggestReviewersChange
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|SuggestedReviewerInfo
argument_list|>
name|reviewers
init|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|name
argument_list|(
literal|"u"
argument_list|)
argument_list|,
literal|6
argument_list|)
decl_stmt|;
name|assertReviewers
argument_list|(
name|reviewers
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|user1
argument_list|,
name|user2
argument_list|,
name|user3
argument_list|)
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|group1
argument_list|,
name|group2
argument_list|,
name|group3
argument_list|)
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|name
argument_list|(
literal|"u"
argument_list|)
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|assertReviewers
argument_list|(
name|reviewers
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|user1
argument_list|,
name|user2
argument_list|,
name|user3
argument_list|)
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|group1
argument_list|,
name|group2
argument_list|)
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|group3
operator|.
name|getName
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertReviewers
argument_list|(
name|reviewers
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|()
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|group3
argument_list|)
argument_list|)
expr_stmt|;
comment|// Suggested accounts are ordered by activity. All users have no activity,
comment|// hence we don't know which of the matching accounts we get when the query
comment|// is limited to 1.
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|name
argument_list|(
literal|"u"
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|account
argument_list|)
operator|.
name|isNotNull
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|(
name|reviewers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|account
operator|.
name|_accountId
argument_list|)
argument_list|)
operator|.
name|containsAnyIn
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|(
name|user1
argument_list|,
name|user2
argument_list|,
name|user3
argument_list|)
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|u
lambda|->
name|u
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|GerritConfig
argument_list|(
name|name
operator|=
literal|"accounts.visibility"
argument_list|,
name|value
operator|=
literal|"SAME_GROUP"
argument_list|)
DECL|method|suggestReviewersSameGroupVisibility ()
specifier|public
name|void
name|suggestReviewersSameGroupVisibility
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|SuggestedReviewerInfo
argument_list|>
name|reviewers
decl_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|user2
operator|.
name|username
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|reviewers
argument_list|)
operator|.
name|account
operator|.
name|name
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user2
operator|.
name|fullName
argument_list|)
expr_stmt|;
name|setApiUser
argument_list|(
name|user1
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|user2
operator|.
name|fullName
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|setApiUser
argument_list|(
name|user2
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|user2
operator|.
name|username
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|reviewers
argument_list|)
operator|.
name|account
operator|.
name|name
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user2
operator|.
name|fullName
argument_list|)
expr_stmt|;
name|setApiUser
argument_list|(
name|user3
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|user2
operator|.
name|username
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|reviewers
argument_list|)
operator|.
name|account
operator|.
name|name
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user2
operator|.
name|fullName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|suggestReviewsPrivateProjectVisibility ()
specifier|public
name|void
name|suggestReviewsPrivateProjectVisibility
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|SuggestedReviewerInfo
argument_list|>
name|reviewers
decl_stmt|;
name|setApiUser
argument_list|(
name|user3
argument_list|)
expr_stmt|;
name|block
argument_list|(
literal|"refs/*"
argument_list|,
literal|"read"
argument_list|,
name|ANONYMOUS_USERS
argument_list|)
expr_stmt|;
name|allow
argument_list|(
literal|"read"
argument_list|,
name|group1
operator|.
name|getGroupUUID
argument_list|()
argument_list|,
literal|"refs/*"
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|user2
operator|.
name|username
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|GerritConfig
argument_list|(
name|name
operator|=
literal|"accounts.visibility"
argument_list|,
name|value
operator|=
literal|"SAME_GROUP"
argument_list|)
DECL|method|suggestReviewersViewAllAccounts ()
specifier|public
name|void
name|suggestReviewersViewAllAccounts
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|SuggestedReviewerInfo
argument_list|>
name|reviewers
decl_stmt|;
name|setApiUser
argument_list|(
name|user1
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|user2
operator|.
name|username
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|setApiUser
argument_list|(
name|user1
argument_list|)
expr_stmt|;
comment|// Clear cached group info.
name|allowGlobalCapabilities
argument_list|(
name|group1
operator|.
name|getGroupUUID
argument_list|()
argument_list|,
name|GlobalCapability
operator|.
name|VIEW_ALL_ACCOUNTS
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|user2
operator|.
name|username
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|reviewers
argument_list|)
operator|.
name|account
operator|.
name|name
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user2
operator|.
name|fullName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|GerritConfig
argument_list|(
name|name
operator|=
literal|"suggest.maxSuggestedReviewers"
argument_list|,
name|value
operator|=
literal|"2"
argument_list|)
DECL|method|suggestReviewersMaxNbrSuggestions ()
specifier|public
name|void
name|suggestReviewersMaxNbrSuggestions
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|SuggestedReviewerInfo
argument_list|>
name|reviewers
init|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|name
argument_list|(
literal|"user"
argument_list|)
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|suggestReviewersFullTextSearch ()
specifier|public
name|void
name|suggestReviewersFullTextSearch
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|SuggestedReviewerInfo
argument_list|>
name|reviewers
decl_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
literal|"first"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
literal|"first1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
literal|"last"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
literal|"last1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
literal|"fi la"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
literal|"la fi"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
literal|"first1 la"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
literal|"fi last1"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
literal|"first1 last2"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|name
argument_list|(
literal|"user"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|user1
operator|.
name|username
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
literal|"example.com"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|user1
operator|.
name|email
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|user1
operator|.
name|username
operator|+
literal|" example"
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|user4
operator|.
name|email
operator|.
name|toLowerCase
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|account
operator|.
name|email
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user4
operator|.
name|email
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|suggestReviewersWithoutLimitOptionSpecified ()
specifier|public
name|void
name|suggestReviewersWithoutLimitOptionSpecified
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|String
name|query
init|=
name|user3
operator|.
name|username
decl_stmt|;
name|List
argument_list|<
name|SuggestedReviewerInfo
argument_list|>
name|suggestedReviewerInfos
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|suggestReviewers
argument_list|(
name|query
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|suggestedReviewerInfos
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|GerritConfig
argument_list|(
name|name
operator|=
literal|"addreviewer.maxAllowed"
argument_list|,
name|value
operator|=
literal|"2"
argument_list|)
annotation|@
name|GerritConfig
argument_list|(
name|name
operator|=
literal|"addreviewer.maxWithoutConfirmation"
argument_list|,
name|value
operator|=
literal|"1"
argument_list|)
DECL|method|suggestReviewersGroupSizeConsiderations ()
specifier|public
name|void
name|suggestReviewersGroupSizeConsiderations
parameter_list|()
throws|throws
name|Exception
block|{
name|AccountGroup
name|largeGroup
init|=
name|group
argument_list|(
literal|"large"
argument_list|)
decl_stmt|;
name|AccountGroup
name|mediumGroup
init|=
name|group
argument_list|(
literal|"medium"
argument_list|)
decl_stmt|;
comment|// Both groups have Administrator as a member. Add two users to large
comment|// group to push it past maxAllowed, and one to medium group to push it
comment|// past maxWithoutConfirmation.
name|user
argument_list|(
literal|"individual 0"
argument_list|,
literal|"Test0 Last0"
argument_list|,
name|largeGroup
argument_list|,
name|mediumGroup
argument_list|)
expr_stmt|;
name|user
argument_list|(
literal|"individual 1"
argument_list|,
literal|"Test1 Last1"
argument_list|,
name|largeGroup
argument_list|)
expr_stmt|;
name|String
name|changeId
init|=
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|SuggestedReviewerInfo
argument_list|>
name|reviewers
decl_stmt|;
name|SuggestedReviewerInfo
name|reviewer
decl_stmt|;
comment|// Individual account suggestions have count of 1 and no confirm.
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
literal|"test"
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|reviewer
operator|=
name|reviewers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewer
operator|.
name|count
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewer
operator|.
name|confirm
argument_list|)
operator|.
name|isNull
argument_list|()
expr_stmt|;
comment|// Large group should never be suggested.
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|largeGroup
operator|.
name|getName
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
comment|// Medium group should be suggested with appropriate count and confirm.
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId
argument_list|,
name|mediumGroup
operator|.
name|getName
argument_list|()
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|reviewer
operator|=
name|reviewers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewer
operator|.
name|group
operator|.
name|name
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|mediumGroup
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewer
operator|.
name|count
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewer
operator|.
name|confirm
argument_list|)
operator|.
name|isTrue
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|defaultReviewerSuggestion ()
specifier|public
name|void
name|defaultReviewerSuggestion
parameter_list|()
throws|throws
name|Exception
block|{
name|TestAccount
name|user1
init|=
name|user
argument_list|(
literal|"customuser1"
argument_list|,
literal|"User1"
argument_list|)
decl_stmt|;
name|TestAccount
name|reviewer1
init|=
name|user
argument_list|(
literal|"customuser2"
argument_list|,
literal|"User2"
argument_list|)
decl_stmt|;
name|TestAccount
name|reviewer2
init|=
name|user
argument_list|(
literal|"customuser3"
argument_list|,
literal|"User3"
argument_list|)
decl_stmt|;
name|setApiUser
argument_list|(
name|user1
argument_list|)
expr_stmt|;
name|String
name|changeId1
init|=
name|createChangeFromApi
argument_list|()
decl_stmt|;
name|setApiUser
argument_list|(
name|reviewer1
argument_list|)
expr_stmt|;
name|reviewChange
argument_list|(
name|changeId1
argument_list|)
expr_stmt|;
name|setApiUser
argument_list|(
name|user1
argument_list|)
expr_stmt|;
name|String
name|changeId2
init|=
name|createChangeFromApi
argument_list|()
decl_stmt|;
name|setApiUser
argument_list|(
name|reviewer1
argument_list|)
expr_stmt|;
name|reviewChange
argument_list|(
name|changeId2
argument_list|)
expr_stmt|;
name|setApiUser
argument_list|(
name|reviewer2
argument_list|)
expr_stmt|;
name|reviewChange
argument_list|(
name|changeId2
argument_list|)
expr_stmt|;
name|setApiUser
argument_list|(
name|user1
argument_list|)
expr_stmt|;
name|String
name|changeId3
init|=
name|createChangeFromApi
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|SuggestedReviewerInfo
argument_list|>
name|reviewers
init|=
name|suggestReviewers
argument_list|(
name|changeId3
argument_list|,
literal|null
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|reviewers
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|r
lambda|->
name|r
operator|.
name|account
operator|.
name|_accountId
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
argument_list|)
operator|.
name|containsExactly
argument_list|(
name|reviewer1
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|,
name|reviewer2
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|inOrder
argument_list|()
expr_stmt|;
comment|// check that existing reviewers are filtered out
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId3
argument_list|)
operator|.
name|addReviewer
argument_list|(
name|reviewer1
operator|.
name|email
argument_list|)
expr_stmt|;
name|reviewers
operator|=
name|suggestReviewers
argument_list|(
name|changeId3
argument_list|,
literal|null
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|reviewers
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|r
lambda|->
name|r
operator|.
name|account
operator|.
name|_accountId
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
argument_list|)
operator|.
name|containsExactly
argument_list|(
name|reviewer2
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|inOrder
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|defaultReviewerSuggestionOnFirstChange ()
specifier|public
name|void
name|defaultReviewerSuggestionOnFirstChange
parameter_list|()
throws|throws
name|Exception
block|{
name|TestAccount
name|user1
init|=
name|user
argument_list|(
literal|"customuser1"
argument_list|,
literal|"User1"
argument_list|)
decl_stmt|;
name|setApiUser
argument_list|(
name|user1
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|SuggestedReviewerInfo
argument_list|>
name|reviewers
init|=
name|suggestReviewers
argument_list|(
name|createChange
argument_list|()
operator|.
name|getChangeId
argument_list|()
argument_list|,
literal|""
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|reviewers
argument_list|)
operator|.
name|isEmpty
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|GerritConfig
argument_list|(
name|name
operator|=
literal|"suggest.maxSuggestedReviewers"
argument_list|,
name|value
operator|=
literal|"10"
argument_list|)
DECL|method|reviewerRanking ()
specifier|public
name|void
name|reviewerRanking
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Assert that user are ranked by the number of times they have applied a
comment|// a label to a change (highest), added comments (medium) or owned a
comment|// change (low).
name|String
name|fullName
init|=
literal|"Primum Finalis"
decl_stmt|;
name|TestAccount
name|userWhoOwns
init|=
name|user
argument_list|(
literal|"customuser1"
argument_list|,
name|fullName
argument_list|)
decl_stmt|;
name|TestAccount
name|reviewer1
init|=
name|user
argument_list|(
literal|"customuser2"
argument_list|,
name|fullName
argument_list|)
decl_stmt|;
name|TestAccount
name|reviewer2
init|=
name|user
argument_list|(
literal|"customuser3"
argument_list|,
name|fullName
argument_list|)
decl_stmt|;
name|TestAccount
name|userWhoComments
init|=
name|user
argument_list|(
literal|"customuser4"
argument_list|,
name|fullName
argument_list|)
decl_stmt|;
name|TestAccount
name|userWhoLooksForSuggestions
init|=
name|user
argument_list|(
literal|"customuser5"
argument_list|,
name|fullName
argument_list|)
decl_stmt|;
comment|// Create a change as userWhoOwns and add some reviews
name|setApiUser
argument_list|(
name|userWhoOwns
argument_list|)
expr_stmt|;
name|String
name|changeId1
init|=
name|createChangeFromApi
argument_list|()
decl_stmt|;
name|setApiUser
argument_list|(
name|reviewer1
argument_list|)
expr_stmt|;
name|reviewChange
argument_list|(
name|changeId1
argument_list|)
expr_stmt|;
name|setApiUser
argument_list|(
name|user1
argument_list|)
expr_stmt|;
name|String
name|changeId2
init|=
name|createChangeFromApi
argument_list|()
decl_stmt|;
name|setApiUser
argument_list|(
name|reviewer1
argument_list|)
expr_stmt|;
name|reviewChange
argument_list|(
name|changeId2
argument_list|)
expr_stmt|;
name|setApiUser
argument_list|(
name|reviewer2
argument_list|)
expr_stmt|;
name|reviewChange
argument_list|(
name|changeId2
argument_list|)
expr_stmt|;
comment|// Create a comment as a different user
name|setApiUser
argument_list|(
name|userWhoComments
argument_list|)
expr_stmt|;
name|ReviewInput
name|ri
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|ri
operator|.
name|message
operator|=
literal|"Test"
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId1
argument_list|)
operator|.
name|revision
argument_list|(
literal|1
argument_list|)
operator|.
name|review
argument_list|(
name|ri
argument_list|)
expr_stmt|;
comment|// Create a change as a new user to assert that we receive the correct
comment|// ranking
name|setApiUser
argument_list|(
name|userWhoLooksForSuggestions
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|SuggestedReviewerInfo
argument_list|>
name|reviewers
init|=
name|suggestReviewers
argument_list|(
name|createChangeFromApi
argument_list|()
argument_list|,
literal|"Pri"
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|reviewers
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|r
lambda|->
name|r
operator|.
name|account
operator|.
name|_accountId
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
argument_list|)
operator|.
name|containsExactly
argument_list|(
name|reviewer1
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|,
name|reviewer2
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|,
name|userWhoOwns
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|,
name|userWhoComments
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|inOrder
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|reviewerRankingProjectIsolation ()
specifier|public
name|void
name|reviewerRankingProjectIsolation
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Create new project
name|Project
operator|.
name|NameKey
name|newProject
init|=
name|createProject
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
comment|// Create users who review changes in both the default and the new project
name|String
name|fullName
init|=
literal|"Primum Finalis"
decl_stmt|;
name|TestAccount
name|userWhoOwns
init|=
name|user
argument_list|(
literal|"customuser1"
argument_list|,
name|fullName
argument_list|)
decl_stmt|;
name|TestAccount
name|reviewer1
init|=
name|user
argument_list|(
literal|"customuser2"
argument_list|,
name|fullName
argument_list|)
decl_stmt|;
name|TestAccount
name|reviewer2
init|=
name|user
argument_list|(
literal|"customuser3"
argument_list|,
name|fullName
argument_list|)
decl_stmt|;
name|setApiUser
argument_list|(
name|userWhoOwns
argument_list|)
expr_stmt|;
name|String
name|changeId1
init|=
name|createChangeFromApi
argument_list|()
decl_stmt|;
name|setApiUser
argument_list|(
name|reviewer1
argument_list|)
expr_stmt|;
name|reviewChange
argument_list|(
name|changeId1
argument_list|)
expr_stmt|;
name|setApiUser
argument_list|(
name|userWhoOwns
argument_list|)
expr_stmt|;
name|String
name|changeId2
init|=
name|createChangeFromApi
argument_list|(
name|newProject
argument_list|)
decl_stmt|;
name|setApiUser
argument_list|(
name|reviewer2
argument_list|)
expr_stmt|;
name|reviewChange
argument_list|(
name|changeId2
argument_list|)
expr_stmt|;
name|setApiUser
argument_list|(
name|userWhoOwns
argument_list|)
expr_stmt|;
name|String
name|changeId3
init|=
name|createChangeFromApi
argument_list|(
name|newProject
argument_list|)
decl_stmt|;
name|setApiUser
argument_list|(
name|reviewer2
argument_list|)
expr_stmt|;
name|reviewChange
argument_list|(
name|changeId3
argument_list|)
expr_stmt|;
name|setApiUser
argument_list|(
name|userWhoOwns
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|SuggestedReviewerInfo
argument_list|>
name|reviewers
init|=
name|suggestReviewers
argument_list|(
name|createChangeFromApi
argument_list|()
argument_list|,
literal|"Prim"
argument_list|,
literal|4
argument_list|)
decl_stmt|;
comment|// Assert that reviewer1 is on top, even though reviewer2 has more reviews
comment|// in other projects
name|assertThat
argument_list|(
name|reviewers
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|r
lambda|->
name|r
operator|.
name|account
operator|.
name|_accountId
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
argument_list|)
operator|.
name|containsExactly
argument_list|(
name|reviewer1
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|,
name|reviewer2
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|inOrder
argument_list|()
expr_stmt|;
block|}
DECL|method|suggestReviewers (String changeId, String query)
specifier|private
name|List
argument_list|<
name|SuggestedReviewerInfo
argument_list|>
name|suggestReviewers
parameter_list|(
name|String
name|changeId
parameter_list|,
name|String
name|query
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|suggestReviewers
argument_list|(
name|query
argument_list|)
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|suggestReviewers (String changeId, String query, int n)
specifier|private
name|List
argument_list|<
name|SuggestedReviewerInfo
argument_list|>
name|suggestReviewers
parameter_list|(
name|String
name|changeId
parameter_list|,
name|String
name|query
parameter_list|,
name|int
name|n
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|suggestReviewers
argument_list|(
name|query
argument_list|)
operator|.
name|withLimit
argument_list|(
name|n
argument_list|)
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|group (String name)
specifier|private
name|AccountGroup
name|group
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|GroupInfo
name|group
init|=
name|createGroupFactory
operator|.
name|create
argument_list|(
name|name
argument_list|(
name|name
argument_list|)
argument_list|)
operator|.
name|apply
argument_list|(
name|TopLevelResource
operator|.
name|INSTANCE
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|GroupDescription
operator|.
name|Basic
name|d
init|=
name|groups
operator|.
name|parseInternal
argument_list|(
name|Url
operator|.
name|decode
argument_list|(
name|group
operator|.
name|id
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|GroupDescriptions
operator|.
name|toAccountGroup
argument_list|(
name|d
argument_list|)
return|;
block|}
DECL|method|user (String name, String fullName, String emailName, AccountGroup... groups)
specifier|private
name|TestAccount
name|user
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|fullName
parameter_list|,
name|String
name|emailName
parameter_list|,
name|AccountGroup
modifier|...
name|groups
parameter_list|)
throws|throws
name|Exception
block|{
name|String
index|[]
name|groupNames
init|=
name|Arrays
operator|.
name|stream
argument_list|(
name|groups
argument_list|)
operator|.
name|map
argument_list|(
name|AccountGroup
operator|::
name|getName
argument_list|)
operator|.
name|toArray
argument_list|(
name|String
index|[]
operator|::
operator|new
argument_list|)
decl_stmt|;
return|return
name|accounts
operator|.
name|create
argument_list|(
name|name
argument_list|(
name|name
argument_list|)
argument_list|,
name|name
argument_list|(
name|emailName
argument_list|)
operator|+
literal|"@example.com"
argument_list|,
name|fullName
argument_list|,
name|groupNames
argument_list|)
return|;
block|}
DECL|method|user (String name, String fullName, AccountGroup... groups)
specifier|private
name|TestAccount
name|user
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|fullName
parameter_list|,
name|AccountGroup
modifier|...
name|groups
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|user
argument_list|(
name|name
argument_list|,
name|fullName
argument_list|,
name|name
argument_list|,
name|groups
argument_list|)
return|;
block|}
DECL|method|reviewChange (String changeId)
specifier|private
name|void
name|reviewChange
parameter_list|(
name|String
name|changeId
parameter_list|)
throws|throws
name|RestApiException
block|{
name|ReviewInput
name|ri
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|ri
operator|.
name|label
argument_list|(
literal|"Code-Review"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ri
argument_list|)
expr_stmt|;
block|}
DECL|method|createChangeFromApi ()
specifier|private
name|String
name|createChangeFromApi
parameter_list|()
throws|throws
name|RestApiException
block|{
return|return
name|createChangeFromApi
argument_list|(
name|project
argument_list|)
return|;
block|}
DECL|method|createChangeFromApi (Project.NameKey project)
specifier|private
name|String
name|createChangeFromApi
parameter_list|(
name|Project
operator|.
name|NameKey
name|project
parameter_list|)
throws|throws
name|RestApiException
block|{
name|ChangeInput
name|ci
init|=
operator|new
name|ChangeInput
argument_list|()
decl_stmt|;
name|ci
operator|.
name|project
operator|=
name|project
operator|.
name|get
argument_list|()
expr_stmt|;
name|ci
operator|.
name|subject
operator|=
literal|"Test change at"
operator|+
name|System
operator|.
name|nanoTime
argument_list|()
expr_stmt|;
name|ci
operator|.
name|branch
operator|=
literal|"master"
expr_stmt|;
return|return
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|create
argument_list|(
name|ci
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|changeId
return|;
block|}
DECL|method|assertReviewers ( List<SuggestedReviewerInfo> actual, List<TestAccount> expectedUsers, List<AccountGroup> expectedGroups)
specifier|private
name|void
name|assertReviewers
parameter_list|(
name|List
argument_list|<
name|SuggestedReviewerInfo
argument_list|>
name|actual
parameter_list|,
name|List
argument_list|<
name|TestAccount
argument_list|>
name|expectedUsers
parameter_list|,
name|List
argument_list|<
name|AccountGroup
argument_list|>
name|expectedGroups
parameter_list|)
block|{
name|List
argument_list|<
name|Integer
argument_list|>
name|actualAccountIds
init|=
name|actual
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|i
lambda|->
name|i
operator|.
name|account
operator|!=
literal|null
argument_list|)
operator|.
name|map
argument_list|(
name|i
lambda|->
name|i
operator|.
name|account
operator|.
name|_accountId
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|actualAccountIds
argument_list|)
operator|.
name|containsExactlyElementsIn
argument_list|(
name|expectedUsers
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|u
lambda|->
name|u
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|actualGroupIds
init|=
name|actual
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|i
lambda|->
name|i
operator|.
name|group
operator|!=
literal|null
argument_list|)
operator|.
name|map
argument_list|(
name|i
lambda|->
name|i
operator|.
name|group
operator|.
name|id
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|actualGroupIds
argument_list|)
operator|.
name|containsExactlyElementsIn
argument_list|(
name|expectedGroups
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|g
lambda|->
name|g
operator|.
name|getGroupUUID
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|toList
argument_list|()
argument_list|)
argument_list|)
operator|.
name|inOrder
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

