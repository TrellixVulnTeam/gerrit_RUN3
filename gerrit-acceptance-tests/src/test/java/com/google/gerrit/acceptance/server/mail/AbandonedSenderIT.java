begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.server.mail
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|server
operator|.
name|mail
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|TruthJUnit
operator|.
name|assume
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|NotifyHandling
operator|.
name|ALL
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|NotifyHandling
operator|.
name|NONE
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|NotifyHandling
operator|.
name|OWNER
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|NotifyHandling
operator|.
name|OWNER_REVIEWERS
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|GeneralPreferencesInfo
operator|.
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|WatchConfig
operator|.
name|NotifyType
operator|.
name|ABANDONED_CHANGES
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|SystemGroupBackend
operator|.
name|REGISTERED_USERS
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractNotificationTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|TestAccount
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|AbandonInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|NotifyHandling
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|GeneralPreferencesInfo
operator|.
name|EmailStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|AbandonedSenderIT
specifier|public
class|class
name|AbandonedSenderIT
extends|extends
name|AbstractNotificationTest
block|{
annotation|@
name|Before
DECL|method|grantPermissions ()
specifier|public
name|void
name|grantPermissions
parameter_list|()
throws|throws
name|Exception
block|{
name|grant
argument_list|(
name|project
argument_list|,
literal|"refs/heads/master"
argument_list|,
name|Permission
operator|.
name|ABANDON
argument_list|,
literal|false
argument_list|,
name|REGISTERED_USERS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeByOwner ()
specifier|public
name|void
name|abandonReviewableChangeByOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"abandon"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ABANDONED_CHANGES
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeByOwnerCcingSelf ()
specifier|public
name|void
name|abandonReviewableChangeByOwnerCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"abandon"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ABANDONED_CHANGES
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeByOther ()
specifier|public
name|void
name|abandonReviewableChangeByOther
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|other
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"other"
argument_list|,
literal|"other@example.com"
argument_list|,
literal|"other"
argument_list|)
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|other
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"abandon"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ABANDONED_CHANGES
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeByOtherCcingSelf ()
specifier|public
name|void
name|abandonReviewableChangeByOtherCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|other
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"other"
argument_list|,
literal|"other@example.com"
argument_list|,
literal|"other"
argument_list|)
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|other
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"abandon"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|other
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ABANDONED_CHANGES
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeNotifyOwnersReviewers ()
specifier|public
name|void
name|abandonReviewableChangeNotifyOwnersReviewers
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|OWNER_REVIEWERS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"abandon"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeNotifyOwner ()
specifier|public
name|void
name|abandonReviewableChangeNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|OWNER
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|notSent
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeNotifyOwnerCcingSelf ()
specifier|public
name|void
name|abandonReviewableChangeNotifyOwnerCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|,
name|OWNER
argument_list|)
expr_stmt|;
comment|// Self-CC applies *after* need for sending notification is determined.
comment|// Since there are no recipients before including the user taking action,
comment|// there should no notification sent.
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|notSent
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeByOtherCcingSelfNotifyOwner ()
specifier|public
name|void
name|abandonReviewableChangeByOtherCcingSelfNotifyOwner
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|TestAccount
name|other
init|=
name|accountCreator
operator|.
name|create
argument_list|(
literal|"other"
argument_list|,
literal|"other@example.com"
argument_list|,
literal|"other"
argument_list|)
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|other
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|,
name|OWNER
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"abandon"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|other
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeNotifyNone ()
specifier|public
name|void
name|abandonReviewableChangeNotifyNone
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|NONE
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|notSent
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableChangeNotifyNoneCcingSelf ()
specifier|public
name|void
name|abandonReviewableChangeNotifyNoneCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|,
name|NONE
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|notSent
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonReviewableWipChange ()
specifier|public
name|void
name|abandonReviewableWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageReviewableWipChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"abandon"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ABANDONED_CHANGES
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonWipChange ()
specifier|public
name|void
name|abandonWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|notSent
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|abandonWipChangeNotifyAll ()
specifier|public
name|void
name|abandonWipChangeNotifyAll
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageWipChange
argument_list|()
decl_stmt|;
name|abandon
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|ALL
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"abandon"
argument_list|,
name|sc
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ABANDONED_CHANGES
argument_list|)
operator|.
name|noOneElse
argument_list|()
expr_stmt|;
block|}
DECL|method|abandon (String changeId, TestAccount by)
specifier|private
name|void
name|abandon
parameter_list|(
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|)
throws|throws
name|Exception
block|{
name|abandon
argument_list|(
name|changeId
argument_list|,
name|by
argument_list|,
name|EmailStrategy
operator|.
name|ENABLED
argument_list|)
expr_stmt|;
block|}
DECL|method|abandon (String changeId, TestAccount by, EmailStrategy emailStrategy)
specifier|private
name|void
name|abandon
parameter_list|(
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|EmailStrategy
name|emailStrategy
parameter_list|)
throws|throws
name|Exception
block|{
name|abandon
argument_list|(
name|changeId
argument_list|,
name|by
argument_list|,
name|emailStrategy
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|abandon (String changeId, TestAccount by, @Nullable NotifyHandling notify)
specifier|private
name|void
name|abandon
parameter_list|(
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|,
annotation|@
name|Nullable
name|NotifyHandling
name|notify
parameter_list|)
throws|throws
name|Exception
block|{
name|abandon
argument_list|(
name|changeId
argument_list|,
name|by
argument_list|,
name|EmailStrategy
operator|.
name|ENABLED
argument_list|,
name|notify
argument_list|)
expr_stmt|;
block|}
DECL|method|abandon ( String changeId, TestAccount by, EmailStrategy emailStrategy, @Nullable NotifyHandling notify)
specifier|private
name|void
name|abandon
parameter_list|(
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|EmailStrategy
name|emailStrategy
parameter_list|,
annotation|@
name|Nullable
name|NotifyHandling
name|notify
parameter_list|)
throws|throws
name|Exception
block|{
name|setEmailStrategy
argument_list|(
name|by
argument_list|,
name|emailStrategy
argument_list|)
expr_stmt|;
name|setApiUser
argument_list|(
name|by
argument_list|)
expr_stmt|;
name|AbandonInput
name|in
init|=
operator|new
name|AbandonInput
argument_list|()
decl_stmt|;
if|if
condition|(
name|notify
operator|!=
literal|null
condition|)
block|{
name|in
operator|.
name|notify
operator|=
name|notify
expr_stmt|;
block|}
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|abandon
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

