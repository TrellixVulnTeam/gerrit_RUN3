begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2017 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.server.mail
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|server
operator|.
name|mail
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|GeneralPreferencesInfo
operator|.
name|EmailStrategy
operator|.
name|CC_ON_OWN_COMMENTS
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|WatchConfig
operator|.
name|NotifyType
operator|.
name|ALL_COMMENTS
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|SystemGroupBackend
operator|.
name|REGISTERED_USERS
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractNotificationTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|TestAccount
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|GeneralPreferencesInfo
operator|.
name|EmailStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|RestoredSenderIT
specifier|public
class|class
name|RestoredSenderIT
extends|extends
name|AbstractNotificationTest
block|{
annotation|@
name|Before
DECL|method|grantPermissions ()
specifier|public
name|void
name|grantPermissions
parameter_list|()
throws|throws
name|Exception
block|{
name|grant
argument_list|(
name|project
argument_list|,
literal|"refs/heads/master"
argument_list|,
name|Permission
operator|.
name|ABANDON
argument_list|,
literal|false
argument_list|,
name|REGISTERED_USERS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|restoreReviewableChange ()
specifier|public
name|void
name|restoreReviewableChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageAbandonedReviewableChange
argument_list|(
name|ALL_COMMENTS
argument_list|)
decl_stmt|;
name|restore
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"restore"
argument_list|,
name|sc
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|restoreReviewableWipChange ()
specifier|public
name|void
name|restoreReviewableWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageAbandonedReviewableWipChange
argument_list|(
name|ALL_COMMENTS
argument_list|)
decl_stmt|;
name|restore
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"restore"
argument_list|,
name|sc
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|restoreWipChange ()
specifier|public
name|void
name|restoreWipChange
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageAbandonedWipChange
argument_list|(
name|ALL_COMMENTS
argument_list|)
decl_stmt|;
name|restore
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"restore"
argument_list|,
name|sc
argument_list|)
operator|.
name|notTo
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|restoreReviewableChangeByAdmin ()
specifier|public
name|void
name|restoreReviewableChangeByAdmin
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageAbandonedReviewableChange
argument_list|(
name|ALL_COMMENTS
argument_list|)
decl_stmt|;
name|restore
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|admin
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"restore"
argument_list|,
name|sc
argument_list|)
operator|.
name|notTo
argument_list|(
name|admin
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|restoreReviewableChangeByOwnerCcingSelf ()
specifier|public
name|void
name|restoreReviewableChangeByOwnerCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageAbandonedReviewableChange
argument_list|(
name|ALL_COMMENTS
argument_list|)
decl_stmt|;
name|restore
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|sc
operator|.
name|owner
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"restore"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|restoreReviewableChangeByAdminCcingSelf ()
specifier|public
name|void
name|restoreReviewableChangeByAdminCcingSelf
parameter_list|()
throws|throws
name|Exception
block|{
name|StagedChange
name|sc
init|=
name|stageAbandonedReviewableChange
argument_list|(
name|ALL_COMMENTS
argument_list|)
decl_stmt|;
name|restore
argument_list|(
name|sc
operator|.
name|changeId
argument_list|,
name|admin
argument_list|,
name|CC_ON_OWN_COMMENTS
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|sender
argument_list|)
operator|.
name|sent
argument_list|(
literal|"restore"
argument_list|,
name|sc
argument_list|)
operator|.
name|to
argument_list|(
name|sc
operator|.
name|owner
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewer
argument_list|,
name|sc
operator|.
name|ccer
argument_list|,
name|admin
argument_list|)
operator|.
name|cc
argument_list|(
name|sc
operator|.
name|reviewerByEmail
argument_list|,
name|sc
operator|.
name|ccerByEmail
argument_list|)
operator|.
name|bcc
argument_list|(
name|sc
operator|.
name|starrer
argument_list|)
operator|.
name|bcc
argument_list|(
name|ALL_COMMENTS
argument_list|)
expr_stmt|;
block|}
DECL|method|restore (String changeId, TestAccount by)
specifier|private
name|void
name|restore
parameter_list|(
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|)
throws|throws
name|Exception
block|{
name|restore
argument_list|(
name|changeId
argument_list|,
name|by
argument_list|,
name|EmailStrategy
operator|.
name|ENABLED
argument_list|)
expr_stmt|;
block|}
DECL|method|restore (String changeId, TestAccount by, EmailStrategy emailStrategy)
specifier|private
name|void
name|restore
parameter_list|(
name|String
name|changeId
parameter_list|,
name|TestAccount
name|by
parameter_list|,
name|EmailStrategy
name|emailStrategy
parameter_list|)
throws|throws
name|Exception
block|{
name|setEmailStrategy
argument_list|(
name|by
argument_list|,
name|emailStrategy
argument_list|)
expr_stmt|;
name|setApiUser
argument_list|(
name|by
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|restore
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

