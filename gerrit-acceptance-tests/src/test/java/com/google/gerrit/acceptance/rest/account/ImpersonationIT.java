begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Copyright (C) 2016 The Android Open Source Project
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Licensed under the Apache License, Version 2.0 (the "License");
end_comment

begin_comment
comment|// you may not use this file except in compliance with the License.
end_comment

begin_comment
comment|// You may obtain a copy of the License at
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// http://www.apache.org/licenses/LICENSE-2.0
end_comment

begin_comment
comment|//
end_comment

begin_comment
comment|// Unless required by applicable law or agreed to in writing, software
end_comment

begin_comment
comment|// distributed under the License is distributed on an "AS IS" BASIS,
end_comment

begin_comment
comment|// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
end_comment

begin_comment
comment|// See the License for the specific language governing permissions and
end_comment

begin_comment
comment|// limitations under the License.
end_comment

begin_package
DECL|package|com.google.gerrit.acceptance.rest.account
package|package
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|rest
operator|.
name|account
package|;
end_package

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|truth
operator|.
name|Truth
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|SystemGroupBackend
operator|.
name|REGISTERED_USERS
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterables
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|AbstractDaemonTest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|GerritConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|PushOneCommit
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|acceptance
operator|.
name|TestAccount
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|LabelType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|common
operator|.
name|data
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|DraftInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
operator|.
name|CommentInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|ReviewInput
operator|.
name|DraftHandling
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|RevisionApi
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|changes
operator|.
name|SubmitInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|api
operator|.
name|groups
operator|.
name|GroupInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|ChangeStatus
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|client
operator|.
name|Side
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ApprovalInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ChangeInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|ChangeMessageInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|CommentInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|GroupInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|common
operator|.
name|LabelInfo
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|AuthException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|BadRequestException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|extensions
operator|.
name|restapi
operator|.
name|UnprocessableEntityException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|AccountGroup
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|reviewdb
operator|.
name|client
operator|.
name|Patch
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|account
operator|.
name|AccountControl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|git
operator|.
name|ProjectConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|group
operator|.
name|SystemGroupBackend
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gerrit
operator|.
name|server
operator|.
name|project
operator|.
name|Util
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|ImpersonationIT
specifier|public
class|class
name|ImpersonationIT
extends|extends
name|AbstractDaemonTest
block|{
annotation|@
name|Inject
DECL|field|accountControlFactory
specifier|private
name|AccountControl
operator|.
name|Factory
name|accountControlFactory
decl_stmt|;
DECL|field|admin2
specifier|private
name|TestAccount
name|admin2
decl_stmt|;
DECL|field|newGroup
specifier|private
name|GroupInfo
name|newGroup
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|admin2
operator|=
name|accounts
operator|.
name|admin2
argument_list|()
expr_stmt|;
name|GroupInput
name|gi
init|=
operator|new
name|GroupInput
argument_list|()
decl_stmt|;
name|gi
operator|.
name|name
operator|=
name|name
argument_list|(
literal|"New-Group"
argument_list|)
expr_stmt|;
name|gi
operator|.
name|members
operator|=
name|ImmutableList
operator|.
name|of
argument_list|(
name|user
operator|.
name|id
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|newGroup
operator|=
name|gApi
operator|.
name|groups
argument_list|()
operator|.
name|create
argument_list|(
name|gi
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOf ()
specifier|public
name|void
name|voteOnBehalfOf
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RevisionApi
name|revision
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
name|ReviewInput
operator|.
name|recommend
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|message
operator|=
literal|"Message on behalf of"
expr_stmt|;
name|revision
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|ChangeInfo
name|c
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
decl_stmt|;
name|LabelInfo
name|codeReview
init|=
name|c
operator|.
name|labels
operator|.
name|get
argument_list|(
literal|"Code-Review"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|codeReview
operator|.
name|all
argument_list|)
operator|.
name|hasSize
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|ApprovalInfo
name|approval
init|=
name|codeReview
operator|.
name|all
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|approval
operator|.
name|_accountId
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|approval
operator|.
name|value
argument_list|)
operator|.
name|isEqualTo
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|ChangeMessageInfo
name|m
init|=
name|Iterables
operator|.
name|getLast
argument_list|(
name|c
operator|.
name|messages
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|m
operator|.
name|message
argument_list|)
operator|.
name|endsWith
argument_list|(
name|in
operator|.
name|message
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|m
operator|.
name|author
operator|.
name|_accountId
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOfRequiresLabel ()
specifier|public
name|void
name|voteOnBehalfOfRequiresLabel
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RevisionApi
name|revision
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|message
operator|=
literal|"Message on behalf of"
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|AuthException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"label required to post review on behalf of \""
operator|+
name|in
operator|.
name|onBehalfOf
operator|+
literal|'"'
argument_list|)
expr_stmt|;
name|revision
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOfInvalidLabel ()
specifier|public
name|void
name|voteOnBehalfOfInvalidLabel
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RevisionApi
name|revision
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|strictLabels
operator|=
literal|true
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Not-A-Label"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|BadRequestException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"label \"Not-A-Label\" is not a configured label"
argument_list|)
expr_stmt|;
name|revision
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOfInvalidLabelIgnoredWithoutStrictLabels ()
specifier|public
name|void
name|voteOnBehalfOfInvalidLabelIgnoredWithoutStrictLabels
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RevisionApi
name|revision
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|strictLabels
operator|=
literal|false
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Code-Review"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Not-A-Label"
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|revision
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|labels
argument_list|)
operator|.
name|doesNotContainKey
argument_list|(
literal|"Not-A-Label"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOfLabelNotPermitted ()
specifier|public
name|void
name|voteOnBehalfOfLabelNotPermitted
parameter_list|()
throws|throws
name|Exception
block|{
name|ProjectConfig
name|cfg
init|=
name|projectCache
operator|.
name|checkedGet
argument_list|(
name|project
argument_list|)
operator|.
name|getConfig
argument_list|()
decl_stmt|;
name|LabelType
name|verified
init|=
name|Util
operator|.
name|verified
argument_list|()
decl_stmt|;
name|cfg
operator|.
name|getLabelSections
argument_list|()
operator|.
name|put
argument_list|(
name|verified
operator|.
name|getName
argument_list|()
argument_list|,
name|verified
argument_list|)
expr_stmt|;
name|saveProjectConfig
argument_list|(
name|project
argument_list|,
name|cfg
argument_list|)
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RevisionApi
name|revision
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Verified"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|AuthException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"not permitted to modify label \"Verified\" on behalf of \""
operator|+
name|in
operator|.
name|onBehalfOf
operator|+
literal|'"'
argument_list|)
expr_stmt|;
name|revision
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOfWithComment ()
specifier|public
name|void
name|voteOnBehalfOfWithComment
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Code-Review"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|CommentInput
name|ci
init|=
operator|new
name|CommentInput
argument_list|()
decl_stmt|;
name|ci
operator|.
name|path
operator|=
name|Patch
operator|.
name|COMMIT_MSG
expr_stmt|;
name|ci
operator|.
name|side
operator|=
name|Side
operator|.
name|REVISION
expr_stmt|;
name|ci
operator|.
name|line
operator|=
literal|1
expr_stmt|;
name|ci
operator|.
name|message
operator|=
literal|"message"
expr_stmt|;
name|in
operator|.
name|comments
operator|=
name|ImmutableMap
operator|.
name|of
argument_list|(
name|ci
operator|.
name|path
argument_list|,
name|ImmutableList
operator|.
name|of
argument_list|(
name|ci
argument_list|)
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|CommentInfo
name|c
init|=
name|Iterables
operator|.
name|getOnlyElement
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|commentsAsList
argument_list|()
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|c
operator|.
name|author
operator|.
name|_accountId
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|user
operator|.
name|id
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|c
operator|.
name|message
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ci
operator|.
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOfCannotModifyDrafts ()
specifier|public
name|void
name|voteOnBehalfOfCannotModifyDrafts
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|setApiUser
argument_list|(
name|user
argument_list|)
expr_stmt|;
name|DraftInput
name|di
init|=
operator|new
name|DraftInput
argument_list|()
decl_stmt|;
name|di
operator|.
name|path
operator|=
name|Patch
operator|.
name|COMMIT_MSG
expr_stmt|;
name|di
operator|.
name|side
operator|=
name|Side
operator|.
name|REVISION
expr_stmt|;
name|di
operator|.
name|line
operator|=
literal|1
expr_stmt|;
name|di
operator|.
name|message
operator|=
literal|"message"
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|createDraft
argument_list|(
name|di
argument_list|)
expr_stmt|;
name|setApiUser
argument_list|(
name|admin
argument_list|)
expr_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Code-Review"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|in
operator|.
name|drafts
operator|=
name|DraftHandling
operator|.
name|PUBLISH
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|AuthException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"not allowed to modify other user's drafts"
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOfMissingUser ()
specifier|public
name|void
name|voteOnBehalfOfMissingUser
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RevisionApi
name|revision
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
literal|"doesnotexist"
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Code-Review"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|UnprocessableEntityException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"Account Not Found: doesnotexist"
argument_list|)
expr_stmt|;
name|revision
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|voteOnBehalfOfFailsWhenUserCannotSeeDestinationRef ()
specifier|public
name|void
name|voteOnBehalfOfFailsWhenUserCannotSeeDestinationRef
parameter_list|()
throws|throws
name|Exception
block|{
name|blockRead
argument_list|(
name|newGroup
argument_list|)
expr_stmt|;
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RevisionApi
name|revision
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Code-Review"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|UnprocessableEntityException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"on_behalf_of account "
operator|+
name|user
operator|.
name|id
operator|+
literal|" cannot see destination ref"
argument_list|)
expr_stmt|;
name|revision
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|GerritConfig
argument_list|(
name|name
operator|=
literal|"accounts.visibility"
argument_list|,
name|value
operator|=
literal|"SAME_GROUP"
argument_list|)
annotation|@
name|Test
DECL|method|voteOnBehalfOfInvisibleUserNotAllowed ()
specifier|public
name|void
name|voteOnBehalfOfInvisibleUserNotAllowed
parameter_list|()
throws|throws
name|Exception
block|{
name|allowCodeReviewOnBehalfOf
argument_list|()
expr_stmt|;
name|setApiUser
argument_list|(
name|accounts
operator|.
name|user2
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|accountControlFactory
operator|.
name|get
argument_list|()
operator|.
name|canSee
argument_list|(
name|user
operator|.
name|id
argument_list|)
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|RevisionApi
name|revision
init|=
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
decl_stmt|;
name|ReviewInput
name|in
init|=
operator|new
name|ReviewInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|id
operator|.
name|toString
argument_list|()
expr_stmt|;
name|in
operator|.
name|label
argument_list|(
literal|"Code-Review"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|UnprocessableEntityException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"Account Not Found: "
operator|+
name|in
operator|.
name|onBehalfOf
argument_list|)
expr_stmt|;
name|revision
operator|.
name|review
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|submitOnBehalfOf ()
specifier|public
name|void
name|submitOnBehalfOf
parameter_list|()
throws|throws
name|Exception
block|{
name|allowSubmitOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|String
name|changeId
init|=
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"~master~"
operator|+
name|r
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|SubmitInput
name|in
init|=
operator|new
name|SubmitInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|admin2
operator|.
name|email
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|submit
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|status
argument_list|)
operator|.
name|isEqualTo
argument_list|(
name|ChangeStatus
operator|.
name|MERGED
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|submitOnBehalfOfInvalidUser ()
specifier|public
name|void
name|submitOnBehalfOfInvalidUser
parameter_list|()
throws|throws
name|Exception
block|{
name|allowSubmitOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|String
name|changeId
init|=
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"~master~"
operator|+
name|r
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|SubmitInput
name|in
init|=
operator|new
name|SubmitInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
literal|"doesnotexist"
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|UnprocessableEntityException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"Account Not Found: doesnotexist"
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|submit
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|submitOnBehalfOfNotPermitted ()
specifier|public
name|void
name|submitOnBehalfOfNotPermitted
parameter_list|()
throws|throws
name|Exception
block|{
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"~master~"
operator|+
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|SubmitInput
name|in
init|=
operator|new
name|SubmitInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|admin2
operator|.
name|email
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|AuthException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"submit on behalf of not permitted"
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"~master~"
operator|+
name|r
operator|.
name|getChangeId
argument_list|()
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|submit
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|submitOnBehalfOfFailsWhenUserCannotSeeDestinationRef ()
specifier|public
name|void
name|submitOnBehalfOfFailsWhenUserCannotSeeDestinationRef
parameter_list|()
throws|throws
name|Exception
block|{
name|blockRead
argument_list|(
name|newGroup
argument_list|)
expr_stmt|;
name|allowSubmitOnBehalfOf
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|String
name|changeId
init|=
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"~master~"
operator|+
name|r
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|SubmitInput
name|in
init|=
operator|new
name|SubmitInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|email
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|UnprocessableEntityException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"on_behalf_of account "
operator|+
name|user
operator|.
name|id
operator|+
literal|" cannot see destination ref"
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|submit
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
annotation|@
name|GerritConfig
argument_list|(
name|name
operator|=
literal|"accounts.visibility"
argument_list|,
name|value
operator|=
literal|"SAME_GROUP"
argument_list|)
annotation|@
name|Test
DECL|method|submitOnBehalfOfInvisibleUserNotAllowed ()
specifier|public
name|void
name|submitOnBehalfOfInvisibleUserNotAllowed
parameter_list|()
throws|throws
name|Exception
block|{
name|allowSubmitOnBehalfOf
argument_list|()
expr_stmt|;
name|setApiUser
argument_list|(
name|accounts
operator|.
name|user2
argument_list|()
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|accountControlFactory
operator|.
name|get
argument_list|()
operator|.
name|canSee
argument_list|(
name|user
operator|.
name|id
argument_list|)
argument_list|)
operator|.
name|isFalse
argument_list|()
expr_stmt|;
name|PushOneCommit
operator|.
name|Result
name|r
init|=
name|createChange
argument_list|()
decl_stmt|;
name|String
name|changeId
init|=
name|project
operator|.
name|get
argument_list|()
operator|+
literal|"~master~"
operator|+
name|r
operator|.
name|getChangeId
argument_list|()
decl_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|review
argument_list|(
name|ReviewInput
operator|.
name|approve
argument_list|()
argument_list|)
expr_stmt|;
name|SubmitInput
name|in
init|=
operator|new
name|SubmitInput
argument_list|()
decl_stmt|;
name|in
operator|.
name|onBehalfOf
operator|=
name|user
operator|.
name|email
expr_stmt|;
name|exception
operator|.
name|expect
argument_list|(
name|UnprocessableEntityException
operator|.
name|class
argument_list|)
expr_stmt|;
name|exception
operator|.
name|expectMessage
argument_list|(
literal|"Account Not Found: "
operator|+
name|in
operator|.
name|onBehalfOf
argument_list|)
expr_stmt|;
name|gApi
operator|.
name|changes
argument_list|()
operator|.
name|id
argument_list|(
name|changeId
argument_list|)
operator|.
name|current
argument_list|()
operator|.
name|submit
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
DECL|method|allowCodeReviewOnBehalfOf ()
specifier|private
name|void
name|allowCodeReviewOnBehalfOf
parameter_list|()
throws|throws
name|Exception
block|{
name|ProjectConfig
name|cfg
init|=
name|projectCache
operator|.
name|checkedGet
argument_list|(
name|project
argument_list|)
operator|.
name|getConfig
argument_list|()
decl_stmt|;
name|LabelType
name|codeReviewType
init|=
name|Util
operator|.
name|codeReview
argument_list|()
decl_stmt|;
name|String
name|forCodeReviewAs
init|=
name|Permission
operator|.
name|forLabelAs
argument_list|(
name|codeReviewType
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|heads
init|=
literal|"refs/heads/*"
decl_stmt|;
name|AccountGroup
operator|.
name|UUID
name|uuid
init|=
name|SystemGroupBackend
operator|.
name|getGroup
argument_list|(
name|REGISTERED_USERS
argument_list|)
operator|.
name|getUUID
argument_list|()
decl_stmt|;
name|Util
operator|.
name|allow
argument_list|(
name|cfg
argument_list|,
name|forCodeReviewAs
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
name|uuid
argument_list|,
name|heads
argument_list|)
expr_stmt|;
name|saveProjectConfig
argument_list|(
name|project
argument_list|,
name|cfg
argument_list|)
expr_stmt|;
block|}
DECL|method|allowSubmitOnBehalfOf ()
specifier|private
name|void
name|allowSubmitOnBehalfOf
parameter_list|()
throws|throws
name|Exception
block|{
name|ProjectConfig
name|cfg
init|=
name|projectCache
operator|.
name|checkedGet
argument_list|(
name|project
argument_list|)
operator|.
name|getConfig
argument_list|()
decl_stmt|;
name|String
name|heads
init|=
literal|"refs/heads/*"
decl_stmt|;
name|AccountGroup
operator|.
name|UUID
name|uuid
init|=
name|SystemGroupBackend
operator|.
name|getGroup
argument_list|(
name|REGISTERED_USERS
argument_list|)
operator|.
name|getUUID
argument_list|()
decl_stmt|;
name|Util
operator|.
name|allow
argument_list|(
name|cfg
argument_list|,
name|Permission
operator|.
name|SUBMIT_AS
argument_list|,
name|uuid
argument_list|,
name|heads
argument_list|)
expr_stmt|;
name|Util
operator|.
name|allow
argument_list|(
name|cfg
argument_list|,
name|Permission
operator|.
name|SUBMIT
argument_list|,
name|uuid
argument_list|,
name|heads
argument_list|)
expr_stmt|;
name|LabelType
name|codeReviewType
init|=
name|Util
operator|.
name|codeReview
argument_list|()
decl_stmt|;
name|Util
operator|.
name|allow
argument_list|(
name|cfg
argument_list|,
name|Permission
operator|.
name|forLabel
argument_list|(
name|codeReviewType
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
operator|-
literal|2
argument_list|,
literal|2
argument_list|,
name|uuid
argument_list|,
name|heads
argument_list|)
expr_stmt|;
name|saveProjectConfig
argument_list|(
name|project
argument_list|,
name|cfg
argument_list|)
expr_stmt|;
block|}
DECL|method|blockRead (GroupInfo group)
specifier|private
name|void
name|blockRead
parameter_list|(
name|GroupInfo
name|group
parameter_list|)
throws|throws
name|Exception
block|{
name|ProjectConfig
name|cfg
init|=
name|projectCache
operator|.
name|checkedGet
argument_list|(
name|project
argument_list|)
operator|.
name|getConfig
argument_list|()
decl_stmt|;
name|Util
operator|.
name|block
argument_list|(
name|cfg
argument_list|,
name|Permission
operator|.
name|READ
argument_list|,
operator|new
name|AccountGroup
operator|.
name|UUID
argument_list|(
name|group
operator|.
name|id
argument_list|)
argument_list|,
literal|"refs/heads/master"
argument_list|)
expr_stmt|;
name|saveProjectConfig
argument_list|(
name|project
argument_list|,
name|cfg
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

